[{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/articles/z1_install.html","id":"devtools","dir":"Articles","previous_headings":"1.1 - Before installing","what":"1.1.1 - Devtools","title":"1 - Installing Rvision","text":"installing Rvision, need install latest version devtools package. can install devtools CRAN follows:","code":"if (!require(devtools))   install.packages(\"devtools\")"},{"path":"https://swarm-lab.github.io/Rvision/articles/z1_install.html","id":"ropencvlite","dir":"Articles","previous_headings":"1.1 - Before installing","what":"1.1.2 - ROpenCVLite","title":"1 - Installing Rvision","text":"also need install ROpenCVLite package. Installation instructions ROpenCVLite can found https://swarm-lab.github.io/ROpenCVLite/articles/install.html. step may take time download, compile install OpenCV . suggest go cup tea coffee ROpenCVLite installed (compilation time depend computer). Note can skip step Rvision attempt install next step. However might fail system missing one external dependencies required ROpenCVLite.","code":""},{"path":"https://swarm-lab.github.io/Rvision/articles/z1_install.html","id":"installing-rvision","dir":"Articles","previous_headings":"","what":"1.2 - Installing Rvision","title":"1 - Installing Rvision","text":"can install latest development version Rvision follows:","code":"devtools::install_github(\"swarm-lab/Rvision\")"},{"path":"https://swarm-lab.github.io/Rvision/articles/z1_install.html","id":"loading-rvision","dir":"Articles","previous_headings":"","what":"1.3 - Loading Rvision","title":"1 - Installing Rvision","text":"","code":"library(Rvision)"},{"path":"https://swarm-lab.github.io/Rvision/articles/z2_io.html","id":"creating-video-streams","dir":"Articles","previous_headings":"","what":"2.1 - Creating video streams","title":"2 - Input/output operations","text":"Video stream objects created video files passing path video file video() function. instance: Video object required anymore, can released memory follows: Note Video objects wrappers around OpenCV’s VideoCapture pointers. persist R sessions.","code":"# Find the path to the Balloon.mp4 video provided with Rvision path_to_video <- system.file(\"sample_vid\", \"Balloon.mp4\", package = \"Rvision\")  # Open the video file stream my_video <- video(filename = path_to_video) release(my_video)"},{"path":"https://swarm-lab.github.io/Rvision/articles/z2_io.html","id":"creating-camera-streams","dir":"Articles","previous_headings":"","what":"2.2 - Creating camera streams","title":"2 - Input/output operations","text":"Camera Stream objects created starting camera stream (e.g. webcam) using stream() function. instance: index argument takes integer number corresponding position camera list video capturing devices available computer. 0 corresponds default camera, usually embedded webcam computers. Note order list video capturing devices might change computer restart, cameras connected/disconnected session. Stream object required anymore, can released memory follows: Note Stream objects wrappers around OpenCV’s VideoCapture pointers. persist R sessions.","code":"# Start the default camera stream my_stream <- stream(index = 0) release(my_stream)"},{"path":"https://swarm-lab.github.io/Rvision/articles/z2_io.html","id":"creating-images","dir":"Articles","previous_headings":"","what":"2.3 - Creating images","title":"2 - Input/output operations","text":"multiple ways create Image objects: files, Video objects, Stream objects, R arrays. Note Image objects wrappers around OpenCV’s Mat UMat objects. persist R sessions.","code":""},{"path":"https://swarm-lab.github.io/Rvision/articles/z2_io.html","id":"images-from-files","dir":"Articles","previous_headings":"2.3 - Creating images","what":"2.3.1 - Images from files","title":"2 - Input/output operations","text":"Image objects created image files passing path image file image() function. instance:","code":"# Find the path to the balloon1.png image provided with Rvision path_to_image <- system.file(\"sample_img\", \"balloon1.png\", package = \"Rvision\")  # Load the image in memory my_image <- image(filename = path_to_image)"},{"path":"https://swarm-lab.github.io/Rvision/articles/z2_io.html","id":"images-from-video-streams","dir":"Articles","previous_headings":"2.3 - Creating images","what":"2.3.2 - Images from video streams","title":"2 - Input/output operations","text":"Image objects created video streams capturing frames readNext() readFrame() functions. instance:","code":"# Capture the next available frame from the my_video object created earlier my_image <- readNext(my_video)  # Capture frame 100 from the my_video object created earlier my_image <- readFrame(my_video, 100)"},{"path":"https://swarm-lab.github.io/Rvision/articles/z2_io.html","id":"images-from-camera-streams","dir":"Articles","previous_headings":"2.3 - Creating images","what":"2.3.3 - Images from camera streams","title":"2 - Input/output operations","text":"Image objects created video streams capturing frames readNext() function. instance:","code":"# Capture the next available frame from the my_stream object created earlier my_image <- readNext(my_stream)"},{"path":"https://swarm-lab.github.io/Rvision/articles/z2_io.html","id":"images-from-r-arrays-and-matrices","dir":"Articles","previous_headings":"2.3 - Creating images","what":"2.3.4 - Images from R arrays and matrices","title":"2 - Input/output operations","text":"Image objects created R arrays matrices passing array matrix directly image() function. instance:","code":"# Create a 100 x 100 x 3 random array my_array <- array(rnorm(30000), dim = c(100, 100, 3))  # Load the image in memory my_image <- image(my_array)"},{"path":"https://swarm-lab.github.io/Rvision/articles/z2_io.html","id":"writing-video-streams-to-file","dir":"Articles","previous_headings":"","what":"2.4 - Writing video streams to file","title":"2 - Input/output operations","text":"Videos can written files using VideoWriter objects. creating VideoWriter object, dimensions, frame rate, codec final video file must specified. instance: VideoWriter object created, individual frames can written sequentially. instance: frames written VideoWriter object, can closed released memory follows: Note close release VideoWriter object prior exiting R session, able play system’s video player. Note VideoWriter objects wrappers around OpenCV’s VideoWriter pointers. persist R sessions.","code":"# Create a 1280x720 video file called file.mp4 on the desktop, using the x264 # codec at 30 frames per second my_writer <- videoWriter(\"~/Desktop/file.mp4\", fourcc = \"x264\", fps = 30,                           height = 720, width = 1280) # Capture the next 30 frames from the my_stream camera stream created earlier  # and write them to file.mp4 for (i in seq_len(30)) {   writeFrame(my_writer, readNext(my_stream)) } release(my_writer)"},{"path":"https://swarm-lab.github.io/Rvision/articles/z2_io.html","id":"writing-images-to-file","dir":"Articles","previous_headings":"","what":"2.4 - Writing images to file","title":"2 - Input/output operations","text":"Images can written files using write.Image() function. instance: Rvision guess format image file file extension. common file formats supported.","code":"# Write the my_image object created earlier to a PNG file called file.png on the # desktop write.Image(my_image, \"~/Desktop/file.png\")"},{"path":[]},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/articles/z3_basic.html","id":"method-compatible-with-base-r","dir":"Articles","previous_headings":"3.2 - Displaying images","what":"3.2.1 - Method compatible with base R","title":"3 - Basic operations","text":"two methods displaying images. first method (plot()) offers full compatibility base R plotting methods, allows drawing non-destructively image using graphics::lines(), graphics::points(), etc. instance: Note method rather slow therefore suitable applications requiring quick refresh rates successive images (e.g. playing video).","code":"# Find the path to the balloon1.png image provided with Rvision path_to_image <- system.file(\"sample_img\", \"balloon1.png\", package = \"Rvision\")  # Load the image in memory my_image <- image(filename = path_to_image)  # Plot the image using the base R plotting device plot(my_image)  # Draw lines over the plotted image abline(h = 170, col = \"red\", lwd = 5) abline(h = 325, col = \"red\", lwd = 5) abline(v = 290, col = \"red\", lwd = 5) abline(v = 440, col = \"red\", lwd = 5)"},{"path":"https://swarm-lab.github.io/Rvision/articles/z3_basic.html","id":"method-incompatible-with-base-r","dir":"Articles","previous_headings":"3.2 - Displaying images","what":"3.2.2 - Method incompatible with base R","title":"3 - Basic operations","text":"second method (display()) uses OpenCV’s capabilities display images high frame rates, making suitable play videos. instance: Note display() method incompatible base R plotting methods. However, can use drawing functions provided Rvision draw images - destructively time - displaying .","code":"# Find the path to the Balloon.mp4 video provided with Rvision path_to_video <- system.file(\"sample_vid\", \"Balloon.mp4\", package = \"Rvision\")  # Open the video file stream my_video <- video(filename = path_to_video)  # Create an empty display window with width and height half of that of the video  # (note: the display can hide behind other windows, especially on Mac) newDisplay(\"My display\", nrow(my_video) / 2, ncol(my_video) / 2)   # Display images (note: it creates the display window if it doesn't exist yet) # The 3rd argument ('delay') is the minimum time in ms during which the image  # should be displayed before it can be replaced for (i in 1:25) {   display(readNext(my_video), \"My display\", 25, nrow(my_video) / 2, ncol(my_video) / 2) }  # Close the display window destroyDisplay(\"My display\")"},{"path":"https://swarm-lab.github.io/Rvision/articles/z3_basic.html","id":"accessing-parts-of-an-image","dir":"Articles","previous_headings":"","what":"3.3 - Accessing parts of an image","title":"3 - Basic operations","text":"can access pixel values image exactly way access values base::array. Actually, Rvision converts image base::array returning desired values. instance: pget() function can used quickly access values specific pixels x/y coordinates image. instance: function returns matrix column corresponds one desired pixels row value pixels channels image (e.g. Blue, Red, Green).","code":"my_image[]                  # Entire image my_image[1, 1,]             # Bottom-left pixel my_image[1,,]               # Bottom row of pixels my_image[, 1,]              # Leftmost column of pixels my_image[1:5, 1:5,]         # All pixels between the 1st and 5th row and column my_image[c(TRUE, FALSE), c(TRUE, FALSE),]  # Every other row and column of pixels # Return the pixel values at x/y coordinates (110,190) and (200,100) pget(my_image, x = c(110, 200), y = c(190, 100))"},{"path":"https://swarm-lab.github.io/Rvision/articles/z3_basic.html","id":"replacing-parts-of-an-image","dir":"Articles","previous_headings":"","what":"3.4 - Replacing parts of an image","title":"3 - Basic operations","text":"Images exactly like traditional R matrices. particular, color images made multiple layers (also called channels), corresponding dimension color space (e.g., BGRA color space composed 4 channels: Blue, Green, Red, Alpha/Transparency). Therefore, replacing pixel color image, necessary provide values channels . apply grayscale images single channel therefore behave similarly regular monolayer matrices base R.","code":""},{"path":"https://swarm-lab.github.io/Rvision/articles/z3_basic.html","id":"grayscale-images","dir":"Articles","previous_headings":"3.4 - Replacing parts of an image","what":"3.4.1 - Grayscale images","title":"3 - Basic operations","text":"traditional <- assignment operator can used replace parts grayscale image, like used replace parts traditional base::matrix. instance: Finally, pset() function can used quickly set values specific pixels x/y coordinates image. instance:","code":"# Make a grayscale copy of the my_image object created earlier my_gray_image <- changeColorSpace(my_image, \"GRAY\")  # Turn the bottom-left corner of the image black (0 in the grayscale space) my_gray_image[1:250, 1:250] <- 0   plot(my_gray_image) # Set a few pixels to white inside the black square added earlier pset(my_gray_image, 50:100, 50:100, \"white\") plot(my_gray_image)"},{"path":"https://swarm-lab.github.io/Rvision/articles/z3_basic.html","id":"color-images","dir":"Articles","previous_headings":"3.4 - Replacing parts of an image","what":"3.4.1 - Color images","title":"3 - Basic operations","text":"<- assignment operator can also used replace parts color (.e.  multi-channel) image. However, instead taking single values pixel replaced, take one value per pixel per channel image. instance: Note values specified channel, provided values recycled. instance: utility function col2bgr() provided Rvision (confused grDevices::col2rgb col2bgr() based) conveniently convert R-compatible color specifications color codes compatible Rvision images. instance: Finally, pset() function can used quickly set values specific pixels x/y coordinates image. instance:","code":"# Turn the bottom-left corner of the my_image object created earlier red. This  # is a BGRA image, so it has 4 channels which new values need to be specified. my_image[1:250, 1:250] <- c(0, 0, 255, 255)  plot(my_image) # Turn the bottom-left corner of the my_image object completely transparent.  # Transparency will appear as white when the image is plotted.  my_image[1:250, 1:250] <- 0 plot(my_image) # Turn the bottom-left corner of the my_image object blue.  my_image[1:250, 1:250] <- col2bgr(\"blue\", alpha = TRUE) plot(my_image) # Set a few pixels to green inside the black square added earlier pset(my_image, 50:100, 50:100, \"green\") plot(my_image)"},{"path":"https://swarm-lab.github.io/Rvision/articles/z4_inplace.html","id":"better-performances-with-in-place-operations","dir":"Articles","previous_headings":"","what":"4.1 - Better performances with in-place operations","title":"4 - In-place, copy, and target operations","text":"image processing libraries R fast enough operations single images often offer options Rvision (working closing gap front), Rvision really shines high-speed processing large volumes images (e.g. video camera streams). Part reason OpenCV - computer vision library top Rvision built - designed optimized -place operations, operations change directly content object memory without making copy . Indeed, making copies objects memory - especially large ones like images - can add significant amount time operation. reason, Rvision’s functions offer option perform operations -place, greatly increasing processing speed large volumes images. operations support -place operations argument named “target” can set value “self”. instance:","code":"# Find the path to the balloon1.png image provided with Rvision path_to_image <- system.file(\"sample_img\", \"balloon1.png\", package = \"Rvision\")  # Load the image in memory my_image <- image(filename = path_to_image)  # Plot the original image plot(my_image)  # Apply a Gaussian blur in place. Note that the operation will not return  # anything and the result will replace the content of my_image. gaussianBlur(my_image, 11, 11, 3, 3, target = \"self\")  # Plot original image after modification plot(my_image)"},{"path":"https://swarm-lab.github.io/Rvision/articles/z4_inplace.html","id":"preserving-originals-with-copy-operations","dir":"Articles","previous_headings":"","what":"4.2 - Preserving originals with copy operations","title":"4 - In-place, copy, and target operations","text":"downside -place operations modification destructive: original object memory replaced bit bit modified version (just talking RAM representation object ; original file drive never modified directly). However, may desirable cases keep original object memory untouched. purpose, functions Rvision can modify images also give users option perform operations copy original image. slower resemble usual behavior R functions. default, operations copy operations can explicitly specified setting “target” argument “new”. instance:","code":"# Find the path to the balloon1.png image provided with Rvision path_to_image <- system.file(\"sample_img\", \"balloon1.png\", package = \"Rvision\")  # Load the image in memory my_image <- image(filename = path_to_image)  # Apply a Gaussian blur to a copy of the image.  my_blurred_copy <- gaussianBlur(my_image, 11, 11, 3, 3, target = \"new\")  # Plot original image plot(my_image)  # Plot blurred copy  plot(my_blurred_copy)"},{"path":"https://swarm-lab.github.io/Rvision/articles/z4_inplace.html","id":"the-best-of-both-worlds-target-operations","dir":"Articles","previous_headings":"","what":"4.3 - The best of both worlds: target operations","title":"4 - In-place, copy, and target operations","text":"want preserve original object fast time? luck. Rvision - still thanks OpenCV - also offers “target” operations, operations results can stored another image memory (target) long image pre-allocated operation takes place memory footprint original image. fast -place operations modify original image; instead, modifies separate image serves placeholder results. operations support target operations argument named “target” can set name target image. instance:","code":"# Find the path to the balloon1.png image provided with Rvision path_to_image <- system.file(\"sample_img\", \"balloon1.png\", package = \"Rvision\")  # Load the image in memory my_image <- image(filename = path_to_image)  # Create a zero-filled target image with the memory footprint of the original my_target <- zeros(nrow(my_image), ncol(my_image), nchan(my_image), bitdepth(my_image))  # Apply a Gaussian blur to the original image but store the results in the  # target. Note that the operation will not return anything and the result will  # replace the content of my_target. gaussianBlur(my_image, 11, 11, 3, 3, target = my_target)  # Plot original image plot(my_image)  # Plot target plot(my_target)"},{"path":"https://swarm-lab.github.io/Rvision/articles/z4_inplace.html","id":"when-to-use-in-place-copy-and-target-operations","dir":"Articles","previous_headings":"","what":"4.4 - When to use in-place, copy, and target operations?","title":"4 - In-place, copy, and target operations","text":"going process single image (small batch images) one simple operations, copy operations probably best choice. fast enough (fraction second ) familiar R users since essentially mimic behavior traditional R functions always returning new object. also useful troubleshooting pipeline since every step saved separate object can therefore inspected individually problems. going process large number images (typically, processing video camera stream) care preserving final result pipeline, -place operations best choice. provide best performance terms speed overall memory footprint. Finally, going process large number images need preserve original image result intermediary step pipeline (e.g. order reuse later pipeline), target operations preferred. Note different operation types mutually exclusive can used together processing pipeline increased flexibility.","code":""},{"path":"https://swarm-lab.github.io/Rvision/articles/z5_gpu.html","id":"stupid-fast-performances-with-gpu-operations","dir":"Articles","previous_headings":"","what":"5.1 - Stupid-fast performances with GPU operations","title":"5 - GPU operations","text":"Since version 0.6.0, running operations GPU (Graphics Processing Units) computer possible - want believe - easy implement. GPUs designed allow parallel pixel processing. can result significant gains performance operations can benefit massive parallelization, making cases several orders magnitude faster operation CPU (Central Processing Unit) computer. OpenCV - computer vision library top Rvision built - can handle operations GPU using two popular frameworks: OpenCL Nvidia’s CUDA. OpenCL open, royalty-free, cross-platform, available users’ machines (CUDA proprietary restricted Nvidia graphics cards). , therefore, chosen use framework Rvision. say never consider adding CUDA support Rvision; probably - time permitting - reportedly faster OpenCL many instances. just decided start framework available users immediately.","code":""},{"path":"https://swarm-lab.github.io/Rvision/articles/z5_gpu.html","id":"enabling-gpu-operations-in-rvision","dir":"Articles","previous_headings":"","what":"5.2 - Enabling GPU operations in Rvision","title":"5 - GPU operations","text":"default (good reasons ), Rvision loads images receives memory CPU. using GPU-accelerated functions, image must first copied GPU memory. can done easily follows: done, Rvision (OpenCV really) automatically use GPU-accelerated version operation image available. Otherwise, default using CPU version. ’s , nothing take advantage processing speed GPU. case function accepts multiple images arguments (e.g. using target image save result operation original image), matter cases images CPU GPU (rare cases matter, error thrown can adjust pipeline accordingly). However, better performances probably achieved images use memory processor. Finally, need copy back image CPU memory (e.g. want transfer image base::array), can simply apply reverse operation follows:","code":"# Find the path to the balloon1.png image provided with Rvision path_to_image <- system.file(\"sample_img\", \"balloon1.png\", package = \"Rvision\")  # Load the image in memory my_image <- image(filename = path_to_image)  # Copy the image to GPU memory my_image$toGPU() # Copy the image back to CPU memory my_image$fromGPU()"},{"path":"https://swarm-lab.github.io/Rvision/articles/z5_gpu.html","id":"caveats-to-gpu-operations","dir":"Articles","previous_headings":"","what":"5.3 - Caveats to GPU operations","title":"5 - GPU operations","text":"Nothing comes free caveats using GPU-accelerated operations. First, work computer GPU (even basic one integrated CPU) OpenCL drivers GPU installed. OpenCL available system, Rvision throw error use $toGPU function. OpenCL available traditional computers (including laptops) operating systems. Check documentation computer operating system figure whether OpenCL available/installed system install necessary (case, probably need recompile OpenCV using ROpenCVLite::installOpenCV function). OpenCL probably available shared servers provide GPU access users. Check server administrator case. GPU-accelerated operations can much faster CPU-based equivalent, operations can efficiently run GPU. operations provided Rvision/OpenCV actually slower GPU CPU. Moreover, performances highly depend abilities GPU. basic, integrated GPU perform lot slower dedicated graphics card instance, many cases faster CPU. Test pipeline carefully decide whether worth running parts GPU, keep everything CPU instead. Copying image /GPU comes time penalty. best pipeline avoids performing many copying operations. Ideally, GPU/CPU copies created/pre-allocated starting pipeline better performances. Finally, GPU operations slow first time run session. OpenCV needs compile corresponding functions specific graphics device use run operations. Therefore, GPU operations avoided used handful times session. better suited heavily repeated operations, large volumes images speed gains can quickly compensate time penalty incur start pipeline. Note possible way mitigate problem “warm-” run functions start session, pipeline starts.","code":""},{"path":"https://swarm-lab.github.io/Rvision/articles/z6_queue.html","id":"increasing-performances-with-capture-queues","dir":"Articles","previous_headings":"","what":"6.1 - Increasing performances with capture queues","title":"6 - Capture queues","text":"Retrieving single frame video camera stream fast, instantaneous Rvision (therefore OpenCV background) needs grab decode frame can used processing. applications, small time penalty issue; losing milliseconds per frame felt user processing short /low resolution videos instance. However, frame decoding time increase significantly resolution video/camera stream; applications requiring processing long videos live camera feeds, total time lost retrieving frames quickly increase. Moreover, process retrieving frames blocking: Rvision grabs decodes frame, work frames previously captured. solution issue make use multi-tasking ability modern computers perform frame retrieving process parallel rest image processing. principle fairly simple: one processing thread (thread 1) charge grabbing, decoding, storing frames shared dynamic queue (buffer); second thread (thread 2) charge processing pre-loaded frames ; thread 2 working frame, thread 1 can keep filling queue new frames thread 2 never stop wait new frame retrieved. multi-core/processor computer (computers nowadays), thread 1 2 can operated parallel separate cores/processors, effectively reducing frame waiting time near-zero thread 2 (see caveats section ). Unfortunately, R single-threaded language, meaning natively create operate multiple parallel processing threads. Fortunately, C++ language used background Rvision can . used ability - precautions avoid memory access conflicts R - create Queue class objects job pre-load memory video camera stream frames without blocking execution main (unique) R processing thread, give main R thread near-instantaneous access pre-loaded frames required. frame collected main R thread, removed queue make space another frame.","code":""},{"path":"https://swarm-lab.github.io/Rvision/articles/z6_queue.html","id":"creating-a-queue","dir":"Articles","previous_headings":"","what":"6.2 - Creating a queue","title":"6 - Capture queues","text":"Queue objects created using queue() function. instance: queue() function can take 4 parameters: x corresponds source frames queued. either Video Stream object. size corresponds number frames queue can store one time. default, Queue object able hold 10 frames . increase value size parameter, Queue object use RAM result, mindful computer’s resources. delay corresponds time (microseconds) two queue update cycles. update cycle, Queue object checks whether full whether frames collected main R thread. full, retrieves new frame source stores ; frames collected main R thread, removes queue; waits duration set delay starting new update cycle. Reducing value delay increase frequency update cycles also increase computational load core/processor running queuing thread. overflow corresponds behavior Queue object adopt full. default, queuing process “pause” (stop retrieving new frames source storing ) frame collected main R thread. behavior choice video processing skip frame ensuring queue storage memory grow user wants. queuing process can also “replace” oldest frame queue new one. usually good choice processing live camera stream ensures queue storage memory grow user wants. However, frames may skipped main R thread collect process frames faster can retrieved stored queuing thread. Finally, queuing process can “grow” queue doubling size time fills . behavior allows pausing retrieval process avoids frame skipping much recommended unless know . Indeed, can lead excessive RAM usage decreased computing performance across board. Queue object created, starts immediately filling images retrieved Video Stream source object. Note , previously read frames Video source object creating Queue object, latter start retrieving frames left (e.g. already read first 10 frames, queue start filling 11th). Queue object required anymore, can released memory follows:","code":"# Find the path to the Balloon.mp4 video provided with Rvision path_to_video <- system.file(\"sample_vid\", \"Balloon.mp4\", package = \"Rvision\")  # Open the video file stream my_video <- video(filename = path_to_video)  # Create a queue of frames  my_buf <- queue(my_video, size = 10, delay = 1000, overflow = \"pause\") release(my_buf)"},{"path":"https://swarm-lab.github.io/Rvision/articles/z6_queue.html","id":"using-a-queue-object","dir":"Articles","previous_headings":"","what":"6.3 - Using a Queue object","title":"6 - Capture queues","text":"main purpose Queue object pre-load store frames fast access later . pre-loading storing happens background need take care . Collecting frame queue main R thread can done using readNext() function. example: time, can check state queue follows:","code":"# Collect the next available frame from the queue and store it in a new  # Image object frame <- readNext(my_buf)  # Collect the next available frame from the queue and store it in an existing  # Image object readNext(my_buf, target = frame) # Is the queue empty? empty(my_buf)  # Is the queue full? full(my_buf)  # What is the current number of frames in the queue?  length(my_buf)  # What is the maximum number of frames that the queue can hold? capacity(my_buf)  # What is the index of the next frame available? (for video queues only) frame(my_buf)  # What are the dimensions of the queue?  dim(my_buf) nrow(my_buf) ncol(my_buf)"},{"path":"https://swarm-lab.github.io/Rvision/articles/z6_queue.html","id":"caveats-to-using-queue-objects","dir":"Articles","previous_headings":"","what":"6.4 - Caveats to using Queue objects","title":"6 - Capture queues","text":"Queue objects can useful speed processing camera streams long videos, especially resolution high (HD ). short videos low resolution videos camera streams, benefits using Queue object limited retrieving frames sources already fast. processing frames main R thread much faster retrieving storing frames inside Queue object, risk emptying queue faster can fill . case, readNext() display warning effect return error (, instance, reaching end video file). addition, create new image modify target image. need make sure code can catch warnings act accordingly (e.g., wait turn trying ). can reduce risks queue becoming empty (1) increasing size queue creating , (2) making sure queue completely filled starting processing frames, (3) reducing delay queue updates. case, Queue objects better suited beneficial cases processing frames slow slower frame retrieving process. Finally, Queue objects read frames existing Video Stream objects. means modify state source objects way user reading directly . consequences require attention using Queue object. First, Queue object start reading source object whichever state left . instance, read first 10 frames video passing Queue object, Queue object start reading 11th frame. Conversely, pass newly created Video object Queue object size 10, Queue object immediately start reading storing first 10 frames. decide read frame directly Video object, return 11th frame, first one. Therefore, avoid competing Queue object given Video object, strongly recommended avoid creating code mix reading frames Queue object reading frames Video object Queue object using.","code":""},{"path":"https://swarm-lab.github.io/Rvision/articles/z7_stack.html","id":"introducting-video-stacks","dir":"Articles","previous_headings":"","what":"7.1 - Introducting video stacks","title":"7 - Video stacks","text":"Starting Rvision version 0.7.0, users can create video stacks. video stack (VideoStack) essentially list videos similar properties (particular, dimensions) behaves almost entirely like single continuous Video object. reason, VideoStack objects particularly useful applications requiring combination multiple video files /Video objects. instance, video stacks can greatly simplify merging two separate video files single one, processing continuous sequence split multiple files recording. vignette, briefly describe create manipulate VideoStack objects. Since operation similar Video objects, using VideoStack objects require much additional learning regular user Rvision.","code":""},{"path":"https://swarm-lab.github.io/Rvision/articles/z7_stack.html","id":"creating-video-stacks","dir":"Articles","previous_headings":"","what":"7.2 - Creating video stacks","title":"7 - Video stacks","text":"can create video stack passing videoStack function combination existing Video objects /character strings pointing toward location video files computer. instance: paths video files existing Video objects can passed separate arguments, list vector. path provided, corresponding video opened added stack. Video object provided, pointer original Video object added stack (.e., share reader head modification position reader head stack applied original object, vice versa). video stack can contain many videos desired, restriction dimensions. VideoStack object required anymore, can released memory follows:","code":"# Find the path to the Balloon.mp4 video provided with Rvision path_to_video <- system.file(\"sample_vid/Balloon.mp4\", package = \"Rvision\")  # Open the video file stream my_video <- video(filename = path_to_video)  # Create a video stack from a character string and a Video object my_video_stack <- videoStack(path_to_video, my_video) release(my_video_stack)"},{"path":"https://swarm-lab.github.io/Rvision/articles/z7_stack.html","id":"using-video-stacks","dir":"Articles","previous_headings":"","what":"7.3 - Using video stacks","title":"7 - Video stacks","text":"VideoStack object created, can used Video object number frames sum frames Video objects contains. instance, read specific frame stack, can use readNext() readFrame() functions, normally Video objects: time, can check state video stack follows: Finally, can access individually, add, replace videos stack follows:","code":"# Capture the next available frame from the my_video_stack object created earlier my_image <- readNext(my_video_stack)  # Capture frame 100 from the my_video_stack object created earlier my_image <- readFrame(my_video_stack, 100) # What is the current number of videos in the stack?  length(my_video_stack)  # What is the number of frames in the stack?  nframes(my_video_stack)  # What is the index of the next frame available?  frame(my_video_stack)  # What are the dimensions of the queue?  dim(my_video_stack) nrow(my_video_stack) ncol(my_video_stack)  # What are the frame rates of the videos in the stack? fps(my_video_stack)  # What are the codecs of the videos in the stack? codec(my_video_stack) # Access the first video in the stack individually my_video_stack[[1]]  # Replace the first video in the stack  my_video_stack[[1]] <- my_video  # Add a video at the end of the stack  my_video_stack[[length(my_video_stack) + 1]] <- my_video  # Remove a video from the stack my_video_stack[[2]] <- NULL"},{"path":"https://swarm-lab.github.io/Rvision/articles/z8_calib.html","id":"camera-calibration","dir":"Articles","previous_headings":"","what":"8.1 - Camera calibration","title":"8 - Camera calibration","text":"Starting Rvision 0.7.1, users can perform basic camera calibration steps correct lens distortion. can particularly useful working cameras wide field view (e.g., GoPro cameras) performing photogrammetry. vignette, briefly describe calibration process provide example calibrate camera using Rvision.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/articles/z8_calib.html","id":"calibration-pattern","dir":"Articles","previous_headings":"8.2 - Calibration process","what":"8.2.1 - Calibration pattern","title":"8 - Camera calibration","text":"calibration process relatively straightforward. First, user must capture series images calibration target. calibration target planar surface regular pattern points (time writing, Rvision supports checkerboard pattern). can find sample calibration target provided Rvision package following location hard drive: can print image use calibration target, can create long represents checkerboard pattern. target ready, take series images using camera want calibrate. target placed different distances camera different angles. target also rotated camera’s optical axis. example video calibration target used calibrate webcam provided Rvision package following location hard drive: use video demonstrate calibration process.","code":"system.file(\"sample_img/checkerboard6x9.png\", package = \"Rvision\") system.file(\"sample_vid/calibration.mp4\", package = \"Rvision\")"},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/articles/z8_calib.html","id":"setting-the-calibration-pattern-parameters","dir":"Articles","previous_headings":"8.2 - Calibration process > 8.2.2 - Calibration steps","what":"8.2.2.1 - Setting the calibration pattern parameters","title":"8 - Camera calibration","text":"first step calibration process set calibration pattern parameters. parameters used detect calibration pattern images provide correspondence calibration pattern points image coordinates.","code":"# Checkerboard inner dimensions, i.e., the number of inner corners formed by the # checkerboard pattern. In this case, the checkerboard has 7x10 squares and,  # therefore, 6x9 inner corners. cdims <- c(6, 9)  # Size of a checkerboard square in mm.  ssize <- 22.71  # Checkerboard real-world relative coordinates. The first point is the origin  # and the remaining points are the coordinates of the remaining inner corners. # Since the checkerboard is planar, the z-coordinate is always 0. checkerboard <- as.matrix(   expand.grid(     x = 0:(cdims[1] - 1),     y = 0:(cdims[2] - 1),     z = 0   ) ) * ssize"},{"path":"https://swarm-lab.github.io/Rvision/articles/z8_calib.html","id":"detecting-the-calibration-pattern","dir":"Articles","previous_headings":"8.2 - Calibration process > 8.2.2 - Calibration steps","what":"8.2.2.2 - Detecting the calibration pattern","title":"8 - Camera calibration","text":"next step detect calibration pattern video frame. script illustrates example video provided Rvision package. different steps described comments. process might work video depending lighting image quality, might tweak parameters. process can also take long time might want skip frames speed . good rule thumb select frames (1) show calibration pattern clearly (2) show different angles distances camera. can visualize coverage calibration pattern video frames follows:  particular example, coverage perfect, good enough demonstration purposes.","code":"# Lists to store reference and image coordinates. ref_points <- list() img_points <- list()  # Location of the calibration video. vid_file <- system.file(\"sample_vid/calibration.mp4\", package = \"Rvision\")  # Load video and create temporary storage frames. vid <- video(vid_file) fr <- zeros(nrow(vid), ncol(vid), 3) gray <- zeros(nrow(vid), ncol(vid), 1) bw3 <- zeros(nrow(vid), ncol(vid), 3)  # Skip the first 25 frames that do not show the calibration pattern. frame(vid) <- 26  # Loop through the video frames. for (i in 26:nframes(vid)) {   # Read the next frame.   readNext(vid, fr)    # Threshold the frame. This is done by converting each pixel above the average   # pixel intensity to white and the remaining pixels to black. This is done to   # remove noise and to make the calibration pattern stand out. This is a very   # simple thresholding method and might not work for your video.   compare(fr, mean(mean(fr)), \">\", bw3)    # Find the calibration pattern corners. This is done using the function   # called `findChessboardCorners`. The first argument is the image to be   # analyzed. The second and third arguments are the inner dimensions of the   # checkerboard pattern. The fourth argument is a logical value indicating   # whether adaptive thresholding should be used. This can be useful to improve   # the detection of the calibration pattern in images with uneven lighting.    # However, it can significantly increase the processing time. We will not use   # it in this example. The function returns a matrix with the coordinates of   # the corners. If the function is able to find all the corners, the number of   # rows in the matrix will be equal to the product of the inner dimensions.   corners <- findChessboardCorners(bw3, cdims[1], cdims[2], FALSE)    # If the function was able to find all the corners...   if (nrow(corners) == prod(cdims)) {     # Convert the frame to grayscale.     changeColorSpace(fr, \"GRAY\", gray)      # Refine the corner coordinates. This is done using the function called     # `cornerSubPix`. The first argument is the grayscale image. The second     # argument is the matrix with the corner coordinates. The function returns a     # matrix with the refined corner coordinates.     corners <- cornerSubPix(gray, corners)      # Store the reference and image coordinates.      ref_points[[length(ref_points) + 1]] <- checkerboard     img_points[[length(img_points) + 1]] <- corners   } } plot(do.call(rbind, img_points),   xlim = c(1, ncol(vid)), ylim = c(1, nrow(vid)), asp = 1,   xlab = NA, ylab = NA, main = \"Calibration pattern coverage\",   cex.main = 2, cex.axis = 2 ) abline(   v = c(1, ncol(vid)), h = c(1, nrow(vid)),   col = \"gray\", lty = 2, lwd = 3 )"},{"path":"https://swarm-lab.github.io/Rvision/articles/z8_calib.html","id":"compute-the-camera-parameters","dir":"Articles","previous_headings":"8.2 - Calibration process > 8.2.2 - Calibration steps","what":"8.2.2.3 - Compute the camera parameters","title":"8 - Camera calibration","text":"next step compute camera parameters. done using function called calibrateCamera. first argument list reference coordinates. second argument list image coordinates. third fourth arguments dimensions video frames. last argument maximum number iterations used optimization algorithm. function returns list camera parameters. step can time, patient. can now use camera parameters correct lens distortion video. done using function called undistort.  Notice barrel distortion visible original image (top) corrected undistorted image (bottom). can now save camera parameters file future use. recommend using list.save function rlist package . can later use list.load function package load camera parameters saved file.","code":"calib <- calibrateCamera(ref_points, img_points,   nrow(vid), ncol(vid), maxit = 10000 ) # Read a frame from the video.  readFrame(vid, 250, fr)  # Create a frame to store the undistorted image. fr_undist <- fr * 0  # Correct lens distortion. undistort(fr, calib$camera_matrix, calib$dist_coeffs, target = fr_undist)  # Plot the original and undistorted images on top of each other. conc <- concatenate(border(fr, 0, 25, 0, 0, border_color = \"white\"), fr_undist) plot(conc) library(rlist) list.save(calib, \"calib.json\")"},{"path":"https://swarm-lab.github.io/Rvision/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Simon Garnier. Author, maintainer. Muschelli John. Contributor, copyright holder.","code":""},{"path":"https://swarm-lab.github.io/Rvision/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Simon Garnier John Muschelli (2023). Rvision - computer vision library R. R package version 0.7.1.","code":"@Manual{,   title = {{Rvision} - A computer vision library for R},   author = {Simon Garnier and John Muschelli},   year = {2023},   note = {R package version 0.7.1},   url = {https://swarm-lab.github.io/Rvision/}, }"},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"Computer Vision Library for R","text":"Rvision growing computer vision library R. based powerful OpenCV library C/C++, state---art computer vision open source world. ultimate goal Rvision provide R users necessary functions read manipulate images, videos camera streams, emphasis speed (thanks OpenCV). respect, different image manipulations packages R either can quickly directly access frames videos camera streams limited processing speed /volume.","code":""},{"path":"https://swarm-lab.github.io/Rvision/index.html","id":"quick-start-guides","dir":"","previous_headings":"","what":"Quick start guides","title":"Computer Vision Library for R","text":"1 - Installation instructions 2 - Input/output operations 3 - Basic operations 4 - -place, copy, target operations 5 - GPU operations 6 - Capture queues 7 - Video stacks 8 - Camera calibration","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/index.html","id":"can-i-take-selfies-with-my-webcam-using-rvision","dir":"","previous_headings":"FAQ","what":"Can I take selfies with my webcam using Rvision?","title":"Computer Vision Library for R","text":"certainly can, ask first whether … careful, trigger explosion camera detects making duck face ;-)","code":"my_stream <- stream(0)   # 0 will start your default webcam in general.  my_selfie <- readNext(my_stream) plot(my_selfie) release(my_stream)"},{"path":"https://swarm-lab.github.io/Rvision/reference/CLAHE.html","id":null,"dir":"Reference","previous_headings":"","what":"Contrast Limited Adaptive Histogram Equalization — CLAHE","title":"Contrast Limited Adaptive Histogram Equalization — CLAHE","text":"CLAHE performs adaptive histogram equalization enhance  contrast image. Unlike regular histogram equalization  (histEq), CLAHE first divides image small blocks  called \"tiles\" performs histogram equalization tiles.  reduce noise amplification contrast limiting also applied:  histogram bin specified contrast limit, pixels  clipped distributed uniformly bins applying histogram  equalization. equalization, remove artifacts tile borders,  bilinear interpolation applied.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/CLAHE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Contrast Limited Adaptive Histogram Equalization — CLAHE","text":"","code":"CLAHE(image, clip_limit = 40, n_tiles = c(8, 8), target = \"new\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/CLAHE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Contrast Limited Adaptive Histogram Equalization — CLAHE","text":"image Image object. clip_limit numeric value representing contrast limit pixels clipped distributed uniformly bins applying histogram equalization tiles. n_tiles vector 2 elements representing number tiles along width height image (default: c(8, 8)). target location results stored. can take 3 values: \"new\":new Image object created results   stored inside (default). \"self\":results stored back image (faster   destructive). Image object:results stored another   existing Image object. fast replace   content image replace target. Note   target number channels bit depth   image, error thrown.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/CLAHE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Contrast Limited Adaptive Histogram Equalization — CLAHE","text":"target=\"new\", function returns Image object. target=\"self\", function returns nothing modifies  image place. target Image object,  function returns nothing modifies Image object  place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/CLAHE.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Contrast Limited Adaptive Histogram Equalization — CLAHE","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/CLAHE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Contrast Limited Adaptive Histogram Equalization — CLAHE","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) balloon_Lab <- changeColorSpace(balloon, \"Lab\") L <- extractChannel(balloon_Lab, 1) clahe <- CLAHE(L, 1, c(2, 2)) insertChannel(balloon_Lab, 1, clahe) balloon_contrast <- changeColorSpace(balloon_Lab, \"BGR\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/Image-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 Class Containing an OpenCV Image — Image-class","title":"An S4 Class Containing an OpenCV Image — Image-class","text":"Image objects base objects  Rvision package. contain  OpenCV image can originate image  file, array, video file video stream. image can  manipulated using functions Rvision. Function creating Image objects arrays  image files.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/Image-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An S4 Class Containing an OpenCV Image — Image-class","text":"","code":"image(..., colorspace = \"BGR\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/Image-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"An S4 Class Containing an OpenCV Image — Image-class","text":"... created image file, image takes one argument character string indicating path image file. created array (e.g. matrix), takes array single argument. Image object can also created without argument, case empty can populated image later. colorspace string indicating desired color space image.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/Image-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"An S4 Class Containing an OpenCV Image — Image-class","text":"Image object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/Image-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 Class Containing an OpenCV Image — Image-class","text":"depth function returning bit depth object. dim,ncol,nrow,nchan Functions returning dimensions object. space character string indicating colorspace object. pget,pset Functions get set single pixel values. toR function convert object R array. fromGPU function retrieving object GPU memory. toGPU function sending object GPU memory. GPU boolean indicating whether object GPU memory. write function write object file.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/Image-class.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"An S4 Class Containing an OpenCV Image — Image-class","text":"Image objects can created video files video streams  using following functions: video, stream.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/Image-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"An S4 Class Containing an OpenCV Image — Image-class","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/Image-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"An S4 Class Containing an OpenCV Image — Image-class","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) noise <- image(array(sample(0:255, 100 * 100 * 3, replace = TRUE), dim = c(100, 100, 3)))"},{"path":"https://swarm-lab.github.io/Rvision/reference/LUT.html","id":null,"dir":"Reference","previous_headings":"","what":"Look-up Table Transform — LUT","title":"Look-up Table Transform — LUT","text":"LUT performs look-table transform  Image object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/LUT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Look-up Table Transform — LUT","text":"","code":"LUT(image, lut, target = \"new\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/LUT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Look-up Table Transform — LUT","text":"image 8-bit (8U) Image object. lut look-table. vector 256 elements, 256 x n matrix, n corresponding number channels image. lut vector image one channel, lut recycled channel. target location results stored. can take 3 values: \"new\":new Image object created results   stored inside (default). \"self\":results stored back image (faster   destructive). Image object:results stored another   existing Image object. fast replace   content image replace target. Note   target dimensions, number channels,   bit depth image, nothing stored.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/LUT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Look-up Table Transform — LUT","text":"target=\"new\", function returns Image object. target=\"self\", function returns nothing modifies  image place. target Image object,  function returns nothing modifies Image object  place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/LUT.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Look-up Table Transform — LUT","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/LUT.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Look-up Table Transform — LUT","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) high_contrast_lut <- 255 * pbeta(0:255 / 255, 4, 4) high_contrast_balloon <- LUT(balloon, high_contrast_lut)"},{"path":"https://swarm-lab.github.io/Rvision/reference/ORBkeypoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Keypoint Detection with ORB — ORBkeypoints","title":"Keypoint Detection with ORB — ORBkeypoints","text":"ORBkeypoints finds describes keypoints image  using ORB method. Keypoints prominent features can used  quickly match images.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/ORBkeypoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Keypoint Detection with ORB — ORBkeypoints","text":"","code":"ORBkeypoints(   image,   mask = NULL,   n_features = 500,   scale_factor = 1.2,   n_levels = 8,   edge_threshold = 31,   first_level = 0,   WTA_K = 2,   score_type = \"HARRIS\",   patch_size = 31,   fast_threshold = 20 )"},{"path":"https://swarm-lab.github.io/Rvision/reference/ORBkeypoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Keypoint Detection with ORB — ORBkeypoints","text":"image Image object. mask binary Image object dimensions image. can used mask pixels considered searching keypoints (pixels set 0 mask ignored search). n_features maximum number features retain. scale_factor pyramid decimation ratio, always greater 1 (default: 1.2). scaleFactor = 2 uses \"classical\" pyramid, level 4 times less pixels previous one. large scale factor degrade feature matching scores dramatically. hand, scale factor close 1 require longer computation times. n_levels number pyramid decimation levels (default: 8). edge_threshold size border features detected. roughly match patch_size parameter (default: 31). first_level level pyramid put source image (default: 0). Previous levels filled upscaled versions source image. WTA_K number points produce element oriented BRIEF descriptor keypoint. WTA_K = 2 (default) takes random pair points compare brightness, yielding binary response. WTA_K = 3 takes 3 random points, finds point maximum brightness, output index winner (0, 1 2). WTA_K = 4 perform operation 4 random points , output index winner (0, 1, 2, 3). WTA_K = 3 WTA_K = 4, output require 2 bits storage , therefore, need special variant Hamming distance keypoint matching (\"BruteForce-Hamming(2)\" matchKeypoints). score_type character string indicating scoring method use. \"HARRIS\" (default) uses Harrisalgorithm rank detected features. \"FAST\" alternative method produces slightly less stable keypoints little faster compute. patch_size size patch used compute oriented BRIEF descriptor (default: 31). fast_threshold threshold selecting \"good enough\" keypoints (default: 20)","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/ORBkeypoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Keypoint Detection with ORB — ORBkeypoints","text":"list two elements:  keypoints: matrix containing following information     keypoint: angle: keypoint orientation degrees, 0 360,          measured relative image coordinate system, .e., clockwise. octave: pyramid layer keypoint          extracted. x: x coordinate keypoint. y: y coordinate keypoint. response: response keypoint          selected. can used sorting subsampling. size: diameter keypoint neighborhood. descriptors: single-channel Image row      corresponding BRIEF descriptor single keypoint.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/ORBkeypoints.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Keypoint Detection with ORB — ORBkeypoints","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/ORBkeypoints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Keypoint Detection with ORB — ORBkeypoints","text":"","code":"dots <- image(system.file(\"sample_img/dots.jpg\", package = \"Rvision\")) kp <- ORBkeypoints(dots, n_features = 40000) plot(dots) points(kp$keypoints[, c(\"x\", \"y\")], pch = 19, col = \"red\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/Queue-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 Class Containing a Queue of Images — Queue-class","title":"An S4 Class Containing a Queue of Images — Queue-class","text":"Queue object contains self-filling, asynchronous  queue images retrieved Video Stream  object. Retrieving image video camera stream generally fast  still comes time penalty can become significant  processing large numbers images /videos. Queue object can  help save lost time reading storing images video  stream parallel main R thread, instance  operations performed R previously read images.  pre-loaded frames , therefore, immediately available needed,  effectively eliminating wait time two frame reads (long  queue reads stores new frames faster R can process ). Function creating Queue objects  Video Stream objects.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/Queue-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An S4 Class Containing a Queue of Images — Queue-class","text":"","code":"queue(x, size = 10, delay = 1000, overflow = \"pause\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/Queue-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"An S4 Class Containing a Queue of Images — Queue-class","text":"x Either Video Stream object. size number frames Queue object can store (default: 10). number fixed overflow set \"pause\" \"replace\". number may increase overflow set \"grow\" queue becomes full. delay Time microseconds two queue updates (default: 1000). Increasing delay slow speed queue fills . Decreasing fill queue faster use processing resources. overflow character string indicating Queue object full. Three methods available: \"pause\": queue stop retrieving storing new frames   frame read user. \"replace\": oldest frame queue discarded make space   new frame. \"grow\": size queue doubled every time fills .   used extreme caution can lead excessive   memory usage.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/Queue-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"An S4 Class Containing a Queue of Images — Queue-class","text":"Queue object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/Queue-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 Class Containing a Queue of Images — Queue-class","text":"dim,ncol,nrow Functions returning dimensions frames queue. length Function returning number frames queue. capacity Function returning maximum number frames queue can hold one time. frame Function returning index frame read next. full,empty Function returning state queue (full empty neither). readNext Function access next frame queue. reset Function empty queue start collecting new frames.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/Queue-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"An S4 Class Containing a Queue of Images — Queue-class","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/Queue-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"An S4 Class Containing a Queue of Images — Queue-class","text":"","code":"balloon <- video(system.file(\"sample_vid/Balloon.mp4\", package = \"Rvision\")) #> Error: Could not open the video. buf <- queue(balloon) #> Error in eval(expr, envir, enclos): object 'balloon' not found"},{"path":"https://swarm-lab.github.io/Rvision/reference/Rvision.html","id":null,"dir":"Reference","previous_headings":"","what":"Rvision: Computer vision library for R — Rvision","title":"Rvision: Computer vision library for R — Rvision","text":"Rvision package contains OpenCV-based computer vision library providing methods read manipulate video image files, well camera streams.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/Rvision.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Rvision: Computer vision library for R — Rvision","text":"OpenCV http://opencv.org/.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/Rvision.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Rvision: Computer vision library for R — Rvision","text":"Simon Garnier <garnier@njit.edu> John Muschelli <muschellij2@gmail.com> Maintainer: Simon Garnier <garnier@njit.edu>","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/RvisionAck.html","id":null,"dir":"Reference","previous_headings":"","what":"Image and video samples — RvisionAck","title":"Image and video samples — RvisionAck","text":"Rvision provides image video samples illustrating examples different functions. references original material samples extracted.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/RvisionAck.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Image and video samples — RvisionAck","text":"\"Big Buck Bunny\", © copyright 2008, Blender Foundation /    www.bigbuckbunny.org - Distributed Creative Commons    Attribution 3.0 license. EC Funded CAVIAR project/IST 2001 37540 -    http://homepages.inf.ed.ac.uk/rbf/CAVIAR/ Pixabay / https://pixabay.com/en/dots-blue-background-fabric-313325/    - Distributed Creative Commons CC0 Public Domain license.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/Stream-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 Class Containing an OpenCV Stream — Stream-class","title":"An S4 Class Containing an OpenCV Stream — Stream-class","text":"Stream object contains OpenCV  stream originates camera connected computer. Function creating Stream objects video  streams.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/Stream-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An S4 Class Containing an OpenCV Stream — Stream-class","text":"","code":"stream(..., api = \"ANY\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/Stream-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"An S4 Class Containing an OpenCV Stream — Stream-class","text":"... Either: index: integer value corresponding index camera     read stream (default: 0; 0 usually default webcam     computers). ... stream_string: ...character string corresponfing URL     video stream (eg. protocol://host:port/script_name?script_params|auth)     GStreamer pipeline string gst-launch tool format GStreamer     used backend API. Note video stream IP camera feed     URL scheme. Please refer documentation source stream     know right URL format. api character string corresponding API use reading stream camera (see Note; default: \"\").","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/Stream-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"An S4 Class Containing an OpenCV Stream — Stream-class","text":"Stream object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/Stream-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 Class Containing an OpenCV Stream — Stream-class","text":"dim,ncol,nrow Functions returning dimensions object. get,set Functions access set internal properties object. isOpened Function check status camera stream. readNext Functions access next frame stream. release Function release object memory.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/Stream-class.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"An S4 Class Containing an OpenCV Stream — Stream-class","text":"Hereafter list supported APIs. Note APIs  available computer (actually ). \"\": automatically select API. \"VFW\": Video Windows. \"V4L\", \"V4L2\": Video Linux. \"FIREWIRE\", \"FIREWARE\", \"IEEE1394\", \"DC1394\", \"CMU1394\": IEEE 1394 drivers. \"QT\": Quicktime. \"UNICAP\": Unicap drivers. \"DSHOW\": DirectShow. \"PVAPI\": PvAPI, Prosilica GigE SDK. \"OPENNI\": OpenNI (Kinect). \"OPENNI_ASUS\": OpenNI (Asus Xtion). \"XIAPI\": XIMEA Camera API. \"AVFOUNDATION\": AVFoundation framework iOS OSX > Lion. \"GIGANETIX\": Smartek Giganetix GigEVisionSDK. \"MSMF\": Microsoft Media Foundation. \"WINRT\": Microsoft Windows Runtime using Media Foundation. \"INTELPERC\": Intel Perceptual Computing SDK. \"OPENNI2\": OpenNI2 (Kinect). \"OPENNI2_ASUS\": OpenNI2 (Asus Xtion Occipital Structure sensors). \"GPHOTO2\": gPhoto2 connection. \"GSTREAMER\": GStreamer. \"FFMPEG\": FFMPEG library. \"IMAGES\": OpenCV Image Sequence. \"ARAVIS\": Aravis SDK. \"OPENCV_MJPEG\": Built-OpenCV MotionJPEG codec. \"INTEL_MFX\": Intel MediaSDK.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/Stream-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"An S4 Class Containing an OpenCV Stream — Stream-class","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/Stream-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"An S4 Class Containing an OpenCV Stream — Stream-class","text":"","code":"if (FALSE) { live <- stream(0) release(live) }"},{"path":"https://swarm-lab.github.io/Rvision/reference/Video-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 Class Containing an OpenCV Video — Video-class","title":"An S4 Class Containing an OpenCV Video — Video-class","text":"Video object contains OpenCV  video originates video file. Function creating Video objects video  files.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/Video-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An S4 Class Containing an OpenCV Video — Video-class","text":"","code":"video(filename, api = \"ANY\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/Video-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"An S4 Class Containing an OpenCV Video — Video-class","text":"filename character string corresponding path video file. api character string corresponding API use reading video file (see Note; default: \"\").","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/Video-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"An S4 Class Containing an OpenCV Video — Video-class","text":"Video object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/Video-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 Class Containing an OpenCV Video — Video-class","text":"dim,ncol,nrow Functions returning dimensions object. nframes Function returning number frames object. codec Function returning codec object. fps Function returning frame rate object. frame Function returning index frame read next. get,set Functions access set internal properties object. isOpened Function check status video stream. readNext,readFrame Functions access next arbitrary frame stream. release Function release object memory.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/Video-class.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"An S4 Class Containing an OpenCV Video — Video-class","text":"Hereafter list supported APIs. Note APIs  available computer (actually ). \"\": automatically select API. \"VFW\": Video Windows. \"V4L\", \"V4L2\": Video Linux. \"FIREWIRE\", \"FIREWARE\", \"IEEE1394\", \"DC1394\", \"CMU1394\": IEEE 1394 drivers. \"QT\": Quicktime. \"UNICAP\": Unicap drivers. \"DSHOW\": DirectShow. \"PVAPI\": PvAPI, Prosilica GigE SDK. \"OPENNI\": OpenNI (Kinect). \"OPENNI_ASUS\": OpenNI (Asus Xtion). \"XIAPI\": XIMEA Camera API. \"AVFOUNDATION\": AVFoundation framework iOS OSX > Lion. \"GIGANETIX\": Smartek Giganetix GigEVisionSDK. \"MSMF\": Microsoft Media Foundation. \"WINRT\": Microsoft Windows Runtime using Media Foundation. \"INTELPERC\": Intel Perceptual Computing SDK. \"OPENNI2\": OpenNI2 (Kinect). \"OPENNI2_ASUS\": OpenNI2 (Asus Xtion Occipital Structure sensors). \"GPHOTO2\": gPhoto2 connection. \"GSTREAMER\": GStreamer. \"FFMPEG\": FFMPEG library. \"IMAGES\": OpenCV Image Sequence. \"ARAVIS\": Aravis SDK. \"OPENCV_MJPEG\": Built-OpenCV MotionJPEG codec. \"INTEL_MFX\": Intel MediaSDK.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/Video-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"An S4 Class Containing an OpenCV Video — Video-class","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/Video-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"An S4 Class Containing an OpenCV Video — Video-class","text":"","code":"balloon <- video(system.file(\"sample_vid/Balloon.mp4\", package = \"Rvision\")) #> Error: Could not open the video."},{"path":"https://swarm-lab.github.io/Rvision/reference/VideoStack-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 Class Containing a Video Stack — VideoStack-class","title":"An S4 Class Containing a Video Stack — VideoStack-class","text":"VideoStack object contains stack  Video objects similar dimensions frame rate.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/VideoStack-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 Class Containing a Video Stack — VideoStack-class","text":".Data list Video objects. nframes vector number frames video stack.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/VideoStack-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"An S4 Class Containing a Video Stack — VideoStack-class","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/VideoWriter-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 Class Containing an OpenCV Video Writer — VideoWriter-class","title":"An S4 Class Containing an OpenCV Video Writer — VideoWriter-class","text":"VideoWriter object contains OpenCV  video writer output file. Function creating VideoWriter objects.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/VideoWriter-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An S4 Class Containing an OpenCV Video Writer — VideoWriter-class","text":"","code":"videoWriter(   outputFile,   fourcc,   fps,   height,   width,   isColor = TRUE,   api = \"ANY\" )"},{"path":"https://swarm-lab.github.io/Rvision/reference/VideoWriter-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"An S4 Class Containing an OpenCV Video Writer — VideoWriter-class","text":"outputFile character string corresponding path output file. fourcc 4-character string corresponding fourcc code codec used. list fourcc codes can obtained archived page fourcc site https://www.fourcc.org/codecs.php. Alternatively, integer value corresponding fourcc code. fps numeric value corresponding framerate output video. height integer value corresponding height video pixels. width integer value corresponding width video pixels. isColor logical indicating whether output video color (default: TRUE) grayscale (FALSE) video. api character string corresponding API use reading video file (see Note; default: \"\").","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/VideoWriter-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"An S4 Class Containing an OpenCV Video Writer — VideoWriter-class","text":"VideoWriter object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/VideoWriter-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 Class Containing an OpenCV Video Writer — VideoWriter-class","text":"dim,ncol,nrow Functions returning dimensions object. codec Function returning codec object. fps Function returning frame rate object. api Function returning api use write frames output file. output Function returning path output file. get,set Functions access set internal properties object. open,isOpened Functions open new video write check status video writer. write Function write frame output file. release Function release object memory.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/VideoWriter-class.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"An S4 Class Containing an OpenCV Video Writer — VideoWriter-class","text":"Hereafter list supported APIs. Note APIs  available computer (actually ). \"\": automatically select API. \"VFW\": Video Windows. \"V4L\", \"V4L2\": Video Linux. \"FIREWIRE\", \"FIREWARE\", \"IEEE1394\", \"DC1394\", \"CMU1394\": IEEE 1394 drivers. \"QT\": Quicktime. \"UNICAP\": Unicap drivers. \"DSHOW\": DirectShow. \"PVAPI\": PvAPI, Prosilica GigE SDK. \"OPENNI\": OpenNI (Kinect). \"OPENNI_ASUS\": OpenNI (Asus Xtion). \"XIAPI\": XIMEA Camera API. \"AVFOUNDATION\": AVFoundation framework iOS OSX > Lion. \"GIGANETIX\": Smartek Giganetix GigEVisionSDK. \"MSMF\": Microsoft Media Foundation. \"WINRT\": Microsoft Windows Runtime using Media Foundation. \"INTELPERC\": Intel Perceptual Computing SDK. \"OPENNI2\": OpenNI2 (Kinect). \"OPENNI2_ASUS\": OpenNI2 (Asus Xtion Occipital Structure sensors). \"GPHOTO2\": gPhoto2 connection. \"GSTREAMER\": GStreamer. \"FFMPEG\": FFMPEG library. \"IMAGES\": OpenCV Image Sequence. \"ARAVIS\": Aravis SDK. \"OPENCV_MJPEG\": Built-OpenCV MotionJPEG codec. \"INTEL_MFX\": Intel MediaSDK.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/VideoWriter-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"An S4 Class Containing an OpenCV Video Writer — VideoWriter-class","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/VideoWriter-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"An S4 Class Containing an OpenCV Video Writer — VideoWriter-class","text":"","code":"if (FALSE) { writer <- videoWriter(\"test.mp4\", \"H264\", 25, 1080, 1920) release(writer) }"},{"path":"https://swarm-lab.github.io/Rvision/reference/adaptiveThreshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Adaptive Thresholding — adaptiveThreshold","title":"Adaptive Thresholding — adaptiveThreshold","text":"adaptiveThreshold transforms grayscale image  binary image using adaptive threshold.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/adaptiveThreshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adaptive Thresholding — adaptiveThreshold","text":"","code":"adaptiveThreshold(   image,   max_value = 255,   method = \"mean\",   threshold_type = \"inverse\",   block_size = 31,   C = 25,   target = \"new\",   in_place = NULL )"},{"path":"https://swarm-lab.github.io/Rvision/reference/adaptiveThreshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adaptive Thresholding — adaptiveThreshold","text":"image 8-bit (8U) single-channel Image object. max_value Non-zero value assigned pixels condition determined `threshold_type` satisfied (default: 255). method name adaptive thresholding algorithm use. can either 'mean' - mean block_size * block_size neighborhood - 'gaussian' - Gaussian weighted sum block_size * block_size neighborhood (default: 'mean'). threshold_type name threshold type use. can either 'binary' 'inverse' (default: 'inverse'). 'binary', pixel replaced `max_value` value adaptive threshold, zero otherwise. 'inverse' pixel replaced zero value adaptive threshold, `max_value` otherwise. block_size Size pixel neighborhood used calculate threshold value pixel (default: 31). must odd number greater 1. C Constant subtracted mean weighted mean. Normally, positive may zero negative well (default: 25). target location results stored. can take 3 values: \"new\":new Image object created results   stored inside (default). \"self\":results stored back image (faster   destructive). Image object:results stored another   existing Image object. fast replace   content image replace target. Note   target dimensions, number channels,   bit depth image, error may thrown. in_place Deprecated. Use target instead.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/adaptiveThreshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adaptive Thresholding — adaptiveThreshold","text":"target=\"new\", function returns Image object. target=\"self\", function returns nothing modifies  image place. target Image object,  function returns nothing modifies Image object  place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/adaptiveThreshold.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Adaptive Thresholding — adaptiveThreshold","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/adaptiveThreshold.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adaptive Thresholding — adaptiveThreshold","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) balloon_gray <- changeColorSpace(balloon, \"GRAY\") balloon_th <- adaptiveThreshold(balloon_gray)"},{"path":"https://swarm-lab.github.io/Rvision/reference/addWeighted.html","id":null,"dir":"Reference","previous_headings":"","what":"Weighted Sum of Two Images — addWeighted","title":"Weighted Sum of Two Images — addWeighted","text":"function computes weighted sum two  Image objects.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/addWeighted.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weighted Sum of Two Images — addWeighted","text":"","code":"addWeighted(e1, e2, weight = c(0.5, 0.5), target = \"new\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/addWeighted.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weighted Sum of Two Images — addWeighted","text":"e1 Image object. e2 Image object. weight 2-element vector respective weight image (default: c(0.5, 0.5)). two weights add 1, rescaled accordingly. target location results stored. can take 3 values: \"new\":new Image object created results   stored inside (default). \"self\":results stored back e1 (faster   destructive). Image object:results stored another   existing Image object. fast replace   content e1 replace target. Note   target dimensions, number channels,   bit depth e1, nothing stored.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/addWeighted.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weighted Sum of Two Images — addWeighted","text":"target=\"new\", function returns Image object. target=\"self\", function returns nothing modifies  e1 place. target Image object,  function returns nothing modifies Image object  place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/addWeighted.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Weighted Sum of Two Images — addWeighted","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/addWeighted.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weighted Sum of Two Images — addWeighted","text":"","code":"balloon1 <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) balloon2 <- image(system.file(\"sample_img/balloon2.png\", package = \"Rvision\")) balloon_weighted <- addWeighted(balloon1, balloon2)"},{"path":"https://swarm-lab.github.io/Rvision/reference/anisotropicDiffusion.html","id":null,"dir":"Reference","previous_headings":"","what":"Anisotropic Diffusion — anisotropicDiffusion","title":"Anisotropic Diffusion — anisotropicDiffusion","text":"anisotropicDiffusion Perona-Malik anisotropic diffusion  Image object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/anisotropicDiffusion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anisotropic Diffusion — anisotropicDiffusion","text":"","code":"anisotropicDiffusion(image, alpha = 0.1, K = 1, n_iters = 1, target = \"new\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/anisotropicDiffusion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Anisotropic Diffusion — anisotropicDiffusion","text":"image 8-bit (8U) 3-channel Image object. alpha amount time step forward iteration (normally, 0 1; default: 0.1). K Sensitivity edges (default: 1). n_iters number diffusion iterations. target location results stored. can take 3 values: \"new\":new Image object created results   stored inside (default). \"self\":results stored back image (faster   destructive). Image object:results stored another   existing Image object. fast replace   content image replace target. Note   target dimensions, number channels,   bit depth image, error may thrown.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/anisotropicDiffusion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anisotropic Diffusion — anisotropicDiffusion","text":"target=\"new\", function returns Image object. target=\"self\", function returns nothing modifies  image place. target Image object,  function returns nothing modifies Image object  place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/anisotropicDiffusion.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Anisotropic Diffusion — anisotropicDiffusion","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/anisotropicDiffusion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anisotropic Diffusion — anisotropicDiffusion","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) balloon_smooth <- anisotropicDiffusion(balloon)"},{"path":"https://swarm-lab.github.io/Rvision/reference/api.html","id":null,"dir":"Reference","previous_headings":"","what":"API of a Video Writer — api","title":"API of a Video Writer — api","text":"Retrieve API VideoWriter object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"API of a Video Writer — api","text":"","code":"api(x)"},{"path":"https://swarm-lab.github.io/Rvision/reference/api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"API of a Video Writer — api","text":"x VideoWriter object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"API of a Video Writer — api","text":"character string corresponding API used  VideoWriter object write video.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/api.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"API of a Video Writer — api","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/api.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"API of a Video Writer — api","text":"","code":"if (FALSE) { writer <- videoWriter(\"test.mp4\", \"H264\", 25, 1080, 1920) api(writer) release(writer) }"},{"path":"https://swarm-lab.github.io/Rvision/reference/approxPolyDP.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate a Contour Perimeter or a Curve Length — approxPolyDP","title":"Calculate a Contour Perimeter or a Curve Length — approxPolyDP","text":"approxPolyDP approximates curve polygon  another curve/polygon less vertices distance  less equal specified precision. uses Douglas-Peucker  algorithm.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/approxPolyDP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate a Contour Perimeter or a Curve Length — approxPolyDP","text":"","code":"approxPolyDP(curve, epsilon, closed = TRUE)"},{"path":"https://swarm-lab.github.io/Rvision/reference/approxPolyDP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate a Contour Perimeter or a Curve Length — approxPolyDP","text":"curve m x 2 matrix 2D coordinates. epsilon numeric specifying approximation accuracy. maximum distance original curve approximation. closed logical indicating whether curve closed (perimeter) (default: TRUE).","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/approxPolyDP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate a Contour Perimeter or a Curve Length — approxPolyDP","text":"matrix two columns:  \"x\": x coordinates approximated curve. \"y\": y coordinates approximated curve.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/approxPolyDP.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate a Contour Perimeter or a Curve Length — approxPolyDP","text":"Douglas, D. H., & Peucker, T. K. (1973). ALGORITHMS  REDUCTION NUMBER POINTS REQUIRED REPRESENT DIGITIZED LINE  CARICATURE. Cartographica: International Journal Geographic  Information Geovisualization, 10(2), 112–122.  doi:10.3138/FM57-6770-U75U-7727","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/approxPolyDP.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate a Contour Perimeter or a Curve Length — approxPolyDP","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/approxPolyDP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate a Contour Perimeter or a Curve Length — approxPolyDP","text":"","code":"dots <- image(system.file(\"sample_img/dots.jpg\", package = \"Rvision\")) dots_gray <- changeColorSpace(dots, \"GRAY\") dots_bin <- dots_gray < 200 contours <- findContours(dots_bin) ix <- contours$contours[, 1] == 0 approxPolyDP(contours$contours[ix, 2:3], 10) #>        x   y #> [1,] 532  97 #> [2,] 510  63 #> [3,] 518  24 #> [4,] 543   1 #> [5,] 593   2 #> [6,] 615  33 #> [7,] 608  77 #> [8,] 575 103"},{"path":"https://swarm-lab.github.io/Rvision/reference/arcLength.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate a Contour Perimeter or a Curve Length — arcLength","title":"Calculate a Contour Perimeter or a Curve Length — arcLength","text":"arcLength estimates closed contour perimeter curve  length set 2D coordinates.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/arcLength.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate a Contour Perimeter or a Curve Length — arcLength","text":"","code":"arcLength(curve, closed = TRUE)"},{"path":"https://swarm-lab.github.io/Rvision/reference/arcLength.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate a Contour Perimeter or a Curve Length — arcLength","text":"curve m x 2 matrix 2D coordinates. closed boolean indicating whether curve closed (perimeter) (default: TRUE).","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/arcLength.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate a Contour Perimeter or a Curve Length — arcLength","text":"numerical value.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/arcLength.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate a Contour Perimeter or a Curve Length — arcLength","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/arcLength.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate a Contour Perimeter or a Curve Length — arcLength","text":"","code":"dots <- image(system.file(\"sample_img/dots.jpg\", package = \"Rvision\")) dots_gray <- changeColorSpace(dots, \"GRAY\") dots_bin <- dots_gray < 200 contours <- findContours(dots_bin) ix <- contours$contours[, 1] == 0 arcLength(contours$contours[ix, 2:3]) #> [1] 352.6346"},{"path":"https://swarm-lab.github.io/Rvision/reference/as.array.Rcpp_Image.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Image to Array or Matrix — as.array.Rcpp_Image","title":"Convert Image to Array or Matrix — as.array.Rcpp_Image","text":"Attempts turn argument matrix array.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/as.array.Rcpp_Image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Image to Array or Matrix — as.array.Rcpp_Image","text":"","code":"# S3 method for Rcpp_Image as.array(x, ...)"},{"path":"https://swarm-lab.github.io/Rvision/reference/as.array.Rcpp_Image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Image to Array or Matrix — as.array.Rcpp_Image","text":"x Image object. ... Ignored.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/as.array.Rcpp_Image.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Image to Array or Matrix — as.array.Rcpp_Image","text":"matrix array dimensions Image object.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/as.array.Rcpp_Image.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert Image to Array or Matrix — as.array.Rcpp_Image","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/as.array.Rcpp_Image.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Image to Array or Matrix — as.array.Rcpp_Image","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) balloon_mat <- as.matrix(balloon)"},{"path":"https://swarm-lab.github.io/Rvision/reference/autothreshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Automated Thresholding — autothreshold","title":"Automated Thresholding — autothreshold","text":"autothreshold computes threshold binarizing  image using automated method.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/autothreshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automated Thresholding — autothreshold","text":"","code":"autothreshold(image, method = \"ImageJ\", mask = NULL)"},{"path":"https://swarm-lab.github.io/Rvision/reference/autothreshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automated Thresholding — autothreshold","text":"image 8-bit (8U) 32-bit floating (32F) Image object. method name automated thresholding algorithm use. can  following: \"none\":user-defined `threshold` value used (default). \"ImageJ\":default auto thresholding algorithm ImageJ. \"Huang\":Huang’s fuzzy thresholding method. \"Huang2\":alternative implementation Huang’s method J. Schindelin. \"Intermodes\":assuming bimodal histogram, threshold    halfway point two modes. \"IsoData\":iterative procedure based isodata algorithm    Ridler Calvar. \"Li\":Li’s Minimum Cross Entropy thresholding method based    iterative version algorithm. \"MaxEntropy\":Kapur-Sahoo-Wong (Maximum Entropy) thresholding method. \"Mean\":mean grey levels image used threshold. \"MinErrorI\":iterative implementation Kittler Illingworth’s    Minimum Error thresholding. \"Minimum\":similar Intermodes method threshold    minimum value two modes iterative smoothing. \"Moments\":Tsai’s moment-preserving thresolding method. \"Otsu\":Otsu’s threshold clustering method. \"Percentile\":assumes fraction foreground pixels 0.5. \"RenyiEntropy\":similar MaxEntropy method, using Renyi’s    entropy instead. \"Shanbhag\":Shanbhag's information-based thresolding method. \"Triangle\":triangle thresholding method Zack, Rogers, Latt. \"Yen\":Yen’s thresholding method. Details functioning method can found  https://imagej.net/plugins/auto-threshold. mask single-channel (GRAY) 8-bit (8U) Image object dimensions image. can used mask pixels considered calculating threshold (pixels set 0 mask ignored threshold calculation).","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/autothreshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Automated Thresholding — autothreshold","text":"numerical value.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/autothreshold.html","id":"acknowledgements","dir":"Reference","previous_headings":"","what":"Acknowledgements","title":"Automated Thresholding — autothreshold","text":"Gabriel Landini coded functions   Java. java functions translated C++ Rory Nolan.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/autothreshold.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Automated Thresholding — autothreshold","text":"Huang, L-K & Wang, M-J J (1995), \"Image   thresholding minimizing measure fuzziness\", Pattern Recognition   28(1): 41-51 Prewitt, JMS & Mendelsohn, ML (1966), \"analysis   cell images\", Annals New York Academy Sciences 128: 1035-1053 Ridler, TW & Calvard, S (1978), \"Picture thresholding using   iterative selection method\", IEEE Transactions Systems, Man   Cybernetics 8: 630-632 Li, CH & Lee, CK (1993), \"Minimum Cross   Entropy Thresholding\", Pattern Recognition 26(4): 617-625 Li, CH &   Tam, PKS (1998), \"Iterative Algorithm Minimum Cross Entropy   Thresholding\", Pattern Recognition Letters 18(8): 771-776 Sezgin, M   & Sankur, B (2004), \"Survey Image Thresholding Techniques   Quantitative Performance Evaluation\", Journal Electronic Imaging 13(1):   146-165 Kapur, JN; Sahoo, PK & Wong, ACK (1985), \"New Method   Gray-Level Picture Thresholding Using Entropy Histogram\",   Graphical Models Image Processing 29(3): 273-285 Glasbey, CA   (1993), \"analysis histogram-based thresholding algorithms\", CVGIP:   Graphical Models Image Processing 55: 532-537 Kittler, J &   Illingworth, J (1986), \"Minimum error thresholding\", Pattern Recognition   19: 41-47 Prewitt, JMS & Mendelsohn, ML (1966), \"analysis   cell images\", Annals New York Academy Sciences 128: 1035-1053 Tsai, W (1985), \"Moment-preserving thresholding: new approach\",   Computer Vision, Graphics, Image Processing 29: 377-393 Otsu, N   (1979), \"threshold selection method gray-level histograms\", IEEE   Trans. Sys., Man., Cyber. 9: 62-66, doi:10.1109/TSMC.1979.4310076 Doyle, W (1962), \"Operation useful similarity-invariant pattern   recognition\", Journal Association Computing Machinery 9:   259-267, doi:10.1145/321119.321123 Kapur, JN; Sahoo, PK & Wong, ACK   (1985), \"New Method Gray-Level Picture Thresholding Using Entropy   Histogram\", Graphical Models Image Processing 29(3): 273-285 Shanbhag, Abhijit G. (1994), \"Utilization information measure   means image thresholding\", Graph. Models Image Process. (Academic Press,   Inc.) 56 (5): 414--419, ISSN 1049-9652 Zack GW, Rogers , Latt SA   (1977), \"Automatic measurement sister chromatid exchange frequency\", J.   Histochem. Cytochem. 25 (7): 74153, PMID 70454 Yen JC, Chang FJ,   Chang S (1995), \"New Criterion Automatic Multilevel Thresholding\",   IEEE Trans. Image Processing 4 (3): 370-378, ISSN 1057-7149,   doi:10.1109/83.366472 Sezgin, M & Sankur, B (2004), \"Survey   Image Thresholding Techniques Quantitative Performance Evaluation\",   Journal Electronic Imaging 13(1): 146-165","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/autothreshold.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Automated Thresholding — autothreshold","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/autothreshold.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Automated Thresholding — autothreshold","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) balloon_gray <- changeColorSpace(balloon, \"GRAY\") th <- autothreshold(balloon_gray)"},{"path":"https://swarm-lab.github.io/Rvision/reference/bilateralFilter.html","id":null,"dir":"Reference","previous_headings":"","what":"Edge-Preserving Noise Reduction with a Bilateral Filter — bilateralFilter","title":"Edge-Preserving Noise Reduction with a Bilateral Filter — bilateralFilter","text":"bilateralFilter applies bilateral filter image.  filter can reduce unwanted noise well keeping edges fairly  sharp. However, slow compared filters.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/bilateralFilter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Edge-Preserving Noise Reduction with a Bilateral Filter — bilateralFilter","text":"","code":"bilateralFilter(   image,   d = 5,   sigma_color = 25,   sigma_space = 25,   target = \"new\" )"},{"path":"https://swarm-lab.github.io/Rvision/reference/bilateralFilter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Edge-Preserving Noise Reduction with a Bilateral Filter — bilateralFilter","text":"image Image object. d diameter pixels filter neighborhood (default: 5). sigma_color filter standard deviation color space (see Note; default: 25). sigma_space filter standard deviation coordinate space (see Note; default: 25). target location results stored. can take 3 values: \"new\":new Image object created results   stored inside (default). Image object:results stored another   existing Image object. fast replace   content image replace target. Note   target dimensions, number channels,   bit depth image, error may thrown.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/bilateralFilter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Edge-Preserving Noise Reduction with a Bilateral Filter — bilateralFilter","text":"target=\"new\", function returns Image object. target Image object, function  returns nothing modifies Image object place.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/bilateralFilter.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Edge-Preserving Noise Reduction with a Bilateral Filter — bilateralFilter","text":"larger value sigma_color means farther colors within  pixel neighborhood mixed together, resulting larger areas  semi-equal color. larger value sigma_space means farther pixels  influence long colors close enough.  d > 0, specifies neighborhood size regardless  sigma_space. Otherwise, d proportional sigma_space.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/bilateralFilter.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Edge-Preserving Noise Reduction with a Bilateral Filter — bilateralFilter","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/bilateralFilter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Edge-Preserving Noise Reduction with a Bilateral Filter — bilateralFilter","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) rnd <- image(array(sample(0:30, nrow(balloon) * ncol(balloon), replace = TRUE),                    dim = c(nrow(balloon), ncol(balloon), 3))) changeBitDepth(rnd, \"8U\", target = \"self\") balloon_noisy <- balloon + rnd balloon_bilateral <- bilateralFilter(balloon_noisy, 25)"},{"path":"https://swarm-lab.github.io/Rvision/reference/bitdepth.html","id":null,"dir":"Reference","previous_headings":"","what":"The Bit Depth of an Image — bitdepth","title":"The Bit Depth of an Image — bitdepth","text":"function returns bit depth Image  object, number bits information used encode  channel pixel image.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/bitdepth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Bit Depth of an Image — bitdepth","text":"","code":"bitdepth(x)"},{"path":"https://swarm-lab.github.io/Rvision/reference/bitdepth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Bit Depth of an Image — bitdepth","text":"x Image object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/bitdepth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Bit Depth of an Image — bitdepth","text":"character string indicating bit depth image. now,  can one following:  8U: image bit depth 8 unsigned bits. 16U: image bit depth 16 unsigned bits.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/bitdepth.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The Bit Depth of an Image — bitdepth","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/bitdepth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Bit Depth of an Image — bitdepth","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) bitdepth(balloon) #> [1] \"8U\""},{"path":"https://swarm-lab.github.io/Rvision/reference/blur.html","id":null,"dir":"Reference","previous_headings":"","what":"Blurs an Image Using a Normalized Box Filter — blur","title":"Blurs an Image Using a Normalized Box Filter — blur","text":"blur convolves source image specified  normalized box kernel (matrix 1s divided number pixels  kernel). result blurred version source image.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/blur.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Blurs an Image Using a Normalized Box Filter — blur","text":"","code":"blur(image, k_height = 5, k_width = 5, target = \"new\", in_place = NULL)"},{"path":"https://swarm-lab.github.io/Rvision/reference/blur.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Blurs an Image Using a Normalized Box Filter — blur","text":"image Image object. k_height half-height pixels kernel (default: 5). k_width half-width pixels kernel (default: 5). target location results stored. can take 3 values: \"new\":new Image object created results   stored inside (default). \"self\":results stored back image (faster   destructive). Image object:results stored another   existing Image object. fast replace   content image replace target. Note   target dimensions, number channels,   bit depth image, error may thrown. in_place Deprecated. Use target instead.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/blur.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Blurs an Image Using a Normalized Box Filter — blur","text":"target=\"new\", function returns Image object. target=\"self\", function returns nothing modifies  image place. target Image object,  function returns nothing modifies Image object  place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/blur.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Blurs an Image Using a Normalized Box Filter — blur","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/blur.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Blurs an Image Using a Normalized Box Filter — blur","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) balloon_blur <- blur(balloon, 11, 11)"},{"path":"https://swarm-lab.github.io/Rvision/reference/border.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Border to Image — border","title":"Add Border to Image — border","text":"border adds border image.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/border.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Border to Image — border","text":"","code":"border(   image,   top,   bottom = top,   left = top,   right = top,   border_type = \"constant\",   border_color = \"black\",   target = \"new\" )"},{"path":"https://swarm-lab.github.io/Rvision/reference/border.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Border to Image — border","text":"image Image object. top, bottom, left, right width pixels border side image. default, bottom, left right set value top. border_type character string indicating extrapolation method use filling empty pixels created transformation. can following: \"constant\" (default):iiiiii|abcdefgh|iiiiii   specified border_value. \"replicate\":aaaaaa|abcdefgh|hhhhhh. \"reflect\":fedcba|abcdefgh|hgfedc. \"wrap\":cdefgh|abcdefgh|abcdef. \"reflect_101\":gfedcb|abcdefgh|gfedcb. \"transparent\":uvwxyz|abcdefgh|ijklmn. border_color value vector kind R color specification compatible col2bgr representing color border (default: \"black\"). target location results stored. can take 3 values: \"new\":new Image object created results   stored inside (default). \"self\":results stored back image (faster   destructive). image resized accordingly. Image object:results stored another   existing Image object. fast replace   content image replace target. Note   target number channels bit depth   image, error thrown. target   appropriate dimensions, resized accordingly.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/border.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Border to Image — border","text":"target=\"new\", function returns Image object. target=\"self\", function returns nothing modifies  image place. target Image object,  function returns nothing modifies Image object  place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/border.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add Border to Image — border","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/border.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Border to Image — border","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) balloon_border <- border(balloon, 10)"},{"path":"https://swarm-lab.github.io/Rvision/reference/boxFilter.html","id":null,"dir":"Reference","previous_headings":"","what":"Blurs an Image Using a Box Filter — boxFilter","title":"Blurs an Image Using a Box Filter — boxFilter","text":"boxFilter convolves source image  specified box kernel (matrix 1s). result blurred version  source image.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/boxFilter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Blurs an Image Using a Box Filter — boxFilter","text":"","code":"boxFilter(image, k_height = 5, k_width = 5, target = \"new\", in_place = NULL)"},{"path":"https://swarm-lab.github.io/Rvision/reference/boxFilter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Blurs an Image Using a Box Filter — boxFilter","text":"image Image object. k_height half-height pixels kernel (default: 5). k_width half-width pixels kernel (default: 5). target location results stored. can take 3 values: \"new\":new Image object created results   stored inside (default). \"self\":results stored back image (faster   destructive). Image object:results stored another   existing Image object. fast replace   content image replace target. Note   target dimensions, number channels,   bit depth image, error may thrown. in_place Deprecated. Use target instead.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/boxFilter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Blurs an Image Using a Box Filter — boxFilter","text":"target=\"new\", function returns Image object. target=\"self\", function returns nothing modifies  image place. target Image object,  function returns nothing modifies Image object  place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/boxFilter.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Blurs an Image Using a Box Filter — boxFilter","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/boxFilter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Blurs an Image Using a Box Filter — boxFilter","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) balloon_blur <- boxFilter(balloon, 11, 11)"},{"path":"https://swarm-lab.github.io/Rvision/reference/boxPoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Vertices of a Rotated Rectangle — boxPoints","title":"Find Vertices of a Rotated Rectangle — boxPoints","text":"boxPoints finds four vertices rotated rectangle  computed minAreaRect fitEllipse.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/boxPoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Vertices of a Rotated Rectangle — boxPoints","text":"","code":"boxPoints(rect)"},{"path":"https://swarm-lab.github.io/Rvision/reference/boxPoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Vertices of a Rotated Rectangle — boxPoints","text":"rect list describing rotated rectangle created minAreaRect fitEllipse.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/boxPoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Vertices of a Rotated Rectangle — boxPoints","text":"matrix containing coordinates four vertices  rotated rectangle following order: bottom left, top left, top right,  bottom right.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/boxPoints.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Find Vertices of a Rotated Rectangle — boxPoints","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/boxPoints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find Vertices of a Rotated Rectangle — boxPoints","text":"","code":"rect <- minAreaRect(rnorm(100), rnorm(100)) boxPoints(rect) #>               x          y #> [1,] -3.6557298 -0.0183014 #> [2,] -0.8363885  3.6563187 #> [3,]  3.4933404  0.3343472 #> [4,]  0.6739991 -3.3402730"},{"path":"https://swarm-lab.github.io/Rvision/reference/calibrateCamera.html","id":null,"dir":"Reference","previous_headings":"","what":"Find a Camera's Intrinsic and Extrinsic Parameters — calibrateCamera","title":"Find a Camera's Intrinsic and Extrinsic Parameters — calibrateCamera","text":"calibrateCamera finds camera's intrinsic extrinsic  parameters several views calibration pattern.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/calibrateCamera.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find a Camera's Intrinsic and Extrinsic Parameters — calibrateCamera","text":"","code":"calibrateCamera(   ref_points,   img_points,   nrow,   ncol,   fixed_point = 1,   maxit = 30,   eps = .Machine$double.eps )"},{"path":"https://swarm-lab.github.io/Rvision/reference/calibrateCamera.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find a Camera's Intrinsic and Extrinsic Parameters — calibrateCamera","text":"ref_points List matrices calibration pattern points view, calibration pattern coordinate space. matrix dimensions corresponding matrix img_points. img_points List matrices projections calibration pattern points view. fixed_point > 0, calibration pattern must used view must fully visible. Moreover, matrices must dimensions points calibration pattern roughly close plane. calibration target rigid, least static camera (rather calibration target) shifted grabbing views. See findChessboardCorners cornerSubPix information generating projection matrices images calibration pattern. nrow, ncol number rows columns images used capture different views calibration pattern. fixed_point index reference point ref_points[[1]] fixed (default: 1). Usually top-right corner point calibration pattern recommended fixed. fixed_point = 0, point fixed less precise calibration algorithm used. maxit maximum number iterations detection algorithm (default: 30). eps desired accuracy change parameters iterative algorithm stops (default: .Machine$double.eps).","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/calibrateCamera.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find a Camera's Intrinsic and Extrinsic Parameters — calibrateCamera","text":"list matrices:  camera_matrix:3x3 camera intrinsic matrix. dist_coeffs:single row matrix 4, 5, 8, 12 14    elements representing distortion coefficients. r_vecs:3xlength(img_points) matrix rotation    vectors estimated calibration pattern view. Together    translation vectors , equivalent position    calibration pattern respect camera coordinate space. t_vecs:3xlength(img_points) matrix    translation vectors estimated calibration pattern view. Together    rotation vectors , equivalent position    calibration pattern respect camera coordinate space. new_ref_points:fixed_point > 0, updated    matrix calibration pattern points. coordinates might scaled    based fixed point defined . returned coordinates    accurate mentioned fixed point accurate.    fixed_point = 0, empty matrix returned instead.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/calibrateCamera.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Find a Camera's Intrinsic and Extrinsic Parameters — calibrateCamera","text":"Bouguet, J.-Y. (2022). Camera Calibration Toolbox Matlab.  CaltechDATA. https://doi.org/10.22002/D1.20164 Strobl, K. H., & Hirzinger, G. (2011, November). accurate pinhole  camera calibration imperfect planar target. 2011 IEEE International  Conference Computer Vision Workshops (ICCV Workshops). 2011 IEEE  International Conference Computer Vision Workshops (ICCV Workshops),  Barcelona, Spain. https://doi.org/10.1109/iccvw.2011.6130369 Zhang, Z. (2000). flexible new technique camera calibration. IEEE  Transactions Pattern Analysis Machine Intelligence, 22(11), 1330–1334.  https://doi.org/10.1109/34.888718","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/calibrateCamera.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Find a Camera's Intrinsic and Extrinsic Parameters — calibrateCamera","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/calibrateCamera.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find a Camera's Intrinsic and Extrinsic Parameters — calibrateCamera","text":"","code":"# See the help vignette: if (FALSE)  vignette(\"z8_calib\", package = \"Rvision\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/canny.html","id":null,"dir":"Reference","previous_headings":"","what":"Canny Edge Detector — canny","title":"Canny Edge Detector — canny","text":"canny finds edges image using Canny algorithm.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/canny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Canny Edge Detector — canny","text":"","code":"canny(   image,   threshold1,   threshold2,   aperture_size = 3,   L2_gradient = FALSE,   target = \"new\" )"},{"path":"https://swarm-lab.github.io/Rvision/reference/canny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Canny Edge Detector — canny","text":"image Image object. threshold1 numeric indicating first threshold hysteresis procedure threshold2 numeric indicating second threshold hysteresis procedure aperture_size Aperture size Sobel operator (default: 3). L2_gradient logical flag, indicating whether accurate L2 norm used calculate image gradient magnitude, whether default L1 norm enough (default: FALSE). target location results stored. can take 3 values: \"new\":new Image object created results   stored inside (default). Image object:results stored another   existing Image object. Note target   8-bit (\"8U\") single-channel image dimensions image,   otherwise error thrown.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/canny.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Canny Edge Detector — canny","text":"target=\"new\", function returns Image object. target Image object, function  returns nothing modifies Image object place.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/canny.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Canny Edge Detector — canny","text":"Canny J. computational approach edge detection. IEEE Trans  Pattern Anal Mach Intell. 1986;8: 679–698. doi:10.1109/TPAMI.1986.4767851","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/canny.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Canny Edge Detector — canny","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/canny.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Canny Edge Detector — canny","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) balloon_canny <- canny(balloon, 50, 50)"},{"path":"https://swarm-lab.github.io/Rvision/reference/capacity.html","id":null,"dir":"Reference","previous_headings":"","what":"Capacity of a Queue — capacity","title":"Capacity of a Queue — capacity","text":"capacity returns maximum number elements  Queue object can contain.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/capacity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Capacity of a Queue — capacity","text":"","code":"capacity(x)"},{"path":"https://swarm-lab.github.io/Rvision/reference/capacity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Capacity of a Queue — capacity","text":"x Queue object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/capacity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Capacity of a Queue — capacity","text":"numeric value.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/capacity.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Capacity of a Queue — capacity","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/capacity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Capacity of a Queue — capacity","text":"","code":"balloon <- video(system.file(\"sample_vid/Balloon.mp4\", package = \"Rvision\")) #> Error: Could not open the video. buf <- queue(balloon) #> Error in eval(expr, envir, enclos): object 'balloon' not found capacity(buf) #> Error in eval(expr, envir, enclos): object 'buf' not found"},{"path":"https://swarm-lab.github.io/Rvision/reference/cartToPolar.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Cartesian Coordinates to Polar — cartToPolar","title":"Convert Cartesian Coordinates to Polar — cartToPolar","text":"cartToPolar converts x y coordinates vector  field (instance, generated spatialGradient)  computes polar representation (magnitude angle).","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/cartToPolar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Cartesian Coordinates to Polar — cartToPolar","text":"","code":"cartToPolar(x, y, magnitude = \"new\", angle = \"new\", degree = FALSE)"},{"path":"https://swarm-lab.github.io/Rvision/reference/cartToPolar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Cartesian Coordinates to Polar — cartToPolar","text":"x 32- 64-bit (32F 64F) Image object corresponding x coordinates vector field. y 32- 64-bit (32F 64F) Image object corresponding y coordinates vector field. magnitude location magnitude stored. can take 2 values: \"new\":new Image object created results   stored inside (default). Image object:results stored another   existing Image object. Note error thrown   magnitude dimensions, number channels,   bit depth x y. angle location angle stored. can take 2 values: \"new\":new Image object created results   stored inside (default). Image object:results stored another   existing Image object. Note error thrown   angle dimensions, number channels,   bit depth x y. degree logical indicating whether angles measured radians (default) degrees.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/cartToPolar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Cartesian Coordinates to Polar — cartToPolar","text":"magnitude=\"new\" angle=\"new\", function returns  list containing two Image objects. magnitude  angle Image objects, function returns nothing  modifies Image objects place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/cartToPolar.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert Cartesian Coordinates to Polar — cartToPolar","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/cartToPolar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Cartesian Coordinates to Polar — cartToPolar","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) field <- spatialGradient(balloon) lapply(field, changeBitDepth, bitdepth = \"32F\", target = \"self\") #> $dx #> NULL #>  #> $dy #> NULL #>  field_converted <- cartToPolar(field$dx, field$dy)"},{"path":"https://swarm-lab.github.io/Rvision/reference/cc_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Table of Color Space Conversions — cc_table","title":"Table of Color Space Conversions — cc_table","text":"data frame containing possible color space conversions  can done changeColorSpace.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/cc_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Table of Color Space Conversions — cc_table","text":"","code":"data(cc_table)"},{"path":"https://swarm-lab.github.io/Rvision/reference/cc_table.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Table of Color Space Conversions — cc_table","text":"object class \"data.frame\".","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/cc_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Table of Color Space Conversions — cc_table","text":"","code":"data(cc_table) cc_table #>         From        To #> 1        BGR      BGRA #> 2        RGB      RGBA #> 3       BGRA       BGR #> 4       RGBA       RGB #> 5        BGR      RGBA #> 6        RGB      BGRA #> 7       RGBA       BGR #> 8       BGRA       RGB #> 9        BGR       RGB #> 10       RGB       BGR #> 11      BGRA      RGBA #> 12      RGBA      BGRA #> 13       BGR      GRAY #> 14       RGB      GRAY #> 15      GRAY       BGR #> 16      GRAY       RGB #> 17      GRAY      BGRA #> 18      GRAY      RGBA #> 19      BGRA      GRAY #> 20      RGBA      GRAY #> 21       BGR    BGR565 #> 22       RGB    BGR565 #> 23    BGR565       BGR #> 24    BGR565       RGB #> 25      BGRA    BGR565 #> 26      RGBA    BGR565 #> 27    BGR565      BGRA #> 28    BGR565      RGBA #> 29      GRAY    BGR565 #> 30    BGR565      GRAY #> 31       BGR    BGR555 #> 32       RGB    BGR555 #> 33    BGR555       BGR #> 34    BGR555       RGB #> 35      BGRA    BGR555 #> 36      RGBA    BGR555 #> 37    BGR555      BGRA #> 38    BGR555      RGBA #> 39      GRAY    BGR555 #> 40    BGR555      GRAY #> 41       BGR       XYZ #> 42       RGB       XYZ #> 43       XYZ       BGR #> 44       XYZ       RGB #> 45       BGR     YCrCb #> 46       RGB     YCrCb #> 47     YCrCb       BGR #> 48     YCrCb       RGB #> 49       BGR       HSV #> 50       RGB       HSV #> 51       BGR       Lab #> 52       RGB       Lab #> 53       BGR       Luv #> 54       RGB       Luv #> 55       BGR       HLS #> 56       RGB       HLS #> 57       HSV       BGR #> 58       HSV       RGB #> 59       Lab       BGR #> 60       Lab       RGB #> 61       Luv       BGR #> 62       Luv       RGB #> 63       HLS       BGR #> 64       HLS       RGB #> 65       BGR  HSV_FULL #> 66       RGB  HSV_FULL #> 67       BGR  HLS_FULL #> 68       RGB  HLS_FULL #> 69       HSV  BGR_FULL #> 70       HSV  RGB_FULL #> 71       HLS  BGR_FULL #> 72       HLS  RGB_FULL #> 73      LBGR       Lab #> 74      LRGB       Lab #> 75      LBGR       Luv #> 76      LRGB       Luv #> 77       Lab      LBGR #> 78       Lab      LRGB #> 79       Luv      LBGR #> 80       Luv      LRGB #> 81       BGR       YUV #> 82       RGB       YUV #> 83       YUV       BGR #> 84       YUV       RGB #> 85       YUV  RGB_NV12 #> 86       YUV  BGR_NV12 #> 87       YUV  RGB_NV21 #> 88       YUV  BGR_NV21 #> 89  YUV420sp       RGB #> 90  YUV420sp       BGR #> 91       YUV RGBA_NV12 #> 92       YUV BGRA_NV12 #> 93       YUV RGBA_NV21 #> 94       YUV BGRA_NV21 #> 95  YUV420sp      RGBA #> 96  YUV420sp      BGRA #> 97       YUV  RGB_YV12 #> 98       YUV  BGR_YV12 #> 99       YUV  RGB_IYUV #> 100      YUV  BGR_IYUV #> 101      YUV  RGB_I420 #> 102      YUV  BGR_I420 #> 103  YUV420p       RGB #> 104  YUV420p       BGR #> 105      YUV RGBA_YV12 #> 106      YUV BGRA_YV12 #> 107      YUV RGBA_IYUV #> 108      YUV BGRA_IYUV #> 109      YUV RGBA_I420 #> 110      YUV BGRA_I420 #> 111  YUV420p      RGBA #> 112  YUV420p      BGRA #> 113      YUV  GRAY_420 #> 114      YUV GRAY_NV21 #> 115      YUV GRAY_NV12 #> 116      YUV GRAY_YV12 #> 117      YUV GRAY_IYUV #> 118      YUV GRAY_I420 #> 119 YUV420sp      GRAY #> 120  YUV420p      GRAY #> 121      YUV  RGB_UYVY #> 122      YUV  BGR_UYVY #> 123      YUV  RGB_Y422 #> 124      YUV  BGR_Y422 #> 125      YUV  RGB_UYNV #> 126      YUV  BGR_UYNV #> 127      YUV RGBA_UYVY #> 128      YUV BGRA_UYVY #> 129      YUV RGBA_Y422 #> 130      YUV BGRA_Y422 #> 131      YUV RGBA_UYNV #> 132      YUV BGRA_UYNV #> 133      YUV  RGB_YUY2 #> 134      YUV  BGR_YUY2 #> 135      YUV  RGB_YVYU #> 136      YUV  BGR_YVYU #> 137      YUV  RGB_YUYV #> 138      YUV  BGR_YUYV #> 139      YUV  RGB_YUNV #> 140      YUV  BGR_YUNV #> 141      YUV RGBA_YUY2 #> 142      YUV BGRA_YUY2 #> 143      YUV RGBA_YVYU #> 144      YUV BGRA_YVYU #> 145      YUV RGBA_YUYV #> 146      YUV BGRA_YUYV #> 147      YUV RGBA_YUNV #> 148      YUV BGRA_YUNV #> 149      YUV GRAY_UYVY #> 150      YUV GRAY_YUY2 #> 151      YUV GRAY_Y422 #> 152      YUV GRAY_UYNV #> 153      YUV GRAY_YVYU #> 154      YUV GRAY_YUYV #> 155      YUV GRAY_YUNV #> 156     RGBA     mRGBA #> 157    mRGBA      RGBA #> 158      RGB  YUV_I420 #> 159      BGR  YUV_I420 #> 160      RGB  YUV_IYUV #> 161      BGR  YUV_IYUV #> 162     RGBA  YUV_I420 #> 163     BGRA  YUV_I420 #> 164     RGBA  YUV_IYUV #> 165     BGRA  YUV_IYUV #> 166      RGB  YUV_YV12 #> 167      BGR  YUV_YV12 #> 168     RGBA  YUV_YV12 #> 169     BGRA  YUV_YV12 #> 170  BayerBG       BGR #> 171  BayerGB       BGR #> 172  BayerRG       BGR #> 173  BayerGR       BGR #> 174  BayerBG       RGB #> 175  BayerGB       RGB #> 176  BayerRG       RGB #> 177  BayerGR       RGB #> 178  BayerBG      GRAY #> 179  BayerGB      GRAY #> 180  BayerRG      GRAY #> 181  BayerGR      GRAY #> 182  BayerBG   BGR_VNG #> 183  BayerGB   BGR_VNG #> 184  BayerRG   BGR_VNG #> 185  BayerGR   BGR_VNG #> 186  BayerBG   RGB_VNG #> 187  BayerGB   RGB_VNG #> 188  BayerRG   RGB_VNG #> 189  BayerGR   RGB_VNG #> 190  BayerBG    BGR_EA #> 191  BayerGB    BGR_EA #> 192  BayerRG    BGR_EA #> 193  BayerGR    BGR_EA #> 194  BayerBG    RGB_EA #> 195  BayerGB    RGB_EA #> 196  BayerRG    RGB_EA #> 197  BayerGR    RGB_EA #> 198  BayerBG      BGRA #> 199  BayerGB      BGRA #> 200  BayerRG      BGRA #> 201  BayerGR      BGRA #> 202  BayerBG      RGBA #> 203  BayerGB      RGBA #> 204  BayerRG      RGBA #> 205  BayerGR      RGBA"},{"path":"https://swarm-lab.github.io/Rvision/reference/changeBitDepth.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Image to New Bit Depth — changeBitDepth","title":"Convert Image to New Bit Depth — changeBitDepth","text":"function takes Image object modifies  bit depth (e.g. 16 bits 8 bits).","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/changeBitDepth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Image to New Bit Depth — changeBitDepth","text":"","code":"changeBitDepth(image, bitdepth, scale = 1, target = \"new\", in_place = NULL)"},{"path":"https://swarm-lab.github.io/Rvision/reference/changeBitDepth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Image to New Bit Depth — changeBitDepth","text":"image Image object. bitdepth string corresponding bit depth image converted . Options \"8U\", \"8S\", \"16U\", \"16S\", \"32S\", \"32F\", \"64F\". Converting higher bit depth lower one (e.g., \"16U\" \"8U\" may result data loss). scale scaling factor (default: 1). target location results stored. can take 3 values: \"new\":new Image object created results   stored inside (default). \"self\":results stored back image (faster   destructive). Image object:results stored another   existing Image object. fast replace   content image replace target. Note   target must dimensions image. in_place Deprecated. Use target instead.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/changeBitDepth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Image to New Bit Depth — changeBitDepth","text":"target=\"new\", function returns Image object. target=\"self\", function returns nothing modifies  image place. target Image object,  function returns nothing modifies Image object  place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/changeBitDepth.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert Image to New Bit Depth — changeBitDepth","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/changeBitDepth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Image to New Bit Depth — changeBitDepth","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) balloon_16 <- changeBitDepth(balloon, \"16U\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/changeColorSpace.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Image to New Color Space — changeColorSpace","title":"Convert Image to New Color Space — changeColorSpace","text":"function takes Image object converts  another color space (e.g BGR grayscale).","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/changeColorSpace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Image to New Color Space — changeColorSpace","text":"","code":"changeColorSpace(image, colorspace, target = \"new\", in_place = NULL)"},{"path":"https://swarm-lab.github.io/Rvision/reference/changeColorSpace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Image to New Color Space — changeColorSpace","text":"image Image object. colorspace string corresponding color space image converted . conversions color spaces possible. available color space conversions can found cc_table. target location results stored. can take 3 values: \"new\":new Image object created results   stored inside (default). \"self\":results stored back image (faster   destructive). Image object:results stored another   existing Image object. fast replace   content image replace target. Note   target must dimensions image. in_place Deprecated. Use target instead.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/changeColorSpace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Image to New Color Space — changeColorSpace","text":"target=\"new\", function returns Image object. target=\"self\", function returns nothing modifies  image place. target Image object,  function returns nothing modifies Image object  place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/changeColorSpace.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert Image to New Color Space — changeColorSpace","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/changeColorSpace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Image to New Color Space — changeColorSpace","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) grey_balloon <- changeColorSpace(balloon, \"GRAY\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/click.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect Mouse Click on Image Display — click","title":"Detect Mouse Click on Image Display — click","text":"click display image new existing display  window waits mouse click display window detected.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/click.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect Mouse Click on Image Display — click","text":"","code":"click(image, scale = 1, window_name = \"Display\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/click.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect Mouse Click on Image Display — click","text":"image Image object. scale scaling display relative image size (default: 1). window_name character string representing name display window (default: \"Display\").","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/click.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect Mouse Click on Image Display — click","text":"data frame following 3 columns:  x: x coordinate mouse click. y: y coordinate mouse click. button: mouse button pressed (0: left button; 1: right    button.)","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/click.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Detect Mouse Click on Image Display — click","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/click.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect Mouse Click on Image Display — click","text":"","code":"if (FALSE) { balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) click(balloon) }"},{"path":"https://swarm-lab.github.io/Rvision/reference/cloneImage.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a copy of an Image object — cloneImage","title":"Make a copy of an Image object — cloneImage","text":"Image objects pointers toward C++ objects  stored memory. copying Image object using  assignment operator, creates copy pointer, copy  C++ object. operation copied Image object  therefore result modification orginal Image object.  function duplicates original Image object instead,  allowing safe operations maintaining integrity  original Image object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/cloneImage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a copy of an Image object — cloneImage","text":"","code":"cloneImage(x, target = \"new\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/cloneImage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a copy of an Image object — cloneImage","text":"x Image object. target location results stored. can take 2 values: \"new\":new Image object created results   stored inside (default). Image object:results stored another   existing Image object. fast replace   content image replace target. Note   target dimensions, number channels,   bit depth image, error may thrown.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/cloneImage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a copy of an Image object — cloneImage","text":"Image object.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/cloneImage.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Make a copy of an Image object — cloneImage","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/cloneImage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a copy of an Image object — cloneImage","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) balloon_clone <- cloneImage(balloon)"},{"path":"https://swarm-lab.github.io/Rvision/reference/codec.html","id":null,"dir":"Reference","previous_headings":"","what":"Codec of a Video — codec.Rcpp_Video","title":"Codec of a Video — codec.Rcpp_Video","text":"Retrieve codec Video,  VideoStack, VideoWriter object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/codec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Codec of a Video — codec.Rcpp_Video","text":"","code":"# S3 method for Rcpp_Video codec(x)  # S3 method for VideoStack codec(x)  # S3 method for Rcpp_VideoWriter codec(x)  codec(x)"},{"path":"https://swarm-lab.github.io/Rvision/reference/codec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Codec of a Video — codec.Rcpp_Video","text":"x Video, VideoStack, VideoWriter object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/codec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Codec of a Video — codec.Rcpp_Video","text":"character string corresponding  FOURCC code codec.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/codec.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Codec of a Video — codec.Rcpp_Video","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/codec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Codec of a Video — codec.Rcpp_Video","text":"","code":"balloon <- video(system.file(\"sample_vid/Balloon.mp4\", package = \"Rvision\")) #> Error: Could not open the video. codec(balloon) #> Error in eval(expr, envir, enclos): object 'balloon' not found"},{"path":"https://swarm-lab.github.io/Rvision/reference/col2bgr.html","id":null,"dir":"Reference","previous_headings":"","what":"Color to BGR Conversion — col2bgr","title":"Color to BGR Conversion — col2bgr","text":"R color BRG (blue/green/red) conversion.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/col2bgr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Color to BGR Conversion — col2bgr","text":"","code":"col2bgr(col, alpha = FALSE)"},{"path":"https://swarm-lab.github.io/Rvision/reference/col2bgr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Color to BGR Conversion — col2bgr","text":"col Vector three kinds R color specifications, .e., either color name (listed colors()), hexadecimal string form \"#rrggbb\" \"#rrggbbaa\" (see rgb), positive integer meaning palette()[]. alpha Logical value indicating whether alpha channel (opacity) values returned.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/col2bgr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Color to BGR Conversion — col2bgr","text":"integer matrix three four (alpha = TRUE) rows  number columns length col. col names  used column names return value.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/col2bgr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Color to BGR Conversion — col2bgr","text":"NA (integer character) \"NA\" mean transparent. Values col one types coerced: real vectors  coerced integer types character. (factors coerced  character: cases class ignored coercion.) Zero negative values col error.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/col2bgr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Color to BGR Conversion — col2bgr","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/col2bgr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Color to BGR Conversion — col2bgr","text":"","code":"col2bgr(\"red\") #>       [,1] #> blue     0 #> green    0 #> red    255 col2bgr(1:10) #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #> blue     0  107   79  230  229  188   16  158    0   107 #> green    0   83  208  151  226   11  199  158    0    83 #> red      0  223   97   34   40  205  245  158    0   223"},{"path":"https://swarm-lab.github.io/Rvision/reference/colorspace.html","id":null,"dir":"Reference","previous_headings":"","what":"The Color Space of an Image — colorspace","title":"The Color Space of an Image — colorspace","text":"function returns color space Image  object, range colors image.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/colorspace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Color Space of an Image — colorspace","text":"","code":"colorspace(x)"},{"path":"https://swarm-lab.github.io/Rvision/reference/colorspace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Color Space of an Image — colorspace","text":"x Image object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/colorspace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Color Space of an Image — colorspace","text":"character string indicating color space image. now,  can one following:  BGR: image 3 channels, Blue, Green, Red. BGRA: image 3 channels, Blue, Green, Red, Alpha               (transparency). GRAY: grayscale image (1 channel ).","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/colorspace.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The Color Space of an Image — colorspace","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/colorspace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Color Space of an Image — colorspace","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) colorspace(balloon) #> [1] \"BGR\""},{"path":"https://swarm-lab.github.io/Rvision/reference/compare.html","id":null,"dir":"Reference","previous_headings":"","what":"Comparison between Images — compare","title":"Comparison between Images — compare","text":"Comparison Images","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/compare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Comparison between Images — compare","text":"","code":"compare(e1, e2, comparison, target)"},{"path":"https://swarm-lab.github.io/Rvision/reference/compare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Comparison between Images — compare","text":"e1, e2 Either 2 Image objects 1 Image object 1 numeric value/vector. vector length less number channels image, recycled match . comparison character string indicating comparison performed e1 left e2 right. can followings: \"==\", \"!=\", \">\", \"<\", \">=\", \"<=\". target location results stored. can take 3 values: \"new\":new Image object created results   stored inside (default). \"self\":results stored back e1   Image object, otherwise e2 (faster   destructive). Image object:results stored another   existing Image object. fast replace   content e1 e2 replace target.   Note target dimensions, number   channels, bit depth e1 (e1 Image   object, e2 otherwise), error thrown.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/compare.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Comparison between Images — compare","text":"target=\"new\", function returns Image object. target=\"self\", function returns nothing modifies  e1 place Image object, otherwise  modifies e2 place. target Image object, function returns nothing modifies Image object place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/compare.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Comparison between Images — compare","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/compare.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Comparison between Images — compare","text":"","code":"balloon1 <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) balloon2 <- image(system.file(\"sample_img/balloon2.png\", package = \"Rvision\")) comp <- compare(balloon1, balloon2, \">=\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/computeECC.html","id":null,"dir":"Reference","previous_headings":"","what":"Enhanced Correlation Coefficient Value — computeECC","title":"Enhanced Correlation Coefficient Value — computeECC","text":"computeECC computes Enhanced Correlation Coefficient  (ECC) value two images.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/computeECC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enhanced Correlation Coefficient Value — computeECC","text":"","code":"computeECC(template, image, mask = NULL)"},{"path":"https://swarm-lab.github.io/Rvision/reference/computeECC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enhanced Correlation Coefficient Value — computeECC","text":"template grayscale Image object. image grayscale Image object dimensions template. mask binary Image object dimensions template. pixels image mask nonzero used computation. NULL, pixels used.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/computeECC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enhanced Correlation Coefficient Value — computeECC","text":"numerical value.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/computeECC.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Enhanced Correlation Coefficient Value — computeECC","text":"Evangelidis, G. D., Psarakis, E. Z. (2008). Parametric image  alignment using enhanced correlation coefficient maximization. IEEE Trans.  Pattern Anal. Mach. Intell. 30, 1858–1865. doi:10.1109/TPAMI.2008.113.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/computeECC.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Enhanced Correlation Coefficient Value — computeECC","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/computeECC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Enhanced Correlation Coefficient Value — computeECC","text":"","code":"file1 <- system.file(\"sample_img/balloon1.png\", package = \"Rvision\") file2 <- system.file(\"sample_img/balloon2.png\", package = \"Rvision\") balloon1 <- changeColorSpace(image(file1), \"GRAY\") balloon2 <- changeColorSpace(image(file2), \"GRAY\") computeECC(balloon1, balloon2) #> [1] 0.6931989"},{"path":"https://swarm-lab.github.io/Rvision/reference/concatenate.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate Images — concatenate","title":"Concatenate Images — concatenate","text":"concatenate concatenates two images one, either  vertically horizontally.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/concatenate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate Images — concatenate","text":"","code":"concatenate(image1, image2, direction = \"vertical\", target = \"new\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/concatenate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenate Images — concatenate","text":"image1, image2 Image objects bitdepth number channels, either width (direction = \"vertical\") height (direction = \"horizontal\"). direction character string indicating direction concatenation. can either \"vertical\" (default) \"horizontal\". target location results stored. can take 2 values: \"new\":new Image object created results   stored inside (default). Image object:results stored another   existing Image object. fast replace   content image replace target. Note   target must bitdepth number channels   image1 image2. direction = \"vertical\",   height target must sum heights image1   image2. direction = \"horizontal\", width target   must sum widths image1 image2.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/concatenate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concatenate Images — concatenate","text":"target=\"new\", function returns Image object. target Image object, function  returns nothing modifies Image object place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/concatenate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Concatenate Images — concatenate","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/concatenate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concatenate Images — concatenate","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) two_balloons <- concatenate(balloon, balloon)"},{"path":"https://swarm-lab.github.io/Rvision/reference/connectedComponents.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Connected Components in a binary Image — connectedComponents","title":"Find Connected Components in a binary Image — connectedComponents","text":"connectedComponents computes connected components  (.e. areas contiguous non-zero pixels) binary image.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/connectedComponents.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Connected Components in a binary Image — connectedComponents","text":"","code":"connectedComponents(   image,   connectivity = 8,   algorithm = \"grana\",   table = TRUE,   stats = TRUE,   target = \"new\" )"},{"path":"https://swarm-lab.github.io/Rvision/reference/connectedComponents.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Connected Components in a binary Image — connectedComponents","text":"image 8-bit (8U) single-channel Image object. connectivity connectivity neighborhood decide whether 2 pixels contiguous. parameter can take two values: 4: neighborhood pixel four pixels located   (north), (south), left (west) right (east) pixel. 8 (default): neighborhood pixel includes four   4-neighbors four pixels along diagonal directions (northeast,   northwest, southeast, southwest). algorithm character string specifying connected components labeling algorithm use. parameter can take two values: \"grana\" (default): Block-based connected-component labeling   8-way connectivity, scan array union find labeling 4-way connectivity. \"wu\": Scan array union find labeling 8-way 4-way   connectivity. table boolean indicating whether coordinates pixels component returned. stats boolean indicating whether statistics connected components returned. target location results stored. can take 2 values: \"new\":new Image object created results   stored inside (default). Image object:results stored another   existing Image object. case, target must   single channel image 16U 32S bit depth. Note   replace content target.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/connectedComponents.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Connected Components in a binary Image — connectedComponents","text":"list 1 4 items:  n: number connected components image. always    returned. table: table=TRUE, matrix 3 columns representing    identity connected components (label), x-y coordinates    pixels composed . stats: stats=TRUE, matrix 8 columns representing    identity connected components (label), x-y coordinates    centroidd, left top coordinates bounding boxes,    width height bounding boxes, surface areas    pixels. labels: target=\"new\" 32S single-channel image    pixel connected component represented identity    number component, background pixels zero.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/connectedComponents.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Find Connected Components in a binary Image — connectedComponents","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/connectedComponents.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find Connected Components in a binary Image — connectedComponents","text":"","code":"dots <- image(system.file(\"sample_img/dots.jpg\", package = \"Rvision\")) dots_gray <- changeColorSpace(dots, \"GRAY\") dots_bin <- dots_gray < 200 cc <- connectedComponents(dots_bin)"},{"path":"https://swarm-lab.github.io/Rvision/reference/contourArea.html","id":null,"dir":"Reference","previous_headings":"","what":"Area of a Contour — contourArea","title":"Area of a Contour — contourArea","text":"polyArea computes surface area polygon.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/contourArea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Area of a Contour — contourArea","text":"","code":"contourArea(x, y, oriented = FALSE)"},{"path":"https://swarm-lab.github.io/Rvision/reference/contourArea.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Area of a Contour — contourArea","text":"x vector x coordinates contour vertices. y vector y coordinates contour vertices. oriented boolean indicating whether return oriented area contour (default: FALSE).","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/contourArea.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Area of a Contour — contourArea","text":"`oriented = FALSE`, function return area pixels enclosed  within contour. `oriented = TRUE`, function returns signed area  value depending contour orientation (clockwise counter-clokwise).  Using feature, can determine orientation contour taking  sign area.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/contourArea.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Area of a Contour — contourArea","text":"function certainly return wrong result contours  self-intersections.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/contourArea.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Area of a Contour — contourArea","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/contourArea.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Area of a Contour — contourArea","text":"","code":"contourArea(c(0, 1, 1, 0), c(0, 0, 1, 1)) #> [1] 1"},{"path":"https://swarm-lab.github.io/Rvision/reference/convexHull.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the Convex Hull of a Set of Points — convexHull","title":"Compute the Convex Hull of a Set of Points — convexHull","text":"convexHull computes subset points lie  convex hull set points specified.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/convexHull.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the Convex Hull of a Set of Points — convexHull","text":"","code":"convexHull(x, y, clockwise = TRUE)"},{"path":"https://swarm-lab.github.io/Rvision/reference/convexHull.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the Convex Hull of a Set of Points — convexHull","text":"x vector x coordinates. y vector y coordinates lenght x. clockwise TRUE (default), output convex hull oriented clockwise. Otherwise, oriented counter-clockwise.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/convexHull.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the Convex Hull of a Set of Points — convexHull","text":"vector indicating index points convex hull.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/convexHull.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute the Convex Hull of a Set of Points — convexHull","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/convexHull.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the Convex Hull of a Set of Points — convexHull","text":"","code":"convexHull(rnorm(100), rnorm(100)) #> [1] 46 63 47 15 13  6  8 35 38"},{"path":"https://swarm-lab.github.io/Rvision/reference/convexityDefects.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the Convexity Defects of a Polygon — convexityDefects","title":"Find the Convexity Defects of a Polygon — convexityDefects","text":"convexityDefects finds convexity defects polygon,  area belong object located inside  convex hull.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/convexityDefects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the Convexity Defects of a Polygon — convexityDefects","text":"","code":"convexityDefects(x)"},{"path":"https://swarm-lab.github.io/Rvision/reference/convexityDefects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the Convexity Defects of a Polygon — convexityDefects","text":"x Nx2 matrix X-Y coordinates polygon (e.g., contour produced findContours)","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/convexityDefects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the Convexity Defects of a Polygon — convexityDefects","text":"matrix 4 columns:  \"start_index\": index first point contour belonging     convexity defect. \"end_index\": index last point contour belonging     convexity defect. \"farthest_pt_index\": index point contour belonging     convexity defect farthest away convex hull. \"fixpt_depth\": distance farthest contour point     convex hull.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/convexityDefects.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Find the Convexity Defects of a Polygon — convexityDefects","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/convexityDefects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the Convexity Defects of a Polygon — convexityDefects","text":"","code":"dots <- image(system.file(\"sample_img/dots.jpg\", package = \"Rvision\")) dots_gray <- changeColorSpace(dots, \"GRAY\") dots_bin <- dots_gray < 200 contours <- findContours(dots_bin) contour0 <- contours$contours[contours$contours[, 1] == 0, 2:3] convexityDefects(contour0) #>       start_index end_index farthest_pt_index fixpt_depth #>  [1,]           1         2                 2         210 #>  [2,]           3         4                 4         186 #>  [3,]           5         6                 6         162 #>  [4,]           7         8                 8         114 #>  [5,]          17        18                18         142 #>  [6,]          20        21                21         142 #>  [7,]          24        25                25         114 #>  [8,]          28        29                29         190 #>  [9,]          32        33                33         186 #> [10,]          37        38                38         186 #> [11,]          41        42                42         162 #> [12,]          43        44                44         114 #> [13,]          53        54                54         142 #> [14,]          58        59                59         142 #> [15,]          62        63                63         114 #> [16,]          67        68                68         114 #> [17,]          69        70                70         142 #> [18,]          72        73                73         142 #> [19,]          76        77                77         114 #> [20,]          80        81                81         162 #> [21,]          86        87                87         201 #> [22,]          89        90                90         201 #> [23,]          91        92                92         162 #> [24,]          97        98                98         114 #> [25,]         105       106               106         142 #> [26,]         107       108               108         154 #> [27,]         110       111               111         142 #> [28,]         114       115               115         114 #> [29,]         122       123               123         190 #> [30,]         126       127               127         186 #> [31,]         128       129               129         210"},{"path":"https://swarm-lab.github.io/Rvision/reference/cornerSubPix.html","id":null,"dir":"Reference","previous_headings":"","what":"Refine Corner Locations — cornerSubPix","title":"Refine Corner Locations — cornerSubPix","text":"cornerSubPix finds sub-pixel locations corners  radial saddle points image estimated locations.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/cornerSubPix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Refine Corner Locations — cornerSubPix","text":"","code":"cornerSubPix(   image,   corners,   win_size = c(11, 11),   zero_zone = c(-1, -1),   maxit = 30,   eps = 1e-04 )"},{"path":"https://swarm-lab.github.io/Rvision/reference/cornerSubPix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Refine Corner Locations — cornerSubPix","text":"image 8-bit (8U), single-channel (GRAY) Image object. corners matrix estimated corner locations returned findChessboardCorners. win_size vector half side length search window. example, win_size = c(5, 5) , (5∗2+1)×(5∗2+1)=11×11 search window used (default: c(11, 11)). zero_zone vector half size dead region middle search zone. used sometimes avoid possible singularities detection algorithm. value c(-1, -1) indicates size (default). maxit maximum number iterations detection algorithm (default: 30). eps desired accuracy change parameters iterative algorithm stops (default: 0.0001).","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/cornerSubPix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Refine Corner Locations — cornerSubPix","text":"(pprow * ppcol)x2 matrix. matrix empty  chessboard indicated dimensions detected.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/cornerSubPix.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Refine Corner Locations — cornerSubPix","text":"Förstner, W., & Gülch, E. (1987). fast operator detection  precise location distinct points, corners centres circular  features. Proc. ISPRS Intercommission Conference Fast Processing  Photogrammetric Data, 6, 281–305.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/cornerSubPix.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Refine Corner Locations — cornerSubPix","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/cornerSubPix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Refine Corner Locations — cornerSubPix","text":"","code":"checkerboard <- image(system.file(\"sample_img/checkerboard6x9.png\", package = \"Rvision\")) pts <- findChessboardCorners(checkerboard, 6, 9) checkerboard_gray <- changeColorSpace(checkerboard, \"GRAY\") pts_refined <- cornerSubPix(checkerboard_gray, pts)"},{"path":"https://swarm-lab.github.io/Rvision/reference/countNonZero.html","id":null,"dir":"Reference","previous_headings":"","what":"Count Non-Zero Pixels — countNonZero","title":"Count Non-Zero Pixels — countNonZero","text":"countNonZero returns number non-zero pixels  Image object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/countNonZero.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count Non-Zero Pixels — countNonZero","text":"","code":"countNonZero(image)"},{"path":"https://swarm-lab.github.io/Rvision/reference/countNonZero.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count Non-Zero Pixels — countNonZero","text":"image single-channel Image object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/countNonZero.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count Non-Zero Pixels — countNonZero","text":"integer.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/countNonZero.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Count Non-Zero Pixels — countNonZero","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/countNonZero.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count Non-Zero Pixels — countNonZero","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) changeColorSpace(balloon, \"GRAY\", \"self\") countNonZero(balloon > 100) #> [1] 169254"},{"path":"https://swarm-lab.github.io/Rvision/reference/destroyDisplay.html","id":null,"dir":"Reference","previous_headings":"","what":"Destroy Image Display — destroyDisplay","title":"Destroy Image Display — destroyDisplay","text":"destroyDisplay closes specific existing  Image display window. destroyAllDisplays existing  Image display window.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/destroyDisplay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Destroy Image Display — destroyDisplay","text":"","code":"destroyDisplay(window_name) destroyAllDisplays()"},{"path":"https://swarm-lab.github.io/Rvision/reference/destroyDisplay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Destroy Image Display — destroyDisplay","text":"window_name character string representing name display window (default: \"Display\").","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/destroyDisplay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Destroy Image Display — destroyDisplay","text":"function return anything.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/destroyDisplay.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Destroy Image Display — destroyDisplay","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/destroyDisplay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Destroy Image Display — destroyDisplay","text":"","code":"if (FALSE) { newDisplay(\"Test display\") destroyDisplay(\"Test display\") destroyAllDisplays() }"},{"path":"https://swarm-lab.github.io/Rvision/reference/dim.Rcpp_Image.html","id":null,"dir":"Reference","previous_headings":"","what":"Dimensions of an Image — dim.Rcpp_Image","title":"Dimensions of an Image — dim.Rcpp_Image","text":"Retrieve dimensions Image object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/dim.Rcpp_Image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dimensions of an Image — dim.Rcpp_Image","text":"","code":"# S3 method for Rcpp_Image dim(x)"},{"path":"https://swarm-lab.github.io/Rvision/reference/dim.Rcpp_Image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dimensions of an Image — dim.Rcpp_Image","text":"x Image object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/dim.Rcpp_Image.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dimensions of an Image — dim.Rcpp_Image","text":"vector 3 values corresponding number rows, columns  channels image (order).","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/dim.Rcpp_Image.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Dimensions of an Image — dim.Rcpp_Image","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/dim.Rcpp_Image.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dimensions of an Image — dim.Rcpp_Image","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) dim(balloon) #> [1] 360 640   3"},{"path":"https://swarm-lab.github.io/Rvision/reference/dim.Rcpp_Queue.html","id":null,"dir":"Reference","previous_headings":"","what":"Dimensions of a Queue — dim.Rcpp_Queue","title":"Dimensions of a Queue — dim.Rcpp_Queue","text":"Retrieve dimensions Queue object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/dim.Rcpp_Queue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dimensions of a Queue — dim.Rcpp_Queue","text":"","code":"# S3 method for Rcpp_Queue dim(x)"},{"path":"https://swarm-lab.github.io/Rvision/reference/dim.Rcpp_Queue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dimensions of a Queue — dim.Rcpp_Queue","text":"x Queue object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/dim.Rcpp_Queue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dimensions of a Queue — dim.Rcpp_Queue","text":"vector 3 values corresponding number rows, columns  length queue (order).","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/dim.Rcpp_Queue.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Dimensions of a Queue — dim.Rcpp_Queue","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/dim.Rcpp_Queue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dimensions of a Queue — dim.Rcpp_Queue","text":"","code":"balloon <- video(system.file(\"sample_vid/Balloon.mp4\", package = \"Rvision\")) #> Error: Could not open the video. buf <- queue(balloon) #> Error in eval(expr, envir, enclos): object 'balloon' not found dim(buf) #> Error in eval(expr, envir, enclos): object 'buf' not found"},{"path":"https://swarm-lab.github.io/Rvision/reference/dim.Rcpp_Stream.html","id":null,"dir":"Reference","previous_headings":"","what":"Dimensions of a Stream — dim.Rcpp_Stream","title":"Dimensions of a Stream — dim.Rcpp_Stream","text":"Retrieve dimensions Stream object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/dim.Rcpp_Stream.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dimensions of a Stream — dim.Rcpp_Stream","text":"","code":"# S3 method for Rcpp_Stream dim(x)"},{"path":"https://swarm-lab.github.io/Rvision/reference/dim.Rcpp_Stream.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dimensions of a Stream — dim.Rcpp_Stream","text":"x Stream object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/dim.Rcpp_Stream.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dimensions of a Stream — dim.Rcpp_Stream","text":"vector 2 values corresponding number rows columns  stream (order).","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/dim.Rcpp_Stream.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Dimensions of a Stream — dim.Rcpp_Stream","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/dim.Rcpp_Stream.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dimensions of a Stream — dim.Rcpp_Stream","text":"","code":"if (FALSE) { live <- stream(0) sim(live) release(live) }"},{"path":"https://swarm-lab.github.io/Rvision/reference/dim.Rcpp_Video.html","id":null,"dir":"Reference","previous_headings":"","what":"Dimensions of a Video — dim.Rcpp_Video","title":"Dimensions of a Video — dim.Rcpp_Video","text":"Retrieve dimensions Video object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/dim.Rcpp_Video.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dimensions of a Video — dim.Rcpp_Video","text":"","code":"# S3 method for Rcpp_Video dim(x)"},{"path":"https://swarm-lab.github.io/Rvision/reference/dim.Rcpp_Video.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dimensions of a Video — dim.Rcpp_Video","text":"x Video object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/dim.Rcpp_Video.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dimensions of a Video — dim.Rcpp_Video","text":"vector 3 values corresponding number rows, columns  frames video (order).","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/dim.Rcpp_Video.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Dimensions of a Video — dim.Rcpp_Video","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/dim.Rcpp_Video.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dimensions of a Video — dim.Rcpp_Video","text":"","code":"balloon <- video(system.file(\"sample_vid/Balloon.mp4\", package = \"Rvision\")) #> Error: Could not open the video. dim(balloon) #> Error in eval(expr, envir, enclos): object 'balloon' not found"},{"path":"https://swarm-lab.github.io/Rvision/reference/dim.Rcpp_VideoWriter.html","id":null,"dir":"Reference","previous_headings":"","what":"Dimensions of a Video Writer — dim.Rcpp_VideoWriter","title":"Dimensions of a Video Writer — dim.Rcpp_VideoWriter","text":"Retrieve dimensions VideoWriter object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/dim.Rcpp_VideoWriter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dimensions of a Video Writer — dim.Rcpp_VideoWriter","text":"","code":"# S3 method for Rcpp_VideoWriter dim(x)"},{"path":"https://swarm-lab.github.io/Rvision/reference/dim.Rcpp_VideoWriter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dimensions of a Video Writer — dim.Rcpp_VideoWriter","text":"x VideoWriter object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/dim.Rcpp_VideoWriter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dimensions of a Video Writer — dim.Rcpp_VideoWriter","text":"vector 2 values corresponding number rows columns  video writer (order).","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/dim.Rcpp_VideoWriter.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Dimensions of a Video Writer — dim.Rcpp_VideoWriter","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/dim.Rcpp_VideoWriter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dimensions of a Video Writer — dim.Rcpp_VideoWriter","text":"","code":"if (FALSE) { writer <- videoWriter(\"test.mp4\", \"H264\", 25, 1080, 1920) dim(writer) release(writer) }"},{"path":"https://swarm-lab.github.io/Rvision/reference/dim.VideoStack.html","id":null,"dir":"Reference","previous_headings":"","what":"Dimensions of a VideoStack — dim.VideoStack","title":"Dimensions of a VideoStack — dim.VideoStack","text":"Retrieve dimensions VideoStack object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/dim.VideoStack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dimensions of a VideoStack — dim.VideoStack","text":"","code":"# S3 method for VideoStack dim(x)"},{"path":"https://swarm-lab.github.io/Rvision/reference/dim.VideoStack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dimensions of a VideoStack — dim.VideoStack","text":"x VideoStack object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/dim.VideoStack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dimensions of a VideoStack — dim.VideoStack","text":"vector 3 values corresponding number rows, columns  frames video stack (order).","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/dim.VideoStack.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Dimensions of a VideoStack — dim.VideoStack","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/dim.VideoStack.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dimensions of a VideoStack — dim.VideoStack","text":"","code":"path <- system.file(\"sample_vid/Balloon.mp4\", package = \"Rvision\") balloonStack <- videoStack(path, path) #> Error: Could not open the video. dim(balloonStack) #> Error in eval(expr, envir, enclos): object 'balloonStack' not found"},{"path":"https://swarm-lab.github.io/Rvision/reference/display.html","id":null,"dir":"Reference","previous_headings":"","what":"Display Image Object — display","title":"Display Image Object — display","text":"display displays Image objects special  windows created newDisplay (creates  exist yet). function faster generic plot.Image  function displaying Image objects, used  combination base R plotting utilities.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/display.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display Image Object — display","text":"","code":"display(   image,   window_name = \"Display\",   delay = 25,   height = 480,   width = 640,   interpolation = \"linear\" )"},{"path":"https://swarm-lab.github.io/Rvision/reference/display.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display Image Object — display","text":"image Image object. window_name character string representing name display window (default: \"Display\"). delay delay milliseconds image displayed can replaced another image. height integer representing height pixels display window. width integer representing width pixels display window. interpolation character string representing type interpolation use display size different image size (default: \"linear\"). See notes resize accepted interpolation methods.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/display.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display Image Object — display","text":"function return anything.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/display.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Display Image Object — display","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/display.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display Image Object — display","text":"","code":"if (FALSE) { balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) display(balloon, height = nrow(balloon), width = ncol(balloon)) }"},{"path":"https://swarm-lab.github.io/Rvision/reference/distanceTransform.html","id":null,"dir":"Reference","previous_headings":"","what":"Distance Transform — distanceTransform","title":"Distance Transform — distanceTransform","text":"distanceTransform calculates distance closest  zero pixel pixel source image.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/distanceTransform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distance Transform — distanceTransform","text":"","code":"distanceTransform(image, distance_type = \"L1\", mask_size = 3, target = \"new\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/distanceTransform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distance Transform — distanceTransform","text":"image Image object. distance_type character string indicating type distance calculated. can following: \"L1\" (default):distance = |x1-x2| + |y1-y2|. \"L2\":simple euclidean distance. \"C\":distance = max(|x1-x2|,|y1-y2|). \"L12\":L1-L2 metric. distance = 2(sqrt(1+x*x/2) - 1)). \"FAIR\":distance = c^2(|x|/c-log(1+|x|/c)), c = 1.3998. \"WELSCH\":distance = c^2/2(1-exp(-(x/c)^2)), c = 2.9846. \"HUBER\":distance = |x|<c ? x^2/2 : c(|x|-c/2), c=1.345. mask_size numeric value indicating size distance transform mask. can following: 0:used indicate Felzenszwalb algorithm   distance_type = \"L2\". 3 (default):3x3 mask. 5:5x5 mask. target location results stored. can take 3 values: \"new\":new Image object created results   stored inside (default). \"self\":results stored back image (faster   destructive). Image object:results stored another   existing Image object. fast replace   content image replace target. Note   target must dimensions image, must   single channel, bit depth must either \"8U\" \"32F\".","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/distanceTransform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distance Transform — distanceTransform","text":"target=\"new\", function returns Image object. target=\"self\", function returns nothing modifies  image place. target Image object,  function returns nothing modifies Image object  place. Image object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/distanceTransform.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Distance Transform — distanceTransform","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/distanceTransform.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Distance Transform — distanceTransform","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) changeColorSpace(balloon, \"GRAY\", target = \"self\") bin <- balloon < 200 dst <- distanceTransform(bin)"},{"path":"https://swarm-lab.github.io/Rvision/reference/drawArrow.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw Arrows on an Image — drawArrow","title":"Draw Arrows on an Image — drawArrow","text":"drawArrow draws arrow segments first point  second Image object. operation destructive:  changes irreversibly Image object undone.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/drawArrow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw Arrows on an Image — drawArrow","text":"","code":"drawArrow(   image,   pt1_x,   pt1_y,   pt2_x,   pt2_y,   tip_length = 0.1,   color = \"red\",   thickness = 1 )"},{"path":"https://swarm-lab.github.io/Rvision/reference/drawArrow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw Arrows on an Image — drawArrow","text":"image Image object. pt1_x numeric value vector representing x coordinates first end arrow. pt1_y numeric value vector representing y coordinates first end arrow. pt2_x numeric value vector representing x coordinates second end arrow. pt2_y numeric value vector representing y coordinates second end arrow. tip_length numeric value vector representing length arrow's tip fraction arrow's length (default: 0.1). color value vector kind R color specification compatible col2bgr representing color arrow (default: \"red\"). thickness numeric value vector representing thickness pixels arrow (default: 1).","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/drawArrow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw Arrows on an Image — drawArrow","text":"function return anything. modifies image  place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/drawArrow.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Draw Arrows on an Image — drawArrow","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/drawArrow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw Arrows on an Image — drawArrow","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) drawArrow(balloon, 1, 1, ncol(balloon) / 2, nrow(balloon) / 2, thickness = 3)"},{"path":"https://swarm-lab.github.io/Rvision/reference/drawCircle.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw Circles on an Image — drawCircle","title":"Draw Circles on an Image — drawCircle","text":"drawCirlc draws circles Image  object. operation destructive: changes irreversibly  Image object undone.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/drawCircle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw Circles on an Image — drawCircle","text":"","code":"drawCircle(image, x, y, radius, color = \"red\", thickness = 1)"},{"path":"https://swarm-lab.github.io/Rvision/reference/drawCircle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw Circles on an Image — drawCircle","text":"image Image object. x numeric value vector representing x coordinates centers circle. y numeric value vector representing y coordinates centers circle. radius numeric value vector representing radii circle. color value vector kind R color specification compatible col2bgr representing color circle's outline (default: \"red\"). thickness numeric value vector representing thickness pixels circle's outline (default: 1). negative, filled rectangle drawn.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/drawCircle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw Circles on an Image — drawCircle","text":"function return anything. modifies image  place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/drawCircle.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Draw Circles on an Image — drawCircle","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/drawCircle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw Circles on an Image — drawCircle","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) drawCircle(balloon, 365, 245, 90, thickness = 3)"},{"path":"https://swarm-lab.github.io/Rvision/reference/drawEllipse.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw Ellipses on an Image — drawEllipse","title":"Draw Ellipses on an Image — drawEllipse","text":"drawEllipse draws ellipses (part )  Image object. operation destructive: changes  irreversibly Image object undone.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/drawEllipse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw Ellipses on an Image — drawEllipse","text":"","code":"drawEllipse(   image,   x,   y,   axis1,   axis2,   angle,   start_angle = 0,   end_angle = 360,   color = \"red\",   thickness = 1 )"},{"path":"https://swarm-lab.github.io/Rvision/reference/drawEllipse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw Ellipses on an Image — drawEllipse","text":"image Image object. x numeric value vector representing x coordinates centers ellipse y numeric value vector representing y coordinates centers ellipse axis1 numeric value vector representing half-length first axis ellipse. axis2 numeric value vector representing half-length second axis ellipse. angle numeric value vector representing angle degrees axis1 horizontal. start_angle numeric value vector representing start angle degrees elliptic arc (default: 0). end_angle numeric value vector representing end angle degrees elliptic arc (default: 360). color value vector kind R color specification compatible col2bgr representing color ellipse's outline (default: \"red\"). thickness numeric value vector representing thickness pixels ellipse's outline (default: 1). negative, filled ellipse drawn.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/drawEllipse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw Ellipses on an Image — drawEllipse","text":"function return anything. modifies image  place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/drawEllipse.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Draw Ellipses on an Image — drawEllipse","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/drawEllipse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw Ellipses on an Image — drawEllipse","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) drawEllipse(balloon, 365, 245, 120, 90, angle = 45, thickness = 3)"},{"path":"https://swarm-lab.github.io/Rvision/reference/drawLine.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw Lines on an Image — drawLine","title":"Draw Lines on an Image — drawLine","text":"drawLine draws lines Image object.  operation destructive: changes irreversibly Image  object undone.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/drawLine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw Lines on an Image — drawLine","text":"","code":"drawLine(image, pt1_x, pt1_y, pt2_x, pt2_y, color = \"red\", thickness = 1)"},{"path":"https://swarm-lab.github.io/Rvision/reference/drawLine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw Lines on an Image — drawLine","text":"image Image object. pt1_x numeric value vector representing x coordinates first end line. pt1_y numeric value vector representing y coordinates first end line. pt2_x numeric value vector representing x coordinates second end line. pt2_y numeric value vector representing y coordinates second end line. color value vector kind R color specification compatible col2bgr representing color line (default: \"red\"). thickness numeric value vector representing thickness pixels line (default: 1).","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/drawLine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw Lines on an Image — drawLine","text":"function return anything. modifies image  place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/drawLine.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Draw Lines on an Image — drawLine","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/drawLine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw Lines on an Image — drawLine","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) drawLine(balloon, 1, 1, ncol(balloon), nrow(balloon), thickness = 3)"},{"path":"https://swarm-lab.github.io/Rvision/reference/drawPolyline.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw Polygonal Lines on an Image — drawPolyline","title":"Draw Polygonal Lines on an Image — drawPolyline","text":"drawPolyline draws polygonal lines Image object. operation destructive: changes  irreversibly Image object undone.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/drawPolyline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw Polygonal Lines on an Image — drawPolyline","text":"","code":"drawPolyline(image, line, closed = FALSE, color = \"red\", thickness = 1)"},{"path":"https://swarm-lab.github.io/Rvision/reference/drawPolyline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw Polygonal Lines on an Image — drawPolyline","text":"image Image object. line m x 2 matrix (object can converted m x 2 matrix) list m x 2 matrices, first column containing x coordinates polygonal lines second column containing y coordinates polygonal lines. closed boolean indicating whether drawn polylines closed (default: FALSE). closed, function draws line last vertex curve first vertex. color value vector kind R color specification compatible col2bgr representing color fill polygon (default: \"white\"). thickness numeric value representing thickness pixels line (default: 1).","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/drawPolyline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw Polygonal Lines on an Image — drawPolyline","text":"function return anything. modifies image  place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/drawPolyline.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Draw Polygonal Lines on an Image — drawPolyline","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/drawPolyline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw Polygonal Lines on an Image — drawPolyline","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) poly <- data.frame(x = c(290, 290, 440, 440), y = c(170, 325, 325, 170)) drawPolyline(balloon, poly, closed = FALSE, color = \"red\", thickness = 3)"},{"path":"https://swarm-lab.github.io/Rvision/reference/drawRectangle.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw Rectangles on an Image — drawRectangle","title":"Draw Rectangles on an Image — drawRectangle","text":"drawRectangle draws rectangles Image  object. operation destructive: changes irreversibly  Image object undone.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/drawRectangle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw Rectangles on an Image — drawRectangle","text":"","code":"drawRectangle(image, pt1_x, pt1_y, pt2_x, pt2_y, color = \"red\", thickness = 1)"},{"path":"https://swarm-lab.github.io/Rvision/reference/drawRectangle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw Rectangles on an Image — drawRectangle","text":"image Image object. pt1_x numeric value vector representing x coordinates corner rectangle. pt1_y numeric value vector representing y coordinates corner rectangle. pt2_x numeric value vector representing x coordinates corners opposite pt1. pt2_y numeric value vector representing y coordinates corners opposite pt1. color value vector kind R color specification compatible col2bgr representing color rectangle's outline (default: \"red\"). thickness numeric value vector representing thickness pixels rectangle's outline (default: 1). negative, filled rectangle drawn.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/drawRectangle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw Rectangles on an Image — drawRectangle","text":"function return anything. modifies image  place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/drawRectangle.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Draw Rectangles on an Image — drawRectangle","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/drawRectangle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw Rectangles on an Image — drawRectangle","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) drawRectangle(balloon, 290, 170, 440, 325, thickness = 3)"},{"path":"https://swarm-lab.github.io/Rvision/reference/drawRotatedRectangle.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw Rotated Rectangles on an Image — drawRotatedRectangle","title":"Draw Rotated Rectangles on an Image — drawRotatedRectangle","text":"drawRotatedRectangle draws rotated rectangles  Image object. operation destructive: changes  irreversibly Image object undone.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/drawRotatedRectangle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw Rotated Rectangles on an Image — drawRotatedRectangle","text":"","code":"drawRotatedRectangle(   image,   x,   y,   axis1,   axis2,   angle,   color = \"red\",   thickness = 1 )"},{"path":"https://swarm-lab.github.io/Rvision/reference/drawRotatedRectangle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw Rotated Rectangles on an Image — drawRotatedRectangle","text":"image Image object. x numeric value vector representing x coordinates center rectangle. y numeric value vector representing y coordinates center rectangle. axis1 numeric value vector representing length first axis rectangle. axis2 numeric value vector representing length second axis rectangle. angle numeric value vector representing angle degrees axis1 horizontal. color value vector kind R color specification compatible col2bgr representing color rectangle's outline (default: \"red\"). thickness numeric value vector representing thickness pixels rectangle's outline (default: 1). negative, filled rectangle drawn.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/drawRotatedRectangle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw Rotated Rectangles on an Image — drawRotatedRectangle","text":"function return anything. modifies image  place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/drawRotatedRectangle.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Draw Rotated Rectangles on an Image — drawRotatedRectangle","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/drawRotatedRectangle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw Rotated Rectangles on an Image — drawRotatedRectangle","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) drawRotatedRectangle(balloon, 290, 170, 440, 325, 60, thickness = 3)"},{"path":"https://swarm-lab.github.io/Rvision/reference/drawText.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw Text on an Image — drawText","title":"Draw Text on an Image — drawText","text":"drawText draws text Image object.  operation destructive: changes irreversibly Image  object undone.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/drawText.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw Text on an Image — drawText","text":"","code":"drawText(   image,   text,   x,   y,   font_face = \"simplex\",   font_scale = 1,   italic = FALSE,   color = \"red\",   thickness = 1,   bl_orig = TRUE )"},{"path":"https://swarm-lab.github.io/Rvision/reference/drawText.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw Text on an Image — drawText","text":"image Image object. text character string representing text drawn. x numeric value representing x coordinate bottom left corner text string (top left bl_orig == TRUE). y numeric value representing y coordinate bottom left corner text string (top left bl_orig == TRUE). font_face character string representing font type text (default: \"simplex\"). See notes list available font types. font_scale numeric value representing scale factor font-specific base size multiplied (default: 1). italic logical specifying whether text italicized (default: FALSE). color kind R color specification compatible col2bgr representing color line (default: \"red\"). thickness numeric value representing thickness pixels line (default: 1). bl_orig logical specifying origin text drawing (default: TRUE). TRUE, text drawn right-side-. FALSE, drawn upside-.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/drawText.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw Text on an Image — drawText","text":"function return anything. modifies image  place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/drawText.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Draw Text on an Image — drawText","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/drawText.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw Text on an Image — drawText","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) drawText(balloon, \"I'm a balloon\", 50, 50, thickness = 3)"},{"path":"https://swarm-lab.github.io/Rvision/reference/edgePreservingFilter.html","id":null,"dir":"Reference","previous_headings":"","what":"Edge Preserving Filter — edgePreservingFilter","title":"Edge Preserving Filter — edgePreservingFilter","text":"edgePreservingFilter smoothes Gaussian noise well  salt pepper noise Image object preserving  edges.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/edgePreservingFilter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Edge Preserving Filter — edgePreservingFilter","text":"","code":"edgePreservingFilter(image, d = 11, threshold = 5, target = \"new\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/edgePreservingFilter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Edge Preserving Filter — edgePreservingFilter","text":"image 8-bit (8U) 3-channel Image object. d diameter pixel's neighborhood used filtering. must equal greater 3. threshold threshold value distinguishes noise, outliers, data. target location results stored. can take 3 values: \"new\":new Image object created results   stored inside (default). \"self\":results stored back image (faster   destructive). Image object:results stored another   existing Image object. fast replace   content image replace target. Note   target dimensions, number channels,   bit depth image, error may thrown.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/edgePreservingFilter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Edge Preserving Filter — edgePreservingFilter","text":"target=\"new\", function returns Image object. target=\"self\", function returns nothing modifies  image place. target Image object,  function returns nothing modifies Image object  place.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/edgePreservingFilter.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Edge Preserving Filter — edgePreservingFilter","text":"Reich, S., Wörgötter, F., & Dellen, B. (2018).  real-time edge-preserving denoising filter. Proceedings 13th  International Joint Conference Computer Vision, Imaging Computer  Graphics Theory Applications. International Conference Computer  Vision Theory Applications, Funchal, Madeira, Portugal.  https://doi.org/10.5220/0006509000850094","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/edgePreservingFilter.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Edge Preserving Filter — edgePreservingFilter","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/edgePreservingFilter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Edge Preserving Filter — edgePreservingFilter","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) balloon_smooth <- edgePreservingFilter(balloon)"},{"path":"https://swarm-lab.github.io/Rvision/reference/exp.html","id":null,"dir":"Reference","previous_headings":"","what":"Exponential Generic for Image objects — exp","title":"Exponential Generic for Image objects — exp","text":"Overloaded exp handle Image  objects.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/exp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exponential Generic for Image objects — exp","text":"","code":"exp(x, target = \"new\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/exp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exponential Generic for Image objects — exp","text":"x 32- 64-bit (32F 64F) Image object. target location results stored passing sum images function. can take 3 values: \"new\":new Image object created results   stored inside (default). \"self\":results stored back x (faster   destructive). Image object:results stored another   existing Image object. fast replace   content target. Note target   dimensions, bitdepth, number channels x, otherwise   error thrown.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/exp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exponential Generic for Image objects — exp","text":"target=\"new\", function returns Image object. target=\"self\", function returns nothing modifies  x place. target Image object,  function returns nothing modifies Image object  place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/exp.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Exponential Generic for Image objects — exp","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/exp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Exponential Generic for Image objects — exp","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) changeBitDepth(balloon, \"32F\", 1 / 255, \"self\") exp(balloon) #> Class: image.  #> Dimensions: 640x360. #> Type: BGR, 3-channel, 32F. #> GPU: FALSE."},{"path":"https://swarm-lab.github.io/Rvision/reference/extractChannel.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Single Channel from Image — extractChannel","title":"Extract Single Channel from Image — extractChannel","text":"extractChannel extracts single color channel  source image.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/extractChannel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Single Channel from Image — extractChannel","text":"","code":"extractChannel(image, channel, target = \"new\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/extractChannel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Single Channel from Image — extractChannel","text":"image Image object. channel integer specifying index channel extract. target location results stored. can take 2 values: \"new\":new Image object created results   stored inside (default). Image object:results stored another   existing Image object. fast replace   content image replace target. Note   target dimensions bit depth   image, error may thrown. target also   single-channel Image object error thrown.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/extractChannel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Single Channel from Image — extractChannel","text":"target=\"new\", function returns single-channel  Image object. target Image object, function returns nothing modifies Image object place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/extractChannel.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract Single Channel from Image — extractChannel","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/extractChannel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Single Channel from Image — extractChannel","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) extractChannel(balloon, 2) #> Class: image.  #> Dimensions: 640x360. #> Type: GRAY, 1-channel, 8U. #> GPU: FALSE."},{"path":"https://swarm-lab.github.io/Rvision/reference/farneback.html","id":null,"dir":"Reference","previous_headings":"","what":"Optical Flow Using Farneback's Algorithm — farneback","title":"Optical Flow Using Farneback's Algorithm — farneback","text":"Computes dense optical flow using Gunnar Farneback’s algorithm.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/farneback.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optical Flow Using Farneback's Algorithm — farneback","text":"","code":"farneback(   image1,   image2,   pyr_scale = 0.5,   levels = 3,   winsize = 43,   iterations = 3,   poly_n = 7,   poly_sigma = 1.5,   use_init = FALSE,   Gaussian = FALSE,   target = \"new\" )"},{"path":"https://swarm-lab.github.io/Rvision/reference/farneback.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optical Flow Using Farneback's Algorithm — farneback","text":"image1 single-channel, 8U Image object. image2 single-channel, 8U Image object. pyr_scale Parameter, specifying image scale (<1) build pyramids image; pyr_scale = 0.5 means classical pyramid, next layer twice smaller previous one. levels Number pyramid layers including initial image; levels = 1 means extra layers created original images used. winsize Averaging window size; larger values increase algorithm robustness image noise give chances fast motion detection, yield blurred motion field. iterations Number iterations algorithm pyramid level. poly_n Size pixel neighborhood used find polynomial expansion pixel; larger values mean image approximated smoother surfaces, yielding robust algorithm blurred motion field, typically poly_n = 5 7. poly_sigma Standard deviation Gaussian used smooth derivatives used basis polynomial expansion; poly_n = 5, can set poly_sigma = 1.1, poly_n = 7, good value poly_sigma = 1.5. use_init logical indicating whether content target used initial flow approximation. Gaussian logical indicating whether use Gaussian filter instead box filter optical flow estimation; usually, option gives accurate flow box filter, cost lower speed; normally, winsize Gaussian window set larger value achieve level robustness. target location results stored. can take 3 values: \"new\":new Image object created results   stored inside (default). Image object:results stored another   existing Image object. fast replace   content target. target must two-channel, 32F   Image object dimensions image1.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/farneback.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optical Flow Using Farneback's Algorithm — farneback","text":"target=\"new\", function returns Image object. target Image object, function  returns nothing modifies Image object place.  Image object two channels corresponding x  y coordinates (respectively) optical vector location  image.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/farneback.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Optical Flow Using Farneback's Algorithm — farneback","text":"Farnebäck G. Two-Frame Motion Estimation Based Polynomial  Expansion. : Bigun J, Gustavsson T, editors. Image Analysis. Springer  Berlin Heidelberg; 2003. pp. 363–370. doi:10.1007/3-540-45103-X_50","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/farneback.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Optical Flow Using Farneback's Algorithm — farneback","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/farneback.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optical Flow Using Farneback's Algorithm — farneback","text":"","code":"balloon <- video(system.file(\"sample_vid/Balloon.mp4\", package = \"Rvision\")) #> Error: Could not open the video. balloon1 <- readFrame(balloon, 1) #> Error in eval(expr, envir, enclos): object 'balloon' not found changeColorSpace(balloon1, \"GRAY\", \"self\") #> Error in eval(expr, envir, enclos): object 'balloon1' not found balloon2 <- readFrame(balloon, 2) #> Error in eval(expr, envir, enclos): object 'balloon' not found changeColorSpace(balloon2, \"GRAY\", \"self\") #> Error in eval(expr, envir, enclos): object 'balloon2' not found of <- farneback(balloon1, balloon2) #> Error in eval(expr, envir, enclos): object 'balloon1' not found"},{"path":"https://swarm-lab.github.io/Rvision/reference/fillConvexPoly.html","id":null,"dir":"Reference","previous_headings":"","what":"Fill Convex Polygon with Color in Image — fillConvexPoly","title":"Fill Convex Polygon with Color in Image — fillConvexPoly","text":"fillConvexPoly fills pixels image withing  given convex polygon given color. function much faster  function fillPoly. can fill convex polygons  monotonic polygon without self-intersections, , polygon  whose contour intersects every horizontal line (scan line) twice  (though, top-/bottom edge horizontal).","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/fillConvexPoly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fill Convex Polygon with Color in Image — fillConvexPoly","text":"","code":"fillConvexPoly(image, polygon, color = \"white\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/fillConvexPoly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fill Convex Polygon with Color in Image — fillConvexPoly","text":"image Image object. polygon m x 2 matrix (object can converted m x 2 matrix), first column containing x coordinates polygon second column containing y coordinates polygon. color value vector kind R color specification compatible col2bgr representing color fill polygon (default: \"white\").","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/fillConvexPoly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fill Convex Polygon with Color in Image — fillConvexPoly","text":"function return anything. modifies image  place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/fillConvexPoly.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fill Convex Polygon with Color in Image — fillConvexPoly","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/fillConvexPoly.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fill Convex Polygon with Color in Image — fillConvexPoly","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) poly <- data.frame(x = c(290, 290, 440, 440), y = c(170, 325, 325, 170)) fillConvexPoly(balloon, poly, color = \"red\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/fillPoly.html","id":null,"dir":"Reference","previous_headings":"","what":"Fill Polygon with Color in Image — fillPoly","title":"Fill Polygon with Color in Image — fillPoly","text":"fillPoly fills pixels image withing  given polygon given color.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/fillPoly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fill Polygon with Color in Image — fillPoly","text":"","code":"fillPoly(image, polygon, color = \"white\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/fillPoly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fill Polygon with Color in Image — fillPoly","text":"image Image object. polygon m x 2 matrix (object can converted m x 2 matrix) list m x 2 matrices, first column containing x coordinates polygons second column containing y coordinates polygons. color value vector kind R color specification compatible col2bgr representing color fill polygon (default: \"white\").","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/fillPoly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fill Polygon with Color in Image — fillPoly","text":"function return anything. modifies image  place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/fillPoly.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fill Polygon with Color in Image — fillPoly","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/fillPoly.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fill Polygon with Color in Image — fillPoly","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) poly <- data.frame(x = c(290, 290, 440, 440), y = c(170, 325, 325, 170)) fillPoly(balloon, poly, color = \"red\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/filter2D.html","id":null,"dir":"Reference","previous_headings":"","what":"Image Convolution with Kernel — filter2D","title":"Image Convolution with Kernel — filter2D","text":"filter2D applies arbitrary linear filter image.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/filter2D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Image Convolution with Kernel — filter2D","text":"","code":"filter2D(image, kernel, target = \"new\", in_place = NULL)"},{"path":"https://swarm-lab.github.io/Rvision/reference/filter2D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Image Convolution with Kernel — filter2D","text":"image Image object. kernel matrix representing convolution kernel. target location results stored. can take 3 values: \"new\":new Image object created results   stored inside (default). \"self\":results stored back image (faster   destructive). Image object:results stored another   existing Image object. fast replace   content image replace target. Note   target dimensions, number channels,   bit depth image, error may thrown. in_place Deprecated. Use target instead.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/filter2D.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Image Convolution with Kernel — filter2D","text":"target=\"new\", function returns Image object. target=\"self\", function returns nothing modifies  image place. target Image object,  function returns nothing modifies Image object  place.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/filter2D.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Image Convolution with Kernel — filter2D","text":"color images, kernel applied channel  image. want apply different kernels channel, first split  image separate channels split process  individually merging using merge function.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/filter2D.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Image Convolution with Kernel — filter2D","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/filter2D.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Image Convolution with Kernel — filter2D","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) k_edge_detection <- matrix(c(-1, -1, -1, -1, 8, -1, -1, -1, -1), nrow = 3) balloon_edge <- filter2D(balloon, k_edge_detection)"},{"path":"https://swarm-lab.github.io/Rvision/reference/findChessboardCorners.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Calibration Chessboard in Image — findChessboardCorners","title":"Find Calibration Chessboard in Image — findChessboardCorners","text":"findChessboardCorners finds positions internal  corners calibration chessboard.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/findChessboardCorners.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Calibration Chessboard in Image — findChessboardCorners","text":"","code":"findChessboardCorners(   image,   pprow,   ppcol,   adaptive_threshold = TRUE,   normalize = TRUE,   filter_quads = FALSE,   fast_check = TRUE )"},{"path":"https://swarm-lab.github.io/Rvision/reference/findChessboardCorners.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Calibration Chessboard in Image — findChessboardCorners","text":"image 8-bit (8U) Image object. pprow, ppcol number internal corners per row column chessboard. adaptive_threshold logical indicating whether use adaptive thresholding (default) convert image black white, rather fixed threshold level (computed average image brightness). normalize logical indicating whether normalize (default) image gamma histEq applying fixed adaptive thresholding. filter_quads logical indicating whether use additional criteria (like contour area, perimeter, square-like shape) filter false quads extracted contour retrieval stage (default: FALSE). fast_check logical indicating whether run fast check image looks chessboard corners, shortcut call none found. can drastically speed call degenerate condition chessboard observed.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/findChessboardCorners.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Calibration Chessboard in Image — findChessboardCorners","text":"(pprow * ppcol)x2 matrix. matrix empty  chessboard indicated dimensions detected.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/findChessboardCorners.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Find Calibration Chessboard in Image — findChessboardCorners","text":"can find suitable chessboard pattern  https://github.com/opencv/opencv/blob/4.x/doc/pattern.png","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/findChessboardCorners.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Find Calibration Chessboard in Image — findChessboardCorners","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/findChessboardCorners.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find Calibration Chessboard in Image — findChessboardCorners","text":"","code":"checkerboard <- image(system.file(\"sample_img/checkerboard6x9.png\", package = \"Rvision\")) pts <- findChessboardCorners(checkerboard, 6, 9)"},{"path":"https://swarm-lab.github.io/Rvision/reference/findContours.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Contours in a Binary Image — findContours","title":"Find Contours in a Binary Image — findContours","text":"findContours retrieves contours binary image using  algorithm Suzuki & (1985).","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/findContours.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Contours in a Binary Image — findContours","text":"","code":"findContours(image, mode = \"external\", method = \"simple\", offset = c(0, 0))"},{"path":"https://swarm-lab.github.io/Rvision/reference/findContours.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Contours in a Binary Image — findContours","text":"image 8-bit (8U) single-channel (GRAY) Image object. mode Mode contour retrieval algorithm. can take following values: 'external': retrieves extreme outer contours (default). 'list': retrieves contours without establishing       hierarchical relationships. 'ccomp': retrieves contours organizes       two-level hierarchy. top level, external boundaries       components. second level, boundaries holes.       another contour inside hole connected component,       still put top level. 'tree': retrieves contours reconstructs full       hierarchy nested contours. method Method approximating contours. can take following values: 'none': stores absolutely contour points. 'simple': compresses horizontal, vertical, diagonal segments       leaves end points (default). 'l1': applies one flavors Teh-Chin chain       approximation algorithm (Teh & Chin, 1989). 'kcos': applies one flavors Teh-Chin chain       approximation algorithm (Teh & Chin, 1989). offset 2-element vector representing offset every contour point shifted (default: c(0, 0)). useful contours extracted image ROI analyzed whole image context.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/findContours.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Contours in a Binary Image — findContours","text":"list two matrices: \"contours\": matrix 3 columns: \"id\": contour identity (indicates set points             belonging contour). \"x\": x coordinates contour points. \"y\": y coordinates contour points. \"hierarchy\": matrix 5 columns: \"id\": contour identity. \"\": identity next contour             hierarchical level. \"\": identity previous contour             hierarchical level. \"child\": identity first child contour. \"parent\": identity parent contour.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/findContours.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Find Contours in a Binary Image — findContours","text":"Suzuki, S., , K. (1985). Topological structural analysis  digitized binary images border following. Computer Vision, Graphics,  Image Processing 30, 32–46. doi:10.1016/0734-189X(85)90016-7. Teh, C.-H., Chin, R. T. (1989). detection dominant points  digital curves. IEEE Trans. Pattern Anal. Mach. Intell. 11, 859–872.  doi:10.1109/34.31447.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/findContours.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Find Contours in a Binary Image — findContours","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/findContours.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find Contours in a Binary Image — findContours","text":"","code":"dots <- image(system.file(\"sample_img/dots.jpg\", package = \"Rvision\")) dots_gray <- changeColorSpace(dots, \"GRAY\") dots_bin <- dots_gray < 200 contours <- findContours(dots_bin)"},{"path":"https://swarm-lab.github.io/Rvision/reference/findHomography.html","id":null,"dir":"Reference","previous_headings":"","what":"Perspective Transformation Between Two Planes — findHomography","title":"Perspective Transformation Between Two Planes — findHomography","text":"findHomography computes perspective transformation  two planes.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/findHomography.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perspective Transformation Between Two Planes — findHomography","text":"","code":"findHomography(   from,   to,   from_dim,   to_dim = from_dim,   method = \"RANSAC\",   ransac_reproj_th = 3,   max_it = 2000,   conf = 0.95 )"},{"path":"https://swarm-lab.github.io/Rvision/reference/findHomography.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perspective Transformation Between Two Planes — findHomography","text":"Nx2 matrix indicating location (x, y) N points source image. Nx2 matrix indicating location (x, y) N points destination image. order points must correspond order . from_dim vector first two elements indicate number rows columns source image. to_dim vector first two elements indicate number rows columns destination image. specified, from_dim used default. method character string indicating method used compute homography matrix. can one followings: \"LS\" (least-square), \"RANSAC\" (RANSAC-based robust method; default), \"LMEDS\" (Least-Median robust method), \"RHO\" (PROSAC-based robust method). ransac_reproj_th Maximum allowed reprojection error treat point pair inlier (used RANSAC RHO methods ). `` `` measured pixels, usually makes sense set parameter somewhere range 1 10. max_it maximum number RANSAC iterations. conf Confidence level, 0 1.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/findHomography.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perspective Transformation Between Two Planes — findHomography","text":"3x3 homography matrix.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/findHomography.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Perspective Transformation Between Two Planes — findHomography","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/findHomography.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perspective Transformation Between Two Planes — findHomography","text":"","code":"src <- cbind(x = c(0, 1, 1, 0), y = c(0, 0, 1, 1)) dst <- src + 1 findHomography(src, dst, c(10, 10)) #>      [,1] [,2] [,3] #> [1,]    1    0    1 #> [2,]    0    1   -1 #> [3,]    0    0    1"},{"path":"https://swarm-lab.github.io/Rvision/reference/findNonZero.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Non-Zero Pixels in an Image — findNonZero","title":"Find Non-Zero Pixels in an Image — findNonZero","text":"findNonZero retrieves locations non-zero  pixels image.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/findNonZero.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Non-Zero Pixels in an Image — findNonZero","text":"","code":"findNonZero(image, values = FALSE)"},{"path":"https://swarm-lab.github.io/Rvision/reference/findNonZero.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Non-Zero Pixels in an Image — findNonZero","text":"image single-channel Image object. values logical indicating whether values non-zero pixels also returned (default: FALSE).","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/findNonZero.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Non-Zero Pixels in an Image — findNonZero","text":"values=FALSE, matrix two columns, corresponding  x (columns) y (rows) coordinates non-zero pixels.  values=TRUE, additional column corresponding pixel values  also returned.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/findNonZero.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Find Non-Zero Pixels in an Image — findNonZero","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/findNonZero.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find Non-Zero Pixels in an Image — findNonZero","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) balloon_gray <- changeColorSpace(balloon, \"GRAY\") findNonZero(balloon_gray) #>             x   y #>      [1,]   1 360 #>      [2,]   2 360 #>      [3,]   3 360 #>      [4,]   4 360 #>      [5,]   5 360 #>      [6,]   6 360 #>      [7,]   7 360 #>      [8,]   8 360 #>      [9,]   9 360 #>     [10,]  10 360 #>     [11,]  11 360 #>     [12,]  12 360 #>     [13,]  13 360 #>     [14,]  14 360 #>     [15,]  15 360 #>     [16,]  16 360 #>     [17,]  17 360 #>     [18,]  18 360 #>     [19,]  19 360 #>     [20,]  20 360 #>     [21,]  21 360 #>     [22,]  22 360 #>     [23,]  23 360 #>     [24,]  24 360 #>     [25,]  25 360 #>     [26,]  26 360 #>     [27,]  27 360 #>     [28,]  28 360 #>     [29,]  29 360 #>     [30,]  30 360 #>     [31,]  31 360 #>     [32,]  32 360 #>     [33,]  33 360 #>     [34,]  34 360 #>     [35,]  35 360 #>     [36,]  36 360 #>     [37,]  37 360 #>     [38,]  38 360 #>     [39,]  39 360 #>     [40,]  40 360 #>     [41,]  41 360 #>     [42,]  42 360 #>     [43,]  43 360 #>     [44,]  44 360 #>     [45,]  45 360 #>     [46,]  46 360 #>     [47,]  47 360 #>     [48,]  48 360 #>     [49,]  49 360 #>     [50,]  50 360 #>     [51,]  51 360 #>     [52,]  52 360 #>     [53,]  53 360 #>     [54,]  54 360 #>     [55,]  55 360 #>     [56,]  56 360 #>     [57,]  57 360 #>     [58,]  58 360 #>     [59,]  59 360 #>     [60,]  60 360 #>     [61,]  61 360 #>     [62,]  62 360 #>     [63,]  63 360 #>     [64,]  64 360 #>     [65,]  65 360 #>     [66,]  66 360 #>     [67,]  67 360 #>     [68,]  68 360 #>     [69,]  69 360 #>     [70,]  70 360 #>     [71,]  71 360 #>     [72,]  72 360 #>     [73,]  73 360 #>     [74,]  74 360 #>     [75,]  75 360 #>     [76,]  76 360 #>     [77,]  77 360 #>     [78,]  78 360 #>     [79,]  79 360 #>     [80,]  80 360 #>     [81,]  81 360 #>     [82,]  82 360 #>     [83,]  83 360 #>     [84,]  84 360 #>     [85,]  85 360 #>     [86,]  86 360 #>     [87,]  87 360 #>     [88,]  88 360 #>     [89,]  89 360 #>     [90,]  90 360 #>     [91,]  91 360 #>     [92,]  92 360 #>     [93,]  93 360 #>     [94,]  94 360 #>     [95,]  95 360 #>     [96,]  96 360 #>     [97,]  97 360 #>     [98,]  98 360 #>     [99,]  99 360 #>    [100,] 100 360 #>    [101,] 101 360 #>    [102,] 102 360 #>    [103,] 103 360 #>    [104,] 104 360 #>    [105,] 105 360 #>    [106,] 106 360 #>    [107,] 107 360 #>    [108,] 108 360 #>    [109,] 109 360 #>    [110,] 110 360 #>    [111,] 111 360 #>    [112,] 112 360 #>    [113,] 113 360 #>    [114,] 114 360 #>    [115,] 115 360 #>    [116,] 116 360 #>    [117,] 117 360 #>    [118,] 118 360 #>    [119,] 119 360 #>    [120,] 120 360 #>    [121,] 121 360 #>    [122,] 122 360 #>    [123,] 123 360 #>    [124,] 124 360 #>    [125,] 125 360 #>    [126,] 126 360 #>    [127,] 127 360 #>    [128,] 128 360 #>    [129,] 129 360 #>    [130,] 130 360 #>    [131,] 131 360 #>    [132,] 132 360 #>    [133,] 133 360 #>    [134,] 134 360 #>    [135,] 135 360 #>    [136,] 136 360 #>    [137,] 137 360 #>    [138,] 138 360 #>    [139,] 139 360 #>    [140,] 140 360 #>    [141,] 141 360 #>    [142,] 142 360 #>    [143,] 143 360 #>    [144,] 144 360 #>    [145,] 145 360 #>    [146,] 146 360 #>    [147,] 147 360 #>    [148,] 148 360 #>    [149,] 149 360 #>    [150,] 150 360 #>    [151,] 151 360 #>    [152,] 152 360 #>    [153,] 153 360 #>    [154,] 154 360 #>    [155,] 155 360 #>    [156,] 156 360 #>    [157,] 157 360 #>    [158,] 158 360 #>    [159,] 159 360 #>    [160,] 160 360 #>    [161,] 161 360 #>    [162,] 162 360 #>    [163,] 163 360 #>    [164,] 164 360 #>    [165,] 165 360 #>    [166,] 166 360 #>    [167,] 167 360 #>    [168,] 168 360 #>    [169,] 169 360 #>    [170,] 170 360 #>    [171,] 171 360 #>    [172,] 172 360 #>    [173,] 173 360 #>    [174,] 174 360 #>    [175,] 175 360 #>    [176,] 176 360 #>    [177,] 177 360 #>    [178,] 178 360 #>    [179,] 179 360 #>    [180,] 180 360 #>    [181,] 181 360 #>    [182,] 182 360 #>    [183,] 183 360 #>    [184,] 184 360 #>    [185,] 185 360 #>    [186,] 186 360 #>    [187,] 187 360 #>    [188,] 188 360 #>    [189,] 189 360 #>    [190,] 190 360 #>    [191,] 191 360 #>    [192,] 192 360 #>    [193,] 193 360 #>    [194,] 194 360 #>    [195,] 195 360 #>    [196,] 196 360 #>    [197,] 197 360 #>    [198,] 198 360 #>    [199,] 199 360 #>    [200,] 200 360 #>    [201,] 201 360 #>    [202,] 202 360 #>    [203,] 203 360 #>    [204,] 204 360 #>    [205,] 205 360 #>    [206,] 206 360 #>    [207,] 207 360 #>    [208,] 208 360 #>    [209,] 209 360 #>    [210,] 210 360 #>    [211,] 211 360 #>    [212,] 212 360 #>    [213,] 213 360 #>    [214,] 214 360 #>    [215,] 215 360 #>    [216,] 216 360 #>    [217,] 217 360 #>    [218,] 218 360 #>    [219,] 219 360 #>    [220,] 220 360 #>    [221,] 221 360 #>    [222,] 222 360 #>    [223,] 223 360 #>    [224,] 224 360 #>    [225,] 225 360 #>    [226,] 226 360 #>    [227,] 227 360 #>    [228,] 228 360 #>    [229,] 229 360 #>    [230,] 230 360 #>    [231,] 231 360 #>    [232,] 232 360 #>    [233,] 233 360 #>    [234,] 234 360 #>    [235,] 235 360 #>    [236,] 236 360 #>    [237,] 237 360 #>    [238,] 238 360 #>    [239,] 239 360 #>    [240,] 240 360 #>    [241,] 241 360 #>    [242,] 242 360 #>    [243,] 243 360 #>    [244,] 244 360 #>    [245,] 245 360 #>    [246,] 246 360 #>    [247,] 247 360 #>    [248,] 248 360 #>    [249,] 249 360 #>    [250,] 250 360 #>    [251,] 251 360 #>    [252,] 252 360 #>    [253,] 253 360 #>    [254,] 254 360 #>    [255,] 255 360 #>    [256,] 256 360 #>    [257,] 257 360 #>    [258,] 258 360 #>    [259,] 259 360 #>    [260,] 260 360 #>    [261,] 261 360 #>    [262,] 262 360 #>    [263,] 263 360 #>    [264,] 264 360 #>    [265,] 265 360 #>    [266,] 266 360 #>    [267,] 267 360 #>    [268,] 268 360 #>    [269,] 269 360 #>    [270,] 270 360 #>    [271,] 271 360 #>    [272,] 272 360 #>    [273,] 273 360 #>    [274,] 274 360 #>    [275,] 275 360 #>    [276,] 276 360 #>    [277,] 277 360 #>    [278,] 278 360 #>    [279,] 279 360 #>    [280,] 280 360 #>    [281,] 281 360 #>    [282,] 282 360 #>    [283,] 283 360 #>    [284,] 284 360 #>    [285,] 285 360 #>    [286,] 286 360 #>    [287,] 287 360 #>    [288,] 288 360 #>    [289,] 289 360 #>    [290,] 290 360 #>    [291,] 291 360 #>    [292,] 292 360 #>    [293,] 293 360 #>    [294,] 294 360 #>    [295,] 295 360 #>    [296,] 296 360 #>    [297,] 297 360 #>    [298,] 298 360 #>    [299,] 299 360 #>    [300,] 300 360 #>    [301,] 301 360 #>    [302,] 302 360 #>    [303,] 303 360 #>    [304,] 304 360 #>    [305,] 305 360 #>    [306,] 306 360 #>    [307,] 307 360 #>    [308,] 308 360 #>    [309,] 309 360 #>    [310,] 310 360 #>    [311,] 311 360 #>    [312,] 312 360 #>    [313,] 313 360 #>    [314,] 314 360 #>    [315,] 315 360 #>    [316,] 316 360 #>    [317,] 317 360 #>    [318,] 318 360 #>    [319,] 319 360 #>    [320,] 320 360 #>    [321,] 321 360 #>    [322,] 322 360 #>    [323,] 323 360 #>    [324,] 324 360 #>    [325,] 325 360 #>    [326,] 326 360 #>    [327,] 327 360 #>    [328,] 328 360 #>    [329,] 329 360 #>    [330,] 330 360 #>    [331,] 331 360 #>    [332,] 332 360 #>    [333,] 333 360 #>    [334,] 334 360 #>    [335,] 335 360 #>    [336,] 336 360 #>    [337,] 337 360 #>    [338,] 338 360 #>    [339,] 339 360 #>    [340,] 340 360 #>    [341,] 341 360 #>    [342,] 342 360 #>    [343,] 343 360 #>    [344,] 344 360 #>    [345,] 345 360 #>    [346,] 346 360 #>    [347,] 347 360 #>    [348,] 348 360 #>    [349,] 349 360 #>    [350,] 350 360 #>    [351,] 351 360 #>    [352,] 352 360 #>    [353,] 353 360 #>    [354,] 354 360 #>    [355,] 355 360 #>    [356,] 356 360 #>    [357,] 357 360 #>    [358,] 358 360 #>    [359,] 359 360 #>    [360,] 360 360 #>    [361,] 361 360 #>    [362,] 362 360 #>    [363,] 363 360 #>    [364,] 364 360 #>    [365,] 365 360 #>    [366,] 366 360 #>    [367,] 367 360 #>    [368,] 368 360 #>    [369,] 369 360 #>    [370,] 370 360 #>    [371,] 371 360 #>    [372,] 372 360 #>    [373,] 373 360 #>    [374,] 374 360 #>    [375,] 375 360 #>    [376,] 376 360 #>    [377,] 377 360 #>    [378,] 378 360 #>    [379,] 379 360 #>    [380,] 380 360 #>    [381,] 381 360 #>    [382,] 382 360 #>    [383,] 383 360 #>    [384,] 384 360 #>    [385,] 385 360 #>    [386,] 386 360 #>    [387,] 387 360 #>    [388,] 388 360 #>    [389,] 389 360 #>    [390,] 390 360 #>    [391,] 391 360 #>    [392,] 392 360 #>    [393,] 393 360 #>    [394,] 394 360 #>    [395,] 395 360 #>    [396,] 396 360 #>    [397,] 397 360 #>    [398,] 398 360 #>    [399,] 399 360 #>    [400,] 400 360 #>    [401,] 401 360 #>    [402,] 402 360 #>    [403,] 403 360 #>    [404,] 404 360 #>    [405,] 405 360 #>    [406,] 406 360 #>    [407,] 407 360 #>    [408,] 408 360 #>    [409,] 409 360 #>    [410,] 410 360 #>    [411,] 411 360 #>    [412,] 412 360 #>    [413,] 413 360 #>    [414,] 414 360 #>    [415,] 415 360 #>    [416,] 416 360 #>    [417,] 417 360 #>    [418,] 418 360 #>    [419,] 419 360 #>    [420,] 420 360 #>    [421,] 421 360 #>    [422,] 422 360 #>    [423,] 423 360 #>    [424,] 424 360 #>    [425,] 425 360 #>    [426,] 426 360 #>    [427,] 427 360 #>    [428,] 428 360 #>    [429,] 429 360 #>    [430,] 430 360 #>    [431,] 431 360 #>    [432,] 432 360 #>    [433,] 433 360 #>    [434,] 434 360 #>    [435,] 435 360 #>    [436,] 436 360 #>    [437,] 437 360 #>    [438,] 438 360 #>    [439,] 439 360 #>    [440,] 440 360 #>    [441,] 441 360 #>    [442,] 442 360 #>    [443,] 443 360 #>    [444,] 444 360 #>    [445,] 445 360 #>    [446,] 446 360 #>    [447,] 447 360 #>    [448,] 448 360 #>    [449,] 449 360 #>    [450,] 450 360 #>    [451,] 451 360 #>    [452,] 452 360 #>    [453,] 453 360 #>    [454,] 454 360 #>    [455,] 455 360 #>    [456,] 456 360 #>    [457,] 457 360 #>    [458,] 458 360 #>    [459,] 459 360 #>    [460,] 460 360 #>    [461,] 461 360 #>    [462,] 462 360 #>    [463,] 463 360 #>    [464,] 464 360 #>    [465,] 465 360 #>    [466,] 466 360 #>    [467,] 467 360 #>    [468,] 468 360 #>    [469,] 469 360 #>    [470,] 470 360 #>    [471,] 471 360 #>    [472,] 472 360 #>    [473,] 473 360 #>    [474,] 474 360 #>    [475,] 475 360 #>    [476,] 476 360 #>    [477,] 477 360 #>    [478,] 478 360 #>    [479,] 479 360 #>    [480,] 480 360 #>    [481,] 481 360 #>    [482,] 482 360 #>    [483,] 483 360 #>    [484,] 484 360 #>    [485,] 485 360 #>    [486,] 486 360 #>    [487,] 487 360 #>    [488,] 488 360 #>    [489,] 489 360 #>    [490,] 490 360 #>    [491,] 491 360 #>    [492,] 492 360 #>    [493,] 493 360 #>    [494,] 494 360 #>    [495,] 495 360 #>    [496,] 496 360 #>    [497,] 497 360 #>    [498,] 498 360 #>    [499,] 499 360 #>    [500,] 500 360 #>    [501,] 501 360 #>    [502,] 502 360 #>    [503,] 503 360 #>    [504,] 504 360 #>    [505,] 505 360 #>    [506,] 506 360 #>    [507,] 507 360 #>    [508,] 508 360 #>    [509,] 509 360 #>    [510,] 510 360 #>    [511,] 511 360 #>    [512,] 512 360 #>    [513,] 513 360 #>    [514,] 514 360 #>    [515,] 515 360 #>    [516,] 516 360 #>    [517,] 517 360 #>    [518,] 518 360 #>    [519,] 519 360 #>    [520,] 520 360 #>    [521,] 521 360 #>    [522,] 522 360 #>    [523,] 523 360 #>    [524,] 524 360 #>    [525,] 525 360 #>    [526,] 526 360 #>    [527,] 527 360 #>    [528,] 528 360 #>    [529,] 529 360 #>    [530,] 530 360 #>    [531,] 531 360 #>    [532,] 532 360 #>    [533,] 533 360 #>    [534,] 534 360 #>    [535,] 535 360 #>    [536,] 536 360 #>    [537,] 537 360 #>    [538,] 538 360 #>    [539,] 539 360 #>    [540,] 540 360 #>    [541,] 541 360 #>    [542,] 542 360 #>    [543,] 543 360 #>    [544,] 544 360 #>    [545,] 545 360 #>    [546,] 546 360 #>    [547,] 547 360 #>    [548,] 548 360 #>    [549,] 549 360 #>    [550,] 550 360 #>    [551,] 551 360 #>    [552,] 552 360 #>    [553,] 553 360 #>    [554,] 554 360 #>    [555,] 555 360 #>    [556,] 556 360 #>    [557,] 557 360 #>    [558,] 558 360 #>    [559,] 559 360 #>    [560,] 560 360 #>    [561,] 561 360 #>    [562,] 562 360 #>    [563,] 563 360 #>    [564,] 564 360 #>    [565,] 565 360 #>    [566,] 566 360 #>    [567,] 567 360 #>    [568,] 568 360 #>    [569,] 569 360 #>    [570,] 570 360 #>    [571,] 571 360 #>    [572,] 572 360 #>    [573,] 573 360 #>    [574,] 574 360 #>    [575,] 575 360 #>    [576,] 576 360 #>    [577,] 577 360 #>    [578,] 578 360 #>    [579,] 579 360 #>    [580,] 580 360 #>    [581,] 581 360 #>    [582,] 582 360 #>    [583,] 583 360 #>    [584,] 584 360 #>    [585,] 585 360 #>    [586,] 586 360 #>    [587,] 587 360 #>    [588,] 588 360 #>    [589,] 589 360 #>    [590,] 590 360 #>    [591,] 591 360 #>    [592,] 592 360 #>    [593,] 593 360 #>    [594,] 594 360 #>    [595,] 595 360 #>    [596,] 596 360 #>    [597,] 597 360 #>    [598,] 598 360 #>    [599,] 599 360 #>    [600,] 600 360 #>    [601,] 601 360 #>    [602,] 602 360 #>    [603,] 603 360 #>    [604,] 604 360 #>    [605,] 605 360 #>    [606,] 606 360 #>    [607,] 607 360 #>    [608,] 608 360 #>    [609,] 609 360 #>    [610,] 610 360 #>    [611,] 611 360 #>    [612,] 612 360 #>    [613,] 613 360 #>    [614,] 614 360 #>    [615,] 615 360 #>    [616,] 616 360 #>    [617,] 617 360 #>    [618,] 618 360 #>    [619,] 619 360 #>    [620,] 620 360 #>    [621,] 621 360 #>    [622,] 622 360 #>    [623,] 623 360 #>    [624,] 624 360 #>    [625,] 625 360 #>    [626,] 626 360 #>    [627,] 627 360 #>    [628,] 628 360 #>    [629,] 629 360 #>    [630,] 630 360 #>    [631,] 631 360 #>    [632,] 632 360 #>    [633,] 633 360 #>    [634,] 634 360 #>    [635,] 635 360 #>    [636,] 636 360 #>    [637,] 637 360 #>    [638,] 638 360 #>    [639,] 639 360 #>    [640,] 640 360 #>    [641,]   1 359 #>    [642,]   2 359 #>    [643,]   3 359 #>    [644,]   4 359 #>    [645,]   5 359 #>    [646,]   6 359 #>    [647,]   7 359 #>    [648,]   8 359 #>    [649,]   9 359 #>    [650,]  10 359 #>    [651,]  11 359 #>    [652,]  12 359 #>    [653,]  13 359 #>    [654,]  14 359 #>    [655,]  15 359 #>    [656,]  16 359 #>    [657,]  17 359 #>    [658,]  18 359 #>    [659,]  19 359 #>    [660,]  20 359 #>    [661,]  21 359 #>    [662,]  22 359 #>    [663,]  23 359 #>    [664,]  24 359 #>    [665,]  25 359 #>    [666,]  26 359 #>    [667,]  27 359 #>    [668,]  28 359 #>    [669,]  29 359 #>    [670,]  30 359 #>    [671,]  31 359 #>    [672,]  32 359 #>    [673,]  33 359 #>    [674,]  34 359 #>    [675,]  35 359 #>    [676,]  36 359 #>    [677,]  37 359 #>    [678,]  38 359 #>    [679,]  39 359 #>    [680,]  40 359 #>    [681,]  41 359 #>    [682,]  42 359 #>    [683,]  43 359 #>    [684,]  44 359 #>    [685,]  45 359 #>    [686,]  46 359 #>    [687,]  47 359 #>    [688,]  48 359 #>    [689,]  49 359 #>    [690,]  50 359 #>    [691,]  51 359 #>    [692,]  52 359 #>    [693,]  53 359 #>    [694,]  54 359 #>    [695,]  55 359 #>    [696,]  56 359 #>    [697,]  57 359 #>    [698,]  58 359 #>    [699,]  59 359 #>    [700,]  60 359 #>    [701,]  61 359 #>    [702,]  62 359 #>    [703,]  63 359 #>    [704,]  64 359 #>    [705,]  65 359 #>    [706,]  66 359 #>    [707,]  67 359 #>    [708,]  68 359 #>    [709,]  69 359 #>    [710,]  70 359 #>    [711,]  71 359 #>    [712,]  72 359 #>    [713,]  73 359 #>    [714,]  74 359 #>    [715,]  75 359 #>    [716,]  76 359 #>    [717,]  77 359 #>    [718,]  78 359 #>    [719,]  79 359 #>    [720,]  80 359 #>    [721,]  81 359 #>    [722,]  82 359 #>    [723,]  83 359 #>    [724,]  84 359 #>    [725,]  85 359 #>    [726,]  86 359 #>    [727,]  87 359 #>    [728,]  88 359 #>    [729,]  89 359 #>    [730,]  90 359 #>    [731,]  91 359 #>    [732,]  92 359 #>    [733,]  93 359 #>    [734,]  94 359 #>    [735,]  95 359 #>    [736,]  96 359 #>    [737,]  97 359 #>    [738,]  98 359 #>    [739,]  99 359 #>    [740,] 100 359 #>    [741,] 101 359 #>    [742,] 102 359 #>    [743,] 103 359 #>    [744,] 104 359 #>    [745,] 105 359 #>    [746,] 106 359 #>    [747,] 107 359 #>    [748,] 108 359 #>    [749,] 109 359 #>    [750,] 110 359 #>    [751,] 111 359 #>    [752,] 112 359 #>    [753,] 113 359 #>    [754,] 114 359 #>    [755,] 115 359 #>    [756,] 116 359 #>    [757,] 117 359 #>    [758,] 118 359 #>    [759,] 119 359 #>    [760,] 120 359 #>    [761,] 121 359 #>    [762,] 122 359 #>    [763,] 123 359 #>    [764,] 124 359 #>    [765,] 125 359 #>    [766,] 126 359 #>    [767,] 127 359 #>    [768,] 128 359 #>    [769,] 129 359 #>    [770,] 130 359 #>    [771,] 131 359 #>    [772,] 132 359 #>    [773,] 133 359 #>    [774,] 134 359 #>    [775,] 135 359 #>    [776,] 136 359 #>    [777,] 137 359 #>    [778,] 138 359 #>    [779,] 139 359 #>    [780,] 140 359 #>    [781,] 141 359 #>    [782,] 142 359 #>    [783,] 143 359 #>    [784,] 144 359 #>    [785,] 145 359 #>    [786,] 146 359 #>    [787,] 147 359 #>    [788,] 148 359 #>    [789,] 149 359 #>    [790,] 150 359 #>    [791,] 151 359 #>    [792,] 152 359 #>    [793,] 153 359 #>    [794,] 154 359 #>    [795,] 155 359 #>    [796,] 156 359 #>    [797,] 157 359 #>    [798,] 158 359 #>    [799,] 159 359 #>    [800,] 160 359 #>    [801,] 161 359 #>    [802,] 162 359 #>    [803,] 163 359 #>    [804,] 164 359 #>    [805,] 165 359 #>    [806,] 166 359 #>    [807,] 167 359 #>    [808,] 168 359 #>    [809,] 169 359 #>    [810,] 170 359 #>    [811,] 171 359 #>    [812,] 172 359 #>    [813,] 173 359 #>    [814,] 174 359 #>    [815,] 175 359 #>    [816,] 176 359 #>    [817,] 177 359 #>    [818,] 178 359 #>    [819,] 179 359 #>    [820,] 180 359 #>    [821,] 181 359 #>    [822,] 182 359 #>    [823,] 183 359 #>    [824,] 184 359 #>    [825,] 185 359 #>    [826,] 186 359 #>    [827,] 187 359 #>    [828,] 188 359 #>    [829,] 189 359 #>    [830,] 190 359 #>    [831,] 191 359 #>    [832,] 192 359 #>    [833,] 193 359 #>    [834,] 194 359 #>    [835,] 195 359 #>    [836,] 196 359 #>    [837,] 197 359 #>    [838,] 198 359 #>    [839,] 199 359 #>    [840,] 200 359 #>    [841,] 201 359 #>    [842,] 202 359 #>    [843,] 203 359 #>    [844,] 204 359 #>    [845,] 205 359 #>    [846,] 206 359 #>    [847,] 207 359 #>    [848,] 208 359 #>    [849,] 209 359 #>    [850,] 210 359 #>    [851,] 211 359 #>    [852,] 212 359 #>    [853,] 213 359 #>    [854,] 214 359 #>    [855,] 215 359 #>    [856,] 216 359 #>    [857,] 217 359 #>    [858,] 218 359 #>    [859,] 219 359 #>    [860,] 220 359 #>    [861,] 221 359 #>    [862,] 222 359 #>    [863,] 223 359 #>    [864,] 224 359 #>    [865,] 225 359 #>    [866,] 226 359 #>    [867,] 227 359 #>    [868,] 228 359 #>    [869,] 229 359 #>    [870,] 230 359 #>    [871,] 231 359 #>    [872,] 232 359 #>    [873,] 233 359 #>    [874,] 234 359 #>    [875,] 235 359 #>    [876,] 236 359 #>    [877,] 237 359 #>    [878,] 238 359 #>    [879,] 239 359 #>    [880,] 240 359 #>    [881,] 241 359 #>    [882,] 242 359 #>    [883,] 243 359 #>    [884,] 244 359 #>    [885,] 245 359 #>    [886,] 246 359 #>    [887,] 247 359 #>    [888,] 248 359 #>    [889,] 249 359 #>    [890,] 250 359 #>    [891,] 251 359 #>    [892,] 252 359 #>    [893,] 253 359 #>    [894,] 254 359 #>    [895,] 255 359 #>    [896,] 256 359 #>    [897,] 257 359 #>    [898,] 258 359 #>    [899,] 259 359 #>    [900,] 260 359 #>    [901,] 261 359 #>    [902,] 262 359 #>    [903,] 263 359 #>    [904,] 264 359 #>    [905,] 265 359 #>    [906,] 266 359 #>    [907,] 267 359 #>    [908,] 268 359 #>    [909,] 269 359 #>    [910,] 270 359 #>    [911,] 271 359 #>    [912,] 272 359 #>    [913,] 273 359 #>    [914,] 274 359 #>    [915,] 275 359 #>    [916,] 276 359 #>    [917,] 277 359 #>    [918,] 278 359 #>    [919,] 279 359 #>    [920,] 280 359 #>    [921,] 281 359 #>    [922,] 282 359 #>    [923,] 283 359 #>    [924,] 284 359 #>    [925,] 285 359 #>    [926,] 286 359 #>    [927,] 287 359 #>    [928,] 288 359 #>    [929,] 289 359 #>    [930,] 290 359 #>    [931,] 291 359 #>    [932,] 292 359 #>    [933,] 293 359 #>    [934,] 294 359 #>    [935,] 295 359 #>    [936,] 296 359 #>    [937,] 297 359 #>    [938,] 298 359 #>    [939,] 299 359 #>    [940,] 300 359 #>    [941,] 301 359 #>    [942,] 302 359 #>    [943,] 303 359 #>    [944,] 304 359 #>    [945,] 305 359 #>    [946,] 306 359 #>    [947,] 307 359 #>    [948,] 308 359 #>    [949,] 309 359 #>    [950,] 310 359 #>    [951,] 311 359 #>    [952,] 312 359 #>    [953,] 313 359 #>    [954,] 314 359 #>    [955,] 315 359 #>    [956,] 316 359 #>    [957,] 317 359 #>    [958,] 318 359 #>    [959,] 319 359 #>    [960,] 320 359 #>    [961,] 321 359 #>    [962,] 322 359 #>    [963,] 323 359 #>    [964,] 324 359 #>    [965,] 325 359 #>    [966,] 326 359 #>    [967,] 327 359 #>    [968,] 328 359 #>    [969,] 329 359 #>    [970,] 330 359 #>    [971,] 331 359 #>    [972,] 332 359 #>    [973,] 333 359 #>    [974,] 334 359 #>    [975,] 335 359 #>    [976,] 336 359 #>    [977,] 337 359 #>    [978,] 338 359 #>    [979,] 339 359 #>    [980,] 340 359 #>    [981,] 341 359 #>    [982,] 342 359 #>    [983,] 343 359 #>    [984,] 344 359 #>    [985,] 345 359 #>    [986,] 346 359 #>    [987,] 347 359 #>    [988,] 348 359 #>    [989,] 349 359 #>    [990,] 350 359 #>    [991,] 351 359 #>    [992,] 352 359 #>    [993,] 353 359 #>    [994,] 354 359 #>    [995,] 355 359 #>    [996,] 356 359 #>    [997,] 357 359 #>    [998,] 358 359 #>    [999,] 359 359 #>   [1000,] 360 359 #>   [1001,] 361 359 #>   [1002,] 362 359 #>   [1003,] 363 359 #>   [1004,] 364 359 #>   [1005,] 365 359 #>   [1006,] 366 359 #>   [1007,] 367 359 #>   [1008,] 368 359 #>   [1009,] 369 359 #>   [1010,] 370 359 #>   [1011,] 371 359 #>   [1012,] 372 359 #>   [1013,] 373 359 #>   [1014,] 374 359 #>   [1015,] 375 359 #>   [1016,] 376 359 #>   [1017,] 377 359 #>   [1018,] 378 359 #>   [1019,] 379 359 #>   [1020,] 380 359 #>   [1021,] 381 359 #>   [1022,] 382 359 #>   [1023,] 383 359 #>   [1024,] 384 359 #>   [1025,] 385 359 #>   [1026,] 386 359 #>   [1027,] 387 359 #>   [1028,] 388 359 #>   [1029,] 389 359 #>   [1030,] 390 359 #>   [1031,] 391 359 #>   [1032,] 392 359 #>   [1033,] 393 359 #>   [1034,] 394 359 #>   [1035,] 395 359 #>   [1036,] 396 359 #>   [1037,] 397 359 #>   [1038,] 398 359 #>   [1039,] 399 359 #>   [1040,] 400 359 #>   [1041,] 401 359 #>   [1042,] 402 359 #>   [1043,] 403 359 #>   [1044,] 404 359 #>   [1045,] 405 359 #>   [1046,] 406 359 #>   [1047,] 407 359 #>   [1048,] 408 359 #>   [1049,] 409 359 #>   [1050,] 410 359 #>   [1051,] 411 359 #>   [1052,] 412 359 #>   [1053,] 413 359 #>   [1054,] 414 359 #>   [1055,] 415 359 #>   [1056,] 416 359 #>   [1057,] 417 359 #>   [1058,] 418 359 #>   [1059,] 419 359 #>   [1060,] 420 359 #>   [1061,] 421 359 #>   [1062,] 422 359 #>   [1063,] 423 359 #>   [1064,] 424 359 #>   [1065,] 425 359 #>   [1066,] 426 359 #>   [1067,] 427 359 #>   [1068,] 428 359 #>   [1069,] 429 359 #>   [1070,] 430 359 #>   [1071,] 431 359 #>   [1072,] 432 359 #>   [1073,] 433 359 #>   [1074,] 434 359 #>   [1075,] 435 359 #>   [1076,] 436 359 #>   [1077,] 437 359 #>   [1078,] 438 359 #>   [1079,] 439 359 #>   [1080,] 440 359 #>   [1081,] 441 359 #>   [1082,] 442 359 #>   [1083,] 443 359 #>   [1084,] 444 359 #>   [1085,] 445 359 #>   [1086,] 446 359 #>   [1087,] 447 359 #>   [1088,] 448 359 #>   [1089,] 449 359 #>   [1090,] 450 359 #>   [1091,] 451 359 #>   [1092,] 452 359 #>   [1093,] 453 359 #>   [1094,] 454 359 #>   [1095,] 455 359 #>   [1096,] 456 359 #>   [1097,] 457 359 #>   [1098,] 458 359 #>   [1099,] 459 359 #>   [1100,] 460 359 #>   [1101,] 461 359 #>   [1102,] 462 359 #>   [1103,] 463 359 #>   [1104,] 464 359 #>   [1105,] 465 359 #>   [1106,] 466 359 #>   [1107,] 467 359 #>   [1108,] 468 359 #>   [1109,] 469 359 #>   [1110,] 470 359 #>   [1111,] 471 359 #>   [1112,] 472 359 #>   [1113,] 473 359 #>   [1114,] 474 359 #>   [1115,] 475 359 #>   [1116,] 476 359 #>   [1117,] 477 359 #>   [1118,] 478 359 #>   [1119,] 479 359 #>   [1120,] 480 359 #>   [1121,] 481 359 #>   [1122,] 482 359 #>   [1123,] 483 359 #>   [1124,] 484 359 #>   [1125,] 485 359 #>   [1126,] 486 359 #>   [1127,] 487 359 #>   [1128,] 488 359 #>   [1129,] 489 359 #>   [1130,] 490 359 #>   [1131,] 491 359 #>   [1132,] 492 359 #>   [1133,] 493 359 #>   [1134,] 494 359 #>   [1135,] 495 359 #>   [1136,] 496 359 #>   [1137,] 497 359 #>   [1138,] 498 359 #>   [1139,] 499 359 #>   [1140,] 500 359 #>   [1141,] 501 359 #>   [1142,] 502 359 #>   [1143,] 503 359 #>   [1144,] 504 359 #>   [1145,] 505 359 #>   [1146,] 506 359 #>   [1147,] 507 359 #>   [1148,] 508 359 #>   [1149,] 509 359 #>   [1150,] 510 359 #>   [1151,] 511 359 #>   [1152,] 512 359 #>   [1153,] 513 359 #>   [1154,] 514 359 #>   [1155,] 515 359 #>   [1156,] 516 359 #>   [1157,] 517 359 #>   [1158,] 518 359 #>   [1159,] 519 359 #>   [1160,] 520 359 #>   [1161,] 521 359 #>   [1162,] 522 359 #>   [1163,] 523 359 #>   [1164,] 524 359 #>   [1165,] 525 359 #>   [1166,] 526 359 #>   [1167,] 527 359 #>   [1168,] 528 359 #>   [1169,] 529 359 #>   [1170,] 530 359 #>   [1171,] 531 359 #>   [1172,] 532 359 #>   [1173,] 533 359 #>   [1174,] 534 359 #>   [1175,] 535 359 #>   [1176,] 536 359 #>   [1177,] 537 359 #>   [1178,] 538 359 #>   [1179,] 539 359 #>   [1180,] 540 359 #>   [1181,] 541 359 #>   [1182,] 542 359 #>   [1183,] 543 359 #>   [1184,] 544 359 #>   [1185,] 545 359 #>   [1186,] 546 359 #>   [1187,] 547 359 #>   [1188,] 548 359 #>   [1189,] 549 359 #>   [1190,] 550 359 #>   [1191,] 551 359 #>   [1192,] 552 359 #>   [1193,] 553 359 #>   [1194,] 554 359 #>   [1195,] 555 359 #>   [1196,] 556 359 #>   [1197,] 557 359 #>   [1198,] 558 359 #>   [1199,] 559 359 #>   [1200,] 560 359 #>   [1201,] 561 359 #>   [1202,] 562 359 #>   [1203,] 563 359 #>   [1204,] 564 359 #>   [1205,] 565 359 #>   [1206,] 566 359 #>   [1207,] 567 359 #>   [1208,] 568 359 #>   [1209,] 569 359 #>   [1210,] 570 359 #>   [1211,] 571 359 #>   [1212,] 572 359 #>   [1213,] 573 359 #>   [1214,] 574 359 #>   [1215,] 575 359 #>   [1216,] 576 359 #>   [1217,] 577 359 #>   [1218,] 578 359 #>   [1219,] 579 359 #>   [1220,] 580 359 #>   [1221,] 581 359 #>   [1222,] 582 359 #>   [1223,] 583 359 #>   [1224,] 584 359 #>   [1225,] 585 359 #>   [1226,] 586 359 #>   [1227,] 587 359 #>   [1228,] 588 359 #>   [1229,] 589 359 #>   [1230,] 590 359 #>   [1231,] 591 359 #>   [1232,] 592 359 #>   [1233,] 593 359 #>   [1234,] 594 359 #>   [1235,] 595 359 #>   [1236,] 596 359 #>   [1237,] 597 359 #>   [1238,] 598 359 #>   [1239,] 599 359 #>   [1240,] 600 359 #>   [1241,] 601 359 #>   [1242,] 602 359 #>   [1243,] 603 359 #>   [1244,] 604 359 #>   [1245,] 605 359 #>   [1246,] 606 359 #>   [1247,] 607 359 #>   [1248,] 608 359 #>   [1249,] 609 359 #>   [1250,] 610 359 #>   [1251,] 611 359 #>   [1252,] 612 359 #>   [1253,] 613 359 #>   [1254,] 614 359 #>   [1255,] 615 359 #>   [1256,] 616 359 #>   [1257,] 617 359 #>   [1258,] 618 359 #>   [1259,] 619 359 #>   [1260,] 620 359 #>   [1261,] 621 359 #>   [1262,] 622 359 #>   [1263,] 623 359 #>   [1264,] 624 359 #>   [1265,] 625 359 #>   [1266,] 626 359 #>   [1267,] 627 359 #>   [1268,] 628 359 #>   [1269,] 629 359 #>   [1270,] 630 359 #>   [1271,] 631 359 #>   [1272,] 632 359 #>   [1273,] 633 359 #>   [1274,] 634 359 #>   [1275,] 635 359 #>   [1276,] 636 359 #>   [1277,] 637 359 #>   [1278,] 638 359 #>   [1279,] 639 359 #>   [1280,] 640 359 #>   [1281,]   1 358 #>   [1282,]   2 358 #>   [1283,]   3 358 #>   [1284,]   4 358 #>   [1285,]   5 358 #>   [1286,]   6 358 #>   [1287,]   7 358 #>   [1288,]   8 358 #>   [1289,]   9 358 #>   [1290,]  10 358 #>   [1291,]  11 358 #>   [1292,]  12 358 #>   [1293,]  13 358 #>   [1294,]  14 358 #>   [1295,]  15 358 #>   [1296,]  16 358 #>   [1297,]  17 358 #>   [1298,]  18 358 #>   [1299,]  19 358 #>   [1300,]  20 358 #>   [1301,]  21 358 #>   [1302,]  22 358 #>   [1303,]  23 358 #>   [1304,]  24 358 #>   [1305,]  25 358 #>   [1306,]  26 358 #>   [1307,]  27 358 #>   [1308,]  28 358 #>   [1309,]  29 358 #>   [1310,]  30 358 #>   [1311,]  31 358 #>   [1312,]  32 358 #>   [1313,]  33 358 #>   [1314,]  34 358 #>   [1315,]  35 358 #>   [1316,]  36 358 #>   [1317,]  37 358 #>   [1318,]  38 358 #>   [1319,]  39 358 #>   [1320,]  40 358 #>   [1321,]  41 358 #>   [1322,]  42 358 #>   [1323,]  43 358 #>   [1324,]  44 358 #>   [1325,]  45 358 #>   [1326,]  46 358 #>   [1327,]  47 358 #>   [1328,]  48 358 #>   [1329,]  49 358 #>   [1330,]  50 358 #>   [1331,]  51 358 #>   [1332,]  52 358 #>   [1333,]  53 358 #>   [1334,]  54 358 #>   [1335,]  55 358 #>   [1336,]  56 358 #>   [1337,]  57 358 #>   [1338,]  58 358 #>   [1339,]  59 358 #>   [1340,]  60 358 #>   [1341,]  61 358 #>   [1342,]  62 358 #>   [1343,]  63 358 #>   [1344,]  64 358 #>   [1345,]  65 358 #>   [1346,]  66 358 #>   [1347,]  67 358 #>   [1348,]  68 358 #>   [1349,]  69 358 #>   [1350,]  70 358 #>   [1351,]  71 358 #>   [1352,]  72 358 #>   [1353,]  73 358 #>   [1354,]  74 358 #>   [1355,]  75 358 #>   [1356,]  76 358 #>   [1357,]  77 358 #>   [1358,]  78 358 #>   [1359,]  79 358 #>   [1360,]  80 358 #>   [1361,]  81 358 #>   [1362,]  82 358 #>   [1363,]  83 358 #>   [1364,]  84 358 #>   [1365,]  85 358 #>   [1366,]  86 358 #>   [1367,]  87 358 #>   [1368,]  88 358 #>   [1369,]  89 358 #>   [1370,]  90 358 #>   [1371,]  91 358 #>   [1372,]  92 358 #>   [1373,]  93 358 #>   [1374,]  94 358 #>   [1375,]  95 358 #>   [1376,]  96 358 #>   [1377,]  97 358 #>   [1378,]  98 358 #>   [1379,]  99 358 #>   [1380,] 100 358 #>   [1381,] 101 358 #>   [1382,] 102 358 #>   [1383,] 103 358 #>   [1384,] 104 358 #>   [1385,] 105 358 #>   [1386,] 106 358 #>   [1387,] 107 358 #>   [1388,] 108 358 #>   [1389,] 109 358 #>   [1390,] 110 358 #>   [1391,] 111 358 #>   [1392,] 112 358 #>   [1393,] 113 358 #>   [1394,] 114 358 #>   [1395,] 115 358 #>   [1396,] 116 358 #>   [1397,] 117 358 #>   [1398,] 118 358 #>   [1399,] 119 358 #>   [1400,] 120 358 #>   [1401,] 121 358 #>   [1402,] 122 358 #>   [1403,] 123 358 #>   [1404,] 124 358 #>   [1405,] 125 358 #>   [1406,] 126 358 #>   [1407,] 127 358 #>   [1408,] 128 358 #>   [1409,] 129 358 #>   [1410,] 130 358 #>   [1411,] 131 358 #>   [1412,] 132 358 #>   [1413,] 133 358 #>   [1414,] 134 358 #>   [1415,] 135 358 #>   [1416,] 136 358 #>   [1417,] 137 358 #>   [1418,] 138 358 #>   [1419,] 139 358 #>   [1420,] 140 358 #>   [1421,] 141 358 #>   [1422,] 142 358 #>   [1423,] 143 358 #>   [1424,] 144 358 #>   [1425,] 145 358 #>   [1426,] 146 358 #>   [1427,] 147 358 #>   [1428,] 148 358 #>   [1429,] 149 358 #>   [1430,] 150 358 #>   [1431,] 151 358 #>   [1432,] 152 358 #>   [1433,] 153 358 #>   [1434,] 154 358 #>   [1435,] 155 358 #>   [1436,] 156 358 #>   [1437,] 157 358 #>   [1438,] 158 358 #>   [1439,] 159 358 #>   [1440,] 160 358 #>   [1441,] 161 358 #>   [1442,] 162 358 #>   [1443,] 163 358 #>   [1444,] 164 358 #>   [1445,] 165 358 #>   [1446,] 166 358 #>   [1447,] 167 358 #>   [1448,] 168 358 #>   [1449,] 169 358 #>   [1450,] 170 358 #>   [1451,] 171 358 #>   [1452,] 172 358 #>   [1453,] 173 358 #>   [1454,] 174 358 #>   [1455,] 175 358 #>   [1456,] 176 358 #>   [1457,] 177 358 #>   [1458,] 178 358 #>   [1459,] 179 358 #>   [1460,] 180 358 #>   [1461,] 181 358 #>   [1462,] 182 358 #>   [1463,] 183 358 #>   [1464,] 184 358 #>   [1465,] 185 358 #>   [1466,] 186 358 #>   [1467,] 187 358 #>   [1468,] 188 358 #>   [1469,] 189 358 #>   [1470,] 190 358 #>   [1471,] 191 358 #>   [1472,] 192 358 #>   [1473,] 193 358 #>   [1474,] 194 358 #>   [1475,] 195 358 #>   [1476,] 196 358 #>   [1477,] 197 358 #>   [1478,] 198 358 #>   [1479,] 199 358 #>   [1480,] 200 358 #>   [1481,] 201 358 #>   [1482,] 202 358 #>   [1483,] 203 358 #>   [1484,] 204 358 #>   [1485,] 205 358 #>   [1486,] 206 358 #>   [1487,] 207 358 #>   [1488,] 208 358 #>   [1489,] 209 358 #>   [1490,] 210 358 #>   [1491,] 211 358 #>   [1492,] 212 358 #>   [1493,] 213 358 #>   [1494,] 214 358 #>   [1495,] 215 358 #>   [1496,] 216 358 #>   [1497,] 217 358 #>   [1498,] 218 358 #>   [1499,] 219 358 #>   [1500,] 220 358 #>   [1501,] 221 358 #>   [1502,] 222 358 #>   [1503,] 223 358 #>   [1504,] 224 358 #>   [1505,] 225 358 #>   [1506,] 226 358 #>   [1507,] 227 358 #>   [1508,] 228 358 #>   [1509,] 229 358 #>   [1510,] 230 358 #>   [1511,] 231 358 #>   [1512,] 232 358 #>   [1513,] 233 358 #>   [1514,] 234 358 #>   [1515,] 235 358 #>   [1516,] 236 358 #>   [1517,] 237 358 #>   [1518,] 238 358 #>   [1519,] 239 358 #>   [1520,] 240 358 #>   [1521,] 241 358 #>   [1522,] 242 358 #>   [1523,] 243 358 #>   [1524,] 244 358 #>   [1525,] 245 358 #>   [1526,] 246 358 #>   [1527,] 247 358 #>   [1528,] 248 358 #>   [1529,] 249 358 #>   [1530,] 250 358 #>   [1531,] 251 358 #>   [1532,] 252 358 #>   [1533,] 253 358 #>   [1534,] 254 358 #>   [1535,] 255 358 #>   [1536,] 256 358 #>   [1537,] 257 358 #>   [1538,] 258 358 #>   [1539,] 259 358 #>   [1540,] 260 358 #>   [1541,] 261 358 #>   [1542,] 262 358 #>   [1543,] 263 358 #>   [1544,] 264 358 #>   [1545,] 265 358 #>   [1546,] 266 358 #>   [1547,] 267 358 #>   [1548,] 268 358 #>   [1549,] 269 358 #>   [1550,] 270 358 #>   [1551,] 271 358 #>   [1552,] 272 358 #>   [1553,] 273 358 #>   [1554,] 274 358 #>   [1555,] 275 358 #>   [1556,] 276 358 #>   [1557,] 277 358 #>   [1558,] 278 358 #>   [1559,] 279 358 #>   [1560,] 280 358 #>   [1561,] 281 358 #>   [1562,] 282 358 #>   [1563,] 283 358 #>   [1564,] 284 358 #>   [1565,] 285 358 #>   [1566,] 286 358 #>   [1567,] 287 358 #>   [1568,] 288 358 #>   [1569,] 289 358 #>   [1570,] 290 358 #>   [1571,] 291 358 #>   [1572,] 292 358 #>   [1573,] 293 358 #>   [1574,] 294 358 #>   [1575,] 295 358 #>   [1576,] 296 358 #>   [1577,] 297 358 #>   [1578,] 298 358 #>   [1579,] 299 358 #>   [1580,] 300 358 #>   [1581,] 301 358 #>   [1582,] 302 358 #>   [1583,] 303 358 #>   [1584,] 304 358 #>   [1585,] 305 358 #>   [1586,] 306 358 #>   [1587,] 307 358 #>   [1588,] 308 358 #>   [1589,] 309 358 #>   [1590,] 310 358 #>   [1591,] 311 358 #>   [1592,] 312 358 #>   [1593,] 313 358 #>   [1594,] 314 358 #>   [1595,] 315 358 #>   [1596,] 316 358 #>   [1597,] 317 358 #>   [1598,] 318 358 #>   [1599,] 319 358 #>   [1600,] 320 358 #>   [1601,] 321 358 #>   [1602,] 322 358 #>   [1603,] 323 358 #>   [1604,] 324 358 #>   [1605,] 325 358 #>   [1606,] 326 358 #>   [1607,] 327 358 #>   [1608,] 328 358 #>   [1609,] 329 358 #>   [1610,] 330 358 #>   [1611,] 331 358 #>   [1612,] 332 358 #>   [1613,] 333 358 #>   [1614,] 334 358 #>   [1615,] 335 358 #>   [1616,] 336 358 #>   [1617,] 337 358 #>   [1618,] 338 358 #>   [1619,] 339 358 #>   [1620,] 340 358 #>   [1621,] 341 358 #>   [1622,] 342 358 #>   [1623,] 343 358 #>   [1624,] 344 358 #>   [1625,] 345 358 #>   [1626,] 346 358 #>   [1627,] 347 358 #>   [1628,] 348 358 #>   [1629,] 349 358 #>   [1630,] 350 358 #>   [1631,] 351 358 #>   [1632,] 352 358 #>   [1633,] 353 358 #>   [1634,] 354 358 #>   [1635,] 355 358 #>   [1636,] 356 358 #>   [1637,] 357 358 #>   [1638,] 358 358 #>   [1639,] 359 358 #>   [1640,] 360 358 #>   [1641,] 361 358 #>   [1642,] 362 358 #>   [1643,] 363 358 #>   [1644,] 364 358 #>   [1645,] 365 358 #>   [1646,] 366 358 #>   [1647,] 367 358 #>   [1648,] 368 358 #>   [1649,] 369 358 #>   [1650,] 370 358 #>   [1651,] 371 358 #>   [1652,] 372 358 #>   [1653,] 373 358 #>   [1654,] 374 358 #>   [1655,] 375 358 #>   [1656,] 376 358 #>   [1657,] 377 358 #>   [1658,] 378 358 #>   [1659,] 379 358 #>   [1660,] 380 358 #>   [1661,] 381 358 #>   [1662,] 382 358 #>   [1663,] 383 358 #>   [1664,] 384 358 #>   [1665,] 385 358 #>   [1666,] 386 358 #>   [1667,] 387 358 #>   [1668,] 388 358 #>   [1669,] 389 358 #>   [1670,] 390 358 #>   [1671,] 391 358 #>   [1672,] 392 358 #>   [1673,] 393 358 #>   [1674,] 394 358 #>   [1675,] 395 358 #>   [1676,] 396 358 #>   [1677,] 397 358 #>   [1678,] 398 358 #>   [1679,] 399 358 #>   [1680,] 400 358 #>   [1681,] 401 358 #>   [1682,] 402 358 #>   [1683,] 403 358 #>   [1684,] 404 358 #>   [1685,] 405 358 #>   [1686,] 406 358 #>   [1687,] 407 358 #>   [1688,] 408 358 #>   [1689,] 409 358 #>   [1690,] 410 358 #>   [1691,] 411 358 #>   [1692,] 412 358 #>   [1693,] 413 358 #>   [1694,] 414 358 #>   [1695,] 415 358 #>   [1696,] 416 358 #>   [1697,] 417 358 #>   [1698,] 418 358 #>   [1699,] 419 358 #>   [1700,] 420 358 #>   [1701,] 421 358 #>   [1702,] 422 358 #>   [1703,] 423 358 #>   [1704,] 424 358 #>   [1705,] 425 358 #>   [1706,] 426 358 #>   [1707,] 427 358 #>   [1708,] 428 358 #>   [1709,] 429 358 #>   [1710,] 430 358 #>   [1711,] 431 358 #>   [1712,] 432 358 #>   [1713,] 433 358 #>   [1714,] 434 358 #>   [1715,] 435 358 #>   [1716,] 436 358 #>   [1717,] 437 358 #>   [1718,] 438 358 #>   [1719,] 439 358 #>   [1720,] 440 358 #>   [1721,] 441 358 #>   [1722,] 442 358 #>   [1723,] 443 358 #>   [1724,] 444 358 #>   [1725,] 445 358 #>   [1726,] 446 358 #>   [1727,] 447 358 #>   [1728,] 448 358 #>   [1729,] 449 358 #>   [1730,] 450 358 #>   [1731,] 451 358 #>   [1732,] 452 358 #>   [1733,] 453 358 #>   [1734,] 454 358 #>   [1735,] 455 358 #>   [1736,] 456 358 #>   [1737,] 457 358 #>   [1738,] 458 358 #>   [1739,] 459 358 #>   [1740,] 460 358 #>   [1741,] 461 358 #>   [1742,] 462 358 #>   [1743,] 463 358 #>   [1744,] 464 358 #>   [1745,] 465 358 #>   [1746,] 466 358 #>   [1747,] 467 358 #>   [1748,] 468 358 #>   [1749,] 469 358 #>   [1750,] 470 358 #>   [1751,] 471 358 #>   [1752,] 472 358 #>   [1753,] 473 358 #>   [1754,] 474 358 #>   [1755,] 475 358 #>   [1756,] 476 358 #>   [1757,] 477 358 #>   [1758,] 478 358 #>   [1759,] 479 358 #>   [1760,] 480 358 #>   [1761,] 481 358 #>   [1762,] 482 358 #>   [1763,] 483 358 #>   [1764,] 484 358 #>   [1765,] 485 358 #>   [1766,] 486 358 #>   [1767,] 487 358 #>   [1768,] 488 358 #>   [1769,] 489 358 #>   [1770,] 490 358 #>   [1771,] 491 358 #>   [1772,] 492 358 #>   [1773,] 493 358 #>   [1774,] 494 358 #>   [1775,] 495 358 #>   [1776,] 496 358 #>   [1777,] 497 358 #>   [1778,] 498 358 #>   [1779,] 499 358 #>   [1780,] 500 358 #>   [1781,] 501 358 #>   [1782,] 502 358 #>   [1783,] 503 358 #>   [1784,] 504 358 #>   [1785,] 505 358 #>   [1786,] 506 358 #>   [1787,] 507 358 #>   [1788,] 508 358 #>   [1789,] 509 358 #>   [1790,] 510 358 #>   [1791,] 511 358 #>   [1792,] 512 358 #>   [1793,] 513 358 #>   [1794,] 514 358 #>   [1795,] 515 358 #>   [1796,] 516 358 #>   [1797,] 517 358 #>   [1798,] 518 358 #>   [1799,] 519 358 #>   [1800,] 520 358 #>   [1801,] 521 358 #>   [1802,] 522 358 #>   [1803,] 523 358 #>   [1804,] 524 358 #>   [1805,] 525 358 #>   [1806,] 526 358 #>   [1807,] 527 358 #>   [1808,] 528 358 #>   [1809,] 529 358 #>   [1810,] 530 358 #>   [1811,] 531 358 #>   [1812,] 532 358 #>   [1813,] 533 358 #>   [1814,] 534 358 #>   [1815,] 535 358 #>   [1816,] 536 358 #>   [1817,] 537 358 #>   [1818,] 538 358 #>   [1819,] 539 358 #>   [1820,] 540 358 #>   [1821,] 541 358 #>   [1822,] 542 358 #>   [1823,] 543 358 #>   [1824,] 544 358 #>   [1825,] 545 358 #>   [1826,] 546 358 #>   [1827,] 547 358 #>   [1828,] 548 358 #>   [1829,] 549 358 #>   [1830,] 550 358 #>   [1831,] 551 358 #>   [1832,] 552 358 #>   [1833,] 553 358 #>   [1834,] 554 358 #>   [1835,] 555 358 #>   [1836,] 556 358 #>   [1837,] 557 358 #>   [1838,] 558 358 #>   [1839,] 559 358 #>   [1840,] 560 358 #>   [1841,] 561 358 #>   [1842,] 562 358 #>   [1843,] 563 358 #>   [1844,] 564 358 #>   [1845,] 565 358 #>   [1846,] 566 358 #>   [1847,] 567 358 #>   [1848,] 568 358 #>   [1849,] 569 358 #>   [1850,] 570 358 #>   [1851,] 571 358 #>   [1852,] 572 358 #>   [1853,] 573 358 #>   [1854,] 574 358 #>   [1855,] 575 358 #>   [1856,] 576 358 #>   [1857,] 577 358 #>   [1858,] 578 358 #>   [1859,] 579 358 #>   [1860,] 580 358 #>   [1861,] 581 358 #>   [1862,] 582 358 #>   [1863,] 583 358 #>   [1864,] 584 358 #>   [1865,] 585 358 #>   [1866,] 586 358 #>   [1867,] 587 358 #>   [1868,] 588 358 #>   [1869,] 589 358 #>   [1870,] 590 358 #>   [1871,] 591 358 #>   [1872,] 592 358 #>   [1873,] 593 358 #>   [1874,] 594 358 #>   [1875,] 595 358 #>   [1876,] 596 358 #>   [1877,] 597 358 #>   [1878,] 598 358 #>   [1879,] 599 358 #>   [1880,] 600 358 #>   [1881,] 601 358 #>   [1882,] 602 358 #>   [1883,] 603 358 #>   [1884,] 604 358 #>   [1885,] 605 358 #>   [1886,] 606 358 #>   [1887,] 607 358 #>   [1888,] 608 358 #>   [1889,] 609 358 #>   [1890,] 610 358 #>   [1891,] 611 358 #>   [1892,] 612 358 #>   [1893,] 613 358 #>   [1894,] 614 358 #>   [1895,] 615 358 #>   [1896,] 616 358 #>   [1897,] 617 358 #>   [1898,] 618 358 #>   [1899,] 619 358 #>   [1900,] 620 358 #>   [1901,] 621 358 #>   [1902,] 622 358 #>   [1903,] 623 358 #>   [1904,] 624 358 #>   [1905,] 625 358 #>   [1906,] 626 358 #>   [1907,] 627 358 #>   [1908,] 628 358 #>   [1909,] 629 358 #>   [1910,] 630 358 #>   [1911,] 631 358 #>   [1912,] 632 358 #>   [1913,] 633 358 #>   [1914,] 634 358 #>   [1915,] 635 358 #>   [1916,] 636 358 #>   [1917,] 637 358 #>   [1918,] 638 358 #>   [1919,] 639 358 #>   [1920,] 640 358 #>   [1921,]   1 357 #>   [1922,]   2 357 #>   [1923,]   3 357 #>   [1924,]   4 357 #>   [1925,]   5 357 #>   [1926,]   6 357 #>   [1927,]   7 357 #>   [1928,]   8 357 #>   [1929,]   9 357 #>   [1930,]  10 357 #>   [1931,]  11 357 #>   [1932,]  12 357 #>   [1933,]  13 357 #>   [1934,]  14 357 #>   [1935,]  15 357 #>   [1936,]  16 357 #>   [1937,]  17 357 #>   [1938,]  18 357 #>   [1939,]  19 357 #>   [1940,]  20 357 #>   [1941,]  21 357 #>   [1942,]  22 357 #>   [1943,]  23 357 #>   [1944,]  24 357 #>   [1945,]  25 357 #>   [1946,]  26 357 #>   [1947,]  27 357 #>   [1948,]  28 357 #>   [1949,]  29 357 #>   [1950,]  30 357 #>   [1951,]  31 357 #>   [1952,]  32 357 #>   [1953,]  33 357 #>   [1954,]  34 357 #>   [1955,]  35 357 #>   [1956,]  36 357 #>   [1957,]  37 357 #>   [1958,]  38 357 #>   [1959,]  39 357 #>   [1960,]  40 357 #>   [1961,]  41 357 #>   [1962,]  42 357 #>   [1963,]  43 357 #>   [1964,]  44 357 #>   [1965,]  45 357 #>   [1966,]  46 357 #>   [1967,]  47 357 #>   [1968,]  48 357 #>   [1969,]  49 357 #>   [1970,]  50 357 #>   [1971,]  51 357 #>   [1972,]  52 357 #>   [1973,]  53 357 #>   [1974,]  54 357 #>   [1975,]  55 357 #>   [1976,]  56 357 #>   [1977,]  57 357 #>   [1978,]  58 357 #>   [1979,]  59 357 #>   [1980,]  60 357 #>   [1981,]  61 357 #>   [1982,]  62 357 #>   [1983,]  63 357 #>   [1984,]  64 357 #>   [1985,]  65 357 #>   [1986,]  66 357 #>   [1987,]  67 357 #>   [1988,]  68 357 #>   [1989,]  69 357 #>   [1990,]  70 357 #>   [1991,]  71 357 #>   [1992,]  72 357 #>   [1993,]  73 357 #>   [1994,]  74 357 #>   [1995,]  75 357 #>   [1996,]  76 357 #>   [1997,]  77 357 #>   [1998,]  78 357 #>   [1999,]  79 357 #>   [2000,]  80 357 #>   [2001,]  81 357 #>   [2002,]  82 357 #>   [2003,]  83 357 #>   [2004,]  84 357 #>   [2005,]  85 357 #>   [2006,]  86 357 #>   [2007,]  87 357 #>   [2008,]  88 357 #>   [2009,]  89 357 #>   [2010,]  90 357 #>   [2011,]  91 357 #>   [2012,]  92 357 #>   [2013,]  93 357 #>   [2014,]  94 357 #>   [2015,]  95 357 #>   [2016,]  96 357 #>   [2017,]  97 357 #>   [2018,]  98 357 #>   [2019,]  99 357 #>   [2020,] 100 357 #>   [2021,] 101 357 #>   [2022,] 102 357 #>   [2023,] 103 357 #>   [2024,] 104 357 #>   [2025,] 105 357 #>   [2026,] 106 357 #>   [2027,] 107 357 #>   [2028,] 108 357 #>   [2029,] 109 357 #>   [2030,] 110 357 #>   [2031,] 111 357 #>   [2032,] 112 357 #>   [2033,] 113 357 #>   [2034,] 114 357 #>   [2035,] 115 357 #>   [2036,] 116 357 #>   [2037,] 117 357 #>   [2038,] 118 357 #>   [2039,] 119 357 #>   [2040,] 120 357 #>   [2041,] 121 357 #>   [2042,] 122 357 #>   [2043,] 123 357 #>   [2044,] 124 357 #>   [2045,] 125 357 #>   [2046,] 126 357 #>   [2047,] 127 357 #>   [2048,] 128 357 #>   [2049,] 129 357 #>   [2050,] 130 357 #>   [2051,] 131 357 #>   [2052,] 132 357 #>   [2053,] 133 357 #>   [2054,] 134 357 #>   [2055,] 135 357 #>   [2056,] 136 357 #>   [2057,] 137 357 #>   [2058,] 138 357 #>   [2059,] 139 357 #>   [2060,] 140 357 #>   [2061,] 141 357 #>   [2062,] 142 357 #>   [2063,] 143 357 #>   [2064,] 144 357 #>   [2065,] 145 357 #>   [2066,] 146 357 #>   [2067,] 147 357 #>   [2068,] 148 357 #>   [2069,] 149 357 #>   [2070,] 150 357 #>   [2071,] 151 357 #>   [2072,] 152 357 #>   [2073,] 153 357 #>   [2074,] 154 357 #>   [2075,] 155 357 #>   [2076,] 156 357 #>   [2077,] 157 357 #>   [2078,] 158 357 #>   [2079,] 159 357 #>   [2080,] 160 357 #>   [2081,] 161 357 #>   [2082,] 162 357 #>   [2083,] 163 357 #>   [2084,] 164 357 #>   [2085,] 165 357 #>   [2086,] 166 357 #>   [2087,] 167 357 #>   [2088,] 168 357 #>   [2089,] 169 357 #>   [2090,] 170 357 #>   [2091,] 171 357 #>   [2092,] 172 357 #>   [2093,] 173 357 #>   [2094,] 174 357 #>   [2095,] 175 357 #>   [2096,] 176 357 #>   [2097,] 177 357 #>   [2098,] 178 357 #>   [2099,] 179 357 #>   [2100,] 180 357 #>   [2101,] 181 357 #>   [2102,] 182 357 #>   [2103,] 183 357 #>   [2104,] 184 357 #>   [2105,] 185 357 #>   [2106,] 186 357 #>   [2107,] 187 357 #>   [2108,] 188 357 #>   [2109,] 189 357 #>   [2110,] 190 357 #>   [2111,] 191 357 #>   [2112,] 192 357 #>   [2113,] 193 357 #>   [2114,] 194 357 #>   [2115,] 195 357 #>   [2116,] 196 357 #>   [2117,] 197 357 #>   [2118,] 198 357 #>   [2119,] 199 357 #>   [2120,] 200 357 #>   [2121,] 201 357 #>   [2122,] 202 357 #>   [2123,] 203 357 #>   [2124,] 204 357 #>   [2125,] 205 357 #>   [2126,] 206 357 #>   [2127,] 207 357 #>   [2128,] 208 357 #>   [2129,] 209 357 #>   [2130,] 210 357 #>   [2131,] 211 357 #>   [2132,] 212 357 #>   [2133,] 213 357 #>   [2134,] 214 357 #>   [2135,] 215 357 #>   [2136,] 216 357 #>   [2137,] 217 357 #>   [2138,] 218 357 #>   [2139,] 219 357 #>   [2140,] 220 357 #>   [2141,] 221 357 #>   [2142,] 222 357 #>   [2143,] 223 357 #>   [2144,] 224 357 #>   [2145,] 225 357 #>   [2146,] 226 357 #>   [2147,] 227 357 #>   [2148,] 228 357 #>   [2149,] 229 357 #>   [2150,] 230 357 #>   [2151,] 231 357 #>   [2152,] 232 357 #>   [2153,] 233 357 #>   [2154,] 234 357 #>   [2155,] 235 357 #>   [2156,] 236 357 #>   [2157,] 237 357 #>   [2158,] 238 357 #>   [2159,] 239 357 #>   [2160,] 240 357 #>   [2161,] 241 357 #>   [2162,] 242 357 #>   [2163,] 243 357 #>   [2164,] 244 357 #>   [2165,] 245 357 #>   [2166,] 246 357 #>   [2167,] 247 357 #>   [2168,] 248 357 #>   [2169,] 249 357 #>   [2170,] 250 357 #>   [2171,] 251 357 #>   [2172,] 252 357 #>   [2173,] 253 357 #>   [2174,] 254 357 #>   [2175,] 255 357 #>   [2176,] 256 357 #>   [2177,] 257 357 #>   [2178,] 258 357 #>   [2179,] 259 357 #>   [2180,] 260 357 #>   [2181,] 261 357 #>   [2182,] 262 357 #>   [2183,] 263 357 #>   [2184,] 264 357 #>   [2185,] 265 357 #>   [2186,] 266 357 #>   [2187,] 267 357 #>   [2188,] 268 357 #>   [2189,] 269 357 #>   [2190,] 270 357 #>   [2191,] 271 357 #>   [2192,] 272 357 #>   [2193,] 273 357 #>   [2194,] 274 357 #>   [2195,] 275 357 #>   [2196,] 276 357 #>   [2197,] 277 357 #>   [2198,] 278 357 #>   [2199,] 279 357 #>   [2200,] 280 357 #>   [2201,] 281 357 #>   [2202,] 282 357 #>   [2203,] 283 357 #>   [2204,] 284 357 #>   [2205,] 285 357 #>   [2206,] 286 357 #>   [2207,] 287 357 #>   [2208,] 288 357 #>   [2209,] 289 357 #>   [2210,] 290 357 #>   [2211,] 291 357 #>   [2212,] 292 357 #>   [2213,] 293 357 #>   [2214,] 294 357 #>   [2215,] 295 357 #>   [2216,] 296 357 #>   [2217,] 297 357 #>   [2218,] 298 357 #>   [2219,] 299 357 #>   [2220,] 300 357 #>   [2221,] 301 357 #>   [2222,] 302 357 #>   [2223,] 303 357 #>   [2224,] 304 357 #>   [2225,] 305 357 #>   [2226,] 306 357 #>   [2227,] 307 357 #>   [2228,] 308 357 #>   [2229,] 309 357 #>   [2230,] 310 357 #>   [2231,] 311 357 #>   [2232,] 312 357 #>   [2233,] 313 357 #>   [2234,] 314 357 #>   [2235,] 315 357 #>   [2236,] 316 357 #>   [2237,] 317 357 #>   [2238,] 318 357 #>   [2239,] 319 357 #>   [2240,] 320 357 #>   [2241,] 321 357 #>   [2242,] 322 357 #>   [2243,] 323 357 #>   [2244,] 324 357 #>   [2245,] 325 357 #>   [2246,] 326 357 #>   [2247,] 327 357 #>   [2248,] 328 357 #>   [2249,] 329 357 #>   [2250,] 330 357 #>   [2251,] 331 357 #>   [2252,] 332 357 #>   [2253,] 333 357 #>   [2254,] 334 357 #>   [2255,] 335 357 #>   [2256,] 336 357 #>   [2257,] 337 357 #>   [2258,] 338 357 #>   [2259,] 339 357 #>   [2260,] 340 357 #>   [2261,] 341 357 #>   [2262,] 342 357 #>   [2263,] 343 357 #>   [2264,] 344 357 #>   [2265,] 345 357 #>   [2266,] 346 357 #>   [2267,] 347 357 #>   [2268,] 348 357 #>   [2269,] 349 357 #>   [2270,] 350 357 #>   [2271,] 351 357 #>   [2272,] 352 357 #>   [2273,] 353 357 #>   [2274,] 354 357 #>   [2275,] 355 357 #>   [2276,] 356 357 #>   [2277,] 357 357 #>   [2278,] 358 357 #>   [2279,] 359 357 #>   [2280,] 360 357 #>   [2281,] 361 357 #>   [2282,] 362 357 #>   [2283,] 363 357 #>   [2284,] 364 357 #>   [2285,] 365 357 #>   [2286,] 366 357 #>   [2287,] 367 357 #>   [2288,] 368 357 #>   [2289,] 369 357 #>   [2290,] 370 357 #>   [2291,] 371 357 #>   [2292,] 372 357 #>   [2293,] 373 357 #>   [2294,] 374 357 #>   [2295,] 375 357 #>   [2296,] 376 357 #>   [2297,] 377 357 #>   [2298,] 378 357 #>   [2299,] 379 357 #>   [2300,] 380 357 #>   [2301,] 381 357 #>   [2302,] 382 357 #>   [2303,] 383 357 #>   [2304,] 384 357 #>   [2305,] 385 357 #>   [2306,] 386 357 #>   [2307,] 387 357 #>   [2308,] 388 357 #>   [2309,] 389 357 #>   [2310,] 390 357 #>   [2311,] 391 357 #>   [2312,] 392 357 #>   [2313,] 393 357 #>   [2314,] 394 357 #>   [2315,] 395 357 #>   [2316,] 396 357 #>   [2317,] 397 357 #>   [2318,] 398 357 #>   [2319,] 399 357 #>   [2320,] 400 357 #>   [2321,] 401 357 #>   [2322,] 402 357 #>   [2323,] 403 357 #>   [2324,] 404 357 #>   [2325,] 405 357 #>   [2326,] 406 357 #>   [2327,] 407 357 #>   [2328,] 408 357 #>   [2329,] 409 357 #>   [2330,] 410 357 #>   [2331,] 411 357 #>   [2332,] 412 357 #>   [2333,] 413 357 #>   [2334,] 414 357 #>   [2335,] 415 357 #>   [2336,] 416 357 #>   [2337,] 417 357 #>   [2338,] 418 357 #>   [2339,] 419 357 #>   [2340,] 420 357 #>   [2341,] 421 357 #>   [2342,] 422 357 #>   [2343,] 423 357 #>   [2344,] 424 357 #>   [2345,] 425 357 #>   [2346,] 426 357 #>   [2347,] 427 357 #>   [2348,] 428 357 #>   [2349,] 429 357 #>   [2350,] 430 357 #>   [2351,] 431 357 #>   [2352,] 432 357 #>   [2353,] 433 357 #>   [2354,] 434 357 #>   [2355,] 435 357 #>   [2356,] 436 357 #>   [2357,] 437 357 #>   [2358,] 438 357 #>   [2359,] 439 357 #>   [2360,] 440 357 #>   [2361,] 441 357 #>   [2362,] 442 357 #>   [2363,] 443 357 #>   [2364,] 444 357 #>   [2365,] 445 357 #>   [2366,] 446 357 #>   [2367,] 447 357 #>   [2368,] 448 357 #>   [2369,] 449 357 #>   [2370,] 450 357 #>   [2371,] 451 357 #>   [2372,] 452 357 #>   [2373,] 453 357 #>   [2374,] 454 357 #>   [2375,] 455 357 #>   [2376,] 456 357 #>   [2377,] 457 357 #>   [2378,] 458 357 #>   [2379,] 459 357 #>   [2380,] 460 357 #>   [2381,] 461 357 #>   [2382,] 462 357 #>   [2383,] 463 357 #>   [2384,] 464 357 #>   [2385,] 465 357 #>   [2386,] 466 357 #>   [2387,] 467 357 #>   [2388,] 468 357 #>   [2389,] 469 357 #>   [2390,] 470 357 #>   [2391,] 471 357 #>   [2392,] 472 357 #>   [2393,] 473 357 #>   [2394,] 474 357 #>   [2395,] 475 357 #>   [2396,] 476 357 #>   [2397,] 477 357 #>   [2398,] 478 357 #>   [2399,] 479 357 #>   [2400,] 480 357 #>   [2401,] 481 357 #>   [2402,] 482 357 #>   [2403,] 483 357 #>   [2404,] 484 357 #>   [2405,] 485 357 #>   [2406,] 486 357 #>   [2407,] 487 357 #>   [2408,] 488 357 #>   [2409,] 489 357 #>   [2410,] 490 357 #>   [2411,] 491 357 #>   [2412,] 492 357 #>   [2413,] 493 357 #>   [2414,] 494 357 #>   [2415,] 495 357 #>   [2416,] 496 357 #>   [2417,] 497 357 #>   [2418,] 498 357 #>   [2419,] 499 357 #>   [2420,] 500 357 #>   [2421,] 501 357 #>   [2422,] 502 357 #>   [2423,] 503 357 #>   [2424,] 504 357 #>   [2425,] 505 357 #>   [2426,] 506 357 #>   [2427,] 507 357 #>   [2428,] 508 357 #>   [2429,] 509 357 #>   [2430,] 510 357 #>   [2431,] 511 357 #>   [2432,] 512 357 #>   [2433,] 513 357 #>   [2434,] 514 357 #>   [2435,] 515 357 #>   [2436,] 516 357 #>   [2437,] 517 357 #>   [2438,] 518 357 #>   [2439,] 519 357 #>   [2440,] 520 357 #>   [2441,] 521 357 #>   [2442,] 522 357 #>   [2443,] 523 357 #>   [2444,] 524 357 #>   [2445,] 525 357 #>   [2446,] 526 357 #>   [2447,] 527 357 #>   [2448,] 528 357 #>   [2449,] 529 357 #>   [2450,] 530 357 #>   [2451,] 531 357 #>   [2452,] 532 357 #>   [2453,] 533 357 #>   [2454,] 534 357 #>   [2455,] 535 357 #>   [2456,] 536 357 #>   [2457,] 537 357 #>   [2458,] 538 357 #>   [2459,] 539 357 #>   [2460,] 540 357 #>   [2461,] 541 357 #>   [2462,] 542 357 #>   [2463,] 543 357 #>   [2464,] 544 357 #>   [2465,] 545 357 #>   [2466,] 546 357 #>   [2467,] 547 357 #>   [2468,] 548 357 #>   [2469,] 549 357 #>   [2470,] 550 357 #>   [2471,] 551 357 #>   [2472,] 552 357 #>   [2473,] 553 357 #>   [2474,] 554 357 #>   [2475,] 555 357 #>   [2476,] 556 357 #>   [2477,] 557 357 #>   [2478,] 558 357 #>   [2479,] 559 357 #>   [2480,] 560 357 #>   [2481,] 561 357 #>   [2482,] 562 357 #>   [2483,] 563 357 #>   [2484,] 564 357 #>   [2485,] 565 357 #>   [2486,] 566 357 #>   [2487,] 567 357 #>   [2488,] 568 357 #>   [2489,] 569 357 #>   [2490,] 570 357 #>   [2491,] 571 357 #>   [2492,] 572 357 #>   [2493,] 573 357 #>   [2494,] 574 357 #>   [2495,] 575 357 #>   [2496,] 576 357 #>   [2497,] 577 357 #>   [2498,] 578 357 #>   [2499,] 579 357 #>   [2500,] 580 357 #>   [2501,] 581 357 #>   [2502,] 582 357 #>   [2503,] 583 357 #>   [2504,] 584 357 #>   [2505,] 585 357 #>   [2506,] 586 357 #>   [2507,] 587 357 #>   [2508,] 588 357 #>   [2509,] 589 357 #>   [2510,] 590 357 #>   [2511,] 591 357 #>   [2512,] 592 357 #>   [2513,] 593 357 #>   [2514,] 594 357 #>   [2515,] 595 357 #>   [2516,] 596 357 #>   [2517,] 597 357 #>   [2518,] 598 357 #>   [2519,] 599 357 #>   [2520,] 600 357 #>   [2521,] 601 357 #>   [2522,] 602 357 #>   [2523,] 603 357 #>   [2524,] 604 357 #>   [2525,] 605 357 #>   [2526,] 606 357 #>   [2527,] 607 357 #>   [2528,] 608 357 #>   [2529,] 609 357 #>   [2530,] 610 357 #>   [2531,] 611 357 #>   [2532,] 612 357 #>   [2533,] 613 357 #>   [2534,] 614 357 #>   [2535,] 615 357 #>   [2536,] 616 357 #>   [2537,] 617 357 #>   [2538,] 618 357 #>   [2539,] 619 357 #>   [2540,] 620 357 #>   [2541,] 621 357 #>   [2542,] 622 357 #>   [2543,] 623 357 #>   [2544,] 624 357 #>   [2545,] 625 357 #>   [2546,] 626 357 #>   [2547,] 627 357 #>   [2548,] 628 357 #>   [2549,] 629 357 #>   [2550,] 630 357 #>   [2551,] 631 357 #>   [2552,] 632 357 #>   [2553,] 633 357 #>   [2554,] 634 357 #>   [2555,] 635 357 #>   [2556,] 636 357 #>   [2557,] 637 357 #>   [2558,] 638 357 #>   [2559,] 639 357 #>   [2560,] 640 357 #>   [2561,]   1 356 #>   [2562,]   2 356 #>   [2563,]   3 356 #>   [2564,]   4 356 #>   [2565,]   5 356 #>   [2566,]   6 356 #>   [2567,]   7 356 #>   [2568,]   8 356 #>   [2569,]   9 356 #>   [2570,]  10 356 #>   [2571,]  11 356 #>   [2572,]  12 356 #>   [2573,]  13 356 #>   [2574,]  14 356 #>   [2575,]  15 356 #>   [2576,]  16 356 #>   [2577,]  17 356 #>   [2578,]  18 356 #>   [2579,]  19 356 #>   [2580,]  20 356 #>   [2581,]  21 356 #>   [2582,]  22 356 #>   [2583,]  23 356 #>   [2584,]  24 356 #>   [2585,]  25 356 #>   [2586,]  26 356 #>   [2587,]  27 356 #>   [2588,]  28 356 #>   [2589,]  29 356 #>   [2590,]  30 356 #>   [2591,]  31 356 #>   [2592,]  32 356 #>   [2593,]  33 356 #>   [2594,]  34 356 #>   [2595,]  35 356 #>   [2596,]  36 356 #>   [2597,]  37 356 #>   [2598,]  38 356 #>   [2599,]  39 356 #>   [2600,]  40 356 #>   [2601,]  41 356 #>   [2602,]  42 356 #>   [2603,]  43 356 #>   [2604,]  44 356 #>   [2605,]  45 356 #>   [2606,]  46 356 #>   [2607,]  47 356 #>   [2608,]  48 356 #>   [2609,]  49 356 #>   [2610,]  50 356 #>   [2611,]  51 356 #>   [2612,]  52 356 #>   [2613,]  53 356 #>   [2614,]  54 356 #>   [2615,]  55 356 #>   [2616,]  56 356 #>   [2617,]  57 356 #>   [2618,]  58 356 #>   [2619,]  59 356 #>   [2620,]  60 356 #>   [2621,]  61 356 #>   [2622,]  62 356 #>   [2623,]  63 356 #>   [2624,]  64 356 #>   [2625,]  65 356 #>   [2626,]  66 356 #>   [2627,]  67 356 #>   [2628,]  68 356 #>   [2629,]  69 356 #>   [2630,]  70 356 #>   [2631,]  71 356 #>   [2632,]  72 356 #>   [2633,]  73 356 #>   [2634,]  74 356 #>   [2635,]  75 356 #>   [2636,]  76 356 #>   [2637,]  77 356 #>   [2638,]  78 356 #>   [2639,]  79 356 #>   [2640,]  80 356 #>   [2641,]  81 356 #>   [2642,]  82 356 #>   [2643,]  83 356 #>   [2644,]  84 356 #>   [2645,]  85 356 #>   [2646,]  86 356 #>   [2647,]  87 356 #>   [2648,]  88 356 #>   [2649,]  89 356 #>   [2650,]  90 356 #>   [2651,]  91 356 #>   [2652,]  92 356 #>   [2653,]  93 356 #>   [2654,]  94 356 #>   [2655,]  95 356 #>   [2656,]  96 356 #>   [2657,]  97 356 #>   [2658,]  98 356 #>   [2659,]  99 356 #>   [2660,] 100 356 #>   [2661,] 101 356 #>   [2662,] 102 356 #>   [2663,] 103 356 #>   [2664,] 104 356 #>   [2665,] 105 356 #>   [2666,] 106 356 #>   [2667,] 107 356 #>   [2668,] 108 356 #>   [2669,] 109 356 #>   [2670,] 110 356 #>   [2671,] 111 356 #>   [2672,] 112 356 #>   [2673,] 113 356 #>   [2674,] 114 356 #>   [2675,] 115 356 #>   [2676,] 116 356 #>   [2677,] 117 356 #>   [2678,] 118 356 #>   [2679,] 119 356 #>   [2680,] 120 356 #>   [2681,] 121 356 #>   [2682,] 122 356 #>   [2683,] 123 356 #>   [2684,] 124 356 #>   [2685,] 125 356 #>   [2686,] 126 356 #>   [2687,] 127 356 #>   [2688,] 128 356 #>   [2689,] 129 356 #>   [2690,] 130 356 #>   [2691,] 131 356 #>   [2692,] 132 356 #>   [2693,] 133 356 #>   [2694,] 134 356 #>   [2695,] 135 356 #>   [2696,] 136 356 #>   [2697,] 137 356 #>   [2698,] 138 356 #>   [2699,] 139 356 #>   [2700,] 140 356 #>   [2701,] 141 356 #>   [2702,] 142 356 #>   [2703,] 143 356 #>   [2704,] 144 356 #>   [2705,] 145 356 #>   [2706,] 146 356 #>   [2707,] 147 356 #>   [2708,] 148 356 #>   [2709,] 149 356 #>   [2710,] 150 356 #>   [2711,] 151 356 #>   [2712,] 152 356 #>   [2713,] 153 356 #>   [2714,] 154 356 #>   [2715,] 155 356 #>   [2716,] 156 356 #>   [2717,] 157 356 #>   [2718,] 158 356 #>   [2719,] 159 356 #>   [2720,] 160 356 #>   [2721,] 161 356 #>   [2722,] 162 356 #>   [2723,] 163 356 #>   [2724,] 164 356 #>   [2725,] 165 356 #>   [2726,] 166 356 #>   [2727,] 167 356 #>   [2728,] 168 356 #>   [2729,] 169 356 #>   [2730,] 170 356 #>   [2731,] 171 356 #>   [2732,] 172 356 #>   [2733,] 173 356 #>   [2734,] 174 356 #>   [2735,] 175 356 #>   [2736,] 176 356 #>   [2737,] 177 356 #>   [2738,] 178 356 #>   [2739,] 179 356 #>   [2740,] 180 356 #>   [2741,] 181 356 #>   [2742,] 182 356 #>   [2743,] 183 356 #>   [2744,] 184 356 #>   [2745,] 185 356 #>   [2746,] 186 356 #>   [2747,] 187 356 #>   [2748,] 188 356 #>   [2749,] 189 356 #>   [2750,] 190 356 #>   [2751,] 191 356 #>   [2752,] 192 356 #>   [2753,] 193 356 #>   [2754,] 194 356 #>   [2755,] 195 356 #>   [2756,] 196 356 #>   [2757,] 197 356 #>   [2758,] 198 356 #>   [2759,] 199 356 #>   [2760,] 200 356 #>   [2761,] 201 356 #>   [2762,] 202 356 #>   [2763,] 203 356 #>   [2764,] 204 356 #>   [2765,] 205 356 #>   [2766,] 206 356 #>   [2767,] 207 356 #>   [2768,] 208 356 #>   [2769,] 209 356 #>   [2770,] 210 356 #>   [2771,] 211 356 #>   [2772,] 212 356 #>   [2773,] 213 356 #>   [2774,] 214 356 #>   [2775,] 215 356 #>   [2776,] 216 356 #>   [2777,] 217 356 #>   [2778,] 218 356 #>   [2779,] 219 356 #>   [2780,] 220 356 #>   [2781,] 221 356 #>   [2782,] 222 356 #>   [2783,] 223 356 #>   [2784,] 224 356 #>   [2785,] 225 356 #>   [2786,] 226 356 #>   [2787,] 227 356 #>   [2788,] 228 356 #>   [2789,] 229 356 #>   [2790,] 230 356 #>   [2791,] 231 356 #>   [2792,] 232 356 #>   [2793,] 233 356 #>   [2794,] 234 356 #>   [2795,] 235 356 #>   [2796,] 236 356 #>   [2797,] 237 356 #>   [2798,] 238 356 #>   [2799,] 239 356 #>   [2800,] 240 356 #>   [2801,] 241 356 #>   [2802,] 242 356 #>   [2803,] 243 356 #>   [2804,] 244 356 #>   [2805,] 245 356 #>   [2806,] 246 356 #>   [2807,] 247 356 #>   [2808,] 248 356 #>   [2809,] 249 356 #>   [2810,] 250 356 #>   [2811,] 251 356 #>   [2812,] 252 356 #>   [2813,] 253 356 #>   [2814,] 254 356 #>   [2815,] 255 356 #>   [2816,] 256 356 #>   [2817,] 257 356 #>   [2818,] 258 356 #>   [2819,] 259 356 #>   [2820,] 260 356 #>   [2821,] 261 356 #>   [2822,] 262 356 #>   [2823,] 263 356 #>   [2824,] 264 356 #>   [2825,] 265 356 #>   [2826,] 266 356 #>   [2827,] 267 356 #>   [2828,] 268 356 #>   [2829,] 269 356 #>   [2830,] 270 356 #>   [2831,] 271 356 #>   [2832,] 272 356 #>   [2833,] 273 356 #>   [2834,] 274 356 #>   [2835,] 275 356 #>   [2836,] 276 356 #>   [2837,] 277 356 #>   [2838,] 278 356 #>   [2839,] 279 356 #>   [2840,] 280 356 #>   [2841,] 281 356 #>   [2842,] 282 356 #>   [2843,] 283 356 #>   [2844,] 284 356 #>   [2845,] 285 356 #>   [2846,] 286 356 #>   [2847,] 287 356 #>   [2848,] 288 356 #>   [2849,] 289 356 #>   [2850,] 290 356 #>   [2851,] 291 356 #>   [2852,] 292 356 #>   [2853,] 293 356 #>   [2854,] 294 356 #>   [2855,] 295 356 #>   [2856,] 296 356 #>   [2857,] 297 356 #>   [2858,] 298 356 #>   [2859,] 299 356 #>   [2860,] 300 356 #>   [2861,] 301 356 #>   [2862,] 302 356 #>   [2863,] 303 356 #>   [2864,] 304 356 #>   [2865,] 305 356 #>   [2866,] 306 356 #>   [2867,] 307 356 #>   [2868,] 308 356 #>   [2869,] 309 356 #>   [2870,] 310 356 #>   [2871,] 311 356 #>   [2872,] 312 356 #>   [2873,] 313 356 #>   [2874,] 314 356 #>   [2875,] 315 356 #>   [2876,] 316 356 #>   [2877,] 317 356 #>   [2878,] 318 356 #>   [2879,] 319 356 #>   [2880,] 320 356 #>   [2881,] 321 356 #>   [2882,] 322 356 #>   [2883,] 323 356 #>   [2884,] 324 356 #>   [2885,] 325 356 #>   [2886,] 326 356 #>   [2887,] 327 356 #>   [2888,] 328 356 #>   [2889,] 329 356 #>   [2890,] 330 356 #>   [2891,] 331 356 #>   [2892,] 332 356 #>   [2893,] 333 356 #>   [2894,] 334 356 #>   [2895,] 335 356 #>   [2896,] 336 356 #>   [2897,] 337 356 #>   [2898,] 338 356 #>   [2899,] 339 356 #>   [2900,] 340 356 #>   [2901,] 341 356 #>   [2902,] 342 356 #>   [2903,] 343 356 #>   [2904,] 344 356 #>   [2905,] 345 356 #>   [2906,] 346 356 #>   [2907,] 347 356 #>   [2908,] 348 356 #>   [2909,] 349 356 #>   [2910,] 350 356 #>   [2911,] 351 356 #>   [2912,] 352 356 #>   [2913,] 353 356 #>   [2914,] 354 356 #>   [2915,] 355 356 #>   [2916,] 356 356 #>   [2917,] 357 356 #>   [2918,] 358 356 #>   [2919,] 359 356 #>   [2920,] 360 356 #>   [2921,] 361 356 #>   [2922,] 362 356 #>   [2923,] 363 356 #>   [2924,] 364 356 #>   [2925,] 365 356 #>   [2926,] 366 356 #>   [2927,] 367 356 #>   [2928,] 368 356 #>   [2929,] 369 356 #>   [2930,] 370 356 #>   [2931,] 371 356 #>   [2932,] 372 356 #>   [2933,] 373 356 #>   [2934,] 374 356 #>   [2935,] 375 356 #>   [2936,] 376 356 #>   [2937,] 377 356 #>   [2938,] 378 356 #>   [2939,] 379 356 #>   [2940,] 380 356 #>   [2941,] 381 356 #>   [2942,] 382 356 #>   [2943,] 383 356 #>   [2944,] 384 356 #>   [2945,] 385 356 #>   [2946,] 386 356 #>   [2947,] 387 356 #>   [2948,] 388 356 #>   [2949,] 389 356 #>   [2950,] 390 356 #>   [2951,] 391 356 #>   [2952,] 392 356 #>   [2953,] 393 356 #>   [2954,] 394 356 #>   [2955,] 395 356 #>   [2956,] 396 356 #>   [2957,] 397 356 #>   [2958,] 398 356 #>   [2959,] 399 356 #>   [2960,] 400 356 #>   [2961,] 401 356 #>   [2962,] 402 356 #>   [2963,] 403 356 #>   [2964,] 404 356 #>   [2965,] 405 356 #>   [2966,] 406 356 #>   [2967,] 407 356 #>   [2968,] 408 356 #>   [2969,] 409 356 #>   [2970,] 410 356 #>   [2971,] 411 356 #>   [2972,] 412 356 #>   [2973,] 413 356 #>   [2974,] 414 356 #>   [2975,] 415 356 #>   [2976,] 416 356 #>   [2977,] 417 356 #>   [2978,] 418 356 #>   [2979,] 419 356 #>   [2980,] 420 356 #>   [2981,] 421 356 #>   [2982,] 422 356 #>   [2983,] 423 356 #>   [2984,] 424 356 #>   [2985,] 425 356 #>   [2986,] 426 356 #>   [2987,] 427 356 #>   [2988,] 428 356 #>   [2989,] 429 356 #>   [2990,] 430 356 #>   [2991,] 431 356 #>   [2992,] 432 356 #>   [2993,] 433 356 #>   [2994,] 434 356 #>   [2995,] 435 356 #>   [2996,] 436 356 #>   [2997,] 437 356 #>   [2998,] 438 356 #>   [2999,] 439 356 #>   [3000,] 440 356 #>   [3001,] 441 356 #>   [3002,] 442 356 #>   [3003,] 443 356 #>   [3004,] 444 356 #>   [3005,] 445 356 #>   [3006,] 446 356 #>   [3007,] 447 356 #>   [3008,] 448 356 #>   [3009,] 449 356 #>   [3010,] 450 356 #>   [3011,] 451 356 #>   [3012,] 452 356 #>   [3013,] 453 356 #>   [3014,] 454 356 #>   [3015,] 455 356 #>   [3016,] 456 356 #>   [3017,] 457 356 #>   [3018,] 458 356 #>   [3019,] 459 356 #>   [3020,] 460 356 #>   [3021,] 461 356 #>   [3022,] 462 356 #>   [3023,] 463 356 #>   [3024,] 464 356 #>   [3025,] 465 356 #>   [3026,] 466 356 #>   [3027,] 467 356 #>   [3028,] 468 356 #>   [3029,] 469 356 #>   [3030,] 470 356 #>   [3031,] 471 356 #>   [3032,] 472 356 #>   [3033,] 473 356 #>   [3034,] 474 356 #>   [3035,] 475 356 #>   [3036,] 476 356 #>   [3037,] 477 356 #>   [3038,] 478 356 #>   [3039,] 479 356 #>   [3040,] 480 356 #>   [3041,] 481 356 #>   [3042,] 482 356 #>   [3043,] 483 356 #>   [3044,] 484 356 #>   [3045,] 485 356 #>   [3046,] 486 356 #>   [3047,] 487 356 #>   [3048,] 488 356 #>   [3049,] 489 356 #>   [3050,] 490 356 #>   [3051,] 491 356 #>   [3052,] 492 356 #>   [3053,] 493 356 #>   [3054,] 494 356 #>   [3055,] 495 356 #>   [3056,] 496 356 #>   [3057,] 497 356 #>   [3058,] 498 356 #>   [3059,] 499 356 #>   [3060,] 500 356 #>   [3061,] 501 356 #>   [3062,] 502 356 #>   [3063,] 503 356 #>   [3064,] 504 356 #>   [3065,] 505 356 #>   [3066,] 506 356 #>   [3067,] 507 356 #>   [3068,] 508 356 #>   [3069,] 509 356 #>   [3070,] 510 356 #>   [3071,] 511 356 #>   [3072,] 512 356 #>   [3073,] 513 356 #>   [3074,] 514 356 #>   [3075,] 515 356 #>   [3076,] 516 356 #>   [3077,] 517 356 #>   [3078,] 518 356 #>   [3079,] 519 356 #>   [3080,] 520 356 #>   [3081,] 521 356 #>   [3082,] 522 356 #>   [3083,] 523 356 #>   [3084,] 524 356 #>   [3085,] 525 356 #>   [3086,] 526 356 #>   [3087,] 527 356 #>   [3088,] 528 356 #>   [3089,] 529 356 #>   [3090,] 530 356 #>   [3091,] 531 356 #>   [3092,] 532 356 #>   [3093,] 533 356 #>   [3094,] 534 356 #>   [3095,] 535 356 #>   [3096,] 536 356 #>   [3097,] 537 356 #>   [3098,] 538 356 #>   [3099,] 539 356 #>   [3100,] 540 356 #>   [3101,] 541 356 #>   [3102,] 542 356 #>   [3103,] 543 356 #>   [3104,] 544 356 #>   [3105,] 545 356 #>   [3106,] 546 356 #>   [3107,] 547 356 #>   [3108,] 548 356 #>   [3109,] 549 356 #>   [3110,] 550 356 #>   [3111,] 551 356 #>   [3112,] 552 356 #>   [3113,] 553 356 #>   [3114,] 554 356 #>   [3115,] 555 356 #>   [3116,] 556 356 #>   [3117,] 557 356 #>   [3118,] 558 356 #>   [3119,] 559 356 #>   [3120,] 560 356 #>   [3121,] 561 356 #>   [3122,] 562 356 #>   [3123,] 563 356 #>   [3124,] 564 356 #>   [3125,] 565 356 #>   [3126,] 566 356 #>   [3127,] 567 356 #>   [3128,] 568 356 #>   [3129,] 569 356 #>   [3130,] 570 356 #>   [3131,] 571 356 #>   [3132,] 572 356 #>   [3133,] 573 356 #>   [3134,] 574 356 #>   [3135,] 575 356 #>   [3136,] 576 356 #>   [3137,] 577 356 #>   [3138,] 578 356 #>   [3139,] 579 356 #>   [3140,] 580 356 #>   [3141,] 581 356 #>   [3142,] 582 356 #>   [3143,] 583 356 #>   [3144,] 584 356 #>   [3145,] 585 356 #>   [3146,] 586 356 #>   [3147,] 587 356 #>   [3148,] 588 356 #>   [3149,] 589 356 #>   [3150,] 590 356 #>   [3151,] 591 356 #>   [3152,] 592 356 #>   [3153,] 593 356 #>   [3154,] 594 356 #>   [3155,] 595 356 #>   [3156,] 596 356 #>   [3157,] 597 356 #>   [3158,] 598 356 #>   [3159,] 599 356 #>   [3160,] 600 356 #>   [3161,] 601 356 #>   [3162,] 602 356 #>   [3163,] 603 356 #>   [3164,] 604 356 #>   [3165,] 605 356 #>   [3166,] 606 356 #>   [3167,] 607 356 #>   [3168,] 608 356 #>   [3169,] 609 356 #>   [3170,] 610 356 #>   [3171,] 611 356 #>   [3172,] 612 356 #>   [3173,] 613 356 #>   [3174,] 614 356 #>   [3175,] 615 356 #>   [3176,] 616 356 #>   [3177,] 617 356 #>   [3178,] 618 356 #>   [3179,] 619 356 #>   [3180,] 620 356 #>   [3181,] 621 356 #>   [3182,] 622 356 #>   [3183,] 623 356 #>   [3184,] 624 356 #>   [3185,] 625 356 #>   [3186,] 626 356 #>   [3187,] 627 356 #>   [3188,] 628 356 #>   [3189,] 629 356 #>   [3190,] 630 356 #>   [3191,] 631 356 #>   [3192,] 632 356 #>   [3193,] 633 356 #>   [3194,] 634 356 #>   [3195,] 635 356 #>   [3196,] 636 356 #>   [3197,] 637 356 #>   [3198,] 638 356 #>   [3199,] 639 356 #>   [3200,] 640 356 #>   [3201,]   1 355 #>   [3202,]   2 355 #>   [3203,]   3 355 #>   [3204,]   4 355 #>   [3205,]   5 355 #>   [3206,]   6 355 #>   [3207,]   7 355 #>   [3208,]   8 355 #>   [3209,]   9 355 #>   [3210,]  10 355 #>   [3211,]  11 355 #>   [3212,]  12 355 #>   [3213,]  13 355 #>   [3214,]  14 355 #>   [3215,]  15 355 #>   [3216,]  16 355 #>   [3217,]  17 355 #>   [3218,]  18 355 #>   [3219,]  19 355 #>   [3220,]  20 355 #>   [3221,]  21 355 #>   [3222,]  22 355 #>   [3223,]  23 355 #>   [3224,]  24 355 #>   [3225,]  25 355 #>   [3226,]  26 355 #>   [3227,]  27 355 #>   [3228,]  28 355 #>   [3229,]  29 355 #>   [3230,]  30 355 #>   [3231,]  31 355 #>   [3232,]  32 355 #>   [3233,]  33 355 #>   [3234,]  34 355 #>   [3235,]  35 355 #>   [3236,]  36 355 #>   [3237,]  37 355 #>   [3238,]  38 355 #>   [3239,]  39 355 #>   [3240,]  40 355 #>   [3241,]  41 355 #>   [3242,]  42 355 #>   [3243,]  43 355 #>   [3244,]  44 355 #>   [3245,]  45 355 #>   [3246,]  46 355 #>   [3247,]  47 355 #>   [3248,]  48 355 #>   [3249,]  49 355 #>   [3250,]  50 355 #>   [3251,]  51 355 #>   [3252,]  52 355 #>   [3253,]  53 355 #>   [3254,]  54 355 #>   [3255,]  55 355 #>   [3256,]  56 355 #>   [3257,]  57 355 #>   [3258,]  58 355 #>   [3259,]  59 355 #>   [3260,]  60 355 #>   [3261,]  61 355 #>   [3262,]  62 355 #>   [3263,]  63 355 #>   [3264,]  64 355 #>   [3265,]  65 355 #>   [3266,]  66 355 #>   [3267,]  67 355 #>   [3268,]  68 355 #>   [3269,]  69 355 #>   [3270,]  70 355 #>   [3271,]  71 355 #>   [3272,]  72 355 #>   [3273,]  73 355 #>   [3274,]  74 355 #>   [3275,]  75 355 #>   [3276,]  76 355 #>   [3277,]  77 355 #>   [3278,]  78 355 #>   [3279,]  79 355 #>   [3280,]  80 355 #>   [3281,]  81 355 #>   [3282,]  82 355 #>   [3283,]  83 355 #>   [3284,]  84 355 #>   [3285,]  85 355 #>   [3286,]  86 355 #>   [3287,]  87 355 #>   [3288,]  88 355 #>   [3289,]  89 355 #>   [3290,]  90 355 #>   [3291,]  91 355 #>   [3292,]  92 355 #>   [3293,]  93 355 #>   [3294,]  94 355 #>   [3295,]  95 355 #>   [3296,]  96 355 #>   [3297,]  97 355 #>   [3298,]  98 355 #>   [3299,]  99 355 #>   [3300,] 100 355 #>   [3301,] 101 355 #>   [3302,] 102 355 #>   [3303,] 103 355 #>   [3304,] 104 355 #>   [3305,] 105 355 #>   [3306,] 106 355 #>   [3307,] 107 355 #>   [3308,] 108 355 #>   [3309,] 109 355 #>   [3310,] 110 355 #>   [3311,] 111 355 #>   [3312,] 112 355 #>   [3313,] 113 355 #>   [3314,] 114 355 #>   [3315,] 115 355 #>   [3316,] 116 355 #>   [3317,] 117 355 #>   [3318,] 118 355 #>   [3319,] 119 355 #>   [3320,] 120 355 #>   [3321,] 121 355 #>   [3322,] 122 355 #>   [3323,] 123 355 #>   [3324,] 124 355 #>   [3325,] 125 355 #>   [3326,] 126 355 #>   [3327,] 127 355 #>   [3328,] 128 355 #>   [3329,] 129 355 #>   [3330,] 130 355 #>   [3331,] 131 355 #>   [3332,] 132 355 #>   [3333,] 133 355 #>   [3334,] 134 355 #>   [3335,] 135 355 #>   [3336,] 136 355 #>   [3337,] 137 355 #>   [3338,] 138 355 #>   [3339,] 139 355 #>   [3340,] 140 355 #>   [3341,] 141 355 #>   [3342,] 142 355 #>   [3343,] 143 355 #>   [3344,] 144 355 #>   [3345,] 145 355 #>   [3346,] 146 355 #>   [3347,] 147 355 #>   [3348,] 148 355 #>   [3349,] 149 355 #>   [3350,] 150 355 #>   [3351,] 151 355 #>   [3352,] 152 355 #>   [3353,] 153 355 #>   [3354,] 154 355 #>   [3355,] 155 355 #>   [3356,] 156 355 #>   [3357,] 157 355 #>   [3358,] 158 355 #>   [3359,] 159 355 #>   [3360,] 160 355 #>   [3361,] 161 355 #>   [3362,] 162 355 #>   [3363,] 163 355 #>   [3364,] 164 355 #>   [3365,] 165 355 #>   [3366,] 166 355 #>   [3367,] 167 355 #>   [3368,] 168 355 #>   [3369,] 169 355 #>   [3370,] 170 355 #>   [3371,] 171 355 #>   [3372,] 172 355 #>   [3373,] 173 355 #>   [3374,] 174 355 #>   [3375,] 175 355 #>   [3376,] 176 355 #>   [3377,] 177 355 #>   [3378,] 178 355 #>   [3379,] 179 355 #>   [3380,] 180 355 #>   [3381,] 181 355 #>   [3382,] 182 355 #>   [3383,] 183 355 #>   [3384,] 184 355 #>   [3385,] 185 355 #>   [3386,] 186 355 #>   [3387,] 187 355 #>   [3388,] 188 355 #>   [3389,] 189 355 #>   [3390,] 190 355 #>   [3391,] 191 355 #>   [3392,] 192 355 #>   [3393,] 193 355 #>   [3394,] 194 355 #>   [3395,] 195 355 #>   [3396,] 196 355 #>   [3397,] 197 355 #>   [3398,] 198 355 #>   [3399,] 199 355 #>   [3400,] 200 355 #>   [3401,] 201 355 #>   [3402,] 202 355 #>   [3403,] 203 355 #>   [3404,] 204 355 #>   [3405,] 205 355 #>   [3406,] 206 355 #>   [3407,] 207 355 #>   [3408,] 208 355 #>   [3409,] 209 355 #>   [3410,] 210 355 #>   [3411,] 211 355 #>   [3412,] 212 355 #>   [3413,] 213 355 #>   [3414,] 214 355 #>   [3415,] 215 355 #>   [3416,] 216 355 #>   [3417,] 217 355 #>   [3418,] 218 355 #>   [3419,] 219 355 #>   [3420,] 220 355 #>   [3421,] 221 355 #>   [3422,] 222 355 #>   [3423,] 223 355 #>   [3424,] 224 355 #>   [3425,] 225 355 #>   [3426,] 226 355 #>   [3427,] 227 355 #>   [3428,] 228 355 #>   [3429,] 229 355 #>   [3430,] 230 355 #>   [3431,] 231 355 #>   [3432,] 232 355 #>   [3433,] 233 355 #>   [3434,] 234 355 #>   [3435,] 235 355 #>   [3436,] 236 355 #>   [3437,] 237 355 #>   [3438,] 238 355 #>   [3439,] 239 355 #>   [3440,] 240 355 #>   [3441,] 241 355 #>   [3442,] 242 355 #>   [3443,] 243 355 #>   [3444,] 244 355 #>   [3445,] 245 355 #>   [3446,] 246 355 #>   [3447,] 247 355 #>   [3448,] 248 355 #>   [3449,] 249 355 #>   [3450,] 250 355 #>   [3451,] 251 355 #>   [3452,] 252 355 #>   [3453,] 253 355 #>   [3454,] 254 355 #>   [3455,] 255 355 #>   [3456,] 256 355 #>   [3457,] 257 355 #>   [3458,] 258 355 #>   [3459,] 259 355 #>   [3460,] 260 355 #>   [3461,] 261 355 #>   [3462,] 262 355 #>   [3463,] 263 355 #>   [3464,] 264 355 #>   [3465,] 265 355 #>   [3466,] 266 355 #>   [3467,] 267 355 #>   [3468,] 268 355 #>   [3469,] 269 355 #>   [3470,] 270 355 #>   [3471,] 271 355 #>   [3472,] 272 355 #>   [3473,] 273 355 #>   [3474,] 274 355 #>   [3475,] 275 355 #>   [3476,] 276 355 #>   [3477,] 277 355 #>   [3478,] 278 355 #>   [3479,] 279 355 #>   [3480,] 280 355 #>   [3481,] 281 355 #>   [3482,] 282 355 #>   [3483,] 283 355 #>   [3484,] 284 355 #>   [3485,] 285 355 #>   [3486,] 286 355 #>   [3487,] 287 355 #>   [3488,] 288 355 #>   [3489,] 289 355 #>   [3490,] 290 355 #>   [3491,] 291 355 #>   [3492,] 292 355 #>   [3493,] 293 355 #>   [3494,] 294 355 #>   [3495,] 295 355 #>   [3496,] 296 355 #>   [3497,] 297 355 #>   [3498,] 298 355 #>   [3499,] 299 355 #>   [3500,] 300 355 #>   [3501,] 301 355 #>   [3502,] 302 355 #>   [3503,] 303 355 #>   [3504,] 304 355 #>   [3505,] 305 355 #>   [3506,] 306 355 #>   [3507,] 307 355 #>   [3508,] 308 355 #>   [3509,] 309 355 #>   [3510,] 310 355 #>   [3511,] 311 355 #>   [3512,] 312 355 #>   [3513,] 313 355 #>   [3514,] 314 355 #>   [3515,] 315 355 #>   [3516,] 316 355 #>   [3517,] 317 355 #>   [3518,] 318 355 #>   [3519,] 319 355 #>   [3520,] 320 355 #>   [3521,] 321 355 #>   [3522,] 322 355 #>   [3523,] 323 355 #>   [3524,] 324 355 #>   [3525,] 325 355 #>   [3526,] 326 355 #>   [3527,] 327 355 #>   [3528,] 328 355 #>   [3529,] 329 355 #>   [3530,] 330 355 #>   [3531,] 331 355 #>   [3532,] 332 355 #>   [3533,] 333 355 #>   [3534,] 334 355 #>   [3535,] 335 355 #>   [3536,] 336 355 #>   [3537,] 337 355 #>   [3538,] 338 355 #>   [3539,] 339 355 #>   [3540,] 340 355 #>   [3541,] 341 355 #>   [3542,] 342 355 #>   [3543,] 343 355 #>   [3544,] 344 355 #>   [3545,] 345 355 #>   [3546,] 346 355 #>   [3547,] 347 355 #>   [3548,] 348 355 #>   [3549,] 349 355 #>   [3550,] 350 355 #>   [3551,] 351 355 #>   [3552,] 352 355 #>   [3553,] 353 355 #>   [3554,] 354 355 #>   [3555,] 355 355 #>   [3556,] 356 355 #>   [3557,] 357 355 #>   [3558,] 358 355 #>   [3559,] 359 355 #>   [3560,] 360 355 #>   [3561,] 361 355 #>   [3562,] 362 355 #>   [3563,] 363 355 #>   [3564,] 364 355 #>   [3565,] 365 355 #>   [3566,] 366 355 #>   [3567,] 367 355 #>   [3568,] 368 355 #>   [3569,] 369 355 #>   [3570,] 370 355 #>   [3571,] 371 355 #>   [3572,] 372 355 #>   [3573,] 373 355 #>   [3574,] 374 355 #>   [3575,] 375 355 #>   [3576,] 376 355 #>   [3577,] 377 355 #>   [3578,] 378 355 #>   [3579,] 379 355 #>   [3580,] 380 355 #>   [3581,] 381 355 #>   [3582,] 382 355 #>   [3583,] 383 355 #>   [3584,] 384 355 #>   [3585,] 385 355 #>   [3586,] 386 355 #>   [3587,] 387 355 #>   [3588,] 388 355 #>   [3589,] 389 355 #>   [3590,] 390 355 #>   [3591,] 391 355 #>   [3592,] 392 355 #>   [3593,] 393 355 #>   [3594,] 394 355 #>   [3595,] 395 355 #>   [3596,] 396 355 #>   [3597,] 397 355 #>   [3598,] 398 355 #>   [3599,] 399 355 #>   [3600,] 400 355 #>   [3601,] 401 355 #>   [3602,] 402 355 #>   [3603,] 403 355 #>   [3604,] 404 355 #>   [3605,] 405 355 #>   [3606,] 406 355 #>   [3607,] 407 355 #>   [3608,] 408 355 #>   [3609,] 409 355 #>   [3610,] 410 355 #>   [3611,] 411 355 #>   [3612,] 412 355 #>   [3613,] 413 355 #>   [3614,] 414 355 #>   [3615,] 415 355 #>   [3616,] 416 355 #>   [3617,] 417 355 #>   [3618,] 418 355 #>   [3619,] 419 355 #>   [3620,] 420 355 #>   [3621,] 421 355 #>   [3622,] 422 355 #>   [3623,] 423 355 #>   [3624,] 424 355 #>   [3625,] 425 355 #>   [3626,] 426 355 #>   [3627,] 427 355 #>   [3628,] 428 355 #>   [3629,] 429 355 #>   [3630,] 430 355 #>   [3631,] 431 355 #>   [3632,] 432 355 #>   [3633,] 433 355 #>   [3634,] 434 355 #>   [3635,] 435 355 #>   [3636,] 436 355 #>   [3637,] 437 355 #>   [3638,] 438 355 #>   [3639,] 439 355 #>   [3640,] 440 355 #>   [3641,] 441 355 #>   [3642,] 442 355 #>   [3643,] 443 355 #>   [3644,] 444 355 #>   [3645,] 445 355 #>   [3646,] 446 355 #>   [3647,] 447 355 #>   [3648,] 448 355 #>   [3649,] 449 355 #>   [3650,] 450 355 #>   [3651,] 451 355 #>   [3652,] 452 355 #>   [3653,] 453 355 #>   [3654,] 454 355 #>   [3655,] 455 355 #>   [3656,] 456 355 #>   [3657,] 457 355 #>   [3658,] 458 355 #>   [3659,] 459 355 #>   [3660,] 460 355 #>   [3661,] 461 355 #>   [3662,] 462 355 #>   [3663,] 463 355 #>   [3664,] 464 355 #>   [3665,] 465 355 #>   [3666,] 466 355 #>   [3667,] 467 355 #>   [3668,] 468 355 #>   [3669,] 469 355 #>   [3670,] 470 355 #>   [3671,] 471 355 #>   [3672,] 472 355 #>   [3673,] 473 355 #>   [3674,] 474 355 #>   [3675,] 475 355 #>   [3676,] 476 355 #>   [3677,] 477 355 #>   [3678,] 478 355 #>   [3679,] 479 355 #>   [3680,] 480 355 #>   [3681,] 481 355 #>   [3682,] 482 355 #>   [3683,] 483 355 #>   [3684,] 484 355 #>   [3685,] 485 355 #>   [3686,] 486 355 #>   [3687,] 487 355 #>   [3688,] 488 355 #>   [3689,] 489 355 #>   [3690,] 490 355 #>   [3691,] 491 355 #>   [3692,] 492 355 #>   [3693,] 493 355 #>   [3694,] 494 355 #>   [3695,] 495 355 #>   [3696,] 496 355 #>   [3697,] 497 355 #>   [3698,] 498 355 #>   [3699,] 499 355 #>   [3700,] 500 355 #>   [3701,] 501 355 #>   [3702,] 502 355 #>   [3703,] 503 355 #>   [3704,] 504 355 #>   [3705,] 505 355 #>   [3706,] 506 355 #>   [3707,] 507 355 #>   [3708,] 508 355 #>   [3709,] 509 355 #>   [3710,] 510 355 #>   [3711,] 511 355 #>   [3712,] 512 355 #>   [3713,] 513 355 #>   [3714,] 514 355 #>   [3715,] 515 355 #>   [3716,] 516 355 #>   [3717,] 517 355 #>   [3718,] 518 355 #>   [3719,] 519 355 #>   [3720,] 520 355 #>   [3721,] 521 355 #>   [3722,] 522 355 #>   [3723,] 523 355 #>   [3724,] 524 355 #>   [3725,] 525 355 #>   [3726,] 526 355 #>   [3727,] 527 355 #>   [3728,] 528 355 #>   [3729,] 529 355 #>   [3730,] 530 355 #>   [3731,] 531 355 #>   [3732,] 532 355 #>   [3733,] 533 355 #>   [3734,] 534 355 #>   [3735,] 535 355 #>   [3736,] 536 355 #>   [3737,] 537 355 #>   [3738,] 538 355 #>   [3739,] 539 355 #>   [3740,] 540 355 #>   [3741,] 541 355 #>   [3742,] 542 355 #>   [3743,] 543 355 #>   [3744,] 544 355 #>   [3745,] 545 355 #>   [3746,] 546 355 #>   [3747,] 547 355 #>   [3748,] 548 355 #>   [3749,] 549 355 #>   [3750,] 550 355 #>   [3751,] 551 355 #>   [3752,] 552 355 #>   [3753,] 553 355 #>   [3754,] 554 355 #>   [3755,] 555 355 #>   [3756,] 556 355 #>   [3757,] 557 355 #>   [3758,] 558 355 #>   [3759,] 559 355 #>   [3760,] 560 355 #>   [3761,] 561 355 #>   [3762,] 562 355 #>   [3763,] 563 355 #>   [3764,] 564 355 #>   [3765,] 565 355 #>   [3766,] 566 355 #>   [3767,] 567 355 #>   [3768,] 568 355 #>   [3769,] 569 355 #>   [3770,] 570 355 #>   [3771,] 571 355 #>   [3772,] 572 355 #>   [3773,] 573 355 #>   [3774,] 574 355 #>   [3775,] 575 355 #>   [3776,] 576 355 #>   [3777,] 577 355 #>   [3778,] 578 355 #>   [3779,] 579 355 #>   [3780,] 580 355 #>   [3781,] 581 355 #>   [3782,] 582 355 #>   [3783,] 583 355 #>   [3784,] 584 355 #>   [3785,] 585 355 #>   [3786,] 586 355 #>   [3787,] 587 355 #>   [3788,] 588 355 #>   [3789,] 589 355 #>   [3790,] 590 355 #>   [3791,] 591 355 #>   [3792,] 592 355 #>   [3793,] 593 355 #>   [3794,] 594 355 #>   [3795,] 595 355 #>   [3796,] 596 355 #>   [3797,] 597 355 #>   [3798,] 598 355 #>   [3799,] 599 355 #>   [3800,] 600 355 #>   [3801,] 601 355 #>   [3802,] 602 355 #>   [3803,] 603 355 #>   [3804,] 604 355 #>   [3805,] 605 355 #>   [3806,] 606 355 #>   [3807,] 607 355 #>   [3808,] 608 355 #>   [3809,] 609 355 #>   [3810,] 610 355 #>   [3811,] 611 355 #>   [3812,] 612 355 #>   [3813,] 613 355 #>   [3814,] 614 355 #>   [3815,] 615 355 #>   [3816,] 616 355 #>   [3817,] 617 355 #>   [3818,] 618 355 #>   [3819,] 619 355 #>   [3820,] 620 355 #>   [3821,] 621 355 #>   [3822,] 622 355 #>   [3823,] 623 355 #>   [3824,] 624 355 #>   [3825,] 625 355 #>   [3826,] 626 355 #>   [3827,] 627 355 #>   [3828,] 628 355 #>   [3829,] 629 355 #>   [3830,] 630 355 #>   [3831,] 631 355 #>   [3832,] 632 355 #>   [3833,] 633 355 #>   [3834,] 634 355 #>   [3835,] 635 355 #>   [3836,] 636 355 #>   [3837,] 637 355 #>   [3838,] 638 355 #>   [3839,] 639 355 #>   [3840,] 640 355 #>   [3841,]   1 354 #>   [3842,]   2 354 #>   [3843,]   3 354 #>   [3844,]   4 354 #>   [3845,]   5 354 #>   [3846,]   6 354 #>   [3847,]   7 354 #>   [3848,]   8 354 #>   [3849,]   9 354 #>   [3850,]  10 354 #>   [3851,]  11 354 #>   [3852,]  12 354 #>   [3853,]  13 354 #>   [3854,]  14 354 #>   [3855,]  15 354 #>   [3856,]  16 354 #>   [3857,]  17 354 #>   [3858,]  18 354 #>   [3859,]  19 354 #>   [3860,]  20 354 #>   [3861,]  21 354 #>   [3862,]  22 354 #>   [3863,]  23 354 #>   [3864,]  24 354 #>   [3865,]  25 354 #>   [3866,]  26 354 #>   [3867,]  27 354 #>   [3868,]  28 354 #>   [3869,]  29 354 #>   [3870,]  30 354 #>   [3871,]  31 354 #>   [3872,]  32 354 #>   [3873,]  33 354 #>   [3874,]  34 354 #>   [3875,]  35 354 #>   [3876,]  36 354 #>   [3877,]  37 354 #>   [3878,]  38 354 #>   [3879,]  39 354 #>   [3880,]  40 354 #>   [3881,]  41 354 #>   [3882,]  42 354 #>   [3883,]  43 354 #>   [3884,]  44 354 #>   [3885,]  45 354 #>   [3886,]  46 354 #>   [3887,]  47 354 #>   [3888,]  48 354 #>   [3889,]  49 354 #>   [3890,]  50 354 #>   [3891,]  51 354 #>   [3892,]  52 354 #>   [3893,]  53 354 #>   [3894,]  54 354 #>   [3895,]  55 354 #>   [3896,]  56 354 #>   [3897,]  57 354 #>   [3898,]  58 354 #>   [3899,]  59 354 #>   [3900,]  60 354 #>   [3901,]  61 354 #>   [3902,]  62 354 #>   [3903,]  63 354 #>   [3904,]  64 354 #>   [3905,]  65 354 #>   [3906,]  66 354 #>   [3907,]  67 354 #>   [3908,]  68 354 #>   [3909,]  69 354 #>   [3910,]  70 354 #>   [3911,]  71 354 #>   [3912,]  72 354 #>   [3913,]  73 354 #>   [3914,]  74 354 #>   [3915,]  75 354 #>   [3916,]  76 354 #>   [3917,]  77 354 #>   [3918,]  78 354 #>   [3919,]  79 354 #>   [3920,]  80 354 #>   [3921,]  81 354 #>   [3922,]  82 354 #>   [3923,]  83 354 #>   [3924,]  84 354 #>   [3925,]  85 354 #>   [3926,]  86 354 #>   [3927,]  87 354 #>   [3928,]  88 354 #>   [3929,]  89 354 #>   [3930,]  90 354 #>   [3931,]  91 354 #>   [3932,]  92 354 #>   [3933,]  93 354 #>   [3934,]  94 354 #>   [3935,]  95 354 #>   [3936,]  96 354 #>   [3937,]  97 354 #>   [3938,]  98 354 #>   [3939,]  99 354 #>   [3940,] 100 354 #>   [3941,] 101 354 #>   [3942,] 102 354 #>   [3943,] 103 354 #>   [3944,] 104 354 #>   [3945,] 105 354 #>   [3946,] 106 354 #>   [3947,] 107 354 #>   [3948,] 108 354 #>   [3949,] 109 354 #>   [3950,] 110 354 #>   [3951,] 111 354 #>   [3952,] 112 354 #>   [3953,] 113 354 #>   [3954,] 114 354 #>   [3955,] 115 354 #>   [3956,] 116 354 #>   [3957,] 117 354 #>   [3958,] 118 354 #>   [3959,] 119 354 #>   [3960,] 120 354 #>   [3961,] 121 354 #>   [3962,] 122 354 #>   [3963,] 123 354 #>   [3964,] 124 354 #>   [3965,] 125 354 #>   [3966,] 126 354 #>   [3967,] 127 354 #>   [3968,] 128 354 #>   [3969,] 129 354 #>   [3970,] 130 354 #>   [3971,] 131 354 #>   [3972,] 132 354 #>   [3973,] 133 354 #>   [3974,] 134 354 #>   [3975,] 135 354 #>   [3976,] 136 354 #>   [3977,] 137 354 #>   [3978,] 138 354 #>   [3979,] 139 354 #>   [3980,] 140 354 #>   [3981,] 141 354 #>   [3982,] 142 354 #>   [3983,] 143 354 #>   [3984,] 144 354 #>   [3985,] 145 354 #>   [3986,] 146 354 #>   [3987,] 147 354 #>   [3988,] 148 354 #>   [3989,] 149 354 #>   [3990,] 150 354 #>   [3991,] 151 354 #>   [3992,] 152 354 #>   [3993,] 153 354 #>   [3994,] 154 354 #>   [3995,] 155 354 #>   [3996,] 156 354 #>   [3997,] 157 354 #>   [3998,] 158 354 #>   [3999,] 159 354 #>   [4000,] 160 354 #>   [4001,] 161 354 #>   [4002,] 162 354 #>   [4003,] 163 354 #>   [4004,] 164 354 #>   [4005,] 165 354 #>   [4006,] 166 354 #>   [4007,] 167 354 #>   [4008,] 168 354 #>   [4009,] 169 354 #>   [4010,] 170 354 #>   [4011,] 171 354 #>   [4012,] 172 354 #>   [4013,] 173 354 #>   [4014,] 174 354 #>   [4015,] 175 354 #>   [4016,] 176 354 #>   [4017,] 177 354 #>   [4018,] 178 354 #>   [4019,] 179 354 #>   [4020,] 180 354 #>   [4021,] 181 354 #>   [4022,] 182 354 #>   [4023,] 183 354 #>   [4024,] 184 354 #>   [4025,] 185 354 #>   [4026,] 186 354 #>   [4027,] 187 354 #>   [4028,] 188 354 #>   [4029,] 189 354 #>   [4030,] 190 354 #>   [4031,] 191 354 #>   [4032,] 192 354 #>   [4033,] 193 354 #>   [4034,] 194 354 #>   [4035,] 195 354 #>   [4036,] 196 354 #>   [4037,] 197 354 #>   [4038,] 198 354 #>   [4039,] 199 354 #>   [4040,] 200 354 #>   [4041,] 201 354 #>   [4042,] 202 354 #>   [4043,] 203 354 #>   [4044,] 204 354 #>   [4045,] 205 354 #>   [4046,] 206 354 #>   [4047,] 207 354 #>   [4048,] 208 354 #>   [4049,] 209 354 #>   [4050,] 210 354 #>   [4051,] 211 354 #>   [4052,] 212 354 #>   [4053,] 213 354 #>   [4054,] 214 354 #>   [4055,] 215 354 #>   [4056,] 216 354 #>   [4057,] 217 354 #>   [4058,] 218 354 #>   [4059,] 219 354 #>   [4060,] 220 354 #>   [4061,] 221 354 #>   [4062,] 222 354 #>   [4063,] 223 354 #>   [4064,] 224 354 #>   [4065,] 225 354 #>   [4066,] 226 354 #>   [4067,] 227 354 #>   [4068,] 228 354 #>   [4069,] 229 354 #>   [4070,] 230 354 #>   [4071,] 231 354 #>   [4072,] 232 354 #>   [4073,] 233 354 #>   [4074,] 234 354 #>   [4075,] 235 354 #>   [4076,] 236 354 #>   [4077,] 237 354 #>   [4078,] 238 354 #>   [4079,] 239 354 #>   [4080,] 240 354 #>   [4081,] 241 354 #>   [4082,] 242 354 #>   [4083,] 243 354 #>   [4084,] 244 354 #>   [4085,] 245 354 #>   [4086,] 246 354 #>   [4087,] 247 354 #>   [4088,] 248 354 #>   [4089,] 249 354 #>   [4090,] 250 354 #>   [4091,] 251 354 #>   [4092,] 252 354 #>   [4093,] 253 354 #>   [4094,] 254 354 #>   [4095,] 255 354 #>   [4096,] 256 354 #>   [4097,] 257 354 #>   [4098,] 258 354 #>   [4099,] 259 354 #>   [4100,] 260 354 #>   [4101,] 261 354 #>   [4102,] 262 354 #>   [4103,] 263 354 #>   [4104,] 264 354 #>   [4105,] 265 354 #>   [4106,] 266 354 #>   [4107,] 267 354 #>   [4108,] 268 354 #>   [4109,] 269 354 #>   [4110,] 270 354 #>   [4111,] 271 354 #>   [4112,] 272 354 #>   [4113,] 273 354 #>   [4114,] 274 354 #>   [4115,] 275 354 #>   [4116,] 276 354 #>   [4117,] 277 354 #>   [4118,] 278 354 #>   [4119,] 279 354 #>   [4120,] 280 354 #>   [4121,] 281 354 #>   [4122,] 282 354 #>   [4123,] 283 354 #>   [4124,] 284 354 #>   [4125,] 285 354 #>   [4126,] 286 354 #>   [4127,] 287 354 #>   [4128,] 288 354 #>   [4129,] 289 354 #>   [4130,] 290 354 #>   [4131,] 291 354 #>   [4132,] 292 354 #>   [4133,] 293 354 #>   [4134,] 294 354 #>   [4135,] 295 354 #>   [4136,] 296 354 #>   [4137,] 297 354 #>   [4138,] 298 354 #>   [4139,] 299 354 #>   [4140,] 300 354 #>   [4141,] 301 354 #>   [4142,] 302 354 #>   [4143,] 303 354 #>   [4144,] 304 354 #>   [4145,] 305 354 #>   [4146,] 306 354 #>   [4147,] 307 354 #>   [4148,] 308 354 #>   [4149,] 309 354 #>   [4150,] 310 354 #>   [4151,] 311 354 #>   [4152,] 312 354 #>   [4153,] 313 354 #>   [4154,] 314 354 #>   [4155,] 315 354 #>   [4156,] 316 354 #>   [4157,] 317 354 #>   [4158,] 318 354 #>   [4159,] 319 354 #>   [4160,] 320 354 #>   [4161,] 321 354 #>   [4162,] 322 354 #>   [4163,] 323 354 #>   [4164,] 324 354 #>   [4165,] 325 354 #>   [4166,] 326 354 #>   [4167,] 327 354 #>   [4168,] 328 354 #>   [4169,] 329 354 #>   [4170,] 330 354 #>   [4171,] 331 354 #>   [4172,] 332 354 #>   [4173,] 333 354 #>   [4174,] 334 354 #>   [4175,] 335 354 #>   [4176,] 336 354 #>   [4177,] 337 354 #>   [4178,] 338 354 #>   [4179,] 339 354 #>   [4180,] 340 354 #>   [4181,] 341 354 #>   [4182,] 342 354 #>   [4183,] 343 354 #>   [4184,] 344 354 #>   [4185,] 345 354 #>   [4186,] 346 354 #>   [4187,] 347 354 #>   [4188,] 348 354 #>   [4189,] 349 354 #>   [4190,] 350 354 #>   [4191,] 351 354 #>   [4192,] 352 354 #>   [4193,] 353 354 #>   [4194,] 354 354 #>   [4195,] 355 354 #>   [4196,] 356 354 #>   [4197,] 357 354 #>   [4198,] 358 354 #>   [4199,] 359 354 #>   [4200,] 360 354 #>   [4201,] 361 354 #>   [4202,] 362 354 #>   [4203,] 363 354 #>   [4204,] 364 354 #>   [4205,] 365 354 #>   [4206,] 366 354 #>   [4207,] 367 354 #>   [4208,] 368 354 #>   [4209,] 369 354 #>   [4210,] 370 354 #>   [4211,] 371 354 #>   [4212,] 372 354 #>   [4213,] 373 354 #>   [4214,] 374 354 #>   [4215,] 375 354 #>   [4216,] 376 354 #>   [4217,] 377 354 #>   [4218,] 378 354 #>   [4219,] 379 354 #>   [4220,] 380 354 #>   [4221,] 381 354 #>   [4222,] 382 354 #>   [4223,] 383 354 #>   [4224,] 384 354 #>   [4225,] 385 354 #>   [4226,] 386 354 #>   [4227,] 387 354 #>   [4228,] 388 354 #>   [4229,] 389 354 #>   [4230,] 390 354 #>   [4231,] 391 354 #>   [4232,] 392 354 #>   [4233,] 393 354 #>   [4234,] 394 354 #>   [4235,] 395 354 #>   [4236,] 396 354 #>   [4237,] 397 354 #>   [4238,] 398 354 #>   [4239,] 399 354 #>   [4240,] 400 354 #>   [4241,] 401 354 #>   [4242,] 402 354 #>   [4243,] 403 354 #>   [4244,] 404 354 #>   [4245,] 405 354 #>   [4246,] 406 354 #>   [4247,] 407 354 #>   [4248,] 408 354 #>   [4249,] 409 354 #>   [4250,] 410 354 #>   [4251,] 411 354 #>   [4252,] 412 354 #>   [4253,] 413 354 #>   [4254,] 414 354 #>   [4255,] 415 354 #>   [4256,] 416 354 #>   [4257,] 417 354 #>   [4258,] 418 354 #>   [4259,] 419 354 #>   [4260,] 420 354 #>   [4261,] 421 354 #>   [4262,] 422 354 #>   [4263,] 423 354 #>   [4264,] 424 354 #>   [4265,] 425 354 #>   [4266,] 426 354 #>   [4267,] 427 354 #>   [4268,] 428 354 #>   [4269,] 429 354 #>   [4270,] 430 354 #>   [4271,] 431 354 #>   [4272,] 432 354 #>   [4273,] 433 354 #>   [4274,] 434 354 #>   [4275,] 435 354 #>   [4276,] 436 354 #>   [4277,] 437 354 #>   [4278,] 438 354 #>   [4279,] 439 354 #>   [4280,] 440 354 #>   [4281,] 441 354 #>   [4282,] 442 354 #>   [4283,] 443 354 #>   [4284,] 444 354 #>   [4285,] 445 354 #>   [4286,] 446 354 #>   [4287,] 447 354 #>   [4288,] 448 354 #>   [4289,] 449 354 #>   [4290,] 450 354 #>   [4291,] 451 354 #>   [4292,] 452 354 #>   [4293,] 453 354 #>   [4294,] 454 354 #>   [4295,] 455 354 #>   [4296,] 456 354 #>   [4297,] 457 354 #>   [4298,] 458 354 #>   [4299,] 459 354 #>   [4300,] 460 354 #>   [4301,] 461 354 #>   [4302,] 462 354 #>   [4303,] 463 354 #>   [4304,] 464 354 #>   [4305,] 465 354 #>   [4306,] 466 354 #>   [4307,] 467 354 #>   [4308,] 468 354 #>   [4309,] 469 354 #>   [4310,] 470 354 #>   [4311,] 471 354 #>   [4312,] 472 354 #>   [4313,] 473 354 #>   [4314,] 474 354 #>   [4315,] 475 354 #>   [4316,] 476 354 #>   [4317,] 477 354 #>   [4318,] 478 354 #>   [4319,] 479 354 #>   [4320,] 480 354 #>   [4321,] 481 354 #>   [4322,] 482 354 #>   [4323,] 483 354 #>   [4324,] 484 354 #>   [4325,] 485 354 #>   [4326,] 486 354 #>   [4327,] 487 354 #>   [4328,] 488 354 #>   [4329,] 489 354 #>   [4330,] 490 354 #>   [4331,] 491 354 #>   [4332,] 492 354 #>   [4333,] 493 354 #>   [4334,] 494 354 #>   [4335,] 495 354 #>   [4336,] 496 354 #>   [4337,] 497 354 #>   [4338,] 498 354 #>   [4339,] 499 354 #>   [4340,] 500 354 #>   [4341,] 501 354 #>   [4342,] 502 354 #>   [4343,] 503 354 #>   [4344,] 504 354 #>   [4345,] 505 354 #>   [4346,] 506 354 #>   [4347,] 507 354 #>   [4348,] 508 354 #>   [4349,] 509 354 #>   [4350,] 510 354 #>   [4351,] 511 354 #>   [4352,] 512 354 #>   [4353,] 513 354 #>   [4354,] 514 354 #>   [4355,] 515 354 #>   [4356,] 516 354 #>   [4357,] 517 354 #>   [4358,] 518 354 #>   [4359,] 519 354 #>   [4360,] 520 354 #>   [4361,] 521 354 #>   [4362,] 522 354 #>   [4363,] 523 354 #>   [4364,] 524 354 #>   [4365,] 525 354 #>   [4366,] 526 354 #>   [4367,] 527 354 #>   [4368,] 528 354 #>   [4369,] 529 354 #>   [4370,] 530 354 #>   [4371,] 531 354 #>   [4372,] 532 354 #>   [4373,] 533 354 #>   [4374,] 534 354 #>   [4375,] 535 354 #>   [4376,] 536 354 #>   [4377,] 537 354 #>   [4378,] 538 354 #>   [4379,] 539 354 #>   [4380,] 540 354 #>   [4381,] 541 354 #>   [4382,] 542 354 #>   [4383,] 543 354 #>   [4384,] 544 354 #>   [4385,] 545 354 #>   [4386,] 546 354 #>   [4387,] 547 354 #>   [4388,] 548 354 #>   [4389,] 549 354 #>   [4390,] 550 354 #>   [4391,] 551 354 #>   [4392,] 552 354 #>   [4393,] 553 354 #>   [4394,] 554 354 #>   [4395,] 555 354 #>   [4396,] 556 354 #>   [4397,] 557 354 #>   [4398,] 558 354 #>   [4399,] 559 354 #>   [4400,] 560 354 #>   [4401,] 561 354 #>   [4402,] 562 354 #>   [4403,] 563 354 #>   [4404,] 564 354 #>   [4405,] 565 354 #>   [4406,] 566 354 #>   [4407,] 567 354 #>   [4408,] 568 354 #>   [4409,] 569 354 #>   [4410,] 570 354 #>   [4411,] 571 354 #>   [4412,] 572 354 #>   [4413,] 573 354 #>   [4414,] 574 354 #>   [4415,] 575 354 #>   [4416,] 576 354 #>   [4417,] 577 354 #>   [4418,] 578 354 #>   [4419,] 579 354 #>   [4420,] 580 354 #>   [4421,] 581 354 #>   [4422,] 582 354 #>   [4423,] 583 354 #>   [4424,] 584 354 #>   [4425,] 585 354 #>   [4426,] 586 354 #>   [4427,] 587 354 #>   [4428,] 588 354 #>   [4429,] 589 354 #>   [4430,] 590 354 #>   [4431,] 591 354 #>   [4432,] 592 354 #>   [4433,] 593 354 #>   [4434,] 594 354 #>   [4435,] 595 354 #>   [4436,] 596 354 #>   [4437,] 597 354 #>   [4438,] 598 354 #>   [4439,] 599 354 #>   [4440,] 600 354 #>   [4441,] 601 354 #>   [4442,] 602 354 #>   [4443,] 603 354 #>   [4444,] 604 354 #>   [4445,] 605 354 #>   [4446,] 606 354 #>   [4447,] 607 354 #>   [4448,] 608 354 #>   [4449,] 609 354 #>   [4450,] 610 354 #>   [4451,] 611 354 #>   [4452,] 612 354 #>   [4453,] 613 354 #>   [4454,] 614 354 #>   [4455,] 615 354 #>   [4456,] 616 354 #>   [4457,] 617 354 #>   [4458,] 618 354 #>   [4459,] 619 354 #>   [4460,] 620 354 #>   [4461,] 621 354 #>   [4462,] 622 354 #>   [4463,] 623 354 #>   [4464,] 624 354 #>   [4465,] 625 354 #>   [4466,] 626 354 #>   [4467,] 627 354 #>   [4468,] 628 354 #>   [4469,] 629 354 #>   [4470,] 630 354 #>   [4471,] 631 354 #>   [4472,] 632 354 #>   [4473,] 633 354 #>   [4474,] 634 354 #>   [4475,] 635 354 #>   [4476,] 636 354 #>   [4477,] 637 354 #>   [4478,] 638 354 #>   [4479,] 639 354 #>   [4480,] 640 354 #>   [4481,]   1 353 #>   [4482,]   2 353 #>   [4483,]   3 353 #>   [4484,]   4 353 #>   [4485,]   5 353 #>   [4486,]   6 353 #>   [4487,]   7 353 #>   [4488,]   8 353 #>   [4489,]   9 353 #>   [4490,]  10 353 #>   [4491,]  11 353 #>   [4492,]  12 353 #>   [4493,]  13 353 #>   [4494,]  14 353 #>   [4495,]  15 353 #>   [4496,]  16 353 #>   [4497,]  17 353 #>   [4498,]  18 353 #>   [4499,]  19 353 #>   [4500,]  20 353 #>   [4501,]  21 353 #>   [4502,]  22 353 #>   [4503,]  23 353 #>   [4504,]  24 353 #>   [4505,]  25 353 #>   [4506,]  26 353 #>   [4507,]  27 353 #>   [4508,]  28 353 #>   [4509,]  29 353 #>   [4510,]  30 353 #>   [4511,]  31 353 #>   [4512,]  32 353 #>   [4513,]  33 353 #>   [4514,]  34 353 #>   [4515,]  35 353 #>   [4516,]  36 353 #>   [4517,]  37 353 #>   [4518,]  38 353 #>   [4519,]  39 353 #>   [4520,]  40 353 #>   [4521,]  41 353 #>   [4522,]  42 353 #>   [4523,]  43 353 #>   [4524,]  44 353 #>   [4525,]  45 353 #>   [4526,]  46 353 #>   [4527,]  47 353 #>   [4528,]  48 353 #>   [4529,]  49 353 #>   [4530,]  50 353 #>   [4531,]  51 353 #>   [4532,]  52 353 #>   [4533,]  53 353 #>   [4534,]  54 353 #>   [4535,]  55 353 #>   [4536,]  56 353 #>   [4537,]  57 353 #>   [4538,]  58 353 #>   [4539,]  59 353 #>   [4540,]  60 353 #>   [4541,]  61 353 #>   [4542,]  62 353 #>   [4543,]  63 353 #>   [4544,]  64 353 #>   [4545,]  65 353 #>   [4546,]  66 353 #>   [4547,]  67 353 #>   [4548,]  68 353 #>   [4549,]  69 353 #>   [4550,]  70 353 #>   [4551,]  71 353 #>   [4552,]  72 353 #>   [4553,]  73 353 #>   [4554,]  74 353 #>   [4555,]  75 353 #>   [4556,]  76 353 #>   [4557,]  77 353 #>   [4558,]  78 353 #>   [4559,]  79 353 #>   [4560,]  80 353 #>   [4561,]  81 353 #>   [4562,]  82 353 #>   [4563,]  83 353 #>   [4564,]  84 353 #>   [4565,]  85 353 #>   [4566,]  86 353 #>   [4567,]  87 353 #>   [4568,]  88 353 #>   [4569,]  89 353 #>   [4570,]  90 353 #>   [4571,]  91 353 #>   [4572,]  92 353 #>   [4573,]  93 353 #>   [4574,]  94 353 #>   [4575,]  95 353 #>   [4576,]  96 353 #>   [4577,]  97 353 #>   [4578,]  98 353 #>   [4579,]  99 353 #>   [4580,] 100 353 #>   [4581,] 101 353 #>   [4582,] 102 353 #>   [4583,] 103 353 #>   [4584,] 104 353 #>   [4585,] 105 353 #>   [4586,] 106 353 #>   [4587,] 107 353 #>   [4588,] 108 353 #>   [4589,] 109 353 #>   [4590,] 110 353 #>   [4591,] 111 353 #>   [4592,] 112 353 #>   [4593,] 113 353 #>   [4594,] 114 353 #>   [4595,] 115 353 #>   [4596,] 116 353 #>   [4597,] 117 353 #>   [4598,] 118 353 #>   [4599,] 119 353 #>   [4600,] 120 353 #>   [4601,] 121 353 #>   [4602,] 122 353 #>   [4603,] 123 353 #>   [4604,] 124 353 #>   [4605,] 125 353 #>   [4606,] 126 353 #>   [4607,] 127 353 #>   [4608,] 128 353 #>   [4609,] 129 353 #>   [4610,] 130 353 #>   [4611,] 131 353 #>   [4612,] 132 353 #>   [4613,] 133 353 #>   [4614,] 134 353 #>   [4615,] 135 353 #>   [4616,] 136 353 #>   [4617,] 137 353 #>   [4618,] 138 353 #>   [4619,] 139 353 #>   [4620,] 140 353 #>   [4621,] 141 353 #>   [4622,] 142 353 #>   [4623,] 143 353 #>   [4624,] 144 353 #>   [4625,] 145 353 #>   [4626,] 146 353 #>   [4627,] 147 353 #>   [4628,] 148 353 #>   [4629,] 149 353 #>   [4630,] 150 353 #>   [4631,] 151 353 #>   [4632,] 152 353 #>   [4633,] 153 353 #>   [4634,] 154 353 #>   [4635,] 155 353 #>   [4636,] 156 353 #>   [4637,] 157 353 #>   [4638,] 158 353 #>   [4639,] 159 353 #>   [4640,] 160 353 #>   [4641,] 161 353 #>   [4642,] 162 353 #>   [4643,] 163 353 #>   [4644,] 164 353 #>   [4645,] 165 353 #>   [4646,] 166 353 #>   [4647,] 167 353 #>   [4648,] 168 353 #>   [4649,] 169 353 #>   [4650,] 170 353 #>   [4651,] 171 353 #>   [4652,] 172 353 #>   [4653,] 173 353 #>   [4654,] 174 353 #>   [4655,] 175 353 #>   [4656,] 176 353 #>   [4657,] 177 353 #>   [4658,] 178 353 #>   [4659,] 179 353 #>   [4660,] 180 353 #>   [4661,] 181 353 #>   [4662,] 182 353 #>   [4663,] 183 353 #>   [4664,] 184 353 #>   [4665,] 185 353 #>   [4666,] 186 353 #>   [4667,] 187 353 #>   [4668,] 188 353 #>   [4669,] 189 353 #>   [4670,] 190 353 #>   [4671,] 191 353 #>   [4672,] 192 353 #>   [4673,] 193 353 #>   [4674,] 194 353 #>   [4675,] 195 353 #>   [4676,] 196 353 #>   [4677,] 197 353 #>   [4678,] 198 353 #>   [4679,] 199 353 #>   [4680,] 200 353 #>   [4681,] 201 353 #>   [4682,] 202 353 #>   [4683,] 203 353 #>   [4684,] 204 353 #>   [4685,] 205 353 #>   [4686,] 206 353 #>   [4687,] 207 353 #>   [4688,] 208 353 #>   [4689,] 209 353 #>   [4690,] 210 353 #>   [4691,] 211 353 #>   [4692,] 212 353 #>   [4693,] 213 353 #>   [4694,] 214 353 #>   [4695,] 215 353 #>   [4696,] 216 353 #>   [4697,] 217 353 #>   [4698,] 218 353 #>   [4699,] 219 353 #>   [4700,] 220 353 #>   [4701,] 221 353 #>   [4702,] 222 353 #>   [4703,] 223 353 #>   [4704,] 224 353 #>   [4705,] 225 353 #>   [4706,] 226 353 #>   [4707,] 227 353 #>   [4708,] 228 353 #>   [4709,] 229 353 #>   [4710,] 230 353 #>   [4711,] 231 353 #>   [4712,] 232 353 #>   [4713,] 233 353 #>   [4714,] 234 353 #>   [4715,] 235 353 #>   [4716,] 236 353 #>   [4717,] 237 353 #>   [4718,] 238 353 #>   [4719,] 239 353 #>   [4720,] 240 353 #>   [4721,] 241 353 #>   [4722,] 242 353 #>   [4723,] 243 353 #>   [4724,] 244 353 #>   [4725,] 245 353 #>   [4726,] 246 353 #>   [4727,] 247 353 #>   [4728,] 248 353 #>   [4729,] 249 353 #>   [4730,] 250 353 #>   [4731,] 251 353 #>   [4732,] 252 353 #>   [4733,] 253 353 #>   [4734,] 254 353 #>   [4735,] 255 353 #>   [4736,] 256 353 #>   [4737,] 257 353 #>   [4738,] 258 353 #>   [4739,] 259 353 #>   [4740,] 260 353 #>   [4741,] 261 353 #>   [4742,] 262 353 #>   [4743,] 263 353 #>   [4744,] 264 353 #>   [4745,] 265 353 #>   [4746,] 266 353 #>   [4747,] 267 353 #>   [4748,] 268 353 #>   [4749,] 269 353 #>   [4750,] 270 353 #>   [4751,] 271 353 #>   [4752,] 272 353 #>   [4753,] 273 353 #>   [4754,] 274 353 #>   [4755,] 275 353 #>   [4756,] 276 353 #>   [4757,] 277 353 #>   [4758,] 278 353 #>   [4759,] 279 353 #>   [4760,] 280 353 #>   [4761,] 281 353 #>   [4762,] 282 353 #>   [4763,] 283 353 #>   [4764,] 284 353 #>   [4765,] 285 353 #>   [4766,] 286 353 #>   [4767,] 287 353 #>   [4768,] 288 353 #>   [4769,] 289 353 #>   [4770,] 290 353 #>   [4771,] 291 353 #>   [4772,] 292 353 #>   [4773,] 293 353 #>   [4774,] 294 353 #>   [4775,] 295 353 #>   [4776,] 296 353 #>   [4777,] 297 353 #>   [4778,] 298 353 #>   [4779,] 299 353 #>   [4780,] 300 353 #>   [4781,] 301 353 #>   [4782,] 302 353 #>   [4783,] 303 353 #>   [4784,] 304 353 #>   [4785,] 305 353 #>   [4786,] 306 353 #>   [4787,] 307 353 #>   [4788,] 308 353 #>   [4789,] 309 353 #>   [4790,] 310 353 #>   [4791,] 311 353 #>   [4792,] 312 353 #>   [4793,] 313 353 #>   [4794,] 314 353 #>   [4795,] 315 353 #>   [4796,] 316 353 #>   [4797,] 317 353 #>   [4798,] 318 353 #>   [4799,] 319 353 #>   [4800,] 320 353 #>   [4801,] 321 353 #>   [4802,] 322 353 #>   [4803,] 323 353 #>   [4804,] 324 353 #>   [4805,] 325 353 #>   [4806,] 326 353 #>   [4807,] 327 353 #>   [4808,] 328 353 #>   [4809,] 329 353 #>   [4810,] 330 353 #>   [4811,] 331 353 #>   [4812,] 332 353 #>   [4813,] 333 353 #>   [4814,] 334 353 #>   [4815,] 335 353 #>   [4816,] 336 353 #>   [4817,] 337 353 #>   [4818,] 338 353 #>   [4819,] 339 353 #>   [4820,] 340 353 #>   [4821,] 341 353 #>   [4822,] 342 353 #>   [4823,] 343 353 #>   [4824,] 344 353 #>   [4825,] 345 353 #>   [4826,] 346 353 #>   [4827,] 347 353 #>   [4828,] 348 353 #>   [4829,] 349 353 #>   [4830,] 350 353 #>   [4831,] 351 353 #>   [4832,] 352 353 #>   [4833,] 353 353 #>   [4834,] 354 353 #>   [4835,] 355 353 #>   [4836,] 356 353 #>   [4837,] 357 353 #>   [4838,] 358 353 #>   [4839,] 359 353 #>   [4840,] 360 353 #>   [4841,] 361 353 #>   [4842,] 362 353 #>   [4843,] 363 353 #>   [4844,] 364 353 #>   [4845,] 365 353 #>   [4846,] 366 353 #>   [4847,] 367 353 #>   [4848,] 368 353 #>   [4849,] 369 353 #>   [4850,] 370 353 #>   [4851,] 371 353 #>   [4852,] 372 353 #>   [4853,] 373 353 #>   [4854,] 374 353 #>   [4855,] 375 353 #>   [4856,] 376 353 #>   [4857,] 377 353 #>   [4858,] 378 353 #>   [4859,] 379 353 #>   [4860,] 380 353 #>   [4861,] 381 353 #>   [4862,] 382 353 #>   [4863,] 383 353 #>   [4864,] 384 353 #>   [4865,] 385 353 #>   [4866,] 386 353 #>   [4867,] 387 353 #>   [4868,] 388 353 #>   [4869,] 389 353 #>   [4870,] 390 353 #>   [4871,] 391 353 #>   [4872,] 392 353 #>   [4873,] 393 353 #>   [4874,] 394 353 #>   [4875,] 395 353 #>   [4876,] 396 353 #>   [4877,] 397 353 #>   [4878,] 398 353 #>   [4879,] 399 353 #>   [4880,] 400 353 #>   [4881,] 401 353 #>   [4882,] 402 353 #>   [4883,] 403 353 #>   [4884,] 404 353 #>   [4885,] 405 353 #>   [4886,] 406 353 #>   [4887,] 407 353 #>   [4888,] 408 353 #>   [4889,] 409 353 #>   [4890,] 410 353 #>   [4891,] 411 353 #>   [4892,] 412 353 #>   [4893,] 413 353 #>   [4894,] 414 353 #>   [4895,] 415 353 #>   [4896,] 416 353 #>   [4897,] 417 353 #>   [4898,] 418 353 #>   [4899,] 419 353 #>   [4900,] 420 353 #>   [4901,] 421 353 #>   [4902,] 422 353 #>   [4903,] 423 353 #>   [4904,] 424 353 #>   [4905,] 425 353 #>   [4906,] 426 353 #>   [4907,] 427 353 #>   [4908,] 428 353 #>   [4909,] 429 353 #>   [4910,] 430 353 #>   [4911,] 431 353 #>   [4912,] 432 353 #>   [4913,] 433 353 #>   [4914,] 434 353 #>   [4915,] 435 353 #>   [4916,] 436 353 #>   [4917,] 437 353 #>   [4918,] 438 353 #>   [4919,] 439 353 #>   [4920,] 440 353 #>   [4921,] 441 353 #>   [4922,] 442 353 #>   [4923,] 443 353 #>   [4924,] 444 353 #>   [4925,] 445 353 #>   [4926,] 446 353 #>   [4927,] 447 353 #>   [4928,] 448 353 #>   [4929,] 449 353 #>   [4930,] 450 353 #>   [4931,] 451 353 #>   [4932,] 452 353 #>   [4933,] 453 353 #>   [4934,] 454 353 #>   [4935,] 455 353 #>   [4936,] 456 353 #>   [4937,] 457 353 #>   [4938,] 458 353 #>   [4939,] 459 353 #>   [4940,] 460 353 #>   [4941,] 461 353 #>   [4942,] 462 353 #>   [4943,] 463 353 #>   [4944,] 464 353 #>   [4945,] 465 353 #>   [4946,] 466 353 #>   [4947,] 467 353 #>   [4948,] 468 353 #>   [4949,] 469 353 #>   [4950,] 470 353 #>   [4951,] 471 353 #>   [4952,] 472 353 #>   [4953,] 473 353 #>   [4954,] 474 353 #>   [4955,] 475 353 #>   [4956,] 476 353 #>   [4957,] 477 353 #>   [4958,] 478 353 #>   [4959,] 479 353 #>   [4960,] 480 353 #>   [4961,] 481 353 #>   [4962,] 482 353 #>   [4963,] 483 353 #>   [4964,] 484 353 #>   [4965,] 485 353 #>   [4966,] 486 353 #>   [4967,] 487 353 #>   [4968,] 488 353 #>   [4969,] 489 353 #>   [4970,] 490 353 #>   [4971,] 491 353 #>   [4972,] 492 353 #>   [4973,] 493 353 #>   [4974,] 494 353 #>   [4975,] 495 353 #>   [4976,] 496 353 #>   [4977,] 497 353 #>   [4978,] 498 353 #>   [4979,] 499 353 #>   [4980,] 500 353 #>   [4981,] 501 353 #>   [4982,] 502 353 #>   [4983,] 503 353 #>   [4984,] 504 353 #>   [4985,] 505 353 #>   [4986,] 506 353 #>   [4987,] 507 353 #>   [4988,] 508 353 #>   [4989,] 509 353 #>   [4990,] 510 353 #>   [4991,] 511 353 #>   [4992,] 512 353 #>   [4993,] 513 353 #>   [4994,] 514 353 #>   [4995,] 515 353 #>   [4996,] 516 353 #>   [4997,] 517 353 #>   [4998,] 518 353 #>   [4999,] 519 353 #>   [5000,] 520 353 #>   [5001,] 521 353 #>   [5002,] 522 353 #>   [5003,] 523 353 #>   [5004,] 524 353 #>   [5005,] 525 353 #>   [5006,] 526 353 #>   [5007,] 527 353 #>   [5008,] 528 353 #>   [5009,] 529 353 #>   [5010,] 530 353 #>   [5011,] 531 353 #>   [5012,] 532 353 #>   [5013,] 533 353 #>   [5014,] 534 353 #>   [5015,] 535 353 #>   [5016,] 536 353 #>   [5017,] 537 353 #>   [5018,] 538 353 #>   [5019,] 539 353 #>   [5020,] 540 353 #>   [5021,] 541 353 #>   [5022,] 542 353 #>   [5023,] 543 353 #>   [5024,] 544 353 #>   [5025,] 545 353 #>   [5026,] 546 353 #>   [5027,] 547 353 #>   [5028,] 548 353 #>   [5029,] 549 353 #>   [5030,] 550 353 #>   [5031,] 551 353 #>   [5032,] 552 353 #>   [5033,] 553 353 #>   [5034,] 554 353 #>   [5035,] 555 353 #>   [5036,] 556 353 #>   [5037,] 557 353 #>   [5038,] 558 353 #>   [5039,] 559 353 #>   [5040,] 560 353 #>   [5041,] 561 353 #>   [5042,] 562 353 #>   [5043,] 563 353 #>   [5044,] 564 353 #>   [5045,] 565 353 #>   [5046,] 566 353 #>   [5047,] 567 353 #>   [5048,] 568 353 #>   [5049,] 569 353 #>   [5050,] 570 353 #>   [5051,] 571 353 #>   [5052,] 572 353 #>   [5053,] 573 353 #>   [5054,] 574 353 #>   [5055,] 575 353 #>   [5056,] 576 353 #>   [5057,] 577 353 #>   [5058,] 578 353 #>   [5059,] 579 353 #>   [5060,] 580 353 #>   [5061,] 581 353 #>   [5062,] 582 353 #>   [5063,] 583 353 #>   [5064,] 584 353 #>   [5065,] 585 353 #>   [5066,] 586 353 #>   [5067,] 587 353 #>   [5068,] 588 353 #>   [5069,] 589 353 #>   [5070,] 590 353 #>   [5071,] 591 353 #>   [5072,] 592 353 #>   [5073,] 593 353 #>   [5074,] 594 353 #>   [5075,] 595 353 #>   [5076,] 596 353 #>   [5077,] 597 353 #>   [5078,] 598 353 #>   [5079,] 599 353 #>   [5080,] 600 353 #>   [5081,] 601 353 #>   [5082,] 602 353 #>   [5083,] 603 353 #>   [5084,] 604 353 #>   [5085,] 605 353 #>   [5086,] 606 353 #>   [5087,] 607 353 #>   [5088,] 608 353 #>   [5089,] 609 353 #>   [5090,] 610 353 #>   [5091,] 611 353 #>   [5092,] 612 353 #>   [5093,] 613 353 #>   [5094,] 614 353 #>   [5095,] 615 353 #>   [5096,] 616 353 #>   [5097,] 617 353 #>   [5098,] 618 353 #>   [5099,] 619 353 #>   [5100,] 620 353 #>   [5101,] 621 353 #>   [5102,] 622 353 #>   [5103,] 623 353 #>   [5104,] 624 353 #>   [5105,] 625 353 #>   [5106,] 626 353 #>   [5107,] 627 353 #>   [5108,] 628 353 #>   [5109,] 629 353 #>   [5110,] 630 353 #>   [5111,] 631 353 #>   [5112,] 632 353 #>   [5113,] 633 353 #>   [5114,] 634 353 #>   [5115,] 635 353 #>   [5116,] 636 353 #>   [5117,] 637 353 #>   [5118,] 638 353 #>   [5119,] 639 353 #>   [5120,] 640 353 #>   [5121,]   1 352 #>   [5122,]   2 352 #>   [5123,]   3 352 #>   [5124,]   4 352 #>   [5125,]   5 352 #>   [5126,]   6 352 #>   [5127,]   7 352 #>   [5128,]   8 352 #>   [5129,]   9 352 #>   [5130,]  10 352 #>   [5131,]  11 352 #>   [5132,]  12 352 #>   [5133,]  13 352 #>   [5134,]  14 352 #>   [5135,]  15 352 #>   [5136,]  16 352 #>   [5137,]  17 352 #>   [5138,]  18 352 #>   [5139,]  19 352 #>   [5140,]  20 352 #>   [5141,]  21 352 #>   [5142,]  22 352 #>   [5143,]  23 352 #>   [5144,]  24 352 #>   [5145,]  25 352 #>   [5146,]  26 352 #>   [5147,]  27 352 #>   [5148,]  28 352 #>   [5149,]  29 352 #>   [5150,]  30 352 #>   [5151,]  31 352 #>   [5152,]  32 352 #>   [5153,]  33 352 #>   [5154,]  34 352 #>   [5155,]  35 352 #>   [5156,]  36 352 #>   [5157,]  37 352 #>   [5158,]  38 352 #>   [5159,]  39 352 #>   [5160,]  40 352 #>   [5161,]  41 352 #>   [5162,]  42 352 #>   [5163,]  43 352 #>   [5164,]  44 352 #>   [5165,]  45 352 #>   [5166,]  46 352 #>   [5167,]  47 352 #>   [5168,]  48 352 #>   [5169,]  49 352 #>   [5170,]  50 352 #>   [5171,]  51 352 #>   [5172,]  52 352 #>   [5173,]  53 352 #>   [5174,]  54 352 #>   [5175,]  55 352 #>   [5176,]  56 352 #>   [5177,]  57 352 #>   [5178,]  58 352 #>   [5179,]  59 352 #>   [5180,]  60 352 #>   [5181,]  61 352 #>   [5182,]  62 352 #>   [5183,]  63 352 #>   [5184,]  64 352 #>   [5185,]  65 352 #>   [5186,]  66 352 #>   [5187,]  67 352 #>   [5188,]  68 352 #>   [5189,]  69 352 #>   [5190,]  70 352 #>   [5191,]  71 352 #>   [5192,]  72 352 #>   [5193,]  73 352 #>   [5194,]  74 352 #>   [5195,]  75 352 #>   [5196,]  76 352 #>   [5197,]  77 352 #>   [5198,]  78 352 #>   [5199,]  79 352 #>   [5200,]  80 352 #>   [5201,]  81 352 #>   [5202,]  82 352 #>   [5203,]  83 352 #>   [5204,]  84 352 #>   [5205,]  85 352 #>   [5206,]  86 352 #>   [5207,]  87 352 #>   [5208,]  88 352 #>   [5209,]  89 352 #>   [5210,]  90 352 #>   [5211,]  91 352 #>   [5212,]  92 352 #>   [5213,]  93 352 #>   [5214,]  94 352 #>   [5215,]  95 352 #>   [5216,]  96 352 #>   [5217,]  97 352 #>   [5218,]  98 352 #>   [5219,]  99 352 #>   [5220,] 100 352 #>   [5221,] 101 352 #>   [5222,] 102 352 #>   [5223,] 103 352 #>   [5224,] 104 352 #>   [5225,] 105 352 #>   [5226,] 106 352 #>   [5227,] 107 352 #>   [5228,] 108 352 #>   [5229,] 109 352 #>   [5230,] 110 352 #>   [5231,] 111 352 #>   [5232,] 112 352 #>   [5233,] 113 352 #>   [5234,] 114 352 #>   [5235,] 115 352 #>   [5236,] 116 352 #>   [5237,] 117 352 #>   [5238,] 118 352 #>   [5239,] 119 352 #>   [5240,] 120 352 #>   [5241,] 121 352 #>   [5242,] 122 352 #>   [5243,] 123 352 #>   [5244,] 124 352 #>   [5245,] 125 352 #>   [5246,] 126 352 #>   [5247,] 127 352 #>   [5248,] 128 352 #>   [5249,] 129 352 #>   [5250,] 130 352 #>   [5251,] 131 352 #>   [5252,] 132 352 #>   [5253,] 133 352 #>   [5254,] 134 352 #>   [5255,] 135 352 #>   [5256,] 136 352 #>   [5257,] 137 352 #>   [5258,] 138 352 #>   [5259,] 139 352 #>   [5260,] 140 352 #>   [5261,] 141 352 #>   [5262,] 142 352 #>   [5263,] 143 352 #>   [5264,] 144 352 #>   [5265,] 145 352 #>   [5266,] 146 352 #>   [5267,] 147 352 #>   [5268,] 148 352 #>   [5269,] 149 352 #>   [5270,] 150 352 #>   [5271,] 151 352 #>   [5272,] 152 352 #>   [5273,] 153 352 #>   [5274,] 154 352 #>   [5275,] 155 352 #>   [5276,] 156 352 #>   [5277,] 157 352 #>   [5278,] 158 352 #>   [5279,] 159 352 #>   [5280,] 160 352 #>   [5281,] 161 352 #>   [5282,] 162 352 #>   [5283,] 163 352 #>   [5284,] 164 352 #>   [5285,] 165 352 #>   [5286,] 166 352 #>   [5287,] 167 352 #>   [5288,] 168 352 #>   [5289,] 169 352 #>   [5290,] 170 352 #>   [5291,] 171 352 #>   [5292,] 172 352 #>   [5293,] 173 352 #>   [5294,] 174 352 #>   [5295,] 175 352 #>   [5296,] 176 352 #>   [5297,] 177 352 #>   [5298,] 178 352 #>   [5299,] 179 352 #>   [5300,] 180 352 #>   [5301,] 181 352 #>   [5302,] 182 352 #>   [5303,] 183 352 #>   [5304,] 184 352 #>   [5305,] 185 352 #>   [5306,] 186 352 #>   [5307,] 187 352 #>   [5308,] 188 352 #>   [5309,] 189 352 #>   [5310,] 190 352 #>   [5311,] 191 352 #>   [5312,] 192 352 #>   [5313,] 193 352 #>   [5314,] 194 352 #>   [5315,] 195 352 #>   [5316,] 196 352 #>   [5317,] 197 352 #>   [5318,] 198 352 #>   [5319,] 199 352 #>   [5320,] 200 352 #>   [5321,] 201 352 #>   [5322,] 202 352 #>   [5323,] 203 352 #>   [5324,] 204 352 #>   [5325,] 205 352 #>   [5326,] 206 352 #>   [5327,] 207 352 #>   [5328,] 208 352 #>   [5329,] 209 352 #>   [5330,] 210 352 #>   [5331,] 211 352 #>   [5332,] 212 352 #>   [5333,] 213 352 #>   [5334,] 214 352 #>   [5335,] 215 352 #>   [5336,] 216 352 #>   [5337,] 217 352 #>   [5338,] 218 352 #>   [5339,] 219 352 #>   [5340,] 220 352 #>   [5341,] 221 352 #>   [5342,] 222 352 #>   [5343,] 223 352 #>   [5344,] 224 352 #>   [5345,] 225 352 #>   [5346,] 226 352 #>   [5347,] 227 352 #>   [5348,] 228 352 #>   [5349,] 229 352 #>   [5350,] 230 352 #>   [5351,] 231 352 #>   [5352,] 232 352 #>   [5353,] 233 352 #>   [5354,] 234 352 #>   [5355,] 235 352 #>   [5356,] 236 352 #>   [5357,] 237 352 #>   [5358,] 238 352 #>   [5359,] 239 352 #>   [5360,] 240 352 #>   [5361,] 241 352 #>   [5362,] 242 352 #>   [5363,] 243 352 #>   [5364,] 244 352 #>   [5365,] 245 352 #>   [5366,] 246 352 #>   [5367,] 247 352 #>   [5368,] 248 352 #>   [5369,] 249 352 #>   [5370,] 250 352 #>   [5371,] 251 352 #>   [5372,] 252 352 #>   [5373,] 253 352 #>   [5374,] 254 352 #>   [5375,] 255 352 #>   [5376,] 256 352 #>   [5377,] 257 352 #>   [5378,] 258 352 #>   [5379,] 259 352 #>   [5380,] 260 352 #>   [5381,] 261 352 #>   [5382,] 262 352 #>   [5383,] 263 352 #>   [5384,] 264 352 #>   [5385,] 265 352 #>   [5386,] 266 352 #>   [5387,] 267 352 #>   [5388,] 268 352 #>   [5389,] 269 352 #>   [5390,] 270 352 #>   [5391,] 271 352 #>   [5392,] 272 352 #>   [5393,] 273 352 #>   [5394,] 274 352 #>   [5395,] 275 352 #>   [5396,] 276 352 #>   [5397,] 277 352 #>   [5398,] 278 352 #>   [5399,] 279 352 #>   [5400,] 280 352 #>   [5401,] 281 352 #>   [5402,] 282 352 #>   [5403,] 283 352 #>   [5404,] 284 352 #>   [5405,] 285 352 #>   [5406,] 286 352 #>   [5407,] 287 352 #>   [5408,] 288 352 #>   [5409,] 289 352 #>   [5410,] 290 352 #>   [5411,] 291 352 #>   [5412,] 292 352 #>   [5413,] 293 352 #>   [5414,] 294 352 #>   [5415,] 295 352 #>   [5416,] 296 352 #>   [5417,] 297 352 #>   [5418,] 298 352 #>   [5419,] 299 352 #>   [5420,] 300 352 #>   [5421,] 301 352 #>   [5422,] 302 352 #>   [5423,] 303 352 #>   [5424,] 304 352 #>   [5425,] 305 352 #>   [5426,] 306 352 #>   [5427,] 307 352 #>   [5428,] 308 352 #>   [5429,] 309 352 #>   [5430,] 310 352 #>   [5431,] 311 352 #>   [5432,] 312 352 #>   [5433,] 313 352 #>   [5434,] 314 352 #>   [5435,] 315 352 #>   [5436,] 316 352 #>   [5437,] 317 352 #>   [5438,] 318 352 #>   [5439,] 319 352 #>   [5440,] 320 352 #>   [5441,] 321 352 #>   [5442,] 322 352 #>   [5443,] 323 352 #>   [5444,] 324 352 #>   [5445,] 325 352 #>   [5446,] 326 352 #>   [5447,] 327 352 #>   [5448,] 328 352 #>   [5449,] 329 352 #>   [5450,] 330 352 #>   [5451,] 331 352 #>   [5452,] 332 352 #>   [5453,] 333 352 #>   [5454,] 334 352 #>   [5455,] 335 352 #>   [5456,] 336 352 #>   [5457,] 337 352 #>   [5458,] 338 352 #>   [5459,] 339 352 #>   [5460,] 340 352 #>   [5461,] 341 352 #>   [5462,] 342 352 #>   [5463,] 343 352 #>   [5464,] 344 352 #>   [5465,] 345 352 #>   [5466,] 346 352 #>   [5467,] 347 352 #>   [5468,] 348 352 #>   [5469,] 349 352 #>   [5470,] 350 352 #>   [5471,] 351 352 #>   [5472,] 352 352 #>   [5473,] 353 352 #>   [5474,] 354 352 #>   [5475,] 355 352 #>   [5476,] 356 352 #>   [5477,] 357 352 #>   [5478,] 358 352 #>   [5479,] 359 352 #>   [5480,] 360 352 #>   [5481,] 361 352 #>   [5482,] 362 352 #>   [5483,] 363 352 #>   [5484,] 364 352 #>   [5485,] 365 352 #>   [5486,] 366 352 #>   [5487,] 367 352 #>   [5488,] 368 352 #>   [5489,] 369 352 #>   [5490,] 370 352 #>   [5491,] 371 352 #>   [5492,] 372 352 #>   [5493,] 373 352 #>   [5494,] 374 352 #>   [5495,] 375 352 #>   [5496,] 376 352 #>   [5497,] 377 352 #>   [5498,] 378 352 #>   [5499,] 379 352 #>   [5500,] 380 352 #>   [5501,] 381 352 #>   [5502,] 382 352 #>   [5503,] 383 352 #>   [5504,] 384 352 #>   [5505,] 385 352 #>   [5506,] 386 352 #>   [5507,] 387 352 #>   [5508,] 388 352 #>   [5509,] 389 352 #>   [5510,] 390 352 #>   [5511,] 391 352 #>   [5512,] 392 352 #>   [5513,] 393 352 #>   [5514,] 394 352 #>   [5515,] 395 352 #>   [5516,] 396 352 #>   [5517,] 397 352 #>   [5518,] 398 352 #>   [5519,] 399 352 #>   [5520,] 400 352 #>   [5521,] 401 352 #>   [5522,] 402 352 #>   [5523,] 403 352 #>   [5524,] 404 352 #>   [5525,] 405 352 #>   [5526,] 406 352 #>   [5527,] 407 352 #>   [5528,] 408 352 #>   [5529,] 409 352 #>   [5530,] 410 352 #>   [5531,] 411 352 #>   [5532,] 412 352 #>   [5533,] 413 352 #>   [5534,] 414 352 #>   [5535,] 415 352 #>   [5536,] 416 352 #>   [5537,] 417 352 #>   [5538,] 418 352 #>   [5539,] 419 352 #>   [5540,] 420 352 #>   [5541,] 421 352 #>   [5542,] 422 352 #>   [5543,] 423 352 #>   [5544,] 424 352 #>   [5545,] 425 352 #>   [5546,] 426 352 #>   [5547,] 427 352 #>   [5548,] 428 352 #>   [5549,] 429 352 #>   [5550,] 430 352 #>   [5551,] 431 352 #>   [5552,] 432 352 #>   [5553,] 433 352 #>   [5554,] 434 352 #>   [5555,] 435 352 #>   [5556,] 436 352 #>   [5557,] 437 352 #>   [5558,] 438 352 #>   [5559,] 439 352 #>   [5560,] 440 352 #>   [5561,] 441 352 #>   [5562,] 442 352 #>   [5563,] 443 352 #>   [5564,] 444 352 #>   [5565,] 445 352 #>   [5566,] 446 352 #>   [5567,] 447 352 #>   [5568,] 448 352 #>   [5569,] 449 352 #>   [5570,] 450 352 #>   [5571,] 451 352 #>   [5572,] 452 352 #>   [5573,] 453 352 #>   [5574,] 454 352 #>   [5575,] 455 352 #>   [5576,] 456 352 #>   [5577,] 457 352 #>   [5578,] 458 352 #>   [5579,] 459 352 #>   [5580,] 460 352 #>   [5581,] 461 352 #>   [5582,] 462 352 #>   [5583,] 463 352 #>   [5584,] 464 352 #>   [5585,] 465 352 #>   [5586,] 466 352 #>   [5587,] 467 352 #>   [5588,] 468 352 #>   [5589,] 469 352 #>   [5590,] 470 352 #>   [5591,] 471 352 #>   [5592,] 472 352 #>   [5593,] 473 352 #>   [5594,] 474 352 #>   [5595,] 475 352 #>   [5596,] 476 352 #>   [5597,] 477 352 #>   [5598,] 478 352 #>   [5599,] 479 352 #>   [5600,] 480 352 #>   [5601,] 481 352 #>   [5602,] 482 352 #>   [5603,] 483 352 #>   [5604,] 484 352 #>   [5605,] 485 352 #>   [5606,] 486 352 #>   [5607,] 487 352 #>   [5608,] 488 352 #>   [5609,] 489 352 #>   [5610,] 490 352 #>   [5611,] 491 352 #>   [5612,] 492 352 #>   [5613,] 493 352 #>   [5614,] 494 352 #>   [5615,] 495 352 #>   [5616,] 496 352 #>   [5617,] 497 352 #>   [5618,] 498 352 #>   [5619,] 499 352 #>   [5620,] 500 352 #>   [5621,] 501 352 #>   [5622,] 502 352 #>   [5623,] 503 352 #>   [5624,] 504 352 #>   [5625,] 505 352 #>   [5626,] 506 352 #>   [5627,] 507 352 #>   [5628,] 508 352 #>   [5629,] 509 352 #>   [5630,] 510 352 #>   [5631,] 511 352 #>   [5632,] 512 352 #>   [5633,] 513 352 #>   [5634,] 514 352 #>   [5635,] 515 352 #>   [5636,] 516 352 #>   [5637,] 517 352 #>   [5638,] 518 352 #>   [5639,] 519 352 #>   [5640,] 520 352 #>   [5641,] 521 352 #>   [5642,] 522 352 #>   [5643,] 523 352 #>   [5644,] 524 352 #>   [5645,] 525 352 #>   [5646,] 526 352 #>   [5647,] 527 352 #>   [5648,] 528 352 #>   [5649,] 529 352 #>   [5650,] 530 352 #>   [5651,] 531 352 #>   [5652,] 532 352 #>   [5653,] 533 352 #>   [5654,] 534 352 #>   [5655,] 535 352 #>   [5656,] 536 352 #>   [5657,] 537 352 #>   [5658,] 538 352 #>   [5659,] 539 352 #>   [5660,] 540 352 #>   [5661,] 541 352 #>   [5662,] 542 352 #>   [5663,] 543 352 #>   [5664,] 544 352 #>   [5665,] 545 352 #>   [5666,] 546 352 #>   [5667,] 547 352 #>   [5668,] 548 352 #>   [5669,] 549 352 #>   [5670,] 550 352 #>   [5671,] 551 352 #>   [5672,] 552 352 #>   [5673,] 553 352 #>   [5674,] 554 352 #>   [5675,] 555 352 #>   [5676,] 556 352 #>   [5677,] 557 352 #>   [5678,] 558 352 #>   [5679,] 559 352 #>   [5680,] 560 352 #>   [5681,] 561 352 #>   [5682,] 562 352 #>   [5683,] 563 352 #>   [5684,] 564 352 #>   [5685,] 565 352 #>   [5686,] 566 352 #>   [5687,] 567 352 #>   [5688,] 568 352 #>   [5689,] 569 352 #>   [5690,] 570 352 #>   [5691,] 571 352 #>   [5692,] 572 352 #>   [5693,] 573 352 #>   [5694,] 574 352 #>   [5695,] 575 352 #>   [5696,] 576 352 #>   [5697,] 577 352 #>   [5698,] 578 352 #>   [5699,] 579 352 #>   [5700,] 580 352 #>   [5701,] 581 352 #>   [5702,] 582 352 #>   [5703,] 583 352 #>   [5704,] 584 352 #>   [5705,] 585 352 #>   [5706,] 586 352 #>   [5707,] 587 352 #>   [5708,] 588 352 #>   [5709,] 589 352 #>   [5710,] 590 352 #>   [5711,] 591 352 #>   [5712,] 592 352 #>   [5713,] 593 352 #>   [5714,] 594 352 #>   [5715,] 595 352 #>   [5716,] 596 352 #>   [5717,] 597 352 #>   [5718,] 598 352 #>   [5719,] 599 352 #>   [5720,] 600 352 #>   [5721,] 601 352 #>   [5722,] 602 352 #>   [5723,] 603 352 #>   [5724,] 604 352 #>   [5725,] 605 352 #>   [5726,] 606 352 #>   [5727,] 607 352 #>   [5728,] 608 352 #>   [5729,] 609 352 #>   [5730,] 610 352 #>   [5731,] 611 352 #>   [5732,] 612 352 #>   [5733,] 613 352 #>   [5734,] 614 352 #>   [5735,] 615 352 #>   [5736,] 616 352 #>   [5737,] 617 352 #>   [5738,] 618 352 #>   [5739,] 619 352 #>   [5740,] 620 352 #>   [5741,] 621 352 #>   [5742,] 622 352 #>   [5743,] 623 352 #>   [5744,] 624 352 #>   [5745,] 625 352 #>   [5746,] 626 352 #>   [5747,] 627 352 #>   [5748,] 628 352 #>   [5749,] 629 352 #>   [5750,] 630 352 #>   [5751,] 631 352 #>   [5752,] 632 352 #>   [5753,] 633 352 #>   [5754,] 634 352 #>   [5755,] 635 352 #>   [5756,] 636 352 #>   [5757,] 637 352 #>   [5758,] 638 352 #>   [5759,] 639 352 #>   [5760,] 640 352 #>   [5761,]   1 351 #>   [5762,]   2 351 #>   [5763,]   3 351 #>   [5764,]   4 351 #>   [5765,]   5 351 #>   [5766,]   6 351 #>   [5767,]   7 351 #>   [5768,]   8 351 #>   [5769,]   9 351 #>   [5770,]  10 351 #>   [5771,]  11 351 #>   [5772,]  12 351 #>   [5773,]  13 351 #>   [5774,]  14 351 #>   [5775,]  15 351 #>   [5776,]  16 351 #>   [5777,]  17 351 #>   [5778,]  18 351 #>   [5779,]  19 351 #>   [5780,]  20 351 #>   [5781,]  21 351 #>   [5782,]  22 351 #>   [5783,]  23 351 #>   [5784,]  24 351 #>   [5785,]  25 351 #>   [5786,]  26 351 #>   [5787,]  27 351 #>   [5788,]  28 351 #>   [5789,]  29 351 #>   [5790,]  30 351 #>   [5791,]  31 351 #>   [5792,]  32 351 #>   [5793,]  33 351 #>   [5794,]  34 351 #>   [5795,]  35 351 #>   [5796,]  36 351 #>   [5797,]  37 351 #>   [5798,]  38 351 #>   [5799,]  39 351 #>   [5800,]  40 351 #>   [5801,]  41 351 #>   [5802,]  42 351 #>   [5803,]  43 351 #>   [5804,]  44 351 #>   [5805,]  45 351 #>   [5806,]  46 351 #>   [5807,]  47 351 #>   [5808,]  48 351 #>   [5809,]  49 351 #>   [5810,]  50 351 #>   [5811,]  51 351 #>   [5812,]  52 351 #>   [5813,]  53 351 #>   [5814,]  54 351 #>   [5815,]  55 351 #>   [5816,]  56 351 #>   [5817,]  57 351 #>   [5818,]  58 351 #>   [5819,]  59 351 #>   [5820,]  60 351 #>   [5821,]  61 351 #>   [5822,]  62 351 #>   [5823,]  63 351 #>   [5824,]  64 351 #>   [5825,]  65 351 #>   [5826,]  66 351 #>   [5827,]  67 351 #>   [5828,]  68 351 #>   [5829,]  69 351 #>   [5830,]  70 351 #>   [5831,]  71 351 #>   [5832,]  72 351 #>   [5833,]  73 351 #>   [5834,]  74 351 #>   [5835,]  75 351 #>   [5836,]  76 351 #>   [5837,]  77 351 #>   [5838,]  78 351 #>   [5839,]  79 351 #>   [5840,]  80 351 #>   [5841,]  81 351 #>   [5842,]  82 351 #>   [5843,]  83 351 #>   [5844,]  84 351 #>   [5845,]  85 351 #>   [5846,]  86 351 #>   [5847,]  87 351 #>   [5848,]  88 351 #>   [5849,]  89 351 #>   [5850,]  90 351 #>   [5851,]  91 351 #>   [5852,]  92 351 #>   [5853,]  93 351 #>   [5854,]  94 351 #>   [5855,]  95 351 #>   [5856,]  96 351 #>   [5857,]  97 351 #>   [5858,]  98 351 #>   [5859,]  99 351 #>   [5860,] 100 351 #>   [5861,] 101 351 #>   [5862,] 102 351 #>   [5863,] 103 351 #>   [5864,] 104 351 #>   [5865,] 105 351 #>   [5866,] 106 351 #>   [5867,] 107 351 #>   [5868,] 108 351 #>   [5869,] 109 351 #>   [5870,] 110 351 #>   [5871,] 111 351 #>   [5872,] 112 351 #>   [5873,] 113 351 #>   [5874,] 114 351 #>   [5875,] 115 351 #>   [5876,] 116 351 #>   [5877,] 117 351 #>   [5878,] 118 351 #>   [5879,] 119 351 #>   [5880,] 120 351 #>   [5881,] 121 351 #>   [5882,] 122 351 #>   [5883,] 123 351 #>   [5884,] 124 351 #>   [5885,] 125 351 #>   [5886,] 126 351 #>   [5887,] 127 351 #>   [5888,] 128 351 #>   [5889,] 129 351 #>   [5890,] 130 351 #>   [5891,] 131 351 #>   [5892,] 132 351 #>   [5893,] 133 351 #>   [5894,] 134 351 #>   [5895,] 135 351 #>   [5896,] 136 351 #>   [5897,] 137 351 #>   [5898,] 138 351 #>   [5899,] 139 351 #>   [5900,] 140 351 #>   [5901,] 141 351 #>   [5902,] 142 351 #>   [5903,] 143 351 #>   [5904,] 144 351 #>   [5905,] 145 351 #>   [5906,] 146 351 #>   [5907,] 147 351 #>   [5908,] 148 351 #>   [5909,] 149 351 #>   [5910,] 150 351 #>   [5911,] 151 351 #>   [5912,] 152 351 #>   [5913,] 153 351 #>   [5914,] 154 351 #>   [5915,] 155 351 #>   [5916,] 156 351 #>   [5917,] 157 351 #>   [5918,] 158 351 #>   [5919,] 159 351 #>   [5920,] 160 351 #>   [5921,] 161 351 #>   [5922,] 162 351 #>   [5923,] 163 351 #>   [5924,] 164 351 #>   [5925,] 165 351 #>   [5926,] 166 351 #>   [5927,] 167 351 #>   [5928,] 168 351 #>   [5929,] 169 351 #>   [5930,] 170 351 #>   [5931,] 171 351 #>   [5932,] 172 351 #>   [5933,] 173 351 #>   [5934,] 174 351 #>   [5935,] 175 351 #>   [5936,] 176 351 #>   [5937,] 177 351 #>   [5938,] 178 351 #>   [5939,] 179 351 #>   [5940,] 180 351 #>   [5941,] 181 351 #>   [5942,] 182 351 #>   [5943,] 183 351 #>   [5944,] 184 351 #>   [5945,] 185 351 #>   [5946,] 186 351 #>   [5947,] 187 351 #>   [5948,] 188 351 #>   [5949,] 189 351 #>   [5950,] 190 351 #>   [5951,] 191 351 #>   [5952,] 192 351 #>   [5953,] 193 351 #>   [5954,] 194 351 #>   [5955,] 195 351 #>   [5956,] 196 351 #>   [5957,] 197 351 #>   [5958,] 198 351 #>   [5959,] 199 351 #>   [5960,] 200 351 #>   [5961,] 201 351 #>   [5962,] 202 351 #>   [5963,] 203 351 #>   [5964,] 204 351 #>   [5965,] 205 351 #>   [5966,] 206 351 #>   [5967,] 207 351 #>   [5968,] 208 351 #>   [5969,] 209 351 #>   [5970,] 210 351 #>   [5971,] 211 351 #>   [5972,] 212 351 #>   [5973,] 213 351 #>   [5974,] 214 351 #>   [5975,] 215 351 #>   [5976,] 216 351 #>   [5977,] 217 351 #>   [5978,] 218 351 #>   [5979,] 219 351 #>   [5980,] 220 351 #>   [5981,] 221 351 #>   [5982,] 222 351 #>   [5983,] 223 351 #>   [5984,] 224 351 #>   [5985,] 225 351 #>   [5986,] 226 351 #>   [5987,] 227 351 #>   [5988,] 228 351 #>   [5989,] 229 351 #>   [5990,] 230 351 #>   [5991,] 231 351 #>   [5992,] 232 351 #>   [5993,] 233 351 #>   [5994,] 234 351 #>   [5995,] 235 351 #>   [5996,] 236 351 #>   [5997,] 237 351 #>   [5998,] 238 351 #>   [5999,] 239 351 #>   [6000,] 240 351 #>   [6001,] 241 351 #>   [6002,] 242 351 #>   [6003,] 243 351 #>   [6004,] 244 351 #>   [6005,] 245 351 #>   [6006,] 246 351 #>   [6007,] 247 351 #>   [6008,] 248 351 #>   [6009,] 249 351 #>   [6010,] 250 351 #>   [6011,] 251 351 #>   [6012,] 252 351 #>   [6013,] 253 351 #>   [6014,] 254 351 #>   [6015,] 255 351 #>   [6016,] 256 351 #>   [6017,] 257 351 #>   [6018,] 258 351 #>   [6019,] 259 351 #>   [6020,] 260 351 #>   [6021,] 261 351 #>   [6022,] 262 351 #>   [6023,] 263 351 #>   [6024,] 264 351 #>   [6025,] 265 351 #>   [6026,] 266 351 #>   [6027,] 267 351 #>   [6028,] 268 351 #>   [6029,] 269 351 #>   [6030,] 270 351 #>   [6031,] 271 351 #>   [6032,] 272 351 #>   [6033,] 273 351 #>   [6034,] 274 351 #>   [6035,] 275 351 #>   [6036,] 276 351 #>   [6037,] 277 351 #>   [6038,] 278 351 #>   [6039,] 279 351 #>   [6040,] 280 351 #>   [6041,] 281 351 #>   [6042,] 282 351 #>   [6043,] 283 351 #>   [6044,] 284 351 #>   [6045,] 285 351 #>   [6046,] 286 351 #>   [6047,] 287 351 #>   [6048,] 288 351 #>   [6049,] 289 351 #>   [6050,] 290 351 #>   [6051,] 291 351 #>   [6052,] 292 351 #>   [6053,] 293 351 #>   [6054,] 294 351 #>   [6055,] 295 351 #>   [6056,] 296 351 #>   [6057,] 297 351 #>   [6058,] 298 351 #>   [6059,] 299 351 #>   [6060,] 300 351 #>   [6061,] 301 351 #>   [6062,] 302 351 #>   [6063,] 303 351 #>   [6064,] 304 351 #>   [6065,] 305 351 #>   [6066,] 306 351 #>   [6067,] 307 351 #>   [6068,] 308 351 #>   [6069,] 309 351 #>   [6070,] 310 351 #>   [6071,] 311 351 #>   [6072,] 312 351 #>   [6073,] 313 351 #>   [6074,] 314 351 #>   [6075,] 315 351 #>   [6076,] 316 351 #>   [6077,] 317 351 #>   [6078,] 318 351 #>   [6079,] 319 351 #>   [6080,] 320 351 #>   [6081,] 321 351 #>   [6082,] 322 351 #>   [6083,] 323 351 #>   [6084,] 324 351 #>   [6085,] 325 351 #>   [6086,] 326 351 #>   [6087,] 327 351 #>   [6088,] 328 351 #>   [6089,] 329 351 #>   [6090,] 330 351 #>   [6091,] 331 351 #>   [6092,] 332 351 #>   [6093,] 333 351 #>   [6094,] 334 351 #>   [6095,] 335 351 #>   [6096,] 336 351 #>   [6097,] 337 351 #>   [6098,] 338 351 #>   [6099,] 339 351 #>   [6100,] 340 351 #>   [6101,] 341 351 #>   [6102,] 342 351 #>   [6103,] 343 351 #>   [6104,] 344 351 #>   [6105,] 345 351 #>   [6106,] 346 351 #>   [6107,] 347 351 #>   [6108,] 348 351 #>   [6109,] 349 351 #>   [6110,] 350 351 #>   [6111,] 351 351 #>   [6112,] 352 351 #>   [6113,] 353 351 #>   [6114,] 354 351 #>   [6115,] 355 351 #>   [6116,] 356 351 #>   [6117,] 357 351 #>   [6118,] 358 351 #>   [6119,] 359 351 #>   [6120,] 360 351 #>   [6121,] 361 351 #>   [6122,] 362 351 #>   [6123,] 363 351 #>   [6124,] 364 351 #>   [6125,] 365 351 #>   [6126,] 366 351 #>   [6127,] 367 351 #>   [6128,] 368 351 #>   [6129,] 369 351 #>   [6130,] 370 351 #>   [6131,] 371 351 #>   [6132,] 372 351 #>   [6133,] 373 351 #>   [6134,] 374 351 #>   [6135,] 375 351 #>   [6136,] 376 351 #>   [6137,] 377 351 #>   [6138,] 378 351 #>   [6139,] 379 351 #>   [6140,] 380 351 #>   [6141,] 381 351 #>   [6142,] 382 351 #>   [6143,] 383 351 #>   [6144,] 384 351 #>   [6145,] 385 351 #>   [6146,] 386 351 #>   [6147,] 387 351 #>   [6148,] 388 351 #>   [6149,] 389 351 #>   [6150,] 390 351 #>   [6151,] 391 351 #>   [6152,] 392 351 #>   [6153,] 393 351 #>   [6154,] 394 351 #>   [6155,] 395 351 #>   [6156,] 396 351 #>   [6157,] 397 351 #>   [6158,] 398 351 #>   [6159,] 399 351 #>   [6160,] 400 351 #>   [6161,] 401 351 #>   [6162,] 402 351 #>   [6163,] 403 351 #>   [6164,] 404 351 #>   [6165,] 405 351 #>   [6166,] 406 351 #>   [6167,] 407 351 #>   [6168,] 408 351 #>   [6169,] 409 351 #>   [6170,] 410 351 #>   [6171,] 411 351 #>   [6172,] 412 351 #>   [6173,] 413 351 #>   [6174,] 414 351 #>   [6175,] 415 351 #>   [6176,] 416 351 #>   [6177,] 417 351 #>   [6178,] 418 351 #>   [6179,] 419 351 #>   [6180,] 420 351 #>   [6181,] 421 351 #>   [6182,] 422 351 #>   [6183,] 423 351 #>   [6184,] 424 351 #>   [6185,] 425 351 #>   [6186,] 426 351 #>   [6187,] 427 351 #>   [6188,] 428 351 #>   [6189,] 429 351 #>   [6190,] 430 351 #>   [6191,] 431 351 #>   [6192,] 432 351 #>   [6193,] 433 351 #>   [6194,] 434 351 #>   [6195,] 435 351 #>   [6196,] 436 351 #>   [6197,] 437 351 #>   [6198,] 438 351 #>   [6199,] 439 351 #>   [6200,] 440 351 #>   [6201,] 441 351 #>   [6202,] 442 351 #>   [6203,] 443 351 #>   [6204,] 444 351 #>   [6205,] 445 351 #>   [6206,] 446 351 #>   [6207,] 447 351 #>   [6208,] 448 351 #>   [6209,] 449 351 #>   [6210,] 450 351 #>   [6211,] 451 351 #>   [6212,] 452 351 #>   [6213,] 453 351 #>   [6214,] 454 351 #>   [6215,] 455 351 #>   [6216,] 456 351 #>   [6217,] 457 351 #>   [6218,] 458 351 #>   [6219,] 459 351 #>   [6220,] 460 351 #>   [6221,] 461 351 #>   [6222,] 462 351 #>   [6223,] 463 351 #>   [6224,] 464 351 #>   [6225,] 465 351 #>   [6226,] 466 351 #>   [6227,] 467 351 #>   [6228,] 468 351 #>   [6229,] 469 351 #>   [6230,] 470 351 #>   [6231,] 471 351 #>   [6232,] 472 351 #>   [6233,] 473 351 #>   [6234,] 474 351 #>   [6235,] 475 351 #>   [6236,] 476 351 #>   [6237,] 477 351 #>   [6238,] 478 351 #>   [6239,] 479 351 #>   [6240,] 480 351 #>   [6241,] 481 351 #>   [6242,] 482 351 #>   [6243,] 483 351 #>   [6244,] 484 351 #>   [6245,] 485 351 #>   [6246,] 486 351 #>   [6247,] 487 351 #>   [6248,] 488 351 #>   [6249,] 489 351 #>   [6250,] 490 351 #>   [6251,] 491 351 #>   [6252,] 492 351 #>   [6253,] 493 351 #>   [6254,] 494 351 #>   [6255,] 495 351 #>   [6256,] 496 351 #>   [6257,] 497 351 #>   [6258,] 498 351 #>   [6259,] 499 351 #>   [6260,] 500 351 #>   [6261,] 501 351 #>   [6262,] 502 351 #>   [6263,] 503 351 #>   [6264,] 504 351 #>   [6265,] 505 351 #>   [6266,] 506 351 #>   [6267,] 507 351 #>   [6268,] 508 351 #>   [6269,] 509 351 #>   [6270,] 510 351 #>   [6271,] 511 351 #>   [6272,] 512 351 #>   [6273,] 513 351 #>   [6274,] 514 351 #>   [6275,] 515 351 #>   [6276,] 516 351 #>   [6277,] 517 351 #>   [6278,] 518 351 #>   [6279,] 519 351 #>   [6280,] 520 351 #>   [6281,] 521 351 #>   [6282,] 522 351 #>   [6283,] 523 351 #>   [6284,] 524 351 #>   [6285,] 525 351 #>   [6286,] 526 351 #>   [6287,] 527 351 #>   [6288,] 528 351 #>   [6289,] 529 351 #>   [6290,] 530 351 #>   [6291,] 531 351 #>   [6292,] 532 351 #>   [6293,] 533 351 #>   [6294,] 534 351 #>   [6295,] 535 351 #>   [6296,] 536 351 #>   [6297,] 537 351 #>   [6298,] 538 351 #>   [6299,] 539 351 #>   [6300,] 540 351 #>   [6301,] 541 351 #>   [6302,] 542 351 #>   [6303,] 543 351 #>   [6304,] 544 351 #>   [6305,] 545 351 #>   [6306,] 546 351 #>   [6307,] 547 351 #>   [6308,] 548 351 #>   [6309,] 549 351 #>   [6310,] 550 351 #>   [6311,] 551 351 #>   [6312,] 552 351 #>   [6313,] 553 351 #>   [6314,] 554 351 #>   [6315,] 555 351 #>   [6316,] 556 351 #>   [6317,] 557 351 #>   [6318,] 558 351 #>   [6319,] 559 351 #>   [6320,] 560 351 #>   [6321,] 561 351 #>   [6322,] 562 351 #>   [6323,] 563 351 #>   [6324,] 564 351 #>   [6325,] 565 351 #>   [6326,] 566 351 #>   [6327,] 567 351 #>   [6328,] 568 351 #>   [6329,] 569 351 #>   [6330,] 570 351 #>   [6331,] 571 351 #>   [6332,] 572 351 #>   [6333,] 573 351 #>   [6334,] 574 351 #>   [6335,] 575 351 #>   [6336,] 576 351 #>   [6337,] 577 351 #>   [6338,] 578 351 #>   [6339,] 579 351 #>   [6340,] 580 351 #>   [6341,] 581 351 #>   [6342,] 582 351 #>   [6343,] 583 351 #>   [6344,] 584 351 #>   [6345,] 585 351 #>   [6346,] 586 351 #>   [6347,] 587 351 #>   [6348,] 588 351 #>   [6349,] 589 351 #>   [6350,] 590 351 #>   [6351,] 591 351 #>   [6352,] 592 351 #>   [6353,] 593 351 #>   [6354,] 594 351 #>   [6355,] 595 351 #>   [6356,] 596 351 #>   [6357,] 597 351 #>   [6358,] 598 351 #>   [6359,] 599 351 #>   [6360,] 600 351 #>   [6361,] 601 351 #>   [6362,] 602 351 #>   [6363,] 603 351 #>   [6364,] 604 351 #>   [6365,] 605 351 #>   [6366,] 606 351 #>   [6367,] 607 351 #>   [6368,] 608 351 #>   [6369,] 609 351 #>   [6370,] 610 351 #>   [6371,] 611 351 #>   [6372,] 612 351 #>   [6373,] 613 351 #>   [6374,] 614 351 #>   [6375,] 615 351 #>   [6376,] 616 351 #>   [6377,] 617 351 #>   [6378,] 618 351 #>   [6379,] 619 351 #>   [6380,] 620 351 #>   [6381,] 621 351 #>   [6382,] 622 351 #>   [6383,] 623 351 #>   [6384,] 624 351 #>   [6385,] 625 351 #>   [6386,] 626 351 #>   [6387,] 627 351 #>   [6388,] 628 351 #>   [6389,] 629 351 #>   [6390,] 630 351 #>   [6391,] 631 351 #>   [6392,] 632 351 #>   [6393,] 633 351 #>   [6394,] 634 351 #>   [6395,] 635 351 #>   [6396,] 636 351 #>   [6397,] 637 351 #>   [6398,] 638 351 #>   [6399,] 639 351 #>   [6400,] 640 351 #>   [6401,]   1 350 #>   [6402,]   2 350 #>   [6403,]   3 350 #>   [6404,]   4 350 #>   [6405,]   5 350 #>   [6406,]   6 350 #>   [6407,]   7 350 #>   [6408,]   8 350 #>   [6409,]   9 350 #>   [6410,]  10 350 #>   [6411,]  11 350 #>   [6412,]  12 350 #>   [6413,]  13 350 #>   [6414,]  14 350 #>   [6415,]  15 350 #>   [6416,]  16 350 #>   [6417,]  17 350 #>   [6418,]  18 350 #>   [6419,]  19 350 #>   [6420,]  20 350 #>   [6421,]  21 350 #>   [6422,]  22 350 #>   [6423,]  23 350 #>   [6424,]  24 350 #>   [6425,]  25 350 #>   [6426,]  26 350 #>   [6427,]  27 350 #>   [6428,]  28 350 #>   [6429,]  29 350 #>   [6430,]  30 350 #>   [6431,]  31 350 #>   [6432,]  32 350 #>   [6433,]  33 350 #>   [6434,]  34 350 #>   [6435,]  35 350 #>   [6436,]  36 350 #>   [6437,]  37 350 #>   [6438,]  38 350 #>   [6439,]  39 350 #>   [6440,]  40 350 #>   [6441,]  41 350 #>   [6442,]  42 350 #>   [6443,]  43 350 #>   [6444,]  44 350 #>   [6445,]  45 350 #>   [6446,]  46 350 #>   [6447,]  47 350 #>   [6448,]  48 350 #>   [6449,]  49 350 #>   [6450,]  50 350 #>   [6451,]  51 350 #>   [6452,]  52 350 #>   [6453,]  53 350 #>   [6454,]  54 350 #>   [6455,]  55 350 #>   [6456,]  56 350 #>   [6457,]  57 350 #>   [6458,]  58 350 #>   [6459,]  59 350 #>   [6460,]  60 350 #>   [6461,]  61 350 #>   [6462,]  62 350 #>   [6463,]  63 350 #>   [6464,]  64 350 #>   [6465,]  65 350 #>   [6466,]  66 350 #>   [6467,]  67 350 #>   [6468,]  68 350 #>   [6469,]  69 350 #>   [6470,]  70 350 #>   [6471,]  71 350 #>   [6472,]  72 350 #>   [6473,]  73 350 #>   [6474,]  74 350 #>   [6475,]  75 350 #>   [6476,]  76 350 #>   [6477,]  77 350 #>   [6478,]  78 350 #>   [6479,]  79 350 #>   [6480,]  80 350 #>   [6481,]  81 350 #>   [6482,]  82 350 #>   [6483,]  83 350 #>   [6484,]  84 350 #>   [6485,]  85 350 #>   [6486,]  86 350 #>   [6487,]  87 350 #>   [6488,]  88 350 #>   [6489,]  89 350 #>   [6490,]  90 350 #>   [6491,]  91 350 #>   [6492,]  92 350 #>   [6493,]  93 350 #>   [6494,]  94 350 #>   [6495,]  95 350 #>   [6496,]  96 350 #>   [6497,]  97 350 #>   [6498,]  98 350 #>   [6499,]  99 350 #>   [6500,] 100 350 #>   [6501,] 101 350 #>   [6502,] 102 350 #>   [6503,] 103 350 #>   [6504,] 104 350 #>   [6505,] 105 350 #>   [6506,] 106 350 #>   [6507,] 107 350 #>   [6508,] 108 350 #>   [6509,] 109 350 #>   [6510,] 110 350 #>   [6511,] 111 350 #>   [6512,] 112 350 #>   [6513,] 113 350 #>   [6514,] 114 350 #>   [6515,] 115 350 #>   [6516,] 116 350 #>   [6517,] 117 350 #>   [6518,] 118 350 #>   [6519,] 119 350 #>   [6520,] 120 350 #>   [6521,] 121 350 #>   [6522,] 122 350 #>   [6523,] 123 350 #>   [6524,] 124 350 #>   [6525,] 125 350 #>   [6526,] 126 350 #>   [6527,] 127 350 #>   [6528,] 128 350 #>   [6529,] 129 350 #>   [6530,] 130 350 #>   [6531,] 131 350 #>   [6532,] 132 350 #>   [6533,] 133 350 #>   [6534,] 134 350 #>   [6535,] 135 350 #>   [6536,] 136 350 #>   [6537,] 137 350 #>   [6538,] 138 350 #>   [6539,] 139 350 #>   [6540,] 140 350 #>   [6541,] 141 350 #>   [6542,] 142 350 #>   [6543,] 143 350 #>   [6544,] 144 350 #>   [6545,] 145 350 #>   [6546,] 146 350 #>   [6547,] 147 350 #>   [6548,] 148 350 #>   [6549,] 149 350 #>   [6550,] 150 350 #>   [6551,] 151 350 #>   [6552,] 152 350 #>   [6553,] 153 350 #>   [6554,] 154 350 #>   [6555,] 155 350 #>   [6556,] 156 350 #>   [6557,] 157 350 #>   [6558,] 158 350 #>   [6559,] 159 350 #>   [6560,] 160 350 #>   [6561,] 161 350 #>   [6562,] 162 350 #>   [6563,] 163 350 #>   [6564,] 164 350 #>   [6565,] 165 350 #>   [6566,] 166 350 #>   [6567,] 167 350 #>   [6568,] 168 350 #>   [6569,] 169 350 #>   [6570,] 170 350 #>   [6571,] 171 350 #>   [6572,] 172 350 #>   [6573,] 173 350 #>   [6574,] 174 350 #>   [6575,] 175 350 #>   [6576,] 176 350 #>   [6577,] 177 350 #>   [6578,] 178 350 #>   [6579,] 179 350 #>   [6580,] 180 350 #>   [6581,] 181 350 #>   [6582,] 182 350 #>   [6583,] 183 350 #>   [6584,] 184 350 #>   [6585,] 185 350 #>   [6586,] 186 350 #>   [6587,] 187 350 #>   [6588,] 188 350 #>   [6589,] 189 350 #>   [6590,] 190 350 #>   [6591,] 191 350 #>   [6592,] 192 350 #>   [6593,] 193 350 #>   [6594,] 194 350 #>   [6595,] 195 350 #>   [6596,] 196 350 #>   [6597,] 197 350 #>   [6598,] 198 350 #>   [6599,] 199 350 #>   [6600,] 200 350 #>   [6601,] 201 350 #>   [6602,] 202 350 #>   [6603,] 203 350 #>   [6604,] 204 350 #>   [6605,] 205 350 #>   [6606,] 206 350 #>   [6607,] 207 350 #>   [6608,] 208 350 #>   [6609,] 209 350 #>   [6610,] 210 350 #>   [6611,] 211 350 #>   [6612,] 212 350 #>   [6613,] 213 350 #>   [6614,] 214 350 #>   [6615,] 215 350 #>   [6616,] 216 350 #>   [6617,] 217 350 #>   [6618,] 218 350 #>   [6619,] 219 350 #>   [6620,] 220 350 #>   [6621,] 221 350 #>   [6622,] 222 350 #>   [6623,] 223 350 #>   [6624,] 224 350 #>   [6625,] 225 350 #>   [6626,] 226 350 #>   [6627,] 227 350 #>   [6628,] 228 350 #>   [6629,] 229 350 #>   [6630,] 230 350 #>   [6631,] 231 350 #>   [6632,] 232 350 #>   [6633,] 233 350 #>   [6634,] 234 350 #>   [6635,] 235 350 #>   [6636,] 236 350 #>   [6637,] 237 350 #>   [6638,] 238 350 #>   [6639,] 239 350 #>   [6640,] 240 350 #>   [6641,] 241 350 #>   [6642,] 242 350 #>   [6643,] 243 350 #>   [6644,] 244 350 #>   [6645,] 245 350 #>   [6646,] 246 350 #>   [6647,] 247 350 #>   [6648,] 248 350 #>   [6649,] 249 350 #>   [6650,] 250 350 #>   [6651,] 251 350 #>   [6652,] 252 350 #>   [6653,] 253 350 #>   [6654,] 254 350 #>   [6655,] 255 350 #>   [6656,] 256 350 #>   [6657,] 257 350 #>   [6658,] 258 350 #>   [6659,] 259 350 #>   [6660,] 260 350 #>   [6661,] 261 350 #>   [6662,] 262 350 #>   [6663,] 263 350 #>   [6664,] 264 350 #>   [6665,] 265 350 #>   [6666,] 266 350 #>   [6667,] 267 350 #>   [6668,] 268 350 #>   [6669,] 269 350 #>   [6670,] 270 350 #>   [6671,] 271 350 #>   [6672,] 272 350 #>   [6673,] 273 350 #>   [6674,] 274 350 #>   [6675,] 275 350 #>   [6676,] 276 350 #>   [6677,] 277 350 #>   [6678,] 278 350 #>   [6679,] 279 350 #>   [6680,] 280 350 #>   [6681,] 281 350 #>   [6682,] 282 350 #>   [6683,] 283 350 #>   [6684,] 284 350 #>   [6685,] 285 350 #>   [6686,] 286 350 #>   [6687,] 287 350 #>   [6688,] 288 350 #>   [6689,] 289 350 #>   [6690,] 290 350 #>   [6691,] 291 350 #>   [6692,] 292 350 #>   [6693,] 293 350 #>   [6694,] 294 350 #>   [6695,] 295 350 #>   [6696,] 296 350 #>   [6697,] 297 350 #>   [6698,] 298 350 #>   [6699,] 299 350 #>   [6700,] 300 350 #>   [6701,] 301 350 #>   [6702,] 302 350 #>   [6703,] 303 350 #>   [6704,] 304 350 #>   [6705,] 305 350 #>   [6706,] 306 350 #>   [6707,] 307 350 #>   [6708,] 308 350 #>   [6709,] 309 350 #>   [6710,] 310 350 #>   [6711,] 311 350 #>   [6712,] 312 350 #>   [6713,] 313 350 #>   [6714,] 314 350 #>   [6715,] 315 350 #>   [6716,] 316 350 #>   [6717,] 317 350 #>   [6718,] 318 350 #>   [6719,] 319 350 #>   [6720,] 320 350 #>   [6721,] 321 350 #>   [6722,] 322 350 #>   [6723,] 323 350 #>   [6724,] 324 350 #>   [6725,] 325 350 #>   [6726,] 326 350 #>   [6727,] 327 350 #>   [6728,] 328 350 #>   [6729,] 329 350 #>   [6730,] 330 350 #>   [6731,] 331 350 #>   [6732,] 332 350 #>   [6733,] 333 350 #>   [6734,] 334 350 #>   [6735,] 335 350 #>   [6736,] 336 350 #>   [6737,] 337 350 #>   [6738,] 338 350 #>   [6739,] 339 350 #>   [6740,] 340 350 #>   [6741,] 341 350 #>   [6742,] 342 350 #>   [6743,] 343 350 #>   [6744,] 344 350 #>   [6745,] 345 350 #>   [6746,] 346 350 #>   [6747,] 347 350 #>   [6748,] 348 350 #>   [6749,] 349 350 #>   [6750,] 350 350 #>   [6751,] 351 350 #>   [6752,] 352 350 #>   [6753,] 353 350 #>   [6754,] 354 350 #>   [6755,] 355 350 #>   [6756,] 356 350 #>   [6757,] 357 350 #>   [6758,] 358 350 #>   [6759,] 359 350 #>   [6760,] 360 350 #>   [6761,] 361 350 #>   [6762,] 362 350 #>   [6763,] 363 350 #>   [6764,] 364 350 #>   [6765,] 365 350 #>   [6766,] 366 350 #>   [6767,] 367 350 #>   [6768,] 368 350 #>   [6769,] 369 350 #>   [6770,] 370 350 #>   [6771,] 371 350 #>   [6772,] 372 350 #>   [6773,] 373 350 #>   [6774,] 374 350 #>   [6775,] 375 350 #>   [6776,] 376 350 #>   [6777,] 377 350 #>   [6778,] 378 350 #>   [6779,] 379 350 #>   [6780,] 380 350 #>   [6781,] 381 350 #>   [6782,] 382 350 #>   [6783,] 383 350 #>   [6784,] 384 350 #>   [6785,] 385 350 #>   [6786,] 386 350 #>   [6787,] 387 350 #>   [6788,] 388 350 #>   [6789,] 389 350 #>   [6790,] 390 350 #>   [6791,] 391 350 #>   [6792,] 392 350 #>   [6793,] 393 350 #>   [6794,] 394 350 #>   [6795,] 395 350 #>   [6796,] 396 350 #>   [6797,] 397 350 #>   [6798,] 398 350 #>   [6799,] 399 350 #>   [6800,] 400 350 #>   [6801,] 401 350 #>   [6802,] 402 350 #>   [6803,] 403 350 #>   [6804,] 404 350 #>   [6805,] 405 350 #>   [6806,] 406 350 #>   [6807,] 407 350 #>   [6808,] 408 350 #>   [6809,] 409 350 #>   [6810,] 410 350 #>   [6811,] 411 350 #>   [6812,] 412 350 #>   [6813,] 413 350 #>   [6814,] 414 350 #>   [6815,] 415 350 #>   [6816,] 416 350 #>   [6817,] 417 350 #>   [6818,] 418 350 #>   [6819,] 419 350 #>   [6820,] 420 350 #>   [6821,] 421 350 #>   [6822,] 422 350 #>   [6823,] 423 350 #>   [6824,] 424 350 #>   [6825,] 425 350 #>   [6826,] 426 350 #>   [6827,] 427 350 #>   [6828,] 428 350 #>   [6829,] 429 350 #>   [6830,] 430 350 #>   [6831,] 431 350 #>   [6832,] 432 350 #>   [6833,] 433 350 #>   [6834,] 434 350 #>   [6835,] 435 350 #>   [6836,] 436 350 #>   [6837,] 437 350 #>   [6838,] 438 350 #>   [6839,] 439 350 #>   [6840,] 440 350 #>   [6841,] 441 350 #>   [6842,] 442 350 #>   [6843,] 443 350 #>   [6844,] 444 350 #>   [6845,] 445 350 #>   [6846,] 446 350 #>   [6847,] 447 350 #>   [6848,] 448 350 #>   [6849,] 449 350 #>   [6850,] 450 350 #>   [6851,] 451 350 #>   [6852,] 452 350 #>   [6853,] 453 350 #>   [6854,] 454 350 #>   [6855,] 455 350 #>   [6856,] 456 350 #>   [6857,] 457 350 #>   [6858,] 458 350 #>   [6859,] 459 350 #>   [6860,] 460 350 #>   [6861,] 461 350 #>   [6862,] 462 350 #>   [6863,] 463 350 #>   [6864,] 464 350 #>   [6865,] 465 350 #>   [6866,] 466 350 #>   [6867,] 467 350 #>   [6868,] 468 350 #>   [6869,] 469 350 #>   [6870,] 470 350 #>   [6871,] 471 350 #>   [6872,] 472 350 #>   [6873,] 473 350 #>   [6874,] 474 350 #>   [6875,] 475 350 #>   [6876,] 476 350 #>   [6877,] 477 350 #>   [6878,] 478 350 #>   [6879,] 479 350 #>   [6880,] 480 350 #>   [6881,] 481 350 #>   [6882,] 482 350 #>   [6883,] 483 350 #>   [6884,] 484 350 #>   [6885,] 485 350 #>   [6886,] 486 350 #>   [6887,] 487 350 #>   [6888,] 488 350 #>   [6889,] 489 350 #>   [6890,] 490 350 #>   [6891,] 491 350 #>   [6892,] 492 350 #>   [6893,] 493 350 #>   [6894,] 494 350 #>   [6895,] 495 350 #>   [6896,] 496 350 #>   [6897,] 497 350 #>   [6898,] 498 350 #>   [6899,] 499 350 #>   [6900,] 500 350 #>   [6901,] 501 350 #>   [6902,] 502 350 #>   [6903,] 503 350 #>   [6904,] 504 350 #>   [6905,] 505 350 #>   [6906,] 506 350 #>   [6907,] 507 350 #>   [6908,] 508 350 #>   [6909,] 509 350 #>   [6910,] 510 350 #>   [6911,] 511 350 #>   [6912,] 512 350 #>   [6913,] 513 350 #>   [6914,] 514 350 #>   [6915,] 515 350 #>   [6916,] 516 350 #>   [6917,] 517 350 #>   [6918,] 518 350 #>   [6919,] 519 350 #>   [6920,] 520 350 #>   [6921,] 521 350 #>   [6922,] 522 350 #>   [6923,] 523 350 #>   [6924,] 524 350 #>   [6925,] 525 350 #>   [6926,] 526 350 #>   [6927,] 527 350 #>   [6928,] 528 350 #>   [6929,] 529 350 #>   [6930,] 530 350 #>   [6931,] 531 350 #>   [6932,] 532 350 #>   [6933,] 533 350 #>   [6934,] 534 350 #>   [6935,] 535 350 #>   [6936,] 536 350 #>   [6937,] 537 350 #>   [6938,] 538 350 #>   [6939,] 539 350 #>   [6940,] 540 350 #>   [6941,] 541 350 #>   [6942,] 542 350 #>   [6943,] 543 350 #>   [6944,] 544 350 #>   [6945,] 545 350 #>   [6946,] 546 350 #>   [6947,] 547 350 #>   [6948,] 548 350 #>   [6949,] 549 350 #>   [6950,] 550 350 #>   [6951,] 551 350 #>   [6952,] 552 350 #>   [6953,] 553 350 #>   [6954,] 554 350 #>   [6955,] 555 350 #>   [6956,] 556 350 #>   [6957,] 557 350 #>   [6958,] 558 350 #>   [6959,] 559 350 #>   [6960,] 560 350 #>   [6961,] 561 350 #>   [6962,] 562 350 #>   [6963,] 563 350 #>   [6964,] 564 350 #>   [6965,] 565 350 #>   [6966,] 566 350 #>   [6967,] 567 350 #>   [6968,] 568 350 #>   [6969,] 569 350 #>   [6970,] 570 350 #>   [6971,] 571 350 #>   [6972,] 572 350 #>   [6973,] 573 350 #>   [6974,] 574 350 #>   [6975,] 575 350 #>   [6976,] 576 350 #>   [6977,] 577 350 #>   [6978,] 578 350 #>   [6979,] 579 350 #>   [6980,] 580 350 #>   [6981,] 581 350 #>   [6982,] 582 350 #>   [6983,] 583 350 #>   [6984,] 584 350 #>   [6985,] 585 350 #>   [6986,] 586 350 #>   [6987,] 587 350 #>   [6988,] 588 350 #>   [6989,] 589 350 #>   [6990,] 590 350 #>   [6991,] 591 350 #>   [6992,] 592 350 #>   [6993,] 593 350 #>   [6994,] 594 350 #>   [6995,] 595 350 #>   [6996,] 596 350 #>   [6997,] 597 350 #>   [6998,] 598 350 #>   [6999,] 599 350 #>   [7000,] 600 350 #>   [7001,] 601 350 #>   [7002,] 602 350 #>   [7003,] 603 350 #>   [7004,] 604 350 #>   [7005,] 605 350 #>   [7006,] 606 350 #>   [7007,] 607 350 #>   [7008,] 608 350 #>   [7009,] 609 350 #>   [7010,] 610 350 #>   [7011,] 611 350 #>   [7012,] 612 350 #>   [7013,] 613 350 #>   [7014,] 614 350 #>   [7015,] 615 350 #>   [7016,] 616 350 #>   [7017,] 617 350 #>   [7018,] 618 350 #>   [7019,] 619 350 #>   [7020,] 620 350 #>   [7021,] 621 350 #>   [7022,] 622 350 #>   [7023,] 623 350 #>   [7024,] 624 350 #>   [7025,] 625 350 #>   [7026,] 626 350 #>   [7027,] 627 350 #>   [7028,] 628 350 #>   [7029,] 629 350 #>   [7030,] 630 350 #>   [7031,] 631 350 #>   [7032,] 632 350 #>   [7033,] 633 350 #>   [7034,] 634 350 #>   [7035,] 635 350 #>   [7036,] 636 350 #>   [7037,] 637 350 #>   [7038,] 638 350 #>   [7039,] 639 350 #>   [7040,] 640 350 #>   [7041,]   1 349 #>   [7042,]   2 349 #>   [7043,]   3 349 #>   [7044,]   4 349 #>   [7045,]   5 349 #>   [7046,]   6 349 #>   [7047,]   7 349 #>   [7048,]   8 349 #>   [7049,]   9 349 #>   [7050,]  10 349 #>   [7051,]  11 349 #>   [7052,]  12 349 #>   [7053,]  13 349 #>   [7054,]  14 349 #>   [7055,]  15 349 #>   [7056,]  16 349 #>   [7057,]  17 349 #>   [7058,]  18 349 #>   [7059,]  19 349 #>   [7060,]  20 349 #>   [7061,]  21 349 #>   [7062,]  22 349 #>   [7063,]  23 349 #>   [7064,]  24 349 #>   [7065,]  25 349 #>   [7066,]  26 349 #>   [7067,]  27 349 #>   [7068,]  28 349 #>   [7069,]  29 349 #>   [7070,]  30 349 #>   [7071,]  31 349 #>   [7072,]  32 349 #>   [7073,]  33 349 #>   [7074,]  34 349 #>   [7075,]  35 349 #>   [7076,]  36 349 #>   [7077,]  37 349 #>   [7078,]  38 349 #>   [7079,]  39 349 #>   [7080,]  40 349 #>   [7081,]  41 349 #>   [7082,]  42 349 #>   [7083,]  43 349 #>   [7084,]  44 349 #>   [7085,]  45 349 #>   [7086,]  46 349 #>   [7087,]  47 349 #>   [7088,]  48 349 #>   [7089,]  49 349 #>   [7090,]  50 349 #>   [7091,]  51 349 #>   [7092,]  52 349 #>   [7093,]  53 349 #>   [7094,]  54 349 #>   [7095,]  55 349 #>   [7096,]  56 349 #>   [7097,]  57 349 #>   [7098,]  58 349 #>   [7099,]  59 349 #>   [7100,]  60 349 #>   [7101,]  61 349 #>   [7102,]  62 349 #>   [7103,]  63 349 #>   [7104,]  64 349 #>   [7105,]  65 349 #>   [7106,]  66 349 #>   [7107,]  67 349 #>   [7108,]  68 349 #>   [7109,]  69 349 #>   [7110,]  70 349 #>   [7111,]  71 349 #>   [7112,]  72 349 #>   [7113,]  73 349 #>   [7114,]  74 349 #>   [7115,]  75 349 #>   [7116,]  76 349 #>   [7117,]  77 349 #>   [7118,]  78 349 #>   [7119,]  79 349 #>   [7120,]  80 349 #>   [7121,]  81 349 #>   [7122,]  82 349 #>   [7123,]  83 349 #>   [7124,]  84 349 #>   [7125,]  85 349 #>   [7126,]  86 349 #>   [7127,]  87 349 #>   [7128,]  88 349 #>   [7129,]  89 349 #>   [7130,]  90 349 #>   [7131,]  91 349 #>   [7132,]  92 349 #>   [7133,]  93 349 #>   [7134,]  94 349 #>   [7135,]  95 349 #>   [7136,]  96 349 #>   [7137,]  97 349 #>   [7138,]  98 349 #>   [7139,]  99 349 #>   [7140,] 100 349 #>   [7141,] 101 349 #>   [7142,] 102 349 #>   [7143,] 103 349 #>   [7144,] 104 349 #>   [7145,] 105 349 #>   [7146,] 106 349 #>   [7147,] 107 349 #>   [7148,] 108 349 #>   [7149,] 109 349 #>   [7150,] 110 349 #>   [7151,] 111 349 #>   [7152,] 112 349 #>   [7153,] 113 349 #>   [7154,] 114 349 #>   [7155,] 115 349 #>   [7156,] 116 349 #>   [7157,] 117 349 #>   [7158,] 118 349 #>   [7159,] 119 349 #>   [7160,] 120 349 #>   [7161,] 121 349 #>   [7162,] 122 349 #>   [7163,] 123 349 #>   [7164,] 124 349 #>   [7165,] 125 349 #>   [7166,] 126 349 #>   [7167,] 127 349 #>   [7168,] 128 349 #>   [7169,] 129 349 #>   [7170,] 130 349 #>   [7171,] 131 349 #>   [7172,] 132 349 #>   [7173,] 133 349 #>   [7174,] 134 349 #>   [7175,] 135 349 #>   [7176,] 136 349 #>   [7177,] 137 349 #>   [7178,] 138 349 #>   [7179,] 139 349 #>   [7180,] 140 349 #>   [7181,] 141 349 #>   [7182,] 142 349 #>   [7183,] 143 349 #>   [7184,] 144 349 #>   [7185,] 145 349 #>   [7186,] 146 349 #>   [7187,] 147 349 #>   [7188,] 148 349 #>   [7189,] 149 349 #>   [7190,] 150 349 #>   [7191,] 151 349 #>   [7192,] 152 349 #>   [7193,] 153 349 #>   [7194,] 154 349 #>   [7195,] 155 349 #>   [7196,] 156 349 #>   [7197,] 157 349 #>   [7198,] 158 349 #>   [7199,] 159 349 #>   [7200,] 160 349 #>   [7201,] 161 349 #>   [7202,] 162 349 #>   [7203,] 163 349 #>   [7204,] 164 349 #>   [7205,] 165 349 #>   [7206,] 166 349 #>   [7207,] 167 349 #>   [7208,] 168 349 #>   [7209,] 169 349 #>   [7210,] 170 349 #>   [7211,] 171 349 #>   [7212,] 172 349 #>   [7213,] 173 349 #>   [7214,] 174 349 #>   [7215,] 175 349 #>   [7216,] 176 349 #>   [7217,] 177 349 #>   [7218,] 178 349 #>   [7219,] 179 349 #>   [7220,] 180 349 #>   [7221,] 181 349 #>   [7222,] 182 349 #>   [7223,] 183 349 #>   [7224,] 184 349 #>   [7225,] 185 349 #>   [7226,] 186 349 #>   [7227,] 187 349 #>   [7228,] 188 349 #>   [7229,] 189 349 #>   [7230,] 190 349 #>   [7231,] 191 349 #>   [7232,] 192 349 #>   [7233,] 193 349 #>   [7234,] 194 349 #>   [7235,] 195 349 #>   [7236,] 196 349 #>   [7237,] 197 349 #>   [7238,] 198 349 #>   [7239,] 199 349 #>   [7240,] 200 349 #>   [7241,] 201 349 #>   [7242,] 202 349 #>   [7243,] 203 349 #>   [7244,] 204 349 #>   [7245,] 205 349 #>   [7246,] 206 349 #>   [7247,] 207 349 #>   [7248,] 208 349 #>   [7249,] 209 349 #>   [7250,] 210 349 #>   [7251,] 211 349 #>   [7252,] 212 349 #>   [7253,] 213 349 #>   [7254,] 214 349 #>   [7255,] 215 349 #>   [7256,] 216 349 #>   [7257,] 217 349 #>   [7258,] 218 349 #>   [7259,] 219 349 #>   [7260,] 220 349 #>   [7261,] 221 349 #>   [7262,] 222 349 #>   [7263,] 223 349 #>   [7264,] 224 349 #>   [7265,] 225 349 #>   [7266,] 226 349 #>   [7267,] 227 349 #>   [7268,] 228 349 #>   [7269,] 229 349 #>   [7270,] 230 349 #>   [7271,] 231 349 #>   [7272,] 232 349 #>   [7273,] 233 349 #>   [7274,] 234 349 #>   [7275,] 235 349 #>   [7276,] 236 349 #>   [7277,] 237 349 #>   [7278,] 238 349 #>   [7279,] 239 349 #>   [7280,] 240 349 #>   [7281,] 241 349 #>   [7282,] 242 349 #>   [7283,] 243 349 #>   [7284,] 244 349 #>   [7285,] 245 349 #>   [7286,] 246 349 #>   [7287,] 247 349 #>   [7288,] 248 349 #>   [7289,] 249 349 #>   [7290,] 250 349 #>   [7291,] 251 349 #>   [7292,] 252 349 #>   [7293,] 253 349 #>   [7294,] 254 349 #>   [7295,] 255 349 #>   [7296,] 256 349 #>   [7297,] 257 349 #>   [7298,] 258 349 #>   [7299,] 259 349 #>   [7300,] 260 349 #>   [7301,] 261 349 #>   [7302,] 262 349 #>   [7303,] 263 349 #>   [7304,] 264 349 #>   [7305,] 265 349 #>   [7306,] 266 349 #>   [7307,] 267 349 #>   [7308,] 268 349 #>   [7309,] 269 349 #>   [7310,] 270 349 #>   [7311,] 271 349 #>   [7312,] 272 349 #>   [7313,] 273 349 #>   [7314,] 274 349 #>   [7315,] 275 349 #>   [7316,] 276 349 #>   [7317,] 277 349 #>   [7318,] 278 349 #>   [7319,] 279 349 #>   [7320,] 280 349 #>   [7321,] 281 349 #>   [7322,] 282 349 #>   [7323,] 283 349 #>   [7324,] 284 349 #>   [7325,] 285 349 #>   [7326,] 286 349 #>   [7327,] 287 349 #>   [7328,] 288 349 #>   [7329,] 289 349 #>   [7330,] 290 349 #>   [7331,] 291 349 #>   [7332,] 292 349 #>   [7333,] 293 349 #>   [7334,] 294 349 #>   [7335,] 295 349 #>   [7336,] 296 349 #>   [7337,] 297 349 #>   [7338,] 298 349 #>   [7339,] 299 349 #>   [7340,] 300 349 #>   [7341,] 301 349 #>   [7342,] 302 349 #>   [7343,] 303 349 #>   [7344,] 304 349 #>   [7345,] 305 349 #>   [7346,] 306 349 #>   [7347,] 307 349 #>   [7348,] 308 349 #>   [7349,] 309 349 #>   [7350,] 310 349 #>   [7351,] 311 349 #>   [7352,] 312 349 #>   [7353,] 313 349 #>   [7354,] 314 349 #>   [7355,] 315 349 #>   [7356,] 316 349 #>   [7357,] 317 349 #>   [7358,] 318 349 #>   [7359,] 319 349 #>   [7360,] 320 349 #>   [7361,] 321 349 #>   [7362,] 322 349 #>   [7363,] 323 349 #>   [7364,] 324 349 #>   [7365,] 325 349 #>   [7366,] 326 349 #>   [7367,] 327 349 #>   [7368,] 328 349 #>   [7369,] 329 349 #>   [7370,] 330 349 #>   [7371,] 331 349 #>   [7372,] 332 349 #>   [7373,] 333 349 #>   [7374,] 334 349 #>   [7375,] 335 349 #>   [7376,] 336 349 #>   [7377,] 337 349 #>   [7378,] 338 349 #>   [7379,] 339 349 #>   [7380,] 340 349 #>   [7381,] 341 349 #>   [7382,] 342 349 #>   [7383,] 343 349 #>   [7384,] 344 349 #>   [7385,] 345 349 #>   [7386,] 346 349 #>   [7387,] 347 349 #>   [7388,] 348 349 #>   [7389,] 349 349 #>   [7390,] 350 349 #>   [7391,] 351 349 #>   [7392,] 352 349 #>   [7393,] 353 349 #>   [7394,] 354 349 #>   [7395,] 355 349 #>   [7396,] 356 349 #>   [7397,] 357 349 #>   [7398,] 358 349 #>   [7399,] 359 349 #>   [7400,] 360 349 #>   [7401,] 361 349 #>   [7402,] 362 349 #>   [7403,] 363 349 #>   [7404,] 364 349 #>   [7405,] 365 349 #>   [7406,] 366 349 #>   [7407,] 367 349 #>   [7408,] 368 349 #>   [7409,] 369 349 #>   [7410,] 370 349 #>   [7411,] 371 349 #>   [7412,] 372 349 #>   [7413,] 373 349 #>   [7414,] 374 349 #>   [7415,] 375 349 #>   [7416,] 376 349 #>   [7417,] 377 349 #>   [7418,] 378 349 #>   [7419,] 379 349 #>   [7420,] 380 349 #>   [7421,] 381 349 #>   [7422,] 382 349 #>   [7423,] 383 349 #>   [7424,] 384 349 #>   [7425,] 385 349 #>   [7426,] 386 349 #>   [7427,] 387 349 #>   [7428,] 388 349 #>   [7429,] 389 349 #>   [7430,] 390 349 #>   [7431,] 391 349 #>   [7432,] 392 349 #>   [7433,] 393 349 #>   [7434,] 394 349 #>   [7435,] 395 349 #>   [7436,] 396 349 #>   [7437,] 397 349 #>   [7438,] 398 349 #>   [7439,] 399 349 #>   [7440,] 400 349 #>   [7441,] 401 349 #>   [7442,] 402 349 #>   [7443,] 403 349 #>   [7444,] 404 349 #>   [7445,] 405 349 #>   [7446,] 406 349 #>   [7447,] 407 349 #>   [7448,] 408 349 #>   [7449,] 409 349 #>   [7450,] 410 349 #>   [7451,] 411 349 #>   [7452,] 412 349 #>   [7453,] 413 349 #>   [7454,] 414 349 #>   [7455,] 415 349 #>   [7456,] 416 349 #>   [7457,] 417 349 #>   [7458,] 418 349 #>   [7459,] 419 349 #>   [7460,] 420 349 #>   [7461,] 421 349 #>   [7462,] 422 349 #>   [7463,] 423 349 #>   [7464,] 424 349 #>   [7465,] 425 349 #>   [7466,] 426 349 #>   [7467,] 427 349 #>   [7468,] 428 349 #>   [7469,] 429 349 #>   [7470,] 430 349 #>   [7471,] 431 349 #>   [7472,] 432 349 #>   [7473,] 433 349 #>   [7474,] 434 349 #>   [7475,] 435 349 #>   [7476,] 436 349 #>   [7477,] 437 349 #>   [7478,] 438 349 #>   [7479,] 439 349 #>   [7480,] 440 349 #>   [7481,] 441 349 #>   [7482,] 442 349 #>   [7483,] 443 349 #>   [7484,] 444 349 #>   [7485,] 445 349 #>   [7486,] 446 349 #>   [7487,] 447 349 #>   [7488,] 448 349 #>   [7489,] 449 349 #>   [7490,] 450 349 #>   [7491,] 451 349 #>   [7492,] 452 349 #>   [7493,] 453 349 #>   [7494,] 454 349 #>   [7495,] 455 349 #>   [7496,] 456 349 #>   [7497,] 457 349 #>   [7498,] 458 349 #>   [7499,] 459 349 #>   [7500,] 460 349 #>   [7501,] 461 349 #>   [7502,] 462 349 #>   [7503,] 463 349 #>   [7504,] 464 349 #>   [7505,] 465 349 #>   [7506,] 466 349 #>   [7507,] 467 349 #>   [7508,] 468 349 #>   [7509,] 469 349 #>   [7510,] 470 349 #>   [7511,] 471 349 #>   [7512,] 472 349 #>   [7513,] 473 349 #>   [7514,] 474 349 #>   [7515,] 475 349 #>   [7516,] 476 349 #>   [7517,] 477 349 #>   [7518,] 478 349 #>   [7519,] 479 349 #>   [7520,] 480 349 #>   [7521,] 481 349 #>   [7522,] 482 349 #>   [7523,] 483 349 #>   [7524,] 484 349 #>   [7525,] 485 349 #>   [7526,] 486 349 #>   [7527,] 487 349 #>   [7528,] 488 349 #>   [7529,] 489 349 #>   [7530,] 490 349 #>   [7531,] 491 349 #>   [7532,] 492 349 #>   [7533,] 493 349 #>   [7534,] 494 349 #>   [7535,] 495 349 #>   [7536,] 496 349 #>   [7537,] 497 349 #>   [7538,] 498 349 #>   [7539,] 499 349 #>   [7540,] 500 349 #>   [7541,] 501 349 #>   [7542,] 502 349 #>   [7543,] 503 349 #>   [7544,] 504 349 #>   [7545,] 505 349 #>   [7546,] 506 349 #>   [7547,] 507 349 #>   [7548,] 508 349 #>   [7549,] 509 349 #>   [7550,] 510 349 #>   [7551,] 511 349 #>   [7552,] 512 349 #>   [7553,] 513 349 #>   [7554,] 514 349 #>   [7555,] 515 349 #>   [7556,] 516 349 #>   [7557,] 517 349 #>   [7558,] 518 349 #>   [7559,] 519 349 #>   [7560,] 520 349 #>   [7561,] 521 349 #>   [7562,] 522 349 #>   [7563,] 523 349 #>   [7564,] 524 349 #>   [7565,] 525 349 #>   [7566,] 526 349 #>   [7567,] 527 349 #>   [7568,] 528 349 #>   [7569,] 529 349 #>   [7570,] 530 349 #>   [7571,] 531 349 #>   [7572,] 532 349 #>   [7573,] 533 349 #>   [7574,] 534 349 #>   [7575,] 535 349 #>   [7576,] 536 349 #>   [7577,] 537 349 #>   [7578,] 538 349 #>   [7579,] 539 349 #>   [7580,] 540 349 #>   [7581,] 541 349 #>   [7582,] 542 349 #>   [7583,] 543 349 #>   [7584,] 544 349 #>   [7585,] 545 349 #>   [7586,] 546 349 #>   [7587,] 547 349 #>   [7588,] 548 349 #>   [7589,] 549 349 #>   [7590,] 550 349 #>   [7591,] 551 349 #>   [7592,] 552 349 #>   [7593,] 553 349 #>   [7594,] 554 349 #>   [7595,] 555 349 #>   [7596,] 556 349 #>   [7597,] 557 349 #>   [7598,] 558 349 #>   [7599,] 559 349 #>   [7600,] 560 349 #>   [7601,] 561 349 #>   [7602,] 562 349 #>   [7603,] 563 349 #>   [7604,] 564 349 #>   [7605,] 565 349 #>   [7606,] 566 349 #>   [7607,] 567 349 #>   [7608,] 568 349 #>   [7609,] 569 349 #>   [7610,] 570 349 #>   [7611,] 571 349 #>   [7612,] 572 349 #>   [7613,] 573 349 #>   [7614,] 574 349 #>   [7615,] 575 349 #>   [7616,] 576 349 #>   [7617,] 577 349 #>   [7618,] 578 349 #>   [7619,] 579 349 #>   [7620,] 580 349 #>   [7621,] 581 349 #>   [7622,] 582 349 #>   [7623,] 583 349 #>   [7624,] 584 349 #>   [7625,] 585 349 #>   [7626,] 586 349 #>   [7627,] 587 349 #>   [7628,] 588 349 #>   [7629,] 589 349 #>   [7630,] 590 349 #>   [7631,] 591 349 #>   [7632,] 592 349 #>   [7633,] 593 349 #>   [7634,] 594 349 #>   [7635,] 595 349 #>   [7636,] 596 349 #>   [7637,] 597 349 #>   [7638,] 598 349 #>   [7639,] 599 349 #>   [7640,] 600 349 #>   [7641,] 601 349 #>   [7642,] 602 349 #>   [7643,] 603 349 #>   [7644,] 604 349 #>   [7645,] 605 349 #>   [7646,] 606 349 #>   [7647,] 607 349 #>   [7648,] 608 349 #>   [7649,] 609 349 #>   [7650,] 610 349 #>   [7651,] 611 349 #>   [7652,] 612 349 #>   [7653,] 613 349 #>   [7654,] 614 349 #>   [7655,] 615 349 #>   [7656,] 616 349 #>   [7657,] 617 349 #>   [7658,] 618 349 #>   [7659,] 619 349 #>   [7660,] 620 349 #>   [7661,] 621 349 #>   [7662,] 622 349 #>   [7663,] 623 349 #>   [7664,] 624 349 #>   [7665,] 625 349 #>   [7666,] 626 349 #>   [7667,] 627 349 #>   [7668,] 628 349 #>   [7669,] 629 349 #>   [7670,] 630 349 #>   [7671,] 631 349 #>   [7672,] 632 349 #>   [7673,] 633 349 #>   [7674,] 634 349 #>   [7675,] 635 349 #>   [7676,] 636 349 #>   [7677,] 637 349 #>   [7678,] 638 349 #>   [7679,] 639 349 #>   [7680,] 640 349 #>   [7681,]   1 348 #>   [7682,]   2 348 #>   [7683,]   3 348 #>   [7684,]   4 348 #>   [7685,]   5 348 #>   [7686,]   6 348 #>   [7687,]   7 348 #>   [7688,]   8 348 #>   [7689,]   9 348 #>   [7690,]  10 348 #>   [7691,]  11 348 #>   [7692,]  12 348 #>   [7693,]  13 348 #>   [7694,]  14 348 #>   [7695,]  15 348 #>   [7696,]  16 348 #>   [7697,]  17 348 #>   [7698,]  18 348 #>   [7699,]  19 348 #>   [7700,]  20 348 #>   [7701,]  21 348 #>   [7702,]  22 348 #>   [7703,]  23 348 #>   [7704,]  24 348 #>   [7705,]  25 348 #>   [7706,]  26 348 #>   [7707,]  27 348 #>   [7708,]  28 348 #>   [7709,]  29 348 #>   [7710,]  30 348 #>   [7711,]  31 348 #>   [7712,]  32 348 #>   [7713,]  33 348 #>   [7714,]  34 348 #>   [7715,]  35 348 #>   [7716,]  36 348 #>   [7717,]  37 348 #>   [7718,]  38 348 #>   [7719,]  39 348 #>   [7720,]  40 348 #>   [7721,]  41 348 #>   [7722,]  42 348 #>   [7723,]  43 348 #>   [7724,]  44 348 #>   [7725,]  45 348 #>   [7726,]  46 348 #>   [7727,]  47 348 #>   [7728,]  48 348 #>   [7729,]  49 348 #>   [7730,]  50 348 #>   [7731,]  51 348 #>   [7732,]  52 348 #>   [7733,]  53 348 #>   [7734,]  54 348 #>   [7735,]  55 348 #>   [7736,]  56 348 #>   [7737,]  57 348 #>   [7738,]  58 348 #>   [7739,]  59 348 #>   [7740,]  60 348 #>   [7741,]  61 348 #>   [7742,]  62 348 #>   [7743,]  63 348 #>   [7744,]  64 348 #>   [7745,]  65 348 #>   [7746,]  66 348 #>   [7747,]  67 348 #>   [7748,]  68 348 #>   [7749,]  69 348 #>   [7750,]  70 348 #>   [7751,]  71 348 #>   [7752,]  72 348 #>   [7753,]  73 348 #>   [7754,]  74 348 #>   [7755,]  75 348 #>   [7756,]  76 348 #>   [7757,]  77 348 #>   [7758,]  78 348 #>   [7759,]  79 348 #>   [7760,]  80 348 #>   [7761,]  81 348 #>   [7762,]  82 348 #>   [7763,]  83 348 #>   [7764,]  84 348 #>   [7765,]  85 348 #>   [7766,]  86 348 #>   [7767,]  87 348 #>   [7768,]  88 348 #>   [7769,]  89 348 #>   [7770,]  90 348 #>   [7771,]  91 348 #>   [7772,]  92 348 #>   [7773,]  93 348 #>   [7774,]  94 348 #>   [7775,]  95 348 #>   [7776,]  96 348 #>   [7777,]  97 348 #>   [7778,]  98 348 #>   [7779,]  99 348 #>   [7780,] 100 348 #>   [7781,] 101 348 #>   [7782,] 102 348 #>   [7783,] 103 348 #>   [7784,] 104 348 #>   [7785,] 105 348 #>   [7786,] 106 348 #>   [7787,] 107 348 #>   [7788,] 108 348 #>   [7789,] 109 348 #>   [7790,] 110 348 #>   [7791,] 111 348 #>   [7792,] 112 348 #>   [7793,] 113 348 #>   [7794,] 114 348 #>   [7795,] 115 348 #>   [7796,] 116 348 #>   [7797,] 117 348 #>   [7798,] 118 348 #>   [7799,] 119 348 #>   [7800,] 120 348 #>   [7801,] 121 348 #>   [7802,] 122 348 #>   [7803,] 123 348 #>   [7804,] 124 348 #>   [7805,] 125 348 #>   [7806,] 126 348 #>   [7807,] 127 348 #>   [7808,] 128 348 #>   [7809,] 129 348 #>   [7810,] 130 348 #>   [7811,] 131 348 #>   [7812,] 132 348 #>   [7813,] 133 348 #>   [7814,] 134 348 #>   [7815,] 135 348 #>   [7816,] 136 348 #>   [7817,] 137 348 #>   [7818,] 138 348 #>   [7819,] 139 348 #>   [7820,] 140 348 #>   [7821,] 141 348 #>   [7822,] 142 348 #>   [7823,] 143 348 #>   [7824,] 144 348 #>   [7825,] 145 348 #>   [7826,] 146 348 #>   [7827,] 147 348 #>   [7828,] 148 348 #>   [7829,] 149 348 #>   [7830,] 150 348 #>   [7831,] 151 348 #>   [7832,] 152 348 #>   [7833,] 153 348 #>   [7834,] 154 348 #>   [7835,] 155 348 #>   [7836,] 156 348 #>   [7837,] 157 348 #>   [7838,] 158 348 #>   [7839,] 159 348 #>   [7840,] 160 348 #>   [7841,] 161 348 #>   [7842,] 162 348 #>   [7843,] 163 348 #>   [7844,] 164 348 #>   [7845,] 165 348 #>   [7846,] 166 348 #>   [7847,] 167 348 #>   [7848,] 168 348 #>   [7849,] 169 348 #>   [7850,] 170 348 #>   [7851,] 171 348 #>   [7852,] 172 348 #>   [7853,] 173 348 #>   [7854,] 174 348 #>   [7855,] 175 348 #>   [7856,] 176 348 #>   [7857,] 177 348 #>   [7858,] 178 348 #>   [7859,] 179 348 #>   [7860,] 180 348 #>   [7861,] 181 348 #>   [7862,] 182 348 #>   [7863,] 183 348 #>   [7864,] 184 348 #>   [7865,] 185 348 #>   [7866,] 186 348 #>   [7867,] 187 348 #>   [7868,] 188 348 #>   [7869,] 189 348 #>   [7870,] 190 348 #>   [7871,] 191 348 #>   [7872,] 192 348 #>   [7873,] 193 348 #>   [7874,] 194 348 #>   [7875,] 195 348 #>   [7876,] 196 348 #>   [7877,] 197 348 #>   [7878,] 198 348 #>   [7879,] 199 348 #>   [7880,] 200 348 #>   [7881,] 201 348 #>   [7882,] 202 348 #>   [7883,] 203 348 #>   [7884,] 204 348 #>   [7885,] 205 348 #>   [7886,] 206 348 #>   [7887,] 207 348 #>   [7888,] 208 348 #>   [7889,] 209 348 #>   [7890,] 210 348 #>   [7891,] 211 348 #>   [7892,] 212 348 #>   [7893,] 213 348 #>   [7894,] 214 348 #>   [7895,] 215 348 #>   [7896,] 216 348 #>   [7897,] 217 348 #>   [7898,] 218 348 #>   [7899,] 219 348 #>   [7900,] 220 348 #>   [7901,] 221 348 #>   [7902,] 222 348 #>   [7903,] 223 348 #>   [7904,] 224 348 #>   [7905,] 225 348 #>   [7906,] 226 348 #>   [7907,] 227 348 #>   [7908,] 228 348 #>   [7909,] 229 348 #>   [7910,] 230 348 #>   [7911,] 231 348 #>   [7912,] 232 348 #>   [7913,] 233 348 #>   [7914,] 234 348 #>   [7915,] 235 348 #>   [7916,] 236 348 #>   [7917,] 237 348 #>   [7918,] 238 348 #>   [7919,] 239 348 #>   [7920,] 240 348 #>   [7921,] 241 348 #>   [7922,] 242 348 #>   [7923,] 243 348 #>   [7924,] 244 348 #>   [7925,] 245 348 #>   [7926,] 246 348 #>   [7927,] 247 348 #>   [7928,] 248 348 #>   [7929,] 249 348 #>   [7930,] 250 348 #>   [7931,] 251 348 #>   [7932,] 252 348 #>   [7933,] 253 348 #>   [7934,] 254 348 #>   [7935,] 255 348 #>   [7936,] 256 348 #>   [7937,] 257 348 #>   [7938,] 258 348 #>   [7939,] 259 348 #>   [7940,] 260 348 #>   [7941,] 261 348 #>   [7942,] 262 348 #>   [7943,] 263 348 #>   [7944,] 264 348 #>   [7945,] 265 348 #>   [7946,] 266 348 #>   [7947,] 267 348 #>   [7948,] 268 348 #>   [7949,] 269 348 #>   [7950,] 270 348 #>   [7951,] 271 348 #>   [7952,] 272 348 #>   [7953,] 273 348 #>   [7954,] 274 348 #>   [7955,] 275 348 #>   [7956,] 276 348 #>   [7957,] 277 348 #>   [7958,] 278 348 #>   [7959,] 279 348 #>   [7960,] 280 348 #>   [7961,] 281 348 #>   [7962,] 282 348 #>   [7963,] 283 348 #>   [7964,] 284 348 #>   [7965,] 285 348 #>   [7966,] 286 348 #>   [7967,] 287 348 #>   [7968,] 288 348 #>   [7969,] 289 348 #>   [7970,] 290 348 #>   [7971,] 291 348 #>   [7972,] 292 348 #>   [7973,] 293 348 #>   [7974,] 294 348 #>   [7975,] 295 348 #>   [7976,] 296 348 #>   [7977,] 297 348 #>   [7978,] 298 348 #>   [7979,] 299 348 #>   [7980,] 300 348 #>   [7981,] 301 348 #>   [7982,] 302 348 #>   [7983,] 303 348 #>   [7984,] 304 348 #>   [7985,] 305 348 #>   [7986,] 306 348 #>   [7987,] 307 348 #>   [7988,] 308 348 #>   [7989,] 309 348 #>   [7990,] 310 348 #>   [7991,] 311 348 #>   [7992,] 312 348 #>   [7993,] 313 348 #>   [7994,] 314 348 #>   [7995,] 315 348 #>   [7996,] 316 348 #>   [7997,] 317 348 #>   [7998,] 318 348 #>   [7999,] 319 348 #>   [8000,] 320 348 #>   [8001,] 321 348 #>   [8002,] 322 348 #>   [8003,] 323 348 #>   [8004,] 324 348 #>   [8005,] 325 348 #>   [8006,] 326 348 #>   [8007,] 327 348 #>   [8008,] 328 348 #>   [8009,] 329 348 #>   [8010,] 330 348 #>   [8011,] 331 348 #>   [8012,] 332 348 #>   [8013,] 333 348 #>   [8014,] 334 348 #>   [8015,] 335 348 #>   [8016,] 336 348 #>   [8017,] 337 348 #>   [8018,] 338 348 #>   [8019,] 339 348 #>   [8020,] 340 348 #>   [8021,] 341 348 #>   [8022,] 342 348 #>   [8023,] 343 348 #>   [8024,] 344 348 #>   [8025,] 345 348 #>   [8026,] 346 348 #>   [8027,] 347 348 #>   [8028,] 348 348 #>   [8029,] 349 348 #>   [8030,] 350 348 #>   [8031,] 351 348 #>   [8032,] 352 348 #>   [8033,] 353 348 #>   [8034,] 354 348 #>   [8035,] 355 348 #>   [8036,] 356 348 #>   [8037,] 357 348 #>   [8038,] 358 348 #>   [8039,] 359 348 #>   [8040,] 360 348 #>   [8041,] 361 348 #>   [8042,] 362 348 #>   [8043,] 363 348 #>   [8044,] 364 348 #>   [8045,] 365 348 #>   [8046,] 366 348 #>   [8047,] 367 348 #>   [8048,] 368 348 #>   [8049,] 369 348 #>   [8050,] 370 348 #>   [8051,] 371 348 #>   [8052,] 372 348 #>   [8053,] 373 348 #>   [8054,] 374 348 #>   [8055,] 375 348 #>   [8056,] 376 348 #>   [8057,] 377 348 #>   [8058,] 378 348 #>   [8059,] 379 348 #>   [8060,] 380 348 #>   [8061,] 381 348 #>   [8062,] 382 348 #>   [8063,] 383 348 #>   [8064,] 384 348 #>   [8065,] 385 348 #>   [8066,] 386 348 #>   [8067,] 387 348 #>   [8068,] 388 348 #>   [8069,] 389 348 #>   [8070,] 390 348 #>   [8071,] 391 348 #>   [8072,] 392 348 #>   [8073,] 393 348 #>   [8074,] 394 348 #>   [8075,] 395 348 #>   [8076,] 396 348 #>   [8077,] 397 348 #>   [8078,] 398 348 #>   [8079,] 399 348 #>   [8080,] 400 348 #>   [8081,] 401 348 #>   [8082,] 402 348 #>   [8083,] 403 348 #>   [8084,] 404 348 #>   [8085,] 405 348 #>   [8086,] 406 348 #>   [8087,] 407 348 #>   [8088,] 408 348 #>   [8089,] 409 348 #>   [8090,] 410 348 #>   [8091,] 411 348 #>   [8092,] 412 348 #>   [8093,] 413 348 #>   [8094,] 414 348 #>   [8095,] 415 348 #>   [8096,] 416 348 #>   [8097,] 417 348 #>   [8098,] 418 348 #>   [8099,] 419 348 #>   [8100,] 420 348 #>   [8101,] 421 348 #>   [8102,] 422 348 #>   [8103,] 423 348 #>   [8104,] 424 348 #>   [8105,] 425 348 #>   [8106,] 426 348 #>   [8107,] 427 348 #>   [8108,] 428 348 #>   [8109,] 429 348 #>   [8110,] 430 348 #>   [8111,] 431 348 #>   [8112,] 432 348 #>   [8113,] 433 348 #>   [8114,] 434 348 #>   [8115,] 435 348 #>   [8116,] 436 348 #>   [8117,] 437 348 #>   [8118,] 438 348 #>   [8119,] 439 348 #>   [8120,] 440 348 #>   [8121,] 441 348 #>   [8122,] 442 348 #>   [8123,] 443 348 #>   [8124,] 444 348 #>   [8125,] 445 348 #>   [8126,] 446 348 #>   [8127,] 447 348 #>   [8128,] 448 348 #>   [8129,] 449 348 #>   [8130,] 450 348 #>   [8131,] 451 348 #>   [8132,] 452 348 #>   [8133,] 453 348 #>   [8134,] 454 348 #>   [8135,] 455 348 #>   [8136,] 456 348 #>   [8137,] 457 348 #>   [8138,] 458 348 #>   [8139,] 459 348 #>   [8140,] 460 348 #>   [8141,] 461 348 #>   [8142,] 462 348 #>   [8143,] 463 348 #>   [8144,] 464 348 #>   [8145,] 465 348 #>   [8146,] 466 348 #>   [8147,] 467 348 #>   [8148,] 468 348 #>   [8149,] 469 348 #>   [8150,] 470 348 #>   [8151,] 471 348 #>   [8152,] 472 348 #>   [8153,] 473 348 #>   [8154,] 474 348 #>   [8155,] 475 348 #>   [8156,] 476 348 #>   [8157,] 477 348 #>   [8158,] 478 348 #>   [8159,] 479 348 #>   [8160,] 480 348 #>   [8161,] 481 348 #>   [8162,] 482 348 #>   [8163,] 483 348 #>   [8164,] 484 348 #>   [8165,] 485 348 #>   [8166,] 486 348 #>   [8167,] 487 348 #>   [8168,] 488 348 #>   [8169,] 489 348 #>   [8170,] 490 348 #>   [8171,] 491 348 #>   [8172,] 492 348 #>   [8173,] 493 348 #>   [8174,] 494 348 #>   [8175,] 495 348 #>   [8176,] 496 348 #>   [8177,] 497 348 #>   [8178,] 498 348 #>   [8179,] 499 348 #>   [8180,] 500 348 #>   [8181,] 501 348 #>   [8182,] 502 348 #>   [8183,] 503 348 #>   [8184,] 504 348 #>   [8185,] 505 348 #>   [8186,] 506 348 #>   [8187,] 507 348 #>   [8188,] 508 348 #>   [8189,] 509 348 #>   [8190,] 510 348 #>   [8191,] 511 348 #>   [8192,] 512 348 #>   [8193,] 513 348 #>   [8194,] 514 348 #>   [8195,] 515 348 #>   [8196,] 516 348 #>   [8197,] 517 348 #>   [8198,] 518 348 #>   [8199,] 519 348 #>   [8200,] 520 348 #>   [8201,] 521 348 #>   [8202,] 522 348 #>   [8203,] 523 348 #>   [8204,] 524 348 #>   [8205,] 525 348 #>   [8206,] 526 348 #>   [8207,] 527 348 #>   [8208,] 528 348 #>   [8209,] 529 348 #>   [8210,] 530 348 #>   [8211,] 531 348 #>   [8212,] 532 348 #>   [8213,] 533 348 #>   [8214,] 534 348 #>   [8215,] 535 348 #>   [8216,] 536 348 #>   [8217,] 537 348 #>   [8218,] 538 348 #>   [8219,] 539 348 #>   [8220,] 540 348 #>   [8221,] 541 348 #>   [8222,] 542 348 #>   [8223,] 543 348 #>   [8224,] 544 348 #>   [8225,] 545 348 #>   [8226,] 546 348 #>   [8227,] 547 348 #>   [8228,] 548 348 #>   [8229,] 549 348 #>   [8230,] 550 348 #>   [8231,] 551 348 #>   [8232,] 552 348 #>   [8233,] 553 348 #>   [8234,] 554 348 #>   [8235,] 555 348 #>   [8236,] 556 348 #>   [8237,] 557 348 #>   [8238,] 558 348 #>   [8239,] 559 348 #>   [8240,] 560 348 #>   [8241,] 561 348 #>   [8242,] 562 348 #>   [8243,] 563 348 #>   [8244,] 564 348 #>   [8245,] 565 348 #>   [8246,] 566 348 #>   [8247,] 567 348 #>   [8248,] 568 348 #>   [8249,] 569 348 #>   [8250,] 570 348 #>   [8251,] 571 348 #>   [8252,] 572 348 #>   [8253,] 573 348 #>   [8254,] 574 348 #>   [8255,] 575 348 #>   [8256,] 576 348 #>   [8257,] 577 348 #>   [8258,] 578 348 #>   [8259,] 579 348 #>   [8260,] 580 348 #>   [8261,] 581 348 #>   [8262,] 582 348 #>   [8263,] 583 348 #>   [8264,] 584 348 #>   [8265,] 585 348 #>   [8266,] 586 348 #>   [8267,] 587 348 #>   [8268,] 588 348 #>   [8269,] 589 348 #>   [8270,] 590 348 #>   [8271,] 591 348 #>   [8272,] 592 348 #>   [8273,] 593 348 #>   [8274,] 594 348 #>   [8275,] 595 348 #>   [8276,] 596 348 #>   [8277,] 597 348 #>   [8278,] 598 348 #>   [8279,] 599 348 #>   [8280,] 600 348 #>   [8281,] 601 348 #>   [8282,] 602 348 #>   [8283,] 603 348 #>   [8284,] 604 348 #>   [8285,] 605 348 #>   [8286,] 606 348 #>   [8287,] 607 348 #>   [8288,] 608 348 #>   [8289,] 609 348 #>   [8290,] 610 348 #>   [8291,] 611 348 #>   [8292,] 612 348 #>   [8293,] 613 348 #>   [8294,] 614 348 #>   [8295,] 615 348 #>   [8296,] 616 348 #>   [8297,] 617 348 #>   [8298,] 618 348 #>   [8299,] 619 348 #>   [8300,] 620 348 #>   [8301,] 621 348 #>   [8302,] 622 348 #>   [8303,] 623 348 #>   [8304,] 624 348 #>   [8305,] 625 348 #>   [8306,] 626 348 #>   [8307,] 627 348 #>   [8308,] 628 348 #>   [8309,] 629 348 #>   [8310,] 630 348 #>   [8311,] 631 348 #>   [8312,] 632 348 #>   [8313,] 633 348 #>   [8314,] 634 348 #>   [8315,] 635 348 #>   [8316,] 636 348 #>   [8317,] 637 348 #>   [8318,] 638 348 #>   [8319,] 639 348 #>   [8320,] 640 348 #>   [8321,]   1 347 #>   [8322,]   2 347 #>   [8323,]   3 347 #>   [8324,]   4 347 #>   [8325,]   5 347 #>   [8326,]   6 347 #>   [8327,]   7 347 #>   [8328,]   8 347 #>   [8329,]   9 347 #>   [8330,]  10 347 #>   [8331,]  11 347 #>   [8332,]  12 347 #>   [8333,]  13 347 #>   [8334,]  14 347 #>   [8335,]  15 347 #>   [8336,]  16 347 #>   [8337,]  17 347 #>   [8338,]  18 347 #>   [8339,]  19 347 #>   [8340,]  20 347 #>   [8341,]  21 347 #>   [8342,]  22 347 #>   [8343,]  23 347 #>   [8344,]  24 347 #>   [8345,]  25 347 #>   [8346,]  26 347 #>   [8347,]  27 347 #>   [8348,]  28 347 #>   [8349,]  29 347 #>   [8350,]  30 347 #>   [8351,]  31 347 #>   [8352,]  32 347 #>   [8353,]  33 347 #>   [8354,]  34 347 #>   [8355,]  35 347 #>   [8356,]  36 347 #>   [8357,]  37 347 #>   [8358,]  38 347 #>   [8359,]  39 347 #>   [8360,]  40 347 #>   [8361,]  41 347 #>   [8362,]  42 347 #>   [8363,]  43 347 #>   [8364,]  44 347 #>   [8365,]  45 347 #>   [8366,]  46 347 #>   [8367,]  47 347 #>   [8368,]  48 347 #>   [8369,]  49 347 #>   [8370,]  50 347 #>   [8371,]  51 347 #>   [8372,]  52 347 #>   [8373,]  53 347 #>   [8374,]  54 347 #>   [8375,]  55 347 #>   [8376,]  56 347 #>   [8377,]  57 347 #>   [8378,]  58 347 #>   [8379,]  59 347 #>   [8380,]  60 347 #>   [8381,]  61 347 #>   [8382,]  62 347 #>   [8383,]  63 347 #>   [8384,]  64 347 #>   [8385,]  65 347 #>   [8386,]  66 347 #>   [8387,]  67 347 #>   [8388,]  68 347 #>   [8389,]  69 347 #>   [8390,]  70 347 #>   [8391,]  71 347 #>   [8392,]  72 347 #>   [8393,]  73 347 #>   [8394,]  74 347 #>   [8395,]  75 347 #>   [8396,]  76 347 #>   [8397,]  77 347 #>   [8398,]  78 347 #>   [8399,]  79 347 #>   [8400,]  80 347 #>   [8401,]  81 347 #>   [8402,]  82 347 #>   [8403,]  83 347 #>   [8404,]  84 347 #>   [8405,]  85 347 #>   [8406,]  86 347 #>   [8407,]  87 347 #>   [8408,]  88 347 #>   [8409,]  89 347 #>   [8410,]  90 347 #>   [8411,]  91 347 #>   [8412,]  92 347 #>   [8413,]  93 347 #>   [8414,]  94 347 #>   [8415,]  95 347 #>   [8416,]  96 347 #>   [8417,]  97 347 #>   [8418,]  98 347 #>   [8419,]  99 347 #>   [8420,] 100 347 #>   [8421,] 101 347 #>   [8422,] 102 347 #>   [8423,] 103 347 #>   [8424,] 104 347 #>   [8425,] 105 347 #>   [8426,] 106 347 #>   [8427,] 107 347 #>   [8428,] 108 347 #>   [8429,] 109 347 #>   [8430,] 110 347 #>   [8431,] 111 347 #>   [8432,] 112 347 #>   [8433,] 113 347 #>   [8434,] 114 347 #>   [8435,] 115 347 #>   [8436,] 116 347 #>   [8437,] 117 347 #>   [8438,] 118 347 #>   [8439,] 119 347 #>   [8440,] 120 347 #>   [8441,] 121 347 #>   [8442,] 122 347 #>   [8443,] 123 347 #>   [8444,] 124 347 #>   [8445,] 125 347 #>   [8446,] 126 347 #>   [8447,] 127 347 #>   [8448,] 128 347 #>   [8449,] 129 347 #>   [8450,] 130 347 #>   [8451,] 131 347 #>   [8452,] 132 347 #>   [8453,] 133 347 #>   [8454,] 134 347 #>   [8455,] 135 347 #>   [8456,] 136 347 #>   [8457,] 137 347 #>   [8458,] 138 347 #>   [8459,] 139 347 #>   [8460,] 140 347 #>   [8461,] 141 347 #>   [8462,] 142 347 #>   [8463,] 143 347 #>   [8464,] 144 347 #>   [8465,] 145 347 #>   [8466,] 146 347 #>   [8467,] 147 347 #>   [8468,] 148 347 #>   [8469,] 149 347 #>   [8470,] 150 347 #>   [8471,] 151 347 #>   [8472,] 152 347 #>   [8473,] 153 347 #>   [8474,] 154 347 #>   [8475,] 155 347 #>   [8476,] 156 347 #>   [8477,] 157 347 #>   [8478,] 158 347 #>   [8479,] 159 347 #>   [8480,] 160 347 #>   [8481,] 161 347 #>   [8482,] 162 347 #>   [8483,] 163 347 #>   [8484,] 164 347 #>   [8485,] 165 347 #>   [8486,] 166 347 #>   [8487,] 167 347 #>   [8488,] 168 347 #>   [8489,] 169 347 #>   [8490,] 170 347 #>   [8491,] 171 347 #>   [8492,] 172 347 #>   [8493,] 173 347 #>   [8494,] 174 347 #>   [8495,] 175 347 #>   [8496,] 176 347 #>   [8497,] 177 347 #>   [8498,] 178 347 #>   [8499,] 179 347 #>   [8500,] 180 347 #>   [8501,] 181 347 #>   [8502,] 182 347 #>   [8503,] 183 347 #>   [8504,] 184 347 #>   [8505,] 185 347 #>   [8506,] 186 347 #>   [8507,] 187 347 #>   [8508,] 188 347 #>   [8509,] 189 347 #>   [8510,] 190 347 #>   [8511,] 191 347 #>   [8512,] 192 347 #>   [8513,] 193 347 #>   [8514,] 194 347 #>   [8515,] 195 347 #>   [8516,] 196 347 #>   [8517,] 197 347 #>   [8518,] 198 347 #>   [8519,] 199 347 #>   [8520,] 200 347 #>   [8521,] 201 347 #>   [8522,] 202 347 #>   [8523,] 203 347 #>   [8524,] 204 347 #>   [8525,] 205 347 #>   [8526,] 206 347 #>   [8527,] 207 347 #>   [8528,] 208 347 #>   [8529,] 209 347 #>   [8530,] 210 347 #>   [8531,] 211 347 #>   [8532,] 212 347 #>   [8533,] 213 347 #>   [8534,] 214 347 #>   [8535,] 215 347 #>   [8536,] 216 347 #>   [8537,] 217 347 #>   [8538,] 218 347 #>   [8539,] 219 347 #>   [8540,] 220 347 #>   [8541,] 221 347 #>   [8542,] 222 347 #>   [8543,] 223 347 #>   [8544,] 224 347 #>   [8545,] 225 347 #>   [8546,] 226 347 #>   [8547,] 227 347 #>   [8548,] 228 347 #>   [8549,] 229 347 #>   [8550,] 230 347 #>   [8551,] 231 347 #>   [8552,] 232 347 #>   [8553,] 233 347 #>   [8554,] 234 347 #>   [8555,] 235 347 #>   [8556,] 236 347 #>   [8557,] 237 347 #>   [8558,] 238 347 #>   [8559,] 239 347 #>   [8560,] 240 347 #>   [8561,] 241 347 #>   [8562,] 242 347 #>   [8563,] 243 347 #>   [8564,] 244 347 #>   [8565,] 245 347 #>   [8566,] 246 347 #>   [8567,] 247 347 #>   [8568,] 248 347 #>   [8569,] 249 347 #>   [8570,] 250 347 #>   [8571,] 251 347 #>   [8572,] 252 347 #>   [8573,] 253 347 #>   [8574,] 254 347 #>   [8575,] 255 347 #>   [8576,] 256 347 #>   [8577,] 257 347 #>   [8578,] 258 347 #>   [8579,] 259 347 #>   [8580,] 260 347 #>   [8581,] 261 347 #>   [8582,] 262 347 #>   [8583,] 263 347 #>   [8584,] 264 347 #>   [8585,] 265 347 #>   [8586,] 266 347 #>   [8587,] 267 347 #>   [8588,] 268 347 #>   [8589,] 269 347 #>   [8590,] 270 347 #>   [8591,] 271 347 #>   [8592,] 272 347 #>   [8593,] 273 347 #>   [8594,] 274 347 #>   [8595,] 275 347 #>   [8596,] 276 347 #>   [8597,] 277 347 #>   [8598,] 278 347 #>   [8599,] 279 347 #>   [8600,] 280 347 #>   [8601,] 281 347 #>   [8602,] 282 347 #>   [8603,] 283 347 #>   [8604,] 284 347 #>   [8605,] 285 347 #>   [8606,] 286 347 #>   [8607,] 287 347 #>   [8608,] 288 347 #>   [8609,] 289 347 #>   [8610,] 290 347 #>   [8611,] 291 347 #>   [8612,] 292 347 #>   [8613,] 293 347 #>   [8614,] 294 347 #>   [8615,] 295 347 #>   [8616,] 296 347 #>   [8617,] 297 347 #>   [8618,] 298 347 #>   [8619,] 299 347 #>   [8620,] 300 347 #>   [8621,] 301 347 #>   [8622,] 302 347 #>   [8623,] 303 347 #>   [8624,] 304 347 #>   [8625,] 305 347 #>   [8626,] 306 347 #>   [8627,] 307 347 #>   [8628,] 308 347 #>   [8629,] 309 347 #>   [8630,] 310 347 #>   [8631,] 311 347 #>   [8632,] 312 347 #>   [8633,] 313 347 #>   [8634,] 314 347 #>   [8635,] 315 347 #>   [8636,] 316 347 #>   [8637,] 317 347 #>   [8638,] 318 347 #>   [8639,] 319 347 #>   [8640,] 320 347 #>   [8641,] 321 347 #>   [8642,] 322 347 #>   [8643,] 323 347 #>   [8644,] 324 347 #>   [8645,] 325 347 #>   [8646,] 326 347 #>   [8647,] 327 347 #>   [8648,] 328 347 #>   [8649,] 329 347 #>   [8650,] 330 347 #>   [8651,] 331 347 #>   [8652,] 332 347 #>   [8653,] 333 347 #>   [8654,] 334 347 #>   [8655,] 335 347 #>   [8656,] 336 347 #>   [8657,] 337 347 #>   [8658,] 338 347 #>   [8659,] 339 347 #>   [8660,] 340 347 #>   [8661,] 341 347 #>   [8662,] 342 347 #>   [8663,] 343 347 #>   [8664,] 344 347 #>   [8665,] 345 347 #>   [8666,] 346 347 #>   [8667,] 347 347 #>   [8668,] 348 347 #>   [8669,] 349 347 #>   [8670,] 350 347 #>   [8671,] 351 347 #>   [8672,] 352 347 #>   [8673,] 353 347 #>   [8674,] 354 347 #>   [8675,] 355 347 #>   [8676,] 356 347 #>   [8677,] 357 347 #>   [8678,] 358 347 #>   [8679,] 359 347 #>   [8680,] 360 347 #>   [8681,] 361 347 #>   [8682,] 362 347 #>   [8683,] 363 347 #>   [8684,] 364 347 #>   [8685,] 365 347 #>   [8686,] 366 347 #>   [8687,] 367 347 #>   [8688,] 368 347 #>   [8689,] 369 347 #>   [8690,] 370 347 #>   [8691,] 371 347 #>   [8692,] 372 347 #>   [8693,] 373 347 #>   [8694,] 374 347 #>   [8695,] 375 347 #>   [8696,] 376 347 #>   [8697,] 377 347 #>   [8698,] 378 347 #>   [8699,] 379 347 #>   [8700,] 380 347 #>   [8701,] 381 347 #>   [8702,] 382 347 #>   [8703,] 383 347 #>   [8704,] 384 347 #>   [8705,] 385 347 #>   [8706,] 386 347 #>   [8707,] 387 347 #>   [8708,] 388 347 #>   [8709,] 389 347 #>   [8710,] 390 347 #>   [8711,] 391 347 #>   [8712,] 392 347 #>   [8713,] 393 347 #>   [8714,] 394 347 #>   [8715,] 395 347 #>   [8716,] 396 347 #>   [8717,] 397 347 #>   [8718,] 398 347 #>   [8719,] 399 347 #>   [8720,] 400 347 #>   [8721,] 401 347 #>   [8722,] 402 347 #>   [8723,] 403 347 #>   [8724,] 404 347 #>   [8725,] 405 347 #>   [8726,] 406 347 #>   [8727,] 407 347 #>   [8728,] 408 347 #>   [8729,] 409 347 #>   [8730,] 410 347 #>   [8731,] 411 347 #>   [8732,] 412 347 #>   [8733,] 413 347 #>   [8734,] 414 347 #>   [8735,] 415 347 #>   [8736,] 416 347 #>   [8737,] 417 347 #>   [8738,] 418 347 #>   [8739,] 419 347 #>   [8740,] 420 347 #>   [8741,] 421 347 #>   [8742,] 422 347 #>   [8743,] 423 347 #>   [8744,] 424 347 #>   [8745,] 425 347 #>   [8746,] 426 347 #>   [8747,] 427 347 #>   [8748,] 428 347 #>   [8749,] 429 347 #>   [8750,] 430 347 #>   [8751,] 431 347 #>   [8752,] 432 347 #>   [8753,] 433 347 #>   [8754,] 434 347 #>   [8755,] 435 347 #>   [8756,] 436 347 #>   [8757,] 437 347 #>   [8758,] 438 347 #>   [8759,] 439 347 #>   [8760,] 440 347 #>   [8761,] 441 347 #>   [8762,] 442 347 #>   [8763,] 443 347 #>   [8764,] 444 347 #>   [8765,] 445 347 #>   [8766,] 446 347 #>   [8767,] 447 347 #>   [8768,] 448 347 #>   [8769,] 449 347 #>   [8770,] 450 347 #>   [8771,] 451 347 #>   [8772,] 452 347 #>   [8773,] 453 347 #>   [8774,] 454 347 #>   [8775,] 455 347 #>   [8776,] 456 347 #>   [8777,] 457 347 #>   [8778,] 458 347 #>   [8779,] 459 347 #>   [8780,] 460 347 #>   [8781,] 461 347 #>   [8782,] 462 347 #>   [8783,] 463 347 #>   [8784,] 464 347 #>   [8785,] 465 347 #>   [8786,] 466 347 #>   [8787,] 467 347 #>   [8788,] 468 347 #>   [8789,] 469 347 #>   [8790,] 470 347 #>   [8791,] 471 347 #>   [8792,] 472 347 #>   [8793,] 473 347 #>   [8794,] 474 347 #>   [8795,] 475 347 #>   [8796,] 476 347 #>   [8797,] 477 347 #>   [8798,] 478 347 #>   [8799,] 479 347 #>   [8800,] 480 347 #>   [8801,] 481 347 #>   [8802,] 482 347 #>   [8803,] 483 347 #>   [8804,] 484 347 #>   [8805,] 485 347 #>   [8806,] 486 347 #>   [8807,] 487 347 #>   [8808,] 488 347 #>   [8809,] 489 347 #>   [8810,] 490 347 #>   [8811,] 491 347 #>   [8812,] 492 347 #>   [8813,] 493 347 #>   [8814,] 494 347 #>   [8815,] 495 347 #>   [8816,] 496 347 #>   [8817,] 497 347 #>   [8818,] 498 347 #>   [8819,] 499 347 #>   [8820,] 500 347 #>   [8821,] 501 347 #>   [8822,] 502 347 #>   [8823,] 503 347 #>   [8824,] 504 347 #>   [8825,] 505 347 #>   [8826,] 506 347 #>   [8827,] 507 347 #>   [8828,] 508 347 #>   [8829,] 509 347 #>   [8830,] 510 347 #>   [8831,] 511 347 #>   [8832,] 512 347 #>   [8833,] 513 347 #>   [8834,] 514 347 #>   [8835,] 515 347 #>   [8836,] 516 347 #>   [8837,] 517 347 #>   [8838,] 518 347 #>   [8839,] 519 347 #>   [8840,] 520 347 #>   [8841,] 521 347 #>   [8842,] 522 347 #>   [8843,] 523 347 #>   [8844,] 524 347 #>   [8845,] 525 347 #>   [8846,] 526 347 #>   [8847,] 527 347 #>   [8848,] 528 347 #>   [8849,] 529 347 #>   [8850,] 530 347 #>   [8851,] 531 347 #>   [8852,] 532 347 #>   [8853,] 533 347 #>   [8854,] 534 347 #>   [8855,] 535 347 #>   [8856,] 536 347 #>   [8857,] 537 347 #>   [8858,] 538 347 #>   [8859,] 539 347 #>   [8860,] 540 347 #>   [8861,] 541 347 #>   [8862,] 542 347 #>   [8863,] 543 347 #>   [8864,] 544 347 #>   [8865,] 545 347 #>   [8866,] 546 347 #>   [8867,] 547 347 #>   [8868,] 548 347 #>   [8869,] 549 347 #>   [8870,] 550 347 #>   [8871,] 551 347 #>   [8872,] 552 347 #>   [8873,] 553 347 #>   [8874,] 554 347 #>   [8875,] 555 347 #>   [8876,] 556 347 #>   [8877,] 557 347 #>   [8878,] 558 347 #>   [8879,] 559 347 #>   [8880,] 560 347 #>   [8881,] 561 347 #>   [8882,] 562 347 #>   [8883,] 563 347 #>   [8884,] 564 347 #>   [8885,] 565 347 #>   [8886,] 566 347 #>   [8887,] 567 347 #>   [8888,] 568 347 #>   [8889,] 569 347 #>   [8890,] 570 347 #>   [8891,] 571 347 #>   [8892,] 572 347 #>   [8893,] 573 347 #>   [8894,] 574 347 #>   [8895,] 575 347 #>   [8896,] 576 347 #>   [8897,] 577 347 #>   [8898,] 578 347 #>   [8899,] 579 347 #>   [8900,] 580 347 #>   [8901,] 581 347 #>   [8902,] 582 347 #>   [8903,] 583 347 #>   [8904,] 584 347 #>   [8905,] 585 347 #>   [8906,] 586 347 #>   [8907,] 587 347 #>   [8908,] 588 347 #>   [8909,] 589 347 #>   [8910,] 590 347 #>   [8911,] 591 347 #>   [8912,] 592 347 #>   [8913,] 593 347 #>   [8914,] 594 347 #>   [8915,] 595 347 #>   [8916,] 596 347 #>   [8917,] 597 347 #>   [8918,] 598 347 #>   [8919,] 599 347 #>   [8920,] 600 347 #>   [8921,] 601 347 #>   [8922,] 602 347 #>   [8923,] 603 347 #>   [8924,] 604 347 #>   [8925,] 605 347 #>   [8926,] 606 347 #>   [8927,] 607 347 #>   [8928,] 608 347 #>   [8929,] 609 347 #>   [8930,] 610 347 #>   [8931,] 611 347 #>   [8932,] 612 347 #>   [8933,] 613 347 #>   [8934,] 614 347 #>   [8935,] 615 347 #>   [8936,] 616 347 #>   [8937,] 617 347 #>   [8938,] 618 347 #>   [8939,] 619 347 #>   [8940,] 620 347 #>   [8941,] 621 347 #>   [8942,] 622 347 #>   [8943,] 623 347 #>   [8944,] 624 347 #>   [8945,] 625 347 #>   [8946,] 626 347 #>   [8947,] 627 347 #>   [8948,] 628 347 #>   [8949,] 629 347 #>   [8950,] 630 347 #>   [8951,] 631 347 #>   [8952,] 632 347 #>   [8953,] 633 347 #>   [8954,] 634 347 #>   [8955,] 635 347 #>   [8956,] 636 347 #>   [8957,] 637 347 #>   [8958,] 638 347 #>   [8959,] 639 347 #>   [8960,] 640 347 #>   [8961,]   1 346 #>   [8962,]   2 346 #>   [8963,]   3 346 #>   [8964,]   4 346 #>   [8965,]   5 346 #>   [8966,]   6 346 #>   [8967,]   7 346 #>   [8968,]   8 346 #>   [8969,]   9 346 #>   [8970,]  10 346 #>   [8971,]  11 346 #>   [8972,]  12 346 #>   [8973,]  13 346 #>   [8974,]  14 346 #>   [8975,]  15 346 #>   [8976,]  16 346 #>   [8977,]  17 346 #>   [8978,]  18 346 #>   [8979,]  19 346 #>   [8980,]  20 346 #>   [8981,]  21 346 #>   [8982,]  22 346 #>   [8983,]  23 346 #>   [8984,]  24 346 #>   [8985,]  25 346 #>   [8986,]  26 346 #>   [8987,]  27 346 #>   [8988,]  28 346 #>   [8989,]  29 346 #>   [8990,]  30 346 #>   [8991,]  31 346 #>   [8992,]  32 346 #>   [8993,]  33 346 #>   [8994,]  34 346 #>   [8995,]  35 346 #>   [8996,]  36 346 #>   [8997,]  37 346 #>   [8998,]  38 346 #>   [8999,]  39 346 #>   [9000,]  40 346 #>   [9001,]  41 346 #>   [9002,]  42 346 #>   [9003,]  43 346 #>   [9004,]  44 346 #>   [9005,]  45 346 #>   [9006,]  46 346 #>   [9007,]  47 346 #>   [9008,]  48 346 #>   [9009,]  49 346 #>   [9010,]  50 346 #>   [9011,]  51 346 #>   [9012,]  52 346 #>   [9013,]  53 346 #>   [9014,]  54 346 #>   [9015,]  55 346 #>   [9016,]  56 346 #>   [9017,]  57 346 #>   [9018,]  58 346 #>   [9019,]  59 346 #>   [9020,]  60 346 #>   [9021,]  61 346 #>   [9022,]  62 346 #>   [9023,]  63 346 #>   [9024,]  64 346 #>   [9025,]  65 346 #>   [9026,]  66 346 #>   [9027,]  67 346 #>   [9028,]  68 346 #>   [9029,]  69 346 #>   [9030,]  70 346 #>   [9031,]  71 346 #>   [9032,]  72 346 #>   [9033,]  73 346 #>   [9034,]  74 346 #>   [9035,]  75 346 #>   [9036,]  76 346 #>   [9037,]  77 346 #>   [9038,]  78 346 #>   [9039,]  79 346 #>   [9040,]  80 346 #>   [9041,]  81 346 #>   [9042,]  82 346 #>   [9043,]  83 346 #>   [9044,]  84 346 #>   [9045,]  85 346 #>   [9046,]  86 346 #>   [9047,]  87 346 #>   [9048,]  88 346 #>   [9049,]  89 346 #>   [9050,]  90 346 #>   [9051,]  91 346 #>   [9052,]  92 346 #>   [9053,]  93 346 #>   [9054,]  94 346 #>   [9055,]  95 346 #>   [9056,]  96 346 #>   [9057,]  97 346 #>   [9058,]  98 346 #>   [9059,]  99 346 #>   [9060,] 100 346 #>   [9061,] 101 346 #>   [9062,] 102 346 #>   [9063,] 103 346 #>   [9064,] 104 346 #>   [9065,] 105 346 #>   [9066,] 106 346 #>   [9067,] 107 346 #>   [9068,] 108 346 #>   [9069,] 109 346 #>   [9070,] 110 346 #>   [9071,] 111 346 #>   [9072,] 112 346 #>   [9073,] 113 346 #>   [9074,] 114 346 #>   [9075,] 115 346 #>   [9076,] 116 346 #>   [9077,] 117 346 #>   [9078,] 118 346 #>   [9079,] 119 346 #>   [9080,] 120 346 #>   [9081,] 121 346 #>   [9082,] 122 346 #>   [9083,] 123 346 #>   [9084,] 124 346 #>   [9085,] 125 346 #>   [9086,] 126 346 #>   [9087,] 127 346 #>   [9088,] 128 346 #>   [9089,] 129 346 #>   [9090,] 130 346 #>   [9091,] 131 346 #>   [9092,] 132 346 #>   [9093,] 133 346 #>   [9094,] 134 346 #>   [9095,] 135 346 #>   [9096,] 136 346 #>   [9097,] 137 346 #>   [9098,] 138 346 #>   [9099,] 139 346 #>   [9100,] 140 346 #>   [9101,] 141 346 #>   [9102,] 142 346 #>   [9103,] 143 346 #>   [9104,] 144 346 #>   [9105,] 145 346 #>   [9106,] 146 346 #>   [9107,] 147 346 #>   [9108,] 148 346 #>   [9109,] 149 346 #>   [9110,] 150 346 #>   [9111,] 151 346 #>   [9112,] 152 346 #>   [9113,] 153 346 #>   [9114,] 154 346 #>   [9115,] 155 346 #>   [9116,] 156 346 #>   [9117,] 157 346 #>   [9118,] 158 346 #>   [9119,] 159 346 #>   [9120,] 160 346 #>   [9121,] 161 346 #>   [9122,] 162 346 #>   [9123,] 163 346 #>   [9124,] 164 346 #>   [9125,] 165 346 #>   [9126,] 166 346 #>   [9127,] 167 346 #>   [9128,] 168 346 #>   [9129,] 169 346 #>   [9130,] 170 346 #>   [9131,] 171 346 #>   [9132,] 172 346 #>   [9133,] 173 346 #>   [9134,] 174 346 #>   [9135,] 175 346 #>   [9136,] 176 346 #>   [9137,] 177 346 #>   [9138,] 178 346 #>   [9139,] 179 346 #>   [9140,] 180 346 #>   [9141,] 181 346 #>   [9142,] 182 346 #>   [9143,] 183 346 #>   [9144,] 184 346 #>   [9145,] 185 346 #>   [9146,] 186 346 #>   [9147,] 187 346 #>   [9148,] 188 346 #>   [9149,] 189 346 #>   [9150,] 190 346 #>   [9151,] 191 346 #>   [9152,] 192 346 #>   [9153,] 193 346 #>   [9154,] 194 346 #>   [9155,] 195 346 #>   [9156,] 196 346 #>   [9157,] 197 346 #>   [9158,] 198 346 #>   [9159,] 199 346 #>   [9160,] 200 346 #>   [9161,] 201 346 #>   [9162,] 202 346 #>   [9163,] 203 346 #>   [9164,] 204 346 #>   [9165,] 205 346 #>   [9166,] 206 346 #>   [9167,] 207 346 #>   [9168,] 208 346 #>   [9169,] 209 346 #>   [9170,] 210 346 #>   [9171,] 211 346 #>   [9172,] 212 346 #>   [9173,] 213 346 #>   [9174,] 214 346 #>   [9175,] 215 346 #>   [9176,] 216 346 #>   [9177,] 217 346 #>   [9178,] 218 346 #>   [9179,] 219 346 #>   [9180,] 220 346 #>   [9181,] 221 346 #>   [9182,] 222 346 #>   [9183,] 223 346 #>   [9184,] 224 346 #>   [9185,] 225 346 #>   [9186,] 226 346 #>   [9187,] 227 346 #>   [9188,] 228 346 #>   [9189,] 229 346 #>   [9190,] 230 346 #>   [9191,] 231 346 #>   [9192,] 232 346 #>   [9193,] 233 346 #>   [9194,] 234 346 #>   [9195,] 235 346 #>   [9196,] 236 346 #>   [9197,] 237 346 #>   [9198,] 238 346 #>   [9199,] 239 346 #>   [9200,] 240 346 #>   [9201,] 241 346 #>   [9202,] 242 346 #>   [9203,] 243 346 #>   [9204,] 244 346 #>   [9205,] 245 346 #>   [9206,] 246 346 #>   [9207,] 247 346 #>   [9208,] 248 346 #>   [9209,] 249 346 #>   [9210,] 250 346 #>   [9211,] 251 346 #>   [9212,] 252 346 #>   [9213,] 253 346 #>   [9214,] 254 346 #>   [9215,] 255 346 #>   [9216,] 256 346 #>   [9217,] 257 346 #>   [9218,] 258 346 #>   [9219,] 259 346 #>   [9220,] 260 346 #>   [9221,] 261 346 #>   [9222,] 262 346 #>   [9223,] 263 346 #>   [9224,] 264 346 #>   [9225,] 265 346 #>   [9226,] 266 346 #>   [9227,] 267 346 #>   [9228,] 268 346 #>   [9229,] 269 346 #>   [9230,] 270 346 #>   [9231,] 271 346 #>   [9232,] 272 346 #>   [9233,] 273 346 #>   [9234,] 274 346 #>   [9235,] 275 346 #>   [9236,] 276 346 #>   [9237,] 277 346 #>   [9238,] 278 346 #>   [9239,] 279 346 #>   [9240,] 280 346 #>   [9241,] 281 346 #>   [9242,] 282 346 #>   [9243,] 283 346 #>   [9244,] 284 346 #>   [9245,] 285 346 #>   [9246,] 286 346 #>   [9247,] 287 346 #>   [9248,] 288 346 #>   [9249,] 289 346 #>   [9250,] 290 346 #>   [9251,] 291 346 #>   [9252,] 292 346 #>   [9253,] 293 346 #>   [9254,] 294 346 #>   [9255,] 295 346 #>   [9256,] 296 346 #>   [9257,] 297 346 #>   [9258,] 298 346 #>   [9259,] 299 346 #>   [9260,] 300 346 #>   [9261,] 301 346 #>   [9262,] 302 346 #>   [9263,] 303 346 #>   [9264,] 304 346 #>   [9265,] 305 346 #>   [9266,] 306 346 #>   [9267,] 307 346 #>   [9268,] 308 346 #>   [9269,] 309 346 #>   [9270,] 310 346 #>   [9271,] 311 346 #>   [9272,] 312 346 #>   [9273,] 313 346 #>   [9274,] 314 346 #>   [9275,] 315 346 #>   [9276,] 316 346 #>   [9277,] 317 346 #>   [9278,] 318 346 #>   [9279,] 319 346 #>   [9280,] 320 346 #>   [9281,] 321 346 #>   [9282,] 322 346 #>   [9283,] 323 346 #>   [9284,] 324 346 #>   [9285,] 325 346 #>   [9286,] 326 346 #>   [9287,] 327 346 #>   [9288,] 328 346 #>   [9289,] 329 346 #>   [9290,] 330 346 #>   [9291,] 331 346 #>   [9292,] 332 346 #>   [9293,] 333 346 #>   [9294,] 334 346 #>   [9295,] 335 346 #>   [9296,] 336 346 #>   [9297,] 337 346 #>   [9298,] 338 346 #>   [9299,] 339 346 #>   [9300,] 340 346 #>   [9301,] 341 346 #>   [9302,] 342 346 #>   [9303,] 343 346 #>   [9304,] 344 346 #>   [9305,] 345 346 #>   [9306,] 346 346 #>   [9307,] 347 346 #>   [9308,] 348 346 #>   [9309,] 349 346 #>   [9310,] 350 346 #>   [9311,] 351 346 #>   [9312,] 352 346 #>   [9313,] 353 346 #>   [9314,] 354 346 #>   [9315,] 355 346 #>   [9316,] 356 346 #>   [9317,] 357 346 #>   [9318,] 358 346 #>   [9319,] 359 346 #>   [9320,] 360 346 #>   [9321,] 361 346 #>   [9322,] 362 346 #>   [9323,] 363 346 #>   [9324,] 364 346 #>   [9325,] 365 346 #>   [9326,] 366 346 #>   [9327,] 367 346 #>   [9328,] 368 346 #>   [9329,] 369 346 #>   [9330,] 370 346 #>   [9331,] 371 346 #>   [9332,] 372 346 #>   [9333,] 373 346 #>   [9334,] 374 346 #>   [9335,] 375 346 #>   [9336,] 376 346 #>   [9337,] 377 346 #>   [9338,] 378 346 #>   [9339,] 379 346 #>   [9340,] 380 346 #>   [9341,] 381 346 #>   [9342,] 382 346 #>   [9343,] 383 346 #>   [9344,] 384 346 #>   [9345,] 385 346 #>   [9346,] 386 346 #>   [9347,] 387 346 #>   [9348,] 388 346 #>   [9349,] 389 346 #>   [9350,] 390 346 #>   [9351,] 391 346 #>   [9352,] 392 346 #>   [9353,] 393 346 #>   [9354,] 394 346 #>   [9355,] 395 346 #>   [9356,] 396 346 #>   [9357,] 397 346 #>   [9358,] 398 346 #>   [9359,] 399 346 #>   [9360,] 400 346 #>   [9361,] 401 346 #>   [9362,] 402 346 #>   [9363,] 403 346 #>   [9364,] 404 346 #>   [9365,] 405 346 #>   [9366,] 406 346 #>   [9367,] 407 346 #>   [9368,] 408 346 #>   [9369,] 409 346 #>   [9370,] 410 346 #>   [9371,] 411 346 #>   [9372,] 412 346 #>   [9373,] 413 346 #>   [9374,] 414 346 #>   [9375,] 415 346 #>   [9376,] 416 346 #>   [9377,] 417 346 #>   [9378,] 418 346 #>   [9379,] 419 346 #>   [9380,] 420 346 #>   [9381,] 421 346 #>   [9382,] 422 346 #>   [9383,] 423 346 #>   [9384,] 424 346 #>   [9385,] 425 346 #>   [9386,] 426 346 #>   [9387,] 427 346 #>   [9388,] 428 346 #>   [9389,] 429 346 #>   [9390,] 430 346 #>   [9391,] 431 346 #>   [9392,] 432 346 #>   [9393,] 433 346 #>   [9394,] 434 346 #>   [9395,] 435 346 #>   [9396,] 436 346 #>   [9397,] 437 346 #>   [9398,] 438 346 #>   [9399,] 439 346 #>   [9400,] 440 346 #>   [9401,] 441 346 #>   [9402,] 442 346 #>   [9403,] 443 346 #>   [9404,] 444 346 #>   [9405,] 445 346 #>   [9406,] 446 346 #>   [9407,] 447 346 #>   [9408,] 448 346 #>   [9409,] 449 346 #>   [9410,] 450 346 #>   [9411,] 451 346 #>   [9412,] 452 346 #>   [9413,] 453 346 #>   [9414,] 454 346 #>   [9415,] 455 346 #>   [9416,] 456 346 #>   [9417,] 457 346 #>   [9418,] 458 346 #>   [9419,] 459 346 #>   [9420,] 460 346 #>   [9421,] 461 346 #>   [9422,] 462 346 #>   [9423,] 463 346 #>   [9424,] 464 346 #>   [9425,] 465 346 #>   [9426,] 466 346 #>   [9427,] 467 346 #>   [9428,] 468 346 #>   [9429,] 469 346 #>   [9430,] 470 346 #>   [9431,] 471 346 #>   [9432,] 472 346 #>   [9433,] 473 346 #>   [9434,] 474 346 #>   [9435,] 475 346 #>   [9436,] 476 346 #>   [9437,] 477 346 #>   [9438,] 478 346 #>   [9439,] 479 346 #>   [9440,] 480 346 #>   [9441,] 481 346 #>   [9442,] 482 346 #>   [9443,] 483 346 #>   [9444,] 484 346 #>   [9445,] 485 346 #>   [9446,] 486 346 #>   [9447,] 487 346 #>   [9448,] 488 346 #>   [9449,] 489 346 #>   [9450,] 490 346 #>   [9451,] 491 346 #>   [9452,] 492 346 #>   [9453,] 493 346 #>   [9454,] 494 346 #>   [9455,] 495 346 #>   [9456,] 496 346 #>   [9457,] 497 346 #>   [9458,] 498 346 #>   [9459,] 499 346 #>   [9460,] 500 346 #>   [9461,] 501 346 #>   [9462,] 502 346 #>   [9463,] 503 346 #>   [9464,] 504 346 #>   [9465,] 505 346 #>   [9466,] 506 346 #>   [9467,] 507 346 #>   [9468,] 508 346 #>   [9469,] 509 346 #>   [9470,] 510 346 #>   [9471,] 511 346 #>   [9472,] 512 346 #>   [9473,] 513 346 #>   [9474,] 514 346 #>   [9475,] 515 346 #>   [9476,] 516 346 #>   [9477,] 517 346 #>   [9478,] 518 346 #>   [9479,] 519 346 #>   [9480,] 520 346 #>   [9481,] 521 346 #>   [9482,] 522 346 #>   [9483,] 523 346 #>   [9484,] 524 346 #>   [9485,] 525 346 #>   [9486,] 526 346 #>   [9487,] 527 346 #>   [9488,] 528 346 #>   [9489,] 529 346 #>   [9490,] 530 346 #>   [9491,] 531 346 #>   [9492,] 532 346 #>   [9493,] 533 346 #>   [9494,] 534 346 #>   [9495,] 535 346 #>   [9496,] 536 346 #>   [9497,] 537 346 #>   [9498,] 538 346 #>   [9499,] 539 346 #>   [9500,] 540 346 #>   [9501,] 541 346 #>   [9502,] 542 346 #>   [9503,] 543 346 #>   [9504,] 544 346 #>   [9505,] 545 346 #>   [9506,] 546 346 #>   [9507,] 547 346 #>   [9508,] 548 346 #>   [9509,] 549 346 #>   [9510,] 550 346 #>   [9511,] 551 346 #>   [9512,] 552 346 #>   [9513,] 553 346 #>   [9514,] 554 346 #>   [9515,] 555 346 #>   [9516,] 556 346 #>   [9517,] 557 346 #>   [9518,] 558 346 #>   [9519,] 559 346 #>   [9520,] 560 346 #>   [9521,] 561 346 #>   [9522,] 562 346 #>   [9523,] 563 346 #>   [9524,] 564 346 #>   [9525,] 565 346 #>   [9526,] 566 346 #>   [9527,] 567 346 #>   [9528,] 568 346 #>   [9529,] 569 346 #>   [9530,] 570 346 #>   [9531,] 571 346 #>   [9532,] 572 346 #>   [9533,] 573 346 #>   [9534,] 574 346 #>   [9535,] 575 346 #>   [9536,] 576 346 #>   [9537,] 577 346 #>   [9538,] 578 346 #>   [9539,] 579 346 #>   [9540,] 580 346 #>   [9541,] 581 346 #>   [9542,] 582 346 #>   [9543,] 583 346 #>   [9544,] 584 346 #>   [9545,] 585 346 #>   [9546,] 586 346 #>   [9547,] 587 346 #>   [9548,] 588 346 #>   [9549,] 589 346 #>   [9550,] 590 346 #>   [9551,] 591 346 #>   [9552,] 592 346 #>   [9553,] 593 346 #>   [9554,] 594 346 #>   [9555,] 595 346 #>   [9556,] 596 346 #>   [9557,] 597 346 #>   [9558,] 598 346 #>   [9559,] 599 346 #>   [9560,] 600 346 #>   [9561,] 601 346 #>   [9562,] 602 346 #>   [9563,] 603 346 #>   [9564,] 604 346 #>   [9565,] 605 346 #>   [9566,] 606 346 #>   [9567,] 607 346 #>   [9568,] 608 346 #>   [9569,] 609 346 #>   [9570,] 610 346 #>   [9571,] 611 346 #>   [9572,] 612 346 #>   [9573,] 613 346 #>   [9574,] 614 346 #>   [9575,] 615 346 #>   [9576,] 616 346 #>   [9577,] 617 346 #>   [9578,] 618 346 #>   [9579,] 619 346 #>   [9580,] 620 346 #>   [9581,] 621 346 #>   [9582,] 622 346 #>   [9583,] 623 346 #>   [9584,] 624 346 #>   [9585,] 625 346 #>   [9586,] 626 346 #>   [9587,] 627 346 #>   [9588,] 628 346 #>   [9589,] 629 346 #>   [9590,] 630 346 #>   [9591,] 631 346 #>   [9592,] 632 346 #>   [9593,] 633 346 #>   [9594,] 634 346 #>   [9595,] 635 346 #>   [9596,] 636 346 #>   [9597,] 637 346 #>   [9598,] 638 346 #>   [9599,] 639 346 #>   [9600,] 640 346 #>   [9601,]   1 345 #>   [9602,]   2 345 #>   [9603,]   3 345 #>   [9604,]   4 345 #>   [9605,]   5 345 #>   [9606,]   6 345 #>   [9607,]   7 345 #>   [9608,]   8 345 #>   [9609,]   9 345 #>   [9610,]  10 345 #>   [9611,]  11 345 #>   [9612,]  12 345 #>   [9613,]  13 345 #>   [9614,]  14 345 #>   [9615,]  15 345 #>   [9616,]  16 345 #>   [9617,]  17 345 #>   [9618,]  18 345 #>   [9619,]  19 345 #>   [9620,]  20 345 #>   [9621,]  21 345 #>   [9622,]  22 345 #>   [9623,]  23 345 #>   [9624,]  24 345 #>   [9625,]  25 345 #>   [9626,]  26 345 #>   [9627,]  27 345 #>   [9628,]  28 345 #>   [9629,]  29 345 #>   [9630,]  30 345 #>   [9631,]  31 345 #>   [9632,]  32 345 #>   [9633,]  33 345 #>   [9634,]  34 345 #>   [9635,]  35 345 #>   [9636,]  36 345 #>   [9637,]  37 345 #>   [9638,]  38 345 #>   [9639,]  39 345 #>   [9640,]  40 345 #>   [9641,]  41 345 #>   [9642,]  42 345 #>   [9643,]  43 345 #>   [9644,]  44 345 #>   [9645,]  45 345 #>   [9646,]  46 345 #>   [9647,]  47 345 #>   [9648,]  48 345 #>   [9649,]  49 345 #>   [9650,]  50 345 #>   [9651,]  51 345 #>   [9652,]  52 345 #>   [9653,]  53 345 #>   [9654,]  54 345 #>   [9655,]  55 345 #>   [9656,]  56 345 #>   [9657,]  57 345 #>   [9658,]  58 345 #>   [9659,]  59 345 #>   [9660,]  60 345 #>   [9661,]  61 345 #>   [9662,]  62 345 #>   [9663,]  63 345 #>   [9664,]  64 345 #>   [9665,]  65 345 #>   [9666,]  66 345 #>   [9667,]  67 345 #>   [9668,]  68 345 #>   [9669,]  69 345 #>   [9670,]  70 345 #>   [9671,]  71 345 #>   [9672,]  72 345 #>   [9673,]  73 345 #>   [9674,]  74 345 #>   [9675,]  75 345 #>   [9676,]  76 345 #>   [9677,]  77 345 #>   [9678,]  78 345 #>   [9679,]  79 345 #>   [9680,]  80 345 #>   [9681,]  81 345 #>   [9682,]  82 345 #>   [9683,]  83 345 #>   [9684,]  84 345 #>   [9685,]  85 345 #>   [9686,]  86 345 #>   [9687,]  87 345 #>   [9688,]  88 345 #>   [9689,]  89 345 #>   [9690,]  90 345 #>   [9691,]  91 345 #>   [9692,]  92 345 #>   [9693,]  93 345 #>   [9694,]  94 345 #>   [9695,]  95 345 #>   [9696,]  96 345 #>   [9697,]  97 345 #>   [9698,]  98 345 #>   [9699,]  99 345 #>   [9700,] 100 345 #>   [9701,] 101 345 #>   [9702,] 102 345 #>   [9703,] 103 345 #>   [9704,] 104 345 #>   [9705,] 105 345 #>   [9706,] 106 345 #>   [9707,] 107 345 #>   [9708,] 108 345 #>   [9709,] 109 345 #>   [9710,] 110 345 #>   [9711,] 111 345 #>   [9712,] 112 345 #>   [9713,] 113 345 #>   [9714,] 114 345 #>   [9715,] 115 345 #>   [9716,] 116 345 #>   [9717,] 117 345 #>   [9718,] 118 345 #>   [9719,] 119 345 #>   [9720,] 120 345 #>   [9721,] 121 345 #>   [9722,] 122 345 #>   [9723,] 123 345 #>   [9724,] 124 345 #>   [9725,] 125 345 #>   [9726,] 126 345 #>   [9727,] 127 345 #>   [9728,] 128 345 #>   [9729,] 129 345 #>   [9730,] 130 345 #>   [9731,] 131 345 #>   [9732,] 132 345 #>   [9733,] 133 345 #>   [9734,] 134 345 #>   [9735,] 135 345 #>   [9736,] 136 345 #>   [9737,] 137 345 #>   [9738,] 138 345 #>   [9739,] 139 345 #>   [9740,] 140 345 #>   [9741,] 141 345 #>   [9742,] 142 345 #>   [9743,] 143 345 #>   [9744,] 144 345 #>   [9745,] 145 345 #>   [9746,] 146 345 #>   [9747,] 147 345 #>   [9748,] 148 345 #>   [9749,] 149 345 #>   [9750,] 150 345 #>   [9751,] 151 345 #>   [9752,] 152 345 #>   [9753,] 153 345 #>   [9754,] 154 345 #>   [9755,] 155 345 #>   [9756,] 156 345 #>   [9757,] 157 345 #>   [9758,] 158 345 #>   [9759,] 159 345 #>   [9760,] 160 345 #>   [9761,] 161 345 #>   [9762,] 162 345 #>   [9763,] 163 345 #>   [9764,] 164 345 #>   [9765,] 165 345 #>   [9766,] 166 345 #>   [9767,] 167 345 #>   [9768,] 168 345 #>   [9769,] 169 345 #>   [9770,] 170 345 #>   [9771,] 171 345 #>   [9772,] 172 345 #>   [9773,] 173 345 #>   [9774,] 174 345 #>   [9775,] 175 345 #>   [9776,] 176 345 #>   [9777,] 177 345 #>   [9778,] 178 345 #>   [9779,] 179 345 #>   [9780,] 180 345 #>   [9781,] 181 345 #>   [9782,] 182 345 #>   [9783,] 183 345 #>   [9784,] 184 345 #>   [9785,] 185 345 #>   [9786,] 186 345 #>   [9787,] 187 345 #>   [9788,] 188 345 #>   [9789,] 189 345 #>   [9790,] 190 345 #>   [9791,] 191 345 #>   [9792,] 192 345 #>   [9793,] 193 345 #>   [9794,] 194 345 #>   [9795,] 195 345 #>   [9796,] 196 345 #>   [9797,] 197 345 #>   [9798,] 198 345 #>   [9799,] 199 345 #>   [9800,] 200 345 #>   [9801,] 201 345 #>   [9802,] 202 345 #>   [9803,] 203 345 #>   [9804,] 204 345 #>   [9805,] 205 345 #>   [9806,] 206 345 #>   [9807,] 207 345 #>   [9808,] 208 345 #>   [9809,] 209 345 #>   [9810,] 210 345 #>   [9811,] 211 345 #>   [9812,] 212 345 #>   [9813,] 213 345 #>   [9814,] 214 345 #>   [9815,] 215 345 #>   [9816,] 216 345 #>   [9817,] 217 345 #>   [9818,] 218 345 #>   [9819,] 219 345 #>   [9820,] 220 345 #>   [9821,] 221 345 #>   [9822,] 222 345 #>   [9823,] 223 345 #>   [9824,] 224 345 #>   [9825,] 225 345 #>   [9826,] 226 345 #>   [9827,] 227 345 #>   [9828,] 228 345 #>   [9829,] 229 345 #>   [9830,] 230 345 #>   [9831,] 231 345 #>   [9832,] 232 345 #>   [9833,] 233 345 #>   [9834,] 234 345 #>   [9835,] 235 345 #>   [9836,] 236 345 #>   [9837,] 237 345 #>   [9838,] 238 345 #>   [9839,] 239 345 #>   [9840,] 240 345 #>   [9841,] 241 345 #>   [9842,] 242 345 #>   [9843,] 243 345 #>   [9844,] 244 345 #>   [9845,] 245 345 #>   [9846,] 246 345 #>   [9847,] 247 345 #>   [9848,] 248 345 #>   [9849,] 249 345 #>   [9850,] 250 345 #>   [9851,] 251 345 #>   [9852,] 252 345 #>   [9853,] 253 345 #>   [9854,] 254 345 #>   [9855,] 255 345 #>   [9856,] 256 345 #>   [9857,] 257 345 #>   [9858,] 258 345 #>   [9859,] 259 345 #>   [9860,] 260 345 #>   [9861,] 261 345 #>   [9862,] 262 345 #>   [9863,] 263 345 #>   [9864,] 264 345 #>   [9865,] 265 345 #>   [9866,] 266 345 #>   [9867,] 267 345 #>   [9868,] 268 345 #>   [9869,] 269 345 #>   [9870,] 270 345 #>   [9871,] 271 345 #>   [9872,] 272 345 #>   [9873,] 273 345 #>   [9874,] 274 345 #>   [9875,] 275 345 #>   [9876,] 276 345 #>   [9877,] 277 345 #>   [9878,] 278 345 #>   [9879,] 279 345 #>   [9880,] 280 345 #>   [9881,] 281 345 #>   [9882,] 282 345 #>   [9883,] 283 345 #>   [9884,] 284 345 #>   [9885,] 285 345 #>   [9886,] 286 345 #>   [9887,] 287 345 #>   [9888,] 288 345 #>   [9889,] 289 345 #>   [9890,] 290 345 #>   [9891,] 291 345 #>   [9892,] 292 345 #>   [9893,] 293 345 #>   [9894,] 294 345 #>   [9895,] 295 345 #>   [9896,] 296 345 #>   [9897,] 297 345 #>   [9898,] 298 345 #>   [9899,] 299 345 #>   [9900,] 300 345 #>   [9901,] 301 345 #>   [9902,] 302 345 #>   [9903,] 303 345 #>   [9904,] 304 345 #>   [9905,] 305 345 #>   [9906,] 306 345 #>   [9907,] 307 345 #>   [9908,] 308 345 #>   [9909,] 309 345 #>   [9910,] 310 345 #>   [9911,] 311 345 #>   [9912,] 312 345 #>   [9913,] 313 345 #>   [9914,] 314 345 #>   [9915,] 315 345 #>   [9916,] 316 345 #>   [9917,] 317 345 #>   [9918,] 318 345 #>   [9919,] 319 345 #>   [9920,] 320 345 #>   [9921,] 321 345 #>   [9922,] 322 345 #>   [9923,] 323 345 #>   [9924,] 324 345 #>   [9925,] 325 345 #>   [9926,] 326 345 #>   [9927,] 327 345 #>   [9928,] 328 345 #>   [9929,] 329 345 #>   [9930,] 330 345 #>   [9931,] 331 345 #>   [9932,] 332 345 #>   [9933,] 333 345 #>   [9934,] 334 345 #>   [9935,] 335 345 #>   [9936,] 336 345 #>   [9937,] 337 345 #>   [9938,] 338 345 #>   [9939,] 339 345 #>   [9940,] 340 345 #>   [9941,] 341 345 #>   [9942,] 342 345 #>   [9943,] 343 345 #>   [9944,] 344 345 #>   [9945,] 345 345 #>   [9946,] 346 345 #>   [9947,] 347 345 #>   [9948,] 348 345 #>   [9949,] 349 345 #>   [9950,] 350 345 #>   [9951,] 351 345 #>   [9952,] 352 345 #>   [9953,] 353 345 #>   [9954,] 354 345 #>   [9955,] 355 345 #>   [9956,] 356 345 #>   [9957,] 357 345 #>   [9958,] 358 345 #>   [9959,] 359 345 #>   [9960,] 360 345 #>   [9961,] 361 345 #>   [9962,] 362 345 #>   [9963,] 363 345 #>   [9964,] 364 345 #>   [9965,] 365 345 #>   [9966,] 366 345 #>   [9967,] 367 345 #>   [9968,] 368 345 #>   [9969,] 369 345 #>   [9970,] 370 345 #>   [9971,] 371 345 #>   [9972,] 372 345 #>   [9973,] 373 345 #>   [9974,] 374 345 #>   [9975,] 375 345 #>   [9976,] 376 345 #>   [9977,] 377 345 #>   [9978,] 378 345 #>   [9979,] 379 345 #>   [9980,] 380 345 #>   [9981,] 381 345 #>   [9982,] 382 345 #>   [9983,] 383 345 #>   [9984,] 384 345 #>   [9985,] 385 345 #>   [9986,] 386 345 #>   [9987,] 387 345 #>   [9988,] 388 345 #>   [9989,] 389 345 #>   [9990,] 390 345 #>   [9991,] 391 345 #>   [9992,] 392 345 #>   [9993,] 393 345 #>   [9994,] 394 345 #>   [9995,] 395 345 #>   [9996,] 396 345 #>   [9997,] 397 345 #>   [9998,] 398 345 #>   [9999,] 399 345 #>  [10000,] 400 345 #>  [10001,] 401 345 #>  [10002,] 402 345 #>  [10003,] 403 345 #>  [10004,] 404 345 #>  [10005,] 405 345 #>  [10006,] 406 345 #>  [10007,] 407 345 #>  [10008,] 408 345 #>  [10009,] 409 345 #>  [10010,] 410 345 #>  [10011,] 411 345 #>  [10012,] 412 345 #>  [10013,] 413 345 #>  [10014,] 414 345 #>  [10015,] 415 345 #>  [10016,] 416 345 #>  [10017,] 417 345 #>  [10018,] 418 345 #>  [10019,] 419 345 #>  [10020,] 420 345 #>  [10021,] 421 345 #>  [10022,] 422 345 #>  [10023,] 423 345 #>  [10024,] 424 345 #>  [10025,] 425 345 #>  [10026,] 426 345 #>  [10027,] 427 345 #>  [10028,] 428 345 #>  [10029,] 429 345 #>  [10030,] 430 345 #>  [10031,] 431 345 #>  [10032,] 432 345 #>  [10033,] 433 345 #>  [10034,] 434 345 #>  [10035,] 435 345 #>  [10036,] 436 345 #>  [10037,] 437 345 #>  [10038,] 438 345 #>  [10039,] 439 345 #>  [10040,] 440 345 #>  [10041,] 441 345 #>  [10042,] 442 345 #>  [10043,] 443 345 #>  [10044,] 444 345 #>  [10045,] 445 345 #>  [10046,] 446 345 #>  [10047,] 447 345 #>  [10048,] 448 345 #>  [10049,] 449 345 #>  [10050,] 450 345 #>  [10051,] 451 345 #>  [10052,] 452 345 #>  [10053,] 453 345 #>  [10054,] 454 345 #>  [10055,] 455 345 #>  [10056,] 456 345 #>  [10057,] 457 345 #>  [10058,] 458 345 #>  [10059,] 459 345 #>  [10060,] 460 345 #>  [10061,] 461 345 #>  [10062,] 462 345 #>  [10063,] 463 345 #>  [10064,] 464 345 #>  [10065,] 465 345 #>  [10066,] 466 345 #>  [10067,] 467 345 #>  [10068,] 468 345 #>  [10069,] 469 345 #>  [10070,] 470 345 #>  [10071,] 471 345 #>  [10072,] 472 345 #>  [10073,] 473 345 #>  [10074,] 474 345 #>  [10075,] 475 345 #>  [10076,] 476 345 #>  [10077,] 477 345 #>  [10078,] 478 345 #>  [10079,] 479 345 #>  [10080,] 480 345 #>  [10081,] 481 345 #>  [10082,] 482 345 #>  [10083,] 483 345 #>  [10084,] 484 345 #>  [10085,] 485 345 #>  [10086,] 486 345 #>  [10087,] 487 345 #>  [10088,] 488 345 #>  [10089,] 489 345 #>  [10090,] 490 345 #>  [10091,] 491 345 #>  [10092,] 492 345 #>  [10093,] 493 345 #>  [10094,] 494 345 #>  [10095,] 495 345 #>  [10096,] 496 345 #>  [10097,] 497 345 #>  [10098,] 498 345 #>  [10099,] 499 345 #>  [10100,] 500 345 #>  [10101,] 501 345 #>  [10102,] 502 345 #>  [10103,] 503 345 #>  [10104,] 504 345 #>  [10105,] 505 345 #>  [10106,] 506 345 #>  [10107,] 507 345 #>  [10108,] 508 345 #>  [10109,] 509 345 #>  [10110,] 510 345 #>  [10111,] 511 345 #>  [10112,] 512 345 #>  [10113,] 513 345 #>  [10114,] 514 345 #>  [10115,] 515 345 #>  [10116,] 516 345 #>  [10117,] 517 345 #>  [10118,] 518 345 #>  [10119,] 519 345 #>  [10120,] 520 345 #>  [10121,] 521 345 #>  [10122,] 522 345 #>  [10123,] 523 345 #>  [10124,] 524 345 #>  [10125,] 525 345 #>  [10126,] 526 345 #>  [10127,] 527 345 #>  [10128,] 528 345 #>  [10129,] 529 345 #>  [10130,] 530 345 #>  [10131,] 531 345 #>  [10132,] 532 345 #>  [10133,] 533 345 #>  [10134,] 534 345 #>  [10135,] 535 345 #>  [10136,] 536 345 #>  [10137,] 537 345 #>  [10138,] 538 345 #>  [10139,] 539 345 #>  [10140,] 540 345 #>  [10141,] 541 345 #>  [10142,] 542 345 #>  [10143,] 543 345 #>  [10144,] 544 345 #>  [10145,] 545 345 #>  [10146,] 546 345 #>  [10147,] 547 345 #>  [10148,] 548 345 #>  [10149,] 549 345 #>  [10150,] 550 345 #>  [10151,] 551 345 #>  [10152,] 552 345 #>  [10153,] 553 345 #>  [10154,] 554 345 #>  [10155,] 555 345 #>  [10156,] 556 345 #>  [10157,] 557 345 #>  [10158,] 558 345 #>  [10159,] 559 345 #>  [10160,] 560 345 #>  [10161,] 561 345 #>  [10162,] 562 345 #>  [10163,] 563 345 #>  [10164,] 564 345 #>  [10165,] 565 345 #>  [10166,] 566 345 #>  [10167,] 567 345 #>  [10168,] 568 345 #>  [10169,] 569 345 #>  [10170,] 570 345 #>  [10171,] 571 345 #>  [10172,] 572 345 #>  [10173,] 573 345 #>  [10174,] 574 345 #>  [10175,] 575 345 #>  [10176,] 576 345 #>  [10177,] 577 345 #>  [10178,] 578 345 #>  [10179,] 579 345 #>  [10180,] 580 345 #>  [10181,] 581 345 #>  [10182,] 582 345 #>  [10183,] 583 345 #>  [10184,] 584 345 #>  [10185,] 585 345 #>  [10186,] 586 345 #>  [10187,] 587 345 #>  [10188,] 588 345 #>  [10189,] 589 345 #>  [10190,] 590 345 #>  [10191,] 591 345 #>  [10192,] 592 345 #>  [10193,] 593 345 #>  [10194,] 594 345 #>  [10195,] 595 345 #>  [10196,] 596 345 #>  [10197,] 597 345 #>  [10198,] 598 345 #>  [10199,] 599 345 #>  [10200,] 600 345 #>  [10201,] 601 345 #>  [10202,] 602 345 #>  [10203,] 603 345 #>  [10204,] 604 345 #>  [10205,] 605 345 #>  [10206,] 606 345 #>  [10207,] 607 345 #>  [10208,] 608 345 #>  [10209,] 609 345 #>  [10210,] 610 345 #>  [10211,] 611 345 #>  [10212,] 612 345 #>  [10213,] 613 345 #>  [10214,] 614 345 #>  [10215,] 615 345 #>  [10216,] 616 345 #>  [10217,] 617 345 #>  [10218,] 618 345 #>  [10219,] 619 345 #>  [10220,] 620 345 #>  [10221,] 621 345 #>  [10222,] 622 345 #>  [10223,] 623 345 #>  [10224,] 624 345 #>  [10225,] 625 345 #>  [10226,] 626 345 #>  [10227,] 627 345 #>  [10228,] 628 345 #>  [10229,] 629 345 #>  [10230,] 630 345 #>  [10231,] 631 345 #>  [10232,] 632 345 #>  [10233,] 633 345 #>  [10234,] 634 345 #>  [10235,] 635 345 #>  [10236,] 636 345 #>  [10237,] 637 345 #>  [10238,] 638 345 #>  [10239,] 639 345 #>  [10240,] 640 345 #>  [10241,]   1 344 #>  [10242,]   2 344 #>  [10243,]   3 344 #>  [10244,]   4 344 #>  [10245,]   5 344 #>  [10246,]   6 344 #>  [10247,]   7 344 #>  [10248,]   8 344 #>  [10249,]   9 344 #>  [10250,]  10 344 #>  [10251,]  11 344 #>  [10252,]  12 344 #>  [10253,]  13 344 #>  [10254,]  14 344 #>  [10255,]  15 344 #>  [10256,]  16 344 #>  [10257,]  17 344 #>  [10258,]  18 344 #>  [10259,]  19 344 #>  [10260,]  20 344 #>  [10261,]  21 344 #>  [10262,]  22 344 #>  [10263,]  23 344 #>  [10264,]  24 344 #>  [10265,]  25 344 #>  [10266,]  26 344 #>  [10267,]  27 344 #>  [10268,]  28 344 #>  [10269,]  29 344 #>  [10270,]  30 344 #>  [10271,]  31 344 #>  [10272,]  32 344 #>  [10273,]  33 344 #>  [10274,]  34 344 #>  [10275,]  35 344 #>  [10276,]  36 344 #>  [10277,]  37 344 #>  [10278,]  38 344 #>  [10279,]  39 344 #>  [10280,]  40 344 #>  [10281,]  41 344 #>  [10282,]  42 344 #>  [10283,]  43 344 #>  [10284,]  44 344 #>  [10285,]  45 344 #>  [10286,]  46 344 #>  [10287,]  47 344 #>  [10288,]  48 344 #>  [10289,]  49 344 #>  [10290,]  50 344 #>  [10291,]  51 344 #>  [10292,]  52 344 #>  [10293,]  53 344 #>  [10294,]  54 344 #>  [10295,]  55 344 #>  [10296,]  56 344 #>  [10297,]  57 344 #>  [10298,]  58 344 #>  [10299,]  59 344 #>  [10300,]  60 344 #>  [10301,]  61 344 #>  [10302,]  62 344 #>  [10303,]  63 344 #>  [10304,]  64 344 #>  [10305,]  65 344 #>  [10306,]  66 344 #>  [10307,]  67 344 #>  [10308,]  68 344 #>  [10309,]  69 344 #>  [10310,]  70 344 #>  [10311,]  71 344 #>  [10312,]  72 344 #>  [10313,]  73 344 #>  [10314,]  74 344 #>  [10315,]  75 344 #>  [10316,]  76 344 #>  [10317,]  77 344 #>  [10318,]  78 344 #>  [10319,]  79 344 #>  [10320,]  80 344 #>  [10321,]  81 344 #>  [10322,]  82 344 #>  [10323,]  83 344 #>  [10324,]  84 344 #>  [10325,]  85 344 #>  [10326,]  86 344 #>  [10327,]  87 344 #>  [10328,]  88 344 #>  [10329,]  89 344 #>  [10330,]  90 344 #>  [10331,]  91 344 #>  [10332,]  92 344 #>  [10333,]  93 344 #>  [10334,]  94 344 #>  [10335,]  95 344 #>  [10336,]  96 344 #>  [10337,]  97 344 #>  [10338,]  98 344 #>  [10339,]  99 344 #>  [10340,] 100 344 #>  [10341,] 101 344 #>  [10342,] 102 344 #>  [10343,] 103 344 #>  [10344,] 104 344 #>  [10345,] 105 344 #>  [10346,] 106 344 #>  [10347,] 107 344 #>  [10348,] 108 344 #>  [10349,] 109 344 #>  [10350,] 110 344 #>  [10351,] 111 344 #>  [10352,] 112 344 #>  [10353,] 113 344 #>  [10354,] 114 344 #>  [10355,] 115 344 #>  [10356,] 116 344 #>  [10357,] 117 344 #>  [10358,] 118 344 #>  [10359,] 119 344 #>  [10360,] 120 344 #>  [10361,] 121 344 #>  [10362,] 122 344 #>  [10363,] 123 344 #>  [10364,] 124 344 #>  [10365,] 125 344 #>  [10366,] 126 344 #>  [10367,] 127 344 #>  [10368,] 128 344 #>  [10369,] 129 344 #>  [10370,] 130 344 #>  [10371,] 131 344 #>  [10372,] 132 344 #>  [10373,] 133 344 #>  [10374,] 134 344 #>  [10375,] 135 344 #>  [10376,] 136 344 #>  [10377,] 137 344 #>  [10378,] 138 344 #>  [10379,] 139 344 #>  [10380,] 140 344 #>  [10381,] 141 344 #>  [10382,] 142 344 #>  [10383,] 143 344 #>  [10384,] 144 344 #>  [10385,] 145 344 #>  [10386,] 146 344 #>  [10387,] 147 344 #>  [10388,] 148 344 #>  [10389,] 149 344 #>  [10390,] 150 344 #>  [10391,] 151 344 #>  [10392,] 152 344 #>  [10393,] 153 344 #>  [10394,] 154 344 #>  [10395,] 155 344 #>  [10396,] 156 344 #>  [10397,] 157 344 #>  [10398,] 158 344 #>  [10399,] 159 344 #>  [10400,] 160 344 #>  [10401,] 161 344 #>  [10402,] 162 344 #>  [10403,] 163 344 #>  [10404,] 164 344 #>  [10405,] 165 344 #>  [10406,] 166 344 #>  [10407,] 167 344 #>  [10408,] 168 344 #>  [10409,] 169 344 #>  [10410,] 170 344 #>  [10411,] 171 344 #>  [10412,] 172 344 #>  [10413,] 173 344 #>  [10414,] 174 344 #>  [10415,] 175 344 #>  [10416,] 176 344 #>  [10417,] 177 344 #>  [10418,] 178 344 #>  [10419,] 179 344 #>  [10420,] 180 344 #>  [10421,] 181 344 #>  [10422,] 182 344 #>  [10423,] 183 344 #>  [10424,] 184 344 #>  [10425,] 185 344 #>  [10426,] 186 344 #>  [10427,] 187 344 #>  [10428,] 188 344 #>  [10429,] 189 344 #>  [10430,] 190 344 #>  [10431,] 191 344 #>  [10432,] 192 344 #>  [10433,] 193 344 #>  [10434,] 194 344 #>  [10435,] 195 344 #>  [10436,] 196 344 #>  [10437,] 197 344 #>  [10438,] 198 344 #>  [10439,] 199 344 #>  [10440,] 200 344 #>  [10441,] 201 344 #>  [10442,] 202 344 #>  [10443,] 203 344 #>  [10444,] 204 344 #>  [10445,] 205 344 #>  [10446,] 206 344 #>  [10447,] 207 344 #>  [10448,] 208 344 #>  [10449,] 209 344 #>  [10450,] 210 344 #>  [10451,] 211 344 #>  [10452,] 212 344 #>  [10453,] 213 344 #>  [10454,] 214 344 #>  [10455,] 215 344 #>  [10456,] 216 344 #>  [10457,] 217 344 #>  [10458,] 218 344 #>  [10459,] 219 344 #>  [10460,] 220 344 #>  [10461,] 221 344 #>  [10462,] 222 344 #>  [10463,] 223 344 #>  [10464,] 224 344 #>  [10465,] 225 344 #>  [10466,] 226 344 #>  [10467,] 227 344 #>  [10468,] 228 344 #>  [10469,] 229 344 #>  [10470,] 230 344 #>  [10471,] 231 344 #>  [10472,] 232 344 #>  [10473,] 233 344 #>  [10474,] 234 344 #>  [10475,] 235 344 #>  [10476,] 236 344 #>  [10477,] 237 344 #>  [10478,] 238 344 #>  [10479,] 239 344 #>  [10480,] 240 344 #>  [10481,] 241 344 #>  [10482,] 242 344 #>  [10483,] 243 344 #>  [10484,] 244 344 #>  [10485,] 245 344 #>  [10486,] 246 344 #>  [10487,] 247 344 #>  [10488,] 248 344 #>  [10489,] 249 344 #>  [10490,] 250 344 #>  [10491,] 251 344 #>  [10492,] 252 344 #>  [10493,] 253 344 #>  [10494,] 254 344 #>  [10495,] 255 344 #>  [10496,] 256 344 #>  [10497,] 257 344 #>  [10498,] 258 344 #>  [10499,] 259 344 #>  [10500,] 260 344 #>  [10501,] 261 344 #>  [10502,] 262 344 #>  [10503,] 263 344 #>  [10504,] 264 344 #>  [10505,] 265 344 #>  [10506,] 266 344 #>  [10507,] 267 344 #>  [10508,] 268 344 #>  [10509,] 269 344 #>  [10510,] 270 344 #>  [10511,] 271 344 #>  [10512,] 272 344 #>  [10513,] 273 344 #>  [10514,] 274 344 #>  [10515,] 275 344 #>  [10516,] 276 344 #>  [10517,] 277 344 #>  [10518,] 278 344 #>  [10519,] 279 344 #>  [10520,] 280 344 #>  [10521,] 281 344 #>  [10522,] 282 344 #>  [10523,] 283 344 #>  [10524,] 284 344 #>  [10525,] 285 344 #>  [10526,] 286 344 #>  [10527,] 287 344 #>  [10528,] 288 344 #>  [10529,] 289 344 #>  [10530,] 290 344 #>  [10531,] 291 344 #>  [10532,] 292 344 #>  [10533,] 293 344 #>  [10534,] 294 344 #>  [10535,] 295 344 #>  [10536,] 296 344 #>  [10537,] 297 344 #>  [10538,] 298 344 #>  [10539,] 299 344 #>  [10540,] 300 344 #>  [10541,] 301 344 #>  [10542,] 302 344 #>  [10543,] 303 344 #>  [10544,] 304 344 #>  [10545,] 305 344 #>  [10546,] 306 344 #>  [10547,] 307 344 #>  [10548,] 308 344 #>  [10549,] 309 344 #>  [10550,] 310 344 #>  [10551,] 311 344 #>  [10552,] 312 344 #>  [10553,] 313 344 #>  [10554,] 314 344 #>  [10555,] 315 344 #>  [10556,] 316 344 #>  [10557,] 317 344 #>  [10558,] 318 344 #>  [10559,] 319 344 #>  [10560,] 320 344 #>  [10561,] 321 344 #>  [10562,] 322 344 #>  [10563,] 323 344 #>  [10564,] 324 344 #>  [10565,] 325 344 #>  [10566,] 326 344 #>  [10567,] 327 344 #>  [10568,] 328 344 #>  [10569,] 329 344 #>  [10570,] 330 344 #>  [10571,] 331 344 #>  [10572,] 332 344 #>  [10573,] 333 344 #>  [10574,] 334 344 #>  [10575,] 335 344 #>  [10576,] 336 344 #>  [10577,] 337 344 #>  [10578,] 338 344 #>  [10579,] 339 344 #>  [10580,] 340 344 #>  [10581,] 341 344 #>  [10582,] 342 344 #>  [10583,] 343 344 #>  [10584,] 344 344 #>  [10585,] 345 344 #>  [10586,] 346 344 #>  [10587,] 347 344 #>  [10588,] 348 344 #>  [10589,] 349 344 #>  [10590,] 350 344 #>  [10591,] 351 344 #>  [10592,] 352 344 #>  [10593,] 353 344 #>  [10594,] 354 344 #>  [10595,] 355 344 #>  [10596,] 356 344 #>  [10597,] 357 344 #>  [10598,] 358 344 #>  [10599,] 359 344 #>  [10600,] 360 344 #>  [10601,] 361 344 #>  [10602,] 362 344 #>  [10603,] 363 344 #>  [10604,] 364 344 #>  [10605,] 365 344 #>  [10606,] 366 344 #>  [10607,] 367 344 #>  [10608,] 368 344 #>  [10609,] 369 344 #>  [10610,] 370 344 #>  [10611,] 371 344 #>  [10612,] 372 344 #>  [10613,] 373 344 #>  [10614,] 374 344 #>  [10615,] 375 344 #>  [10616,] 376 344 #>  [10617,] 377 344 #>  [10618,] 378 344 #>  [10619,] 379 344 #>  [10620,] 380 344 #>  [10621,] 381 344 #>  [10622,] 382 344 #>  [10623,] 383 344 #>  [10624,] 384 344 #>  [10625,] 385 344 #>  [10626,] 386 344 #>  [10627,] 387 344 #>  [10628,] 388 344 #>  [10629,] 389 344 #>  [10630,] 390 344 #>  [10631,] 391 344 #>  [10632,] 392 344 #>  [10633,] 393 344 #>  [10634,] 394 344 #>  [10635,] 395 344 #>  [10636,] 396 344 #>  [10637,] 397 344 #>  [10638,] 398 344 #>  [10639,] 399 344 #>  [10640,] 400 344 #>  [10641,] 401 344 #>  [10642,] 402 344 #>  [10643,] 403 344 #>  [10644,] 404 344 #>  [10645,] 405 344 #>  [10646,] 406 344 #>  [10647,] 407 344 #>  [10648,] 408 344 #>  [10649,] 409 344 #>  [10650,] 410 344 #>  [10651,] 411 344 #>  [10652,] 412 344 #>  [10653,] 413 344 #>  [10654,] 414 344 #>  [10655,] 415 344 #>  [10656,] 416 344 #>  [10657,] 417 344 #>  [10658,] 418 344 #>  [10659,] 419 344 #>  [10660,] 420 344 #>  [10661,] 421 344 #>  [10662,] 422 344 #>  [10663,] 423 344 #>  [10664,] 424 344 #>  [10665,] 425 344 #>  [10666,] 426 344 #>  [10667,] 427 344 #>  [10668,] 428 344 #>  [10669,] 429 344 #>  [10670,] 430 344 #>  [10671,] 431 344 #>  [10672,] 432 344 #>  [10673,] 433 344 #>  [10674,] 434 344 #>  [10675,] 435 344 #>  [10676,] 436 344 #>  [10677,] 437 344 #>  [10678,] 438 344 #>  [10679,] 439 344 #>  [10680,] 440 344 #>  [10681,] 441 344 #>  [10682,] 442 344 #>  [10683,] 443 344 #>  [10684,] 444 344 #>  [10685,] 445 344 #>  [10686,] 446 344 #>  [10687,] 447 344 #>  [10688,] 448 344 #>  [10689,] 449 344 #>  [10690,] 450 344 #>  [10691,] 451 344 #>  [10692,] 452 344 #>  [10693,] 453 344 #>  [10694,] 454 344 #>  [10695,] 455 344 #>  [10696,] 456 344 #>  [10697,] 457 344 #>  [10698,] 458 344 #>  [10699,] 459 344 #>  [10700,] 460 344 #>  [10701,] 461 344 #>  [10702,] 462 344 #>  [10703,] 463 344 #>  [10704,] 464 344 #>  [10705,] 465 344 #>  [10706,] 466 344 #>  [10707,] 467 344 #>  [10708,] 468 344 #>  [10709,] 469 344 #>  [10710,] 470 344 #>  [10711,] 471 344 #>  [10712,] 472 344 #>  [10713,] 473 344 #>  [10714,] 474 344 #>  [10715,] 475 344 #>  [10716,] 476 344 #>  [10717,] 477 344 #>  [10718,] 478 344 #>  [10719,] 479 344 #>  [10720,] 480 344 #>  [10721,] 481 344 #>  [10722,] 482 344 #>  [10723,] 483 344 #>  [10724,] 484 344 #>  [10725,] 485 344 #>  [10726,] 486 344 #>  [10727,] 487 344 #>  [10728,] 488 344 #>  [10729,] 489 344 #>  [10730,] 490 344 #>  [10731,] 491 344 #>  [10732,] 492 344 #>  [10733,] 493 344 #>  [10734,] 494 344 #>  [10735,] 495 344 #>  [10736,] 496 344 #>  [10737,] 497 344 #>  [10738,] 498 344 #>  [10739,] 499 344 #>  [10740,] 500 344 #>  [10741,] 501 344 #>  [10742,] 502 344 #>  [10743,] 503 344 #>  [10744,] 504 344 #>  [10745,] 505 344 #>  [10746,] 506 344 #>  [10747,] 507 344 #>  [10748,] 508 344 #>  [10749,] 509 344 #>  [10750,] 510 344 #>  [10751,] 511 344 #>  [10752,] 512 344 #>  [10753,] 513 344 #>  [10754,] 514 344 #>  [10755,] 515 344 #>  [10756,] 516 344 #>  [10757,] 517 344 #>  [10758,] 518 344 #>  [10759,] 519 344 #>  [10760,] 520 344 #>  [10761,] 521 344 #>  [10762,] 522 344 #>  [10763,] 523 344 #>  [10764,] 524 344 #>  [10765,] 525 344 #>  [10766,] 526 344 #>  [10767,] 527 344 #>  [10768,] 528 344 #>  [10769,] 529 344 #>  [10770,] 530 344 #>  [10771,] 531 344 #>  [10772,] 532 344 #>  [10773,] 533 344 #>  [10774,] 534 344 #>  [10775,] 535 344 #>  [10776,] 536 344 #>  [10777,] 537 344 #>  [10778,] 538 344 #>  [10779,] 539 344 #>  [10780,] 540 344 #>  [10781,] 541 344 #>  [10782,] 542 344 #>  [10783,] 543 344 #>  [10784,] 544 344 #>  [10785,] 545 344 #>  [10786,] 546 344 #>  [10787,] 547 344 #>  [10788,] 548 344 #>  [10789,] 549 344 #>  [10790,] 550 344 #>  [10791,] 551 344 #>  [10792,] 552 344 #>  [10793,] 553 344 #>  [10794,] 554 344 #>  [10795,] 555 344 #>  [10796,] 556 344 #>  [10797,] 557 344 #>  [10798,] 558 344 #>  [10799,] 559 344 #>  [10800,] 560 344 #>  [10801,] 561 344 #>  [10802,] 562 344 #>  [10803,] 563 344 #>  [10804,] 564 344 #>  [10805,] 565 344 #>  [10806,] 566 344 #>  [10807,] 567 344 #>  [10808,] 568 344 #>  [10809,] 569 344 #>  [10810,] 570 344 #>  [10811,] 571 344 #>  [10812,] 572 344 #>  [10813,] 573 344 #>  [10814,] 574 344 #>  [10815,] 575 344 #>  [10816,] 576 344 #>  [10817,] 577 344 #>  [10818,] 578 344 #>  [10819,] 579 344 #>  [10820,] 580 344 #>  [10821,] 581 344 #>  [10822,] 582 344 #>  [10823,] 583 344 #>  [10824,] 584 344 #>  [10825,] 585 344 #>  [10826,] 586 344 #>  [10827,] 587 344 #>  [10828,] 588 344 #>  [10829,] 589 344 #>  [10830,] 590 344 #>  [10831,] 591 344 #>  [10832,] 592 344 #>  [10833,] 593 344 #>  [10834,] 594 344 #>  [10835,] 595 344 #>  [10836,] 596 344 #>  [10837,] 597 344 #>  [10838,] 598 344 #>  [10839,] 599 344 #>  [10840,] 600 344 #>  [10841,] 601 344 #>  [10842,] 602 344 #>  [10843,] 603 344 #>  [10844,] 604 344 #>  [10845,] 605 344 #>  [10846,] 606 344 #>  [10847,] 607 344 #>  [10848,] 608 344 #>  [10849,] 609 344 #>  [10850,] 610 344 #>  [10851,] 611 344 #>  [10852,] 612 344 #>  [10853,] 613 344 #>  [10854,] 614 344 #>  [10855,] 615 344 #>  [10856,] 616 344 #>  [10857,] 617 344 #>  [10858,] 618 344 #>  [10859,] 619 344 #>  [10860,] 620 344 #>  [10861,] 621 344 #>  [10862,] 622 344 #>  [10863,] 623 344 #>  [10864,] 624 344 #>  [10865,] 625 344 #>  [10866,] 626 344 #>  [10867,] 627 344 #>  [10868,] 628 344 #>  [10869,] 629 344 #>  [10870,] 630 344 #>  [10871,] 631 344 #>  [10872,] 632 344 #>  [10873,] 633 344 #>  [10874,] 634 344 #>  [10875,] 635 344 #>  [10876,] 636 344 #>  [10877,] 637 344 #>  [10878,] 638 344 #>  [10879,] 639 344 #>  [10880,] 640 344 #>  [10881,]   1 343 #>  [10882,]   2 343 #>  [10883,]   3 343 #>  [10884,]   4 343 #>  [10885,]   5 343 #>  [10886,]   6 343 #>  [10887,]   7 343 #>  [10888,]   8 343 #>  [10889,]   9 343 #>  [10890,]  10 343 #>  [10891,]  11 343 #>  [10892,]  12 343 #>  [10893,]  13 343 #>  [10894,]  14 343 #>  [10895,]  15 343 #>  [10896,]  16 343 #>  [10897,]  17 343 #>  [10898,]  18 343 #>  [10899,]  19 343 #>  [10900,]  20 343 #>  [10901,]  21 343 #>  [10902,]  22 343 #>  [10903,]  23 343 #>  [10904,]  24 343 #>  [10905,]  25 343 #>  [10906,]  26 343 #>  [10907,]  27 343 #>  [10908,]  28 343 #>  [10909,]  29 343 #>  [10910,]  30 343 #>  [10911,]  31 343 #>  [10912,]  32 343 #>  [10913,]  33 343 #>  [10914,]  34 343 #>  [10915,]  35 343 #>  [10916,]  36 343 #>  [10917,]  37 343 #>  [10918,]  38 343 #>  [10919,]  39 343 #>  [10920,]  40 343 #>  [10921,]  41 343 #>  [10922,]  42 343 #>  [10923,]  43 343 #>  [10924,]  44 343 #>  [10925,]  45 343 #>  [10926,]  46 343 #>  [10927,]  47 343 #>  [10928,]  48 343 #>  [10929,]  49 343 #>  [10930,]  50 343 #>  [10931,]  51 343 #>  [10932,]  52 343 #>  [10933,]  53 343 #>  [10934,]  54 343 #>  [10935,]  55 343 #>  [10936,]  56 343 #>  [10937,]  57 343 #>  [10938,]  58 343 #>  [10939,]  59 343 #>  [10940,]  60 343 #>  [10941,]  61 343 #>  [10942,]  62 343 #>  [10943,]  63 343 #>  [10944,]  64 343 #>  [10945,]  65 343 #>  [10946,]  66 343 #>  [10947,]  67 343 #>  [10948,]  68 343 #>  [10949,]  69 343 #>  [10950,]  70 343 #>  [10951,]  71 343 #>  [10952,]  72 343 #>  [10953,]  73 343 #>  [10954,]  74 343 #>  [10955,]  75 343 #>  [10956,]  76 343 #>  [10957,]  77 343 #>  [10958,]  78 343 #>  [10959,]  79 343 #>  [10960,]  80 343 #>  [10961,]  81 343 #>  [10962,]  82 343 #>  [10963,]  83 343 #>  [10964,]  84 343 #>  [10965,]  85 343 #>  [10966,]  86 343 #>  [10967,]  87 343 #>  [10968,]  88 343 #>  [10969,]  89 343 #>  [10970,]  90 343 #>  [10971,]  91 343 #>  [10972,]  92 343 #>  [10973,]  93 343 #>  [10974,]  94 343 #>  [10975,]  95 343 #>  [10976,]  96 343 #>  [10977,]  97 343 #>  [10978,]  98 343 #>  [10979,]  99 343 #>  [10980,] 100 343 #>  [10981,] 101 343 #>  [10982,] 102 343 #>  [10983,] 103 343 #>  [10984,] 104 343 #>  [10985,] 105 343 #>  [10986,] 106 343 #>  [10987,] 107 343 #>  [10988,] 108 343 #>  [10989,] 109 343 #>  [10990,] 110 343 #>  [10991,] 111 343 #>  [10992,] 112 343 #>  [10993,] 113 343 #>  [10994,] 114 343 #>  [10995,] 115 343 #>  [10996,] 116 343 #>  [10997,] 117 343 #>  [10998,] 118 343 #>  [10999,] 119 343 #>  [11000,] 120 343 #>  [11001,] 121 343 #>  [11002,] 122 343 #>  [11003,] 123 343 #>  [11004,] 124 343 #>  [11005,] 125 343 #>  [11006,] 126 343 #>  [11007,] 127 343 #>  [11008,] 128 343 #>  [11009,] 129 343 #>  [11010,] 130 343 #>  [11011,] 131 343 #>  [11012,] 132 343 #>  [11013,] 133 343 #>  [11014,] 134 343 #>  [11015,] 135 343 #>  [11016,] 136 343 #>  [11017,] 137 343 #>  [11018,] 138 343 #>  [11019,] 139 343 #>  [11020,] 140 343 #>  [11021,] 141 343 #>  [11022,] 142 343 #>  [11023,] 143 343 #>  [11024,] 144 343 #>  [11025,] 145 343 #>  [11026,] 146 343 #>  [11027,] 147 343 #>  [11028,] 148 343 #>  [11029,] 149 343 #>  [11030,] 150 343 #>  [11031,] 151 343 #>  [11032,] 152 343 #>  [11033,] 153 343 #>  [11034,] 154 343 #>  [11035,] 155 343 #>  [11036,] 156 343 #>  [11037,] 157 343 #>  [11038,] 158 343 #>  [11039,] 159 343 #>  [11040,] 160 343 #>  [11041,] 161 343 #>  [11042,] 162 343 #>  [11043,] 163 343 #>  [11044,] 164 343 #>  [11045,] 165 343 #>  [11046,] 166 343 #>  [11047,] 167 343 #>  [11048,] 168 343 #>  [11049,] 169 343 #>  [11050,] 170 343 #>  [11051,] 171 343 #>  [11052,] 172 343 #>  [11053,] 173 343 #>  [11054,] 174 343 #>  [11055,] 175 343 #>  [11056,] 176 343 #>  [11057,] 177 343 #>  [11058,] 178 343 #>  [11059,] 179 343 #>  [11060,] 180 343 #>  [11061,] 181 343 #>  [11062,] 182 343 #>  [11063,] 183 343 #>  [11064,] 184 343 #>  [11065,] 185 343 #>  [11066,] 186 343 #>  [11067,] 187 343 #>  [11068,] 188 343 #>  [11069,] 189 343 #>  [11070,] 190 343 #>  [11071,] 191 343 #>  [11072,] 192 343 #>  [11073,] 193 343 #>  [11074,] 194 343 #>  [11075,] 195 343 #>  [11076,] 196 343 #>  [11077,] 197 343 #>  [11078,] 198 343 #>  [11079,] 199 343 #>  [11080,] 200 343 #>  [11081,] 201 343 #>  [11082,] 202 343 #>  [11083,] 203 343 #>  [11084,] 204 343 #>  [11085,] 205 343 #>  [11086,] 206 343 #>  [11087,] 207 343 #>  [11088,] 208 343 #>  [11089,] 209 343 #>  [11090,] 210 343 #>  [11091,] 211 343 #>  [11092,] 212 343 #>  [11093,] 213 343 #>  [11094,] 214 343 #>  [11095,] 215 343 #>  [11096,] 216 343 #>  [11097,] 217 343 #>  [11098,] 218 343 #>  [11099,] 219 343 #>  [11100,] 220 343 #>  [11101,] 221 343 #>  [11102,] 222 343 #>  [11103,] 223 343 #>  [11104,] 224 343 #>  [11105,] 225 343 #>  [11106,] 226 343 #>  [11107,] 227 343 #>  [11108,] 228 343 #>  [11109,] 229 343 #>  [11110,] 230 343 #>  [11111,] 231 343 #>  [11112,] 232 343 #>  [11113,] 233 343 #>  [11114,] 234 343 #>  [11115,] 235 343 #>  [11116,] 236 343 #>  [11117,] 237 343 #>  [11118,] 238 343 #>  [11119,] 239 343 #>  [11120,] 240 343 #>  [11121,] 241 343 #>  [11122,] 242 343 #>  [11123,] 243 343 #>  [11124,] 244 343 #>  [11125,] 245 343 #>  [11126,] 246 343 #>  [11127,] 247 343 #>  [11128,] 248 343 #>  [11129,] 249 343 #>  [11130,] 250 343 #>  [11131,] 251 343 #>  [11132,] 252 343 #>  [11133,] 253 343 #>  [11134,] 254 343 #>  [11135,] 255 343 #>  [11136,] 256 343 #>  [11137,] 257 343 #>  [11138,] 258 343 #>  [11139,] 259 343 #>  [11140,] 260 343 #>  [11141,] 261 343 #>  [11142,] 262 343 #>  [11143,] 263 343 #>  [11144,] 264 343 #>  [11145,] 265 343 #>  [11146,] 266 343 #>  [11147,] 267 343 #>  [11148,] 268 343 #>  [11149,] 269 343 #>  [11150,] 270 343 #>  [11151,] 271 343 #>  [11152,] 272 343 #>  [11153,] 273 343 #>  [11154,] 274 343 #>  [11155,] 275 343 #>  [11156,] 276 343 #>  [11157,] 277 343 #>  [11158,] 278 343 #>  [11159,] 279 343 #>  [11160,] 280 343 #>  [11161,] 281 343 #>  [11162,] 282 343 #>  [11163,] 283 343 #>  [11164,] 284 343 #>  [11165,] 285 343 #>  [11166,] 286 343 #>  [11167,] 287 343 #>  [11168,] 288 343 #>  [11169,] 289 343 #>  [11170,] 290 343 #>  [11171,] 291 343 #>  [11172,] 292 343 #>  [11173,] 293 343 #>  [11174,] 294 343 #>  [11175,] 295 343 #>  [11176,] 296 343 #>  [11177,] 297 343 #>  [11178,] 298 343 #>  [11179,] 299 343 #>  [11180,] 300 343 #>  [11181,] 301 343 #>  [11182,] 302 343 #>  [11183,] 303 343 #>  [11184,] 304 343 #>  [11185,] 305 343 #>  [11186,] 306 343 #>  [11187,] 307 343 #>  [11188,] 308 343 #>  [11189,] 309 343 #>  [11190,] 310 343 #>  [11191,] 311 343 #>  [11192,] 312 343 #>  [11193,] 313 343 #>  [11194,] 314 343 #>  [11195,] 315 343 #>  [11196,] 316 343 #>  [11197,] 317 343 #>  [11198,] 318 343 #>  [11199,] 319 343 #>  [11200,] 320 343 #>  [11201,] 321 343 #>  [11202,] 322 343 #>  [11203,] 323 343 #>  [11204,] 324 343 #>  [11205,] 325 343 #>  [11206,] 326 343 #>  [11207,] 327 343 #>  [11208,] 328 343 #>  [11209,] 329 343 #>  [11210,] 330 343 #>  [11211,] 331 343 #>  [11212,] 332 343 #>  [11213,] 333 343 #>  [11214,] 334 343 #>  [11215,] 335 343 #>  [11216,] 336 343 #>  [11217,] 337 343 #>  [11218,] 338 343 #>  [11219,] 339 343 #>  [11220,] 340 343 #>  [11221,] 341 343 #>  [11222,] 342 343 #>  [11223,] 343 343 #>  [11224,] 344 343 #>  [11225,] 345 343 #>  [11226,] 346 343 #>  [11227,] 347 343 #>  [11228,] 348 343 #>  [11229,] 349 343 #>  [11230,] 350 343 #>  [11231,] 351 343 #>  [11232,] 352 343 #>  [11233,] 353 343 #>  [11234,] 354 343 #>  [11235,] 355 343 #>  [11236,] 356 343 #>  [11237,] 357 343 #>  [11238,] 358 343 #>  [11239,] 359 343 #>  [11240,] 360 343 #>  [11241,] 361 343 #>  [11242,] 362 343 #>  [11243,] 363 343 #>  [11244,] 364 343 #>  [11245,] 365 343 #>  [11246,] 366 343 #>  [11247,] 367 343 #>  [11248,] 368 343 #>  [11249,] 369 343 #>  [11250,] 370 343 #>  [11251,] 371 343 #>  [11252,] 372 343 #>  [11253,] 373 343 #>  [11254,] 374 343 #>  [11255,] 375 343 #>  [11256,] 376 343 #>  [11257,] 377 343 #>  [11258,] 378 343 #>  [11259,] 379 343 #>  [11260,] 380 343 #>  [11261,] 381 343 #>  [11262,] 382 343 #>  [11263,] 383 343 #>  [11264,] 384 343 #>  [11265,] 385 343 #>  [11266,] 386 343 #>  [11267,] 387 343 #>  [11268,] 388 343 #>  [11269,] 389 343 #>  [11270,] 390 343 #>  [11271,] 391 343 #>  [11272,] 392 343 #>  [11273,] 393 343 #>  [11274,] 394 343 #>  [11275,] 395 343 #>  [11276,] 396 343 #>  [11277,] 397 343 #>  [11278,] 398 343 #>  [11279,] 399 343 #>  [11280,] 400 343 #>  [11281,] 401 343 #>  [11282,] 402 343 #>  [11283,] 403 343 #>  [11284,] 404 343 #>  [11285,] 405 343 #>  [11286,] 406 343 #>  [11287,] 407 343 #>  [11288,] 408 343 #>  [11289,] 409 343 #>  [11290,] 410 343 #>  [11291,] 411 343 #>  [11292,] 412 343 #>  [11293,] 413 343 #>  [11294,] 414 343 #>  [11295,] 415 343 #>  [11296,] 416 343 #>  [11297,] 417 343 #>  [11298,] 418 343 #>  [11299,] 419 343 #>  [11300,] 420 343 #>  [11301,] 421 343 #>  [11302,] 422 343 #>  [11303,] 423 343 #>  [11304,] 424 343 #>  [11305,] 425 343 #>  [11306,] 426 343 #>  [11307,] 427 343 #>  [11308,] 428 343 #>  [11309,] 429 343 #>  [11310,] 430 343 #>  [11311,] 431 343 #>  [11312,] 432 343 #>  [11313,] 433 343 #>  [11314,] 434 343 #>  [11315,] 435 343 #>  [11316,] 436 343 #>  [11317,] 437 343 #>  [11318,] 438 343 #>  [11319,] 439 343 #>  [11320,] 440 343 #>  [11321,] 441 343 #>  [11322,] 442 343 #>  [11323,] 443 343 #>  [11324,] 444 343 #>  [11325,] 445 343 #>  [11326,] 446 343 #>  [11327,] 447 343 #>  [11328,] 448 343 #>  [11329,] 449 343 #>  [11330,] 450 343 #>  [11331,] 451 343 #>  [11332,] 452 343 #>  [11333,] 453 343 #>  [11334,] 454 343 #>  [11335,] 455 343 #>  [11336,] 456 343 #>  [11337,] 457 343 #>  [11338,] 458 343 #>  [11339,] 459 343 #>  [11340,] 460 343 #>  [11341,] 461 343 #>  [11342,] 462 343 #>  [11343,] 463 343 #>  [11344,] 464 343 #>  [11345,] 465 343 #>  [11346,] 466 343 #>  [11347,] 467 343 #>  [11348,] 468 343 #>  [11349,] 469 343 #>  [11350,] 470 343 #>  [11351,] 471 343 #>  [11352,] 472 343 #>  [11353,] 473 343 #>  [11354,] 474 343 #>  [11355,] 475 343 #>  [11356,] 476 343 #>  [11357,] 477 343 #>  [11358,] 478 343 #>  [11359,] 479 343 #>  [11360,] 480 343 #>  [11361,] 481 343 #>  [11362,] 482 343 #>  [11363,] 483 343 #>  [11364,] 484 343 #>  [11365,] 485 343 #>  [11366,] 486 343 #>  [11367,] 487 343 #>  [11368,] 488 343 #>  [11369,] 489 343 #>  [11370,] 490 343 #>  [11371,] 491 343 #>  [11372,] 492 343 #>  [11373,] 493 343 #>  [11374,] 494 343 #>  [11375,] 495 343 #>  [11376,] 496 343 #>  [11377,] 497 343 #>  [11378,] 498 343 #>  [11379,] 499 343 #>  [11380,] 500 343 #>  [11381,] 501 343 #>  [11382,] 502 343 #>  [11383,] 503 343 #>  [11384,] 504 343 #>  [11385,] 505 343 #>  [11386,] 506 343 #>  [11387,] 507 343 #>  [11388,] 508 343 #>  [11389,] 509 343 #>  [11390,] 510 343 #>  [11391,] 511 343 #>  [11392,] 512 343 #>  [11393,] 513 343 #>  [11394,] 514 343 #>  [11395,] 515 343 #>  [11396,] 516 343 #>  [11397,] 517 343 #>  [11398,] 518 343 #>  [11399,] 519 343 #>  [11400,] 520 343 #>  [11401,] 521 343 #>  [11402,] 522 343 #>  [11403,] 523 343 #>  [11404,] 524 343 #>  [11405,] 525 343 #>  [11406,] 526 343 #>  [11407,] 527 343 #>  [11408,] 528 343 #>  [11409,] 529 343 #>  [11410,] 530 343 #>  [11411,] 531 343 #>  [11412,] 532 343 #>  [11413,] 533 343 #>  [11414,] 534 343 #>  [11415,] 535 343 #>  [11416,] 536 343 #>  [11417,] 537 343 #>  [11418,] 538 343 #>  [11419,] 539 343 #>  [11420,] 540 343 #>  [11421,] 541 343 #>  [11422,] 542 343 #>  [11423,] 543 343 #>  [11424,] 544 343 #>  [11425,] 545 343 #>  [11426,] 546 343 #>  [11427,] 547 343 #>  [11428,] 548 343 #>  [11429,] 549 343 #>  [11430,] 550 343 #>  [11431,] 551 343 #>  [11432,] 552 343 #>  [11433,] 553 343 #>  [11434,] 554 343 #>  [11435,] 555 343 #>  [11436,] 556 343 #>  [11437,] 557 343 #>  [11438,] 558 343 #>  [11439,] 559 343 #>  [11440,] 560 343 #>  [11441,] 561 343 #>  [11442,] 562 343 #>  [11443,] 563 343 #>  [11444,] 564 343 #>  [11445,] 565 343 #>  [11446,] 566 343 #>  [11447,] 567 343 #>  [11448,] 568 343 #>  [11449,] 569 343 #>  [11450,] 570 343 #>  [11451,] 571 343 #>  [11452,] 572 343 #>  [11453,] 573 343 #>  [11454,] 574 343 #>  [11455,] 575 343 #>  [11456,] 576 343 #>  [11457,] 577 343 #>  [11458,] 578 343 #>  [11459,] 579 343 #>  [11460,] 580 343 #>  [11461,] 581 343 #>  [11462,] 582 343 #>  [11463,] 583 343 #>  [11464,] 584 343 #>  [11465,] 585 343 #>  [11466,] 586 343 #>  [11467,] 587 343 #>  [11468,] 588 343 #>  [11469,] 589 343 #>  [11470,] 590 343 #>  [11471,] 591 343 #>  [11472,] 592 343 #>  [11473,] 593 343 #>  [11474,] 594 343 #>  [11475,] 595 343 #>  [11476,] 596 343 #>  [11477,] 597 343 #>  [11478,] 598 343 #>  [11479,] 599 343 #>  [11480,] 600 343 #>  [11481,] 601 343 #>  [11482,] 602 343 #>  [11483,] 603 343 #>  [11484,] 604 343 #>  [11485,] 605 343 #>  [11486,] 606 343 #>  [11487,] 607 343 #>  [11488,] 608 343 #>  [11489,] 609 343 #>  [11490,] 610 343 #>  [11491,] 611 343 #>  [11492,] 612 343 #>  [11493,] 613 343 #>  [11494,] 614 343 #>  [11495,] 615 343 #>  [11496,] 616 343 #>  [11497,] 617 343 #>  [11498,] 618 343 #>  [11499,] 619 343 #>  [11500,] 620 343 #>  [11501,] 621 343 #>  [11502,] 622 343 #>  [11503,] 623 343 #>  [11504,] 624 343 #>  [11505,] 625 343 #>  [11506,] 626 343 #>  [11507,] 627 343 #>  [11508,] 628 343 #>  [11509,] 629 343 #>  [11510,] 630 343 #>  [11511,] 631 343 #>  [11512,] 632 343 #>  [11513,] 633 343 #>  [11514,] 634 343 #>  [11515,] 635 343 #>  [11516,] 636 343 #>  [11517,] 637 343 #>  [11518,] 638 343 #>  [11519,] 639 343 #>  [11520,] 640 343 #>  [11521,]   1 342 #>  [11522,]   2 342 #>  [11523,]   3 342 #>  [11524,]   4 342 #>  [11525,]   5 342 #>  [11526,]   6 342 #>  [11527,]   7 342 #>  [11528,]   8 342 #>  [11529,]   9 342 #>  [11530,]  10 342 #>  [11531,]  11 342 #>  [11532,]  12 342 #>  [11533,]  13 342 #>  [11534,]  14 342 #>  [11535,]  15 342 #>  [11536,]  16 342 #>  [11537,]  17 342 #>  [11538,]  18 342 #>  [11539,]  19 342 #>  [11540,]  20 342 #>  [11541,]  21 342 #>  [11542,]  22 342 #>  [11543,]  23 342 #>  [11544,]  24 342 #>  [11545,]  25 342 #>  [11546,]  26 342 #>  [11547,]  27 342 #>  [11548,]  28 342 #>  [11549,]  29 342 #>  [11550,]  30 342 #>  [11551,]  31 342 #>  [11552,]  32 342 #>  [11553,]  33 342 #>  [11554,]  34 342 #>  [11555,]  35 342 #>  [11556,]  36 342 #>  [11557,]  37 342 #>  [11558,]  38 342 #>  [11559,]  39 342 #>  [11560,]  40 342 #>  [11561,]  41 342 #>  [11562,]  42 342 #>  [11563,]  43 342 #>  [11564,]  44 342 #>  [11565,]  45 342 #>  [11566,]  46 342 #>  [11567,]  47 342 #>  [11568,]  48 342 #>  [11569,]  49 342 #>  [11570,]  50 342 #>  [11571,]  51 342 #>  [11572,]  52 342 #>  [11573,]  53 342 #>  [11574,]  54 342 #>  [11575,]  55 342 #>  [11576,]  56 342 #>  [11577,]  57 342 #>  [11578,]  58 342 #>  [11579,]  59 342 #>  [11580,]  60 342 #>  [11581,]  61 342 #>  [11582,]  62 342 #>  [11583,]  63 342 #>  [11584,]  64 342 #>  [11585,]  65 342 #>  [11586,]  66 342 #>  [11587,]  67 342 #>  [11588,]  68 342 #>  [11589,]  69 342 #>  [11590,]  70 342 #>  [11591,]  71 342 #>  [11592,]  72 342 #>  [11593,]  73 342 #>  [11594,]  74 342 #>  [11595,]  75 342 #>  [11596,]  76 342 #>  [11597,]  77 342 #>  [11598,]  78 342 #>  [11599,]  79 342 #>  [11600,]  80 342 #>  [11601,]  81 342 #>  [11602,]  82 342 #>  [11603,]  83 342 #>  [11604,]  84 342 #>  [11605,]  85 342 #>  [11606,]  86 342 #>  [11607,]  87 342 #>  [11608,]  88 342 #>  [11609,]  89 342 #>  [11610,]  90 342 #>  [11611,]  91 342 #>  [11612,]  92 342 #>  [11613,]  93 342 #>  [11614,]  94 342 #>  [11615,]  95 342 #>  [11616,]  96 342 #>  [11617,]  97 342 #>  [11618,]  98 342 #>  [11619,]  99 342 #>  [11620,] 100 342 #>  [11621,] 101 342 #>  [11622,] 102 342 #>  [11623,] 103 342 #>  [11624,] 104 342 #>  [11625,] 105 342 #>  [11626,] 106 342 #>  [11627,] 107 342 #>  [11628,] 108 342 #>  [11629,] 109 342 #>  [11630,] 110 342 #>  [11631,] 111 342 #>  [11632,] 112 342 #>  [11633,] 113 342 #>  [11634,] 114 342 #>  [11635,] 115 342 #>  [11636,] 116 342 #>  [11637,] 117 342 #>  [11638,] 118 342 #>  [11639,] 119 342 #>  [11640,] 120 342 #>  [11641,] 121 342 #>  [11642,] 122 342 #>  [11643,] 123 342 #>  [11644,] 124 342 #>  [11645,] 125 342 #>  [11646,] 126 342 #>  [11647,] 127 342 #>  [11648,] 128 342 #>  [11649,] 129 342 #>  [11650,] 130 342 #>  [11651,] 131 342 #>  [11652,] 132 342 #>  [11653,] 133 342 #>  [11654,] 134 342 #>  [11655,] 135 342 #>  [11656,] 136 342 #>  [11657,] 137 342 #>  [11658,] 138 342 #>  [11659,] 139 342 #>  [11660,] 140 342 #>  [11661,] 141 342 #>  [11662,] 142 342 #>  [11663,] 143 342 #>  [11664,] 144 342 #>  [11665,] 145 342 #>  [11666,] 146 342 #>  [11667,] 147 342 #>  [11668,] 148 342 #>  [11669,] 149 342 #>  [11670,] 150 342 #>  [11671,] 151 342 #>  [11672,] 152 342 #>  [11673,] 153 342 #>  [11674,] 154 342 #>  [11675,] 155 342 #>  [11676,] 156 342 #>  [11677,] 157 342 #>  [11678,] 158 342 #>  [11679,] 159 342 #>  [11680,] 160 342 #>  [11681,] 161 342 #>  [11682,] 162 342 #>  [11683,] 163 342 #>  [11684,] 164 342 #>  [11685,] 165 342 #>  [11686,] 166 342 #>  [11687,] 167 342 #>  [11688,] 168 342 #>  [11689,] 169 342 #>  [11690,] 170 342 #>  [11691,] 171 342 #>  [11692,] 172 342 #>  [11693,] 173 342 #>  [11694,] 174 342 #>  [11695,] 175 342 #>  [11696,] 176 342 #>  [11697,] 177 342 #>  [11698,] 178 342 #>  [11699,] 179 342 #>  [11700,] 180 342 #>  [11701,] 181 342 #>  [11702,] 182 342 #>  [11703,] 183 342 #>  [11704,] 184 342 #>  [11705,] 185 342 #>  [11706,] 186 342 #>  [11707,] 187 342 #>  [11708,] 188 342 #>  [11709,] 189 342 #>  [11710,] 190 342 #>  [11711,] 191 342 #>  [11712,] 192 342 #>  [11713,] 193 342 #>  [11714,] 194 342 #>  [11715,] 195 342 #>  [11716,] 196 342 #>  [11717,] 197 342 #>  [11718,] 198 342 #>  [11719,] 199 342 #>  [11720,] 200 342 #>  [11721,] 201 342 #>  [11722,] 202 342 #>  [11723,] 203 342 #>  [11724,] 204 342 #>  [11725,] 205 342 #>  [11726,] 206 342 #>  [11727,] 207 342 #>  [11728,] 208 342 #>  [11729,] 209 342 #>  [11730,] 210 342 #>  [11731,] 211 342 #>  [11732,] 212 342 #>  [11733,] 213 342 #>  [11734,] 214 342 #>  [11735,] 215 342 #>  [11736,] 216 342 #>  [11737,] 217 342 #>  [11738,] 218 342 #>  [11739,] 219 342 #>  [11740,] 220 342 #>  [11741,] 221 342 #>  [11742,] 222 342 #>  [11743,] 223 342 #>  [11744,] 224 342 #>  [11745,] 225 342 #>  [11746,] 226 342 #>  [11747,] 227 342 #>  [11748,] 228 342 #>  [11749,] 229 342 #>  [11750,] 230 342 #>  [11751,] 231 342 #>  [11752,] 232 342 #>  [11753,] 233 342 #>  [11754,] 234 342 #>  [11755,] 235 342 #>  [11756,] 236 342 #>  [11757,] 237 342 #>  [11758,] 238 342 #>  [11759,] 239 342 #>  [11760,] 240 342 #>  [11761,] 241 342 #>  [11762,] 242 342 #>  [11763,] 243 342 #>  [11764,] 244 342 #>  [11765,] 245 342 #>  [11766,] 246 342 #>  [11767,] 247 342 #>  [11768,] 248 342 #>  [11769,] 249 342 #>  [11770,] 250 342 #>  [11771,] 251 342 #>  [11772,] 252 342 #>  [11773,] 253 342 #>  [11774,] 254 342 #>  [11775,] 255 342 #>  [11776,] 256 342 #>  [11777,] 257 342 #>  [11778,] 258 342 #>  [11779,] 259 342 #>  [11780,] 260 342 #>  [11781,] 261 342 #>  [11782,] 262 342 #>  [11783,] 263 342 #>  [11784,] 264 342 #>  [11785,] 265 342 #>  [11786,] 266 342 #>  [11787,] 267 342 #>  [11788,] 268 342 #>  [11789,] 269 342 #>  [11790,] 270 342 #>  [11791,] 271 342 #>  [11792,] 272 342 #>  [11793,] 273 342 #>  [11794,] 274 342 #>  [11795,] 275 342 #>  [11796,] 276 342 #>  [11797,] 277 342 #>  [11798,] 278 342 #>  [11799,] 279 342 #>  [11800,] 280 342 #>  [11801,] 281 342 #>  [11802,] 282 342 #>  [11803,] 283 342 #>  [11804,] 284 342 #>  [11805,] 285 342 #>  [11806,] 286 342 #>  [11807,] 287 342 #>  [11808,] 288 342 #>  [11809,] 289 342 #>  [11810,] 290 342 #>  [11811,] 291 342 #>  [11812,] 292 342 #>  [11813,] 293 342 #>  [11814,] 294 342 #>  [11815,] 295 342 #>  [11816,] 296 342 #>  [11817,] 297 342 #>  [11818,] 298 342 #>  [11819,] 299 342 #>  [11820,] 300 342 #>  [11821,] 301 342 #>  [11822,] 302 342 #>  [11823,] 303 342 #>  [11824,] 304 342 #>  [11825,] 305 342 #>  [11826,] 306 342 #>  [11827,] 307 342 #>  [11828,] 308 342 #>  [11829,] 309 342 #>  [11830,] 310 342 #>  [11831,] 311 342 #>  [11832,] 312 342 #>  [11833,] 313 342 #>  [11834,] 314 342 #>  [11835,] 315 342 #>  [11836,] 316 342 #>  [11837,] 317 342 #>  [11838,] 318 342 #>  [11839,] 319 342 #>  [11840,] 320 342 #>  [11841,] 321 342 #>  [11842,] 322 342 #>  [11843,] 323 342 #>  [11844,] 324 342 #>  [11845,] 325 342 #>  [11846,] 326 342 #>  [11847,] 327 342 #>  [11848,] 328 342 #>  [11849,] 329 342 #>  [11850,] 330 342 #>  [11851,] 331 342 #>  [11852,] 332 342 #>  [11853,] 333 342 #>  [11854,] 334 342 #>  [11855,] 335 342 #>  [11856,] 336 342 #>  [11857,] 337 342 #>  [11858,] 338 342 #>  [11859,] 339 342 #>  [11860,] 340 342 #>  [11861,] 341 342 #>  [11862,] 342 342 #>  [11863,] 343 342 #>  [11864,] 344 342 #>  [11865,] 345 342 #>  [11866,] 346 342 #>  [11867,] 347 342 #>  [11868,] 348 342 #>  [11869,] 349 342 #>  [11870,] 350 342 #>  [11871,] 351 342 #>  [11872,] 352 342 #>  [11873,] 353 342 #>  [11874,] 354 342 #>  [11875,] 355 342 #>  [11876,] 356 342 #>  [11877,] 357 342 #>  [11878,] 358 342 #>  [11879,] 359 342 #>  [11880,] 360 342 #>  [11881,] 361 342 #>  [11882,] 362 342 #>  [11883,] 363 342 #>  [11884,] 364 342 #>  [11885,] 365 342 #>  [11886,] 366 342 #>  [11887,] 367 342 #>  [11888,] 368 342 #>  [11889,] 369 342 #>  [11890,] 370 342 #>  [11891,] 371 342 #>  [11892,] 372 342 #>  [11893,] 373 342 #>  [11894,] 374 342 #>  [11895,] 375 342 #>  [11896,] 376 342 #>  [11897,] 377 342 #>  [11898,] 378 342 #>  [11899,] 379 342 #>  [11900,] 380 342 #>  [11901,] 381 342 #>  [11902,] 382 342 #>  [11903,] 383 342 #>  [11904,] 384 342 #>  [11905,] 385 342 #>  [11906,] 386 342 #>  [11907,] 387 342 #>  [11908,] 388 342 #>  [11909,] 389 342 #>  [11910,] 390 342 #>  [11911,] 391 342 #>  [11912,] 392 342 #>  [11913,] 393 342 #>  [11914,] 394 342 #>  [11915,] 395 342 #>  [11916,] 396 342 #>  [11917,] 397 342 #>  [11918,] 398 342 #>  [11919,] 399 342 #>  [11920,] 400 342 #>  [11921,] 401 342 #>  [11922,] 402 342 #>  [11923,] 403 342 #>  [11924,] 404 342 #>  [11925,] 405 342 #>  [11926,] 406 342 #>  [11927,] 407 342 #>  [11928,] 408 342 #>  [11929,] 409 342 #>  [11930,] 410 342 #>  [11931,] 411 342 #>  [11932,] 412 342 #>  [11933,] 413 342 #>  [11934,] 414 342 #>  [11935,] 415 342 #>  [11936,] 416 342 #>  [11937,] 417 342 #>  [11938,] 418 342 #>  [11939,] 419 342 #>  [11940,] 420 342 #>  [11941,] 421 342 #>  [11942,] 422 342 #>  [11943,] 423 342 #>  [11944,] 424 342 #>  [11945,] 425 342 #>  [11946,] 426 342 #>  [11947,] 427 342 #>  [11948,] 428 342 #>  [11949,] 429 342 #>  [11950,] 430 342 #>  [11951,] 431 342 #>  [11952,] 432 342 #>  [11953,] 433 342 #>  [11954,] 434 342 #>  [11955,] 435 342 #>  [11956,] 436 342 #>  [11957,] 437 342 #>  [11958,] 438 342 #>  [11959,] 439 342 #>  [11960,] 440 342 #>  [11961,] 441 342 #>  [11962,] 442 342 #>  [11963,] 443 342 #>  [11964,] 444 342 #>  [11965,] 445 342 #>  [11966,] 446 342 #>  [11967,] 447 342 #>  [11968,] 448 342 #>  [11969,] 449 342 #>  [11970,] 450 342 #>  [11971,] 451 342 #>  [11972,] 452 342 #>  [11973,] 453 342 #>  [11974,] 454 342 #>  [11975,] 455 342 #>  [11976,] 456 342 #>  [11977,] 457 342 #>  [11978,] 458 342 #>  [11979,] 459 342 #>  [11980,] 460 342 #>  [11981,] 461 342 #>  [11982,] 462 342 #>  [11983,] 463 342 #>  [11984,] 464 342 #>  [11985,] 465 342 #>  [11986,] 466 342 #>  [11987,] 467 342 #>  [11988,] 468 342 #>  [11989,] 469 342 #>  [11990,] 470 342 #>  [11991,] 471 342 #>  [11992,] 472 342 #>  [11993,] 473 342 #>  [11994,] 474 342 #>  [11995,] 475 342 #>  [11996,] 476 342 #>  [11997,] 477 342 #>  [11998,] 478 342 #>  [11999,] 479 342 #>  [12000,] 480 342 #>  [12001,] 481 342 #>  [12002,] 482 342 #>  [12003,] 483 342 #>  [12004,] 484 342 #>  [12005,] 485 342 #>  [12006,] 486 342 #>  [12007,] 487 342 #>  [12008,] 488 342 #>  [12009,] 489 342 #>  [12010,] 490 342 #>  [12011,] 491 342 #>  [12012,] 492 342 #>  [12013,] 493 342 #>  [12014,] 494 342 #>  [12015,] 495 342 #>  [12016,] 496 342 #>  [12017,] 497 342 #>  [12018,] 498 342 #>  [12019,] 499 342 #>  [12020,] 500 342 #>  [12021,] 501 342 #>  [12022,] 502 342 #>  [12023,] 503 342 #>  [12024,] 504 342 #>  [12025,] 505 342 #>  [12026,] 506 342 #>  [12027,] 507 342 #>  [12028,] 508 342 #>  [12029,] 509 342 #>  [12030,] 510 342 #>  [12031,] 511 342 #>  [12032,] 512 342 #>  [12033,] 513 342 #>  [12034,] 514 342 #>  [12035,] 515 342 #>  [12036,] 516 342 #>  [12037,] 517 342 #>  [12038,] 518 342 #>  [12039,] 519 342 #>  [12040,] 520 342 #>  [12041,] 521 342 #>  [12042,] 522 342 #>  [12043,] 523 342 #>  [12044,] 524 342 #>  [12045,] 525 342 #>  [12046,] 526 342 #>  [12047,] 527 342 #>  [12048,] 528 342 #>  [12049,] 529 342 #>  [12050,] 530 342 #>  [12051,] 531 342 #>  [12052,] 532 342 #>  [12053,] 533 342 #>  [12054,] 534 342 #>  [12055,] 535 342 #>  [12056,] 536 342 #>  [12057,] 537 342 #>  [12058,] 538 342 #>  [12059,] 539 342 #>  [12060,] 540 342 #>  [12061,] 541 342 #>  [12062,] 542 342 #>  [12063,] 543 342 #>  [12064,] 544 342 #>  [12065,] 545 342 #>  [12066,] 546 342 #>  [12067,] 547 342 #>  [12068,] 548 342 #>  [12069,] 549 342 #>  [12070,] 550 342 #>  [12071,] 551 342 #>  [12072,] 552 342 #>  [12073,] 553 342 #>  [12074,] 554 342 #>  [12075,] 555 342 #>  [12076,] 556 342 #>  [12077,] 557 342 #>  [12078,] 558 342 #>  [12079,] 559 342 #>  [12080,] 560 342 #>  [12081,] 561 342 #>  [12082,] 562 342 #>  [12083,] 563 342 #>  [12084,] 564 342 #>  [12085,] 565 342 #>  [12086,] 566 342 #>  [12087,] 567 342 #>  [12088,] 568 342 #>  [12089,] 569 342 #>  [12090,] 570 342 #>  [12091,] 571 342 #>  [12092,] 572 342 #>  [12093,] 573 342 #>  [12094,] 574 342 #>  [12095,] 575 342 #>  [12096,] 576 342 #>  [12097,] 577 342 #>  [12098,] 578 342 #>  [12099,] 579 342 #>  [12100,] 580 342 #>  [12101,] 581 342 #>  [12102,] 582 342 #>  [12103,] 583 342 #>  [12104,] 584 342 #>  [12105,] 585 342 #>  [12106,] 586 342 #>  [12107,] 587 342 #>  [12108,] 588 342 #>  [12109,] 589 342 #>  [12110,] 590 342 #>  [12111,] 591 342 #>  [12112,] 592 342 #>  [12113,] 593 342 #>  [12114,] 594 342 #>  [12115,] 595 342 #>  [12116,] 596 342 #>  [12117,] 597 342 #>  [12118,] 598 342 #>  [12119,] 599 342 #>  [12120,] 600 342 #>  [12121,] 601 342 #>  [12122,] 602 342 #>  [12123,] 603 342 #>  [12124,] 604 342 #>  [12125,] 605 342 #>  [12126,] 606 342 #>  [12127,] 607 342 #>  [12128,] 608 342 #>  [12129,] 609 342 #>  [12130,] 610 342 #>  [12131,] 611 342 #>  [12132,] 612 342 #>  [12133,] 613 342 #>  [12134,] 614 342 #>  [12135,] 615 342 #>  [12136,] 616 342 #>  [12137,] 617 342 #>  [12138,] 618 342 #>  [12139,] 619 342 #>  [12140,] 620 342 #>  [12141,] 621 342 #>  [12142,] 622 342 #>  [12143,] 623 342 #>  [12144,] 624 342 #>  [12145,] 625 342 #>  [12146,] 626 342 #>  [12147,] 627 342 #>  [12148,] 628 342 #>  [12149,] 629 342 #>  [12150,] 630 342 #>  [12151,] 631 342 #>  [12152,] 632 342 #>  [12153,] 633 342 #>  [12154,] 634 342 #>  [12155,] 635 342 #>  [12156,] 636 342 #>  [12157,] 637 342 #>  [12158,] 638 342 #>  [12159,] 639 342 #>  [12160,] 640 342 #>  [12161,]   1 341 #>  [12162,]   2 341 #>  [12163,]   3 341 #>  [12164,]   4 341 #>  [12165,]   5 341 #>  [12166,]   6 341 #>  [12167,]   7 341 #>  [12168,]   8 341 #>  [12169,]   9 341 #>  [12170,]  10 341 #>  [12171,]  11 341 #>  [12172,]  12 341 #>  [12173,]  13 341 #>  [12174,]  14 341 #>  [12175,]  15 341 #>  [12176,]  16 341 #>  [12177,]  17 341 #>  [12178,]  18 341 #>  [12179,]  19 341 #>  [12180,]  20 341 #>  [12181,]  21 341 #>  [12182,]  22 341 #>  [12183,]  23 341 #>  [12184,]  24 341 #>  [12185,]  25 341 #>  [12186,]  26 341 #>  [12187,]  27 341 #>  [12188,]  28 341 #>  [12189,]  29 341 #>  [12190,]  30 341 #>  [12191,]  31 341 #>  [12192,]  32 341 #>  [12193,]  33 341 #>  [12194,]  34 341 #>  [12195,]  35 341 #>  [12196,]  36 341 #>  [12197,]  37 341 #>  [12198,]  38 341 #>  [12199,]  39 341 #>  [12200,]  40 341 #>  [12201,]  41 341 #>  [12202,]  42 341 #>  [12203,]  43 341 #>  [12204,]  44 341 #>  [12205,]  45 341 #>  [12206,]  46 341 #>  [12207,]  47 341 #>  [12208,]  48 341 #>  [12209,]  49 341 #>  [12210,]  50 341 #>  [12211,]  51 341 #>  [12212,]  52 341 #>  [12213,]  53 341 #>  [12214,]  54 341 #>  [12215,]  55 341 #>  [12216,]  56 341 #>  [12217,]  57 341 #>  [12218,]  58 341 #>  [12219,]  59 341 #>  [12220,]  60 341 #>  [12221,]  61 341 #>  [12222,]  62 341 #>  [12223,]  63 341 #>  [12224,]  64 341 #>  [12225,]  65 341 #>  [12226,]  66 341 #>  [12227,]  67 341 #>  [12228,]  68 341 #>  [12229,]  69 341 #>  [12230,]  70 341 #>  [12231,]  71 341 #>  [12232,]  72 341 #>  [12233,]  73 341 #>  [12234,]  74 341 #>  [12235,]  75 341 #>  [12236,]  76 341 #>  [12237,]  77 341 #>  [12238,]  78 341 #>  [12239,]  79 341 #>  [12240,]  80 341 #>  [12241,]  81 341 #>  [12242,]  82 341 #>  [12243,]  83 341 #>  [12244,]  84 341 #>  [12245,]  85 341 #>  [12246,]  86 341 #>  [12247,]  87 341 #>  [12248,]  88 341 #>  [12249,]  89 341 #>  [12250,]  90 341 #>  [12251,]  91 341 #>  [12252,]  92 341 #>  [12253,]  93 341 #>  [12254,]  94 341 #>  [12255,]  95 341 #>  [12256,]  96 341 #>  [12257,]  97 341 #>  [12258,]  98 341 #>  [12259,]  99 341 #>  [12260,] 100 341 #>  [12261,] 101 341 #>  [12262,] 102 341 #>  [12263,] 103 341 #>  [12264,] 104 341 #>  [12265,] 105 341 #>  [12266,] 106 341 #>  [12267,] 107 341 #>  [12268,] 108 341 #>  [12269,] 109 341 #>  [12270,] 110 341 #>  [12271,] 111 341 #>  [12272,] 112 341 #>  [12273,] 113 341 #>  [12274,] 114 341 #>  [12275,] 115 341 #>  [12276,] 116 341 #>  [12277,] 117 341 #>  [12278,] 118 341 #>  [12279,] 119 341 #>  [12280,] 120 341 #>  [12281,] 121 341 #>  [12282,] 122 341 #>  [12283,] 123 341 #>  [12284,] 124 341 #>  [12285,] 125 341 #>  [12286,] 126 341 #>  [12287,] 127 341 #>  [12288,] 128 341 #>  [12289,] 129 341 #>  [12290,] 130 341 #>  [12291,] 131 341 #>  [12292,] 132 341 #>  [12293,] 133 341 #>  [12294,] 134 341 #>  [12295,] 135 341 #>  [12296,] 136 341 #>  [12297,] 137 341 #>  [12298,] 138 341 #>  [12299,] 139 341 #>  [12300,] 140 341 #>  [12301,] 141 341 #>  [12302,] 142 341 #>  [12303,] 143 341 #>  [12304,] 144 341 #>  [12305,] 145 341 #>  [12306,] 146 341 #>  [12307,] 147 341 #>  [12308,] 148 341 #>  [12309,] 149 341 #>  [12310,] 150 341 #>  [12311,] 151 341 #>  [12312,] 152 341 #>  [12313,] 153 341 #>  [12314,] 154 341 #>  [12315,] 155 341 #>  [12316,] 156 341 #>  [12317,] 157 341 #>  [12318,] 158 341 #>  [12319,] 159 341 #>  [12320,] 160 341 #>  [12321,] 161 341 #>  [12322,] 162 341 #>  [12323,] 163 341 #>  [12324,] 164 341 #>  [12325,] 165 341 #>  [12326,] 166 341 #>  [12327,] 167 341 #>  [12328,] 168 341 #>  [12329,] 169 341 #>  [12330,] 170 341 #>  [12331,] 171 341 #>  [12332,] 172 341 #>  [12333,] 173 341 #>  [12334,] 174 341 #>  [12335,] 175 341 #>  [12336,] 176 341 #>  [12337,] 177 341 #>  [12338,] 178 341 #>  [12339,] 179 341 #>  [12340,] 180 341 #>  [12341,] 181 341 #>  [12342,] 182 341 #>  [12343,] 183 341 #>  [12344,] 184 341 #>  [12345,] 185 341 #>  [12346,] 186 341 #>  [12347,] 187 341 #>  [12348,] 188 341 #>  [12349,] 189 341 #>  [12350,] 190 341 #>  [12351,] 191 341 #>  [12352,] 192 341 #>  [12353,] 193 341 #>  [12354,] 194 341 #>  [12355,] 195 341 #>  [12356,] 196 341 #>  [12357,] 197 341 #>  [12358,] 198 341 #>  [12359,] 199 341 #>  [12360,] 200 341 #>  [12361,] 201 341 #>  [12362,] 202 341 #>  [12363,] 203 341 #>  [12364,] 204 341 #>  [12365,] 205 341 #>  [12366,] 206 341 #>  [12367,] 207 341 #>  [12368,] 208 341 #>  [12369,] 209 341 #>  [12370,] 210 341 #>  [12371,] 211 341 #>  [12372,] 212 341 #>  [12373,] 213 341 #>  [12374,] 214 341 #>  [12375,] 215 341 #>  [12376,] 216 341 #>  [12377,] 217 341 #>  [12378,] 218 341 #>  [12379,] 219 341 #>  [12380,] 220 341 #>  [12381,] 221 341 #>  [12382,] 222 341 #>  [12383,] 223 341 #>  [12384,] 224 341 #>  [12385,] 225 341 #>  [12386,] 226 341 #>  [12387,] 227 341 #>  [12388,] 228 341 #>  [12389,] 229 341 #>  [12390,] 230 341 #>  [12391,] 231 341 #>  [12392,] 232 341 #>  [12393,] 233 341 #>  [12394,] 234 341 #>  [12395,] 235 341 #>  [12396,] 236 341 #>  [12397,] 237 341 #>  [12398,] 238 341 #>  [12399,] 239 341 #>  [12400,] 240 341 #>  [12401,] 241 341 #>  [12402,] 242 341 #>  [12403,] 243 341 #>  [12404,] 244 341 #>  [12405,] 245 341 #>  [12406,] 246 341 #>  [12407,] 247 341 #>  [12408,] 248 341 #>  [12409,] 249 341 #>  [12410,] 250 341 #>  [12411,] 251 341 #>  [12412,] 252 341 #>  [12413,] 253 341 #>  [12414,] 254 341 #>  [12415,] 255 341 #>  [12416,] 256 341 #>  [12417,] 257 341 #>  [12418,] 258 341 #>  [12419,] 259 341 #>  [12420,] 260 341 #>  [12421,] 261 341 #>  [12422,] 262 341 #>  [12423,] 263 341 #>  [12424,] 264 341 #>  [12425,] 265 341 #>  [12426,] 266 341 #>  [12427,] 267 341 #>  [12428,] 268 341 #>  [12429,] 269 341 #>  [12430,] 270 341 #>  [12431,] 271 341 #>  [12432,] 272 341 #>  [12433,] 273 341 #>  [12434,] 274 341 #>  [12435,] 275 341 #>  [12436,] 276 341 #>  [12437,] 277 341 #>  [12438,] 278 341 #>  [12439,] 279 341 #>  [12440,] 280 341 #>  [12441,] 281 341 #>  [12442,] 282 341 #>  [12443,] 283 341 #>  [12444,] 284 341 #>  [12445,] 285 341 #>  [12446,] 286 341 #>  [12447,] 287 341 #>  [12448,] 288 341 #>  [12449,] 289 341 #>  [12450,] 290 341 #>  [12451,] 291 341 #>  [12452,] 292 341 #>  [12453,] 293 341 #>  [12454,] 294 341 #>  [12455,] 295 341 #>  [12456,] 296 341 #>  [12457,] 297 341 #>  [12458,] 298 341 #>  [12459,] 299 341 #>  [12460,] 300 341 #>  [12461,] 301 341 #>  [12462,] 302 341 #>  [12463,] 303 341 #>  [12464,] 304 341 #>  [12465,] 305 341 #>  [12466,] 306 341 #>  [12467,] 307 341 #>  [12468,] 308 341 #>  [12469,] 309 341 #>  [12470,] 310 341 #>  [12471,] 311 341 #>  [12472,] 312 341 #>  [12473,] 313 341 #>  [12474,] 314 341 #>  [12475,] 315 341 #>  [12476,] 316 341 #>  [12477,] 317 341 #>  [12478,] 318 341 #>  [12479,] 319 341 #>  [12480,] 320 341 #>  [12481,] 321 341 #>  [12482,] 322 341 #>  [12483,] 323 341 #>  [12484,] 324 341 #>  [12485,] 325 341 #>  [12486,] 326 341 #>  [12487,] 327 341 #>  [12488,] 328 341 #>  [12489,] 329 341 #>  [12490,] 330 341 #>  [12491,] 331 341 #>  [12492,] 332 341 #>  [12493,] 333 341 #>  [12494,] 334 341 #>  [12495,] 335 341 #>  [12496,] 336 341 #>  [12497,] 337 341 #>  [12498,] 338 341 #>  [12499,] 339 341 #>  [12500,] 340 341 #>  [12501,] 341 341 #>  [12502,] 342 341 #>  [12503,] 343 341 #>  [12504,] 344 341 #>  [12505,] 345 341 #>  [12506,] 346 341 #>  [12507,] 347 341 #>  [12508,] 348 341 #>  [12509,] 349 341 #>  [12510,] 350 341 #>  [12511,] 351 341 #>  [12512,] 352 341 #>  [12513,] 353 341 #>  [12514,] 354 341 #>  [12515,] 355 341 #>  [12516,] 356 341 #>  [12517,] 357 341 #>  [12518,] 358 341 #>  [12519,] 359 341 #>  [12520,] 360 341 #>  [12521,] 361 341 #>  [12522,] 362 341 #>  [12523,] 363 341 #>  [12524,] 364 341 #>  [12525,] 365 341 #>  [12526,] 366 341 #>  [12527,] 367 341 #>  [12528,] 368 341 #>  [12529,] 369 341 #>  [12530,] 370 341 #>  [12531,] 371 341 #>  [12532,] 372 341 #>  [12533,] 373 341 #>  [12534,] 374 341 #>  [12535,] 375 341 #>  [12536,] 376 341 #>  [12537,] 377 341 #>  [12538,] 378 341 #>  [12539,] 379 341 #>  [12540,] 380 341 #>  [12541,] 381 341 #>  [12542,] 382 341 #>  [12543,] 383 341 #>  [12544,] 384 341 #>  [12545,] 385 341 #>  [12546,] 386 341 #>  [12547,] 387 341 #>  [12548,] 388 341 #>  [12549,] 389 341 #>  [12550,] 390 341 #>  [12551,] 391 341 #>  [12552,] 392 341 #>  [12553,] 393 341 #>  [12554,] 394 341 #>  [12555,] 395 341 #>  [12556,] 396 341 #>  [12557,] 397 341 #>  [12558,] 398 341 #>  [12559,] 399 341 #>  [12560,] 400 341 #>  [12561,] 401 341 #>  [12562,] 402 341 #>  [12563,] 403 341 #>  [12564,] 404 341 #>  [12565,] 405 341 #>  [12566,] 406 341 #>  [12567,] 407 341 #>  [12568,] 408 341 #>  [12569,] 409 341 #>  [12570,] 410 341 #>  [12571,] 411 341 #>  [12572,] 412 341 #>  [12573,] 413 341 #>  [12574,] 414 341 #>  [12575,] 415 341 #>  [12576,] 416 341 #>  [12577,] 417 341 #>  [12578,] 418 341 #>  [12579,] 419 341 #>  [12580,] 420 341 #>  [12581,] 421 341 #>  [12582,] 422 341 #>  [12583,] 423 341 #>  [12584,] 424 341 #>  [12585,] 425 341 #>  [12586,] 426 341 #>  [12587,] 427 341 #>  [12588,] 428 341 #>  [12589,] 429 341 #>  [12590,] 430 341 #>  [12591,] 431 341 #>  [12592,] 432 341 #>  [12593,] 433 341 #>  [12594,] 434 341 #>  [12595,] 435 341 #>  [12596,] 436 341 #>  [12597,] 437 341 #>  [12598,] 438 341 #>  [12599,] 439 341 #>  [12600,] 440 341 #>  [12601,] 441 341 #>  [12602,] 442 341 #>  [12603,] 443 341 #>  [12604,] 444 341 #>  [12605,] 445 341 #>  [12606,] 446 341 #>  [12607,] 447 341 #>  [12608,] 448 341 #>  [12609,] 449 341 #>  [12610,] 450 341 #>  [12611,] 451 341 #>  [12612,] 452 341 #>  [12613,] 453 341 #>  [12614,] 454 341 #>  [12615,] 455 341 #>  [12616,] 456 341 #>  [12617,] 457 341 #>  [12618,] 458 341 #>  [12619,] 459 341 #>  [12620,] 460 341 #>  [12621,] 461 341 #>  [12622,] 462 341 #>  [12623,] 463 341 #>  [12624,] 464 341 #>  [12625,] 465 341 #>  [12626,] 466 341 #>  [12627,] 467 341 #>  [12628,] 468 341 #>  [12629,] 469 341 #>  [12630,] 470 341 #>  [12631,] 471 341 #>  [12632,] 472 341 #>  [12633,] 473 341 #>  [12634,] 474 341 #>  [12635,] 475 341 #>  [12636,] 476 341 #>  [12637,] 477 341 #>  [12638,] 478 341 #>  [12639,] 479 341 #>  [12640,] 480 341 #>  [12641,] 481 341 #>  [12642,] 482 341 #>  [12643,] 483 341 #>  [12644,] 484 341 #>  [12645,] 485 341 #>  [12646,] 486 341 #>  [12647,] 487 341 #>  [12648,] 488 341 #>  [12649,] 489 341 #>  [12650,] 490 341 #>  [12651,] 491 341 #>  [12652,] 492 341 #>  [12653,] 493 341 #>  [12654,] 494 341 #>  [12655,] 495 341 #>  [12656,] 496 341 #>  [12657,] 497 341 #>  [12658,] 498 341 #>  [12659,] 499 341 #>  [12660,] 500 341 #>  [12661,] 501 341 #>  [12662,] 502 341 #>  [12663,] 503 341 #>  [12664,] 504 341 #>  [12665,] 505 341 #>  [12666,] 506 341 #>  [12667,] 507 341 #>  [12668,] 508 341 #>  [12669,] 509 341 #>  [12670,] 510 341 #>  [12671,] 511 341 #>  [12672,] 512 341 #>  [12673,] 513 341 #>  [12674,] 514 341 #>  [12675,] 515 341 #>  [12676,] 516 341 #>  [12677,] 517 341 #>  [12678,] 518 341 #>  [12679,] 519 341 #>  [12680,] 520 341 #>  [12681,] 521 341 #>  [12682,] 522 341 #>  [12683,] 523 341 #>  [12684,] 524 341 #>  [12685,] 525 341 #>  [12686,] 526 341 #>  [12687,] 527 341 #>  [12688,] 528 341 #>  [12689,] 529 341 #>  [12690,] 530 341 #>  [12691,] 531 341 #>  [12692,] 532 341 #>  [12693,] 533 341 #>  [12694,] 534 341 #>  [12695,] 535 341 #>  [12696,] 536 341 #>  [12697,] 537 341 #>  [12698,] 538 341 #>  [12699,] 539 341 #>  [12700,] 540 341 #>  [12701,] 541 341 #>  [12702,] 542 341 #>  [12703,] 543 341 #>  [12704,] 544 341 #>  [12705,] 545 341 #>  [12706,] 546 341 #>  [12707,] 547 341 #>  [12708,] 548 341 #>  [12709,] 549 341 #>  [12710,] 550 341 #>  [12711,] 551 341 #>  [12712,] 552 341 #>  [12713,] 553 341 #>  [12714,] 554 341 #>  [12715,] 555 341 #>  [12716,] 556 341 #>  [12717,] 557 341 #>  [12718,] 558 341 #>  [12719,] 559 341 #>  [12720,] 560 341 #>  [12721,] 561 341 #>  [12722,] 562 341 #>  [12723,] 563 341 #>  [12724,] 564 341 #>  [12725,] 565 341 #>  [12726,] 566 341 #>  [12727,] 567 341 #>  [12728,] 568 341 #>  [12729,] 569 341 #>  [12730,] 570 341 #>  [12731,] 571 341 #>  [12732,] 572 341 #>  [12733,] 573 341 #>  [12734,] 574 341 #>  [12735,] 575 341 #>  [12736,] 576 341 #>  [12737,] 577 341 #>  [12738,] 578 341 #>  [12739,] 579 341 #>  [12740,] 580 341 #>  [12741,] 581 341 #>  [12742,] 582 341 #>  [12743,] 583 341 #>  [12744,] 584 341 #>  [12745,] 585 341 #>  [12746,] 586 341 #>  [12747,] 587 341 #>  [12748,] 588 341 #>  [12749,] 589 341 #>  [12750,] 590 341 #>  [12751,] 591 341 #>  [12752,] 592 341 #>  [12753,] 593 341 #>  [12754,] 594 341 #>  [12755,] 595 341 #>  [12756,] 596 341 #>  [12757,] 597 341 #>  [12758,] 598 341 #>  [12759,] 599 341 #>  [12760,] 600 341 #>  [12761,] 601 341 #>  [12762,] 602 341 #>  [12763,] 603 341 #>  [12764,] 604 341 #>  [12765,] 605 341 #>  [12766,] 606 341 #>  [12767,] 607 341 #>  [12768,] 608 341 #>  [12769,] 609 341 #>  [12770,] 610 341 #>  [12771,] 611 341 #>  [12772,] 612 341 #>  [12773,] 613 341 #>  [12774,] 614 341 #>  [12775,] 615 341 #>  [12776,] 616 341 #>  [12777,] 617 341 #>  [12778,] 618 341 #>  [12779,] 619 341 #>  [12780,] 620 341 #>  [12781,] 621 341 #>  [12782,] 622 341 #>  [12783,] 623 341 #>  [12784,] 624 341 #>  [12785,] 625 341 #>  [12786,] 626 341 #>  [12787,] 627 341 #>  [12788,] 628 341 #>  [12789,] 629 341 #>  [12790,] 630 341 #>  [12791,] 631 341 #>  [12792,] 632 341 #>  [12793,] 633 341 #>  [12794,] 634 341 #>  [12795,] 635 341 #>  [12796,] 636 341 #>  [12797,] 637 341 #>  [12798,] 638 341 #>  [12799,] 639 341 #>  [12800,] 640 341 #>  [12801,]   1 340 #>  [12802,]   2 340 #>  [12803,]   3 340 #>  [12804,]   4 340 #>  [12805,]   5 340 #>  [12806,]   6 340 #>  [12807,]   7 340 #>  [12808,]   8 340 #>  [12809,]   9 340 #>  [12810,]  10 340 #>  [12811,]  11 340 #>  [12812,]  12 340 #>  [12813,]  13 340 #>  [12814,]  14 340 #>  [12815,]  15 340 #>  [12816,]  16 340 #>  [12817,]  17 340 #>  [12818,]  18 340 #>  [12819,]  19 340 #>  [12820,]  20 340 #>  [12821,]  21 340 #>  [12822,]  22 340 #>  [12823,]  23 340 #>  [12824,]  24 340 #>  [12825,]  25 340 #>  [12826,]  26 340 #>  [12827,]  27 340 #>  [12828,]  28 340 #>  [12829,]  29 340 #>  [12830,]  30 340 #>  [12831,]  31 340 #>  [12832,]  32 340 #>  [12833,]  33 340 #>  [12834,]  34 340 #>  [12835,]  35 340 #>  [12836,]  36 340 #>  [12837,]  37 340 #>  [12838,]  38 340 #>  [12839,]  39 340 #>  [12840,]  40 340 #>  [12841,]  41 340 #>  [12842,]  42 340 #>  [12843,]  43 340 #>  [12844,]  44 340 #>  [12845,]  45 340 #>  [12846,]  46 340 #>  [12847,]  47 340 #>  [12848,]  48 340 #>  [12849,]  49 340 #>  [12850,]  50 340 #>  [12851,]  51 340 #>  [12852,]  52 340 #>  [12853,]  53 340 #>  [12854,]  54 340 #>  [12855,]  55 340 #>  [12856,]  56 340 #>  [12857,]  57 340 #>  [12858,]  58 340 #>  [12859,]  59 340 #>  [12860,]  60 340 #>  [12861,]  61 340 #>  [12862,]  62 340 #>  [12863,]  63 340 #>  [12864,]  64 340 #>  [12865,]  65 340 #>  [12866,]  66 340 #>  [12867,]  67 340 #>  [12868,]  68 340 #>  [12869,]  69 340 #>  [12870,]  70 340 #>  [12871,]  71 340 #>  [12872,]  72 340 #>  [12873,]  73 340 #>  [12874,]  74 340 #>  [12875,]  75 340 #>  [12876,]  76 340 #>  [12877,]  77 340 #>  [12878,]  78 340 #>  [12879,]  79 340 #>  [12880,]  80 340 #>  [12881,]  81 340 #>  [12882,]  82 340 #>  [12883,]  83 340 #>  [12884,]  84 340 #>  [12885,]  85 340 #>  [12886,]  86 340 #>  [12887,]  87 340 #>  [12888,]  88 340 #>  [12889,]  89 340 #>  [12890,]  90 340 #>  [12891,]  91 340 #>  [12892,]  92 340 #>  [12893,]  93 340 #>  [12894,]  94 340 #>  [12895,]  95 340 #>  [12896,]  96 340 #>  [12897,]  97 340 #>  [12898,]  98 340 #>  [12899,]  99 340 #>  [12900,] 100 340 #>  [12901,] 101 340 #>  [12902,] 102 340 #>  [12903,] 103 340 #>  [12904,] 104 340 #>  [12905,] 105 340 #>  [12906,] 106 340 #>  [12907,] 107 340 #>  [12908,] 108 340 #>  [12909,] 109 340 #>  [12910,] 110 340 #>  [12911,] 111 340 #>  [12912,] 112 340 #>  [12913,] 113 340 #>  [12914,] 114 340 #>  [12915,] 115 340 #>  [12916,] 116 340 #>  [12917,] 117 340 #>  [12918,] 118 340 #>  [12919,] 119 340 #>  [12920,] 120 340 #>  [12921,] 121 340 #>  [12922,] 122 340 #>  [12923,] 123 340 #>  [12924,] 124 340 #>  [12925,] 125 340 #>  [12926,] 126 340 #>  [12927,] 127 340 #>  [12928,] 128 340 #>  [12929,] 129 340 #>  [12930,] 130 340 #>  [12931,] 131 340 #>  [12932,] 132 340 #>  [12933,] 133 340 #>  [12934,] 134 340 #>  [12935,] 135 340 #>  [12936,] 136 340 #>  [12937,] 137 340 #>  [12938,] 138 340 #>  [12939,] 139 340 #>  [12940,] 140 340 #>  [12941,] 141 340 #>  [12942,] 142 340 #>  [12943,] 143 340 #>  [12944,] 144 340 #>  [12945,] 145 340 #>  [12946,] 146 340 #>  [12947,] 147 340 #>  [12948,] 148 340 #>  [12949,] 149 340 #>  [12950,] 150 340 #>  [12951,] 151 340 #>  [12952,] 152 340 #>  [12953,] 153 340 #>  [12954,] 154 340 #>  [12955,] 155 340 #>  [12956,] 156 340 #>  [12957,] 157 340 #>  [12958,] 158 340 #>  [12959,] 159 340 #>  [12960,] 160 340 #>  [12961,] 161 340 #>  [12962,] 162 340 #>  [12963,] 163 340 #>  [12964,] 164 340 #>  [12965,] 165 340 #>  [12966,] 166 340 #>  [12967,] 167 340 #>  [12968,] 168 340 #>  [12969,] 169 340 #>  [12970,] 170 340 #>  [12971,] 171 340 #>  [12972,] 172 340 #>  [12973,] 173 340 #>  [12974,] 174 340 #>  [12975,] 175 340 #>  [12976,] 176 340 #>  [12977,] 177 340 #>  [12978,] 178 340 #>  [12979,] 179 340 #>  [12980,] 180 340 #>  [12981,] 181 340 #>  [12982,] 182 340 #>  [12983,] 183 340 #>  [12984,] 184 340 #>  [12985,] 185 340 #>  [12986,] 186 340 #>  [12987,] 187 340 #>  [12988,] 188 340 #>  [12989,] 189 340 #>  [12990,] 190 340 #>  [12991,] 191 340 #>  [12992,] 192 340 #>  [12993,] 193 340 #>  [12994,] 194 340 #>  [12995,] 195 340 #>  [12996,] 196 340 #>  [12997,] 197 340 #>  [12998,] 198 340 #>  [12999,] 199 340 #>  [13000,] 200 340 #>  [13001,] 201 340 #>  [13002,] 202 340 #>  [13003,] 203 340 #>  [13004,] 204 340 #>  [13005,] 205 340 #>  [13006,] 206 340 #>  [13007,] 207 340 #>  [13008,] 208 340 #>  [13009,] 209 340 #>  [13010,] 210 340 #>  [13011,] 211 340 #>  [13012,] 212 340 #>  [13013,] 213 340 #>  [13014,] 214 340 #>  [13015,] 215 340 #>  [13016,] 216 340 #>  [13017,] 217 340 #>  [13018,] 218 340 #>  [13019,] 219 340 #>  [13020,] 220 340 #>  [13021,] 221 340 #>  [13022,] 222 340 #>  [13023,] 223 340 #>  [13024,] 224 340 #>  [13025,] 225 340 #>  [13026,] 226 340 #>  [13027,] 227 340 #>  [13028,] 228 340 #>  [13029,] 229 340 #>  [13030,] 230 340 #>  [13031,] 231 340 #>  [13032,] 232 340 #>  [13033,] 233 340 #>  [13034,] 234 340 #>  [13035,] 235 340 #>  [13036,] 236 340 #>  [13037,] 237 340 #>  [13038,] 238 340 #>  [13039,] 239 340 #>  [13040,] 240 340 #>  [13041,] 241 340 #>  [13042,] 242 340 #>  [13043,] 243 340 #>  [13044,] 244 340 #>  [13045,] 245 340 #>  [13046,] 246 340 #>  [13047,] 247 340 #>  [13048,] 248 340 #>  [13049,] 249 340 #>  [13050,] 250 340 #>  [13051,] 251 340 #>  [13052,] 252 340 #>  [13053,] 253 340 #>  [13054,] 254 340 #>  [13055,] 255 340 #>  [13056,] 256 340 #>  [13057,] 257 340 #>  [13058,] 258 340 #>  [13059,] 259 340 #>  [13060,] 260 340 #>  [13061,] 261 340 #>  [13062,] 262 340 #>  [13063,] 263 340 #>  [13064,] 264 340 #>  [13065,] 265 340 #>  [13066,] 266 340 #>  [13067,] 267 340 #>  [13068,] 268 340 #>  [13069,] 269 340 #>  [13070,] 270 340 #>  [13071,] 271 340 #>  [13072,] 272 340 #>  [13073,] 273 340 #>  [13074,] 274 340 #>  [13075,] 275 340 #>  [13076,] 276 340 #>  [13077,] 277 340 #>  [13078,] 278 340 #>  [13079,] 279 340 #>  [13080,] 280 340 #>  [13081,] 281 340 #>  [13082,] 282 340 #>  [13083,] 283 340 #>  [13084,] 284 340 #>  [13085,] 285 340 #>  [13086,] 286 340 #>  [13087,] 287 340 #>  [13088,] 288 340 #>  [13089,] 289 340 #>  [13090,] 290 340 #>  [13091,] 291 340 #>  [13092,] 292 340 #>  [13093,] 293 340 #>  [13094,] 294 340 #>  [13095,] 295 340 #>  [13096,] 296 340 #>  [13097,] 297 340 #>  [13098,] 298 340 #>  [13099,] 299 340 #>  [13100,] 300 340 #>  [13101,] 301 340 #>  [13102,] 302 340 #>  [13103,] 303 340 #>  [13104,] 304 340 #>  [13105,] 305 340 #>  [13106,] 306 340 #>  [13107,] 307 340 #>  [13108,] 308 340 #>  [13109,] 309 340 #>  [13110,] 310 340 #>  [13111,] 311 340 #>  [13112,] 312 340 #>  [13113,] 313 340 #>  [13114,] 314 340 #>  [13115,] 315 340 #>  [13116,] 316 340 #>  [13117,] 317 340 #>  [13118,] 318 340 #>  [13119,] 319 340 #>  [13120,] 320 340 #>  [13121,] 321 340 #>  [13122,] 322 340 #>  [13123,] 323 340 #>  [13124,] 324 340 #>  [13125,] 325 340 #>  [13126,] 326 340 #>  [13127,] 327 340 #>  [13128,] 328 340 #>  [13129,] 329 340 #>  [13130,] 330 340 #>  [13131,] 331 340 #>  [13132,] 332 340 #>  [13133,] 333 340 #>  [13134,] 334 340 #>  [13135,] 335 340 #>  [13136,] 336 340 #>  [13137,] 337 340 #>  [13138,] 338 340 #>  [13139,] 339 340 #>  [13140,] 340 340 #>  [13141,] 341 340 #>  [13142,] 342 340 #>  [13143,] 343 340 #>  [13144,] 344 340 #>  [13145,] 345 340 #>  [13146,] 346 340 #>  [13147,] 347 340 #>  [13148,] 348 340 #>  [13149,] 349 340 #>  [13150,] 350 340 #>  [13151,] 351 340 #>  [13152,] 352 340 #>  [13153,] 353 340 #>  [13154,] 354 340 #>  [13155,] 355 340 #>  [13156,] 356 340 #>  [13157,] 357 340 #>  [13158,] 358 340 #>  [13159,] 359 340 #>  [13160,] 360 340 #>  [13161,] 361 340 #>  [13162,] 362 340 #>  [13163,] 363 340 #>  [13164,] 364 340 #>  [13165,] 365 340 #>  [13166,] 366 340 #>  [13167,] 367 340 #>  [13168,] 368 340 #>  [13169,] 369 340 #>  [13170,] 370 340 #>  [13171,] 371 340 #>  [13172,] 372 340 #>  [13173,] 373 340 #>  [13174,] 374 340 #>  [13175,] 375 340 #>  [13176,] 376 340 #>  [13177,] 377 340 #>  [13178,] 378 340 #>  [13179,] 379 340 #>  [13180,] 380 340 #>  [13181,] 381 340 #>  [13182,] 382 340 #>  [13183,] 383 340 #>  [13184,] 384 340 #>  [13185,] 385 340 #>  [13186,] 386 340 #>  [13187,] 387 340 #>  [13188,] 388 340 #>  [13189,] 389 340 #>  [13190,] 390 340 #>  [13191,] 391 340 #>  [13192,] 392 340 #>  [13193,] 393 340 #>  [13194,] 394 340 #>  [13195,] 395 340 #>  [13196,] 396 340 #>  [13197,] 397 340 #>  [13198,] 398 340 #>  [13199,] 399 340 #>  [13200,] 400 340 #>  [13201,] 401 340 #>  [13202,] 402 340 #>  [13203,] 403 340 #>  [13204,] 404 340 #>  [13205,] 405 340 #>  [13206,] 406 340 #>  [13207,] 407 340 #>  [13208,] 408 340 #>  [13209,] 409 340 #>  [13210,] 410 340 #>  [13211,] 411 340 #>  [13212,] 412 340 #>  [13213,] 413 340 #>  [13214,] 414 340 #>  [13215,] 415 340 #>  [13216,] 416 340 #>  [13217,] 417 340 #>  [13218,] 418 340 #>  [13219,] 419 340 #>  [13220,] 420 340 #>  [13221,] 421 340 #>  [13222,] 422 340 #>  [13223,] 423 340 #>  [13224,] 424 340 #>  [13225,] 425 340 #>  [13226,] 426 340 #>  [13227,] 427 340 #>  [13228,] 428 340 #>  [13229,] 429 340 #>  [13230,] 430 340 #>  [13231,] 431 340 #>  [13232,] 432 340 #>  [13233,] 433 340 #>  [13234,] 434 340 #>  [13235,] 435 340 #>  [13236,] 436 340 #>  [13237,] 437 340 #>  [13238,] 438 340 #>  [13239,] 439 340 #>  [13240,] 440 340 #>  [13241,] 441 340 #>  [13242,] 442 340 #>  [13243,] 443 340 #>  [13244,] 444 340 #>  [13245,] 445 340 #>  [13246,] 446 340 #>  [13247,] 447 340 #>  [13248,] 448 340 #>  [13249,] 449 340 #>  [13250,] 450 340 #>  [13251,] 451 340 #>  [13252,] 452 340 #>  [13253,] 453 340 #>  [13254,] 454 340 #>  [13255,] 455 340 #>  [13256,] 456 340 #>  [13257,] 457 340 #>  [13258,] 458 340 #>  [13259,] 459 340 #>  [13260,] 460 340 #>  [13261,] 461 340 #>  [13262,] 462 340 #>  [13263,] 463 340 #>  [13264,] 464 340 #>  [13265,] 465 340 #>  [13266,] 466 340 #>  [13267,] 467 340 #>  [13268,] 468 340 #>  [13269,] 469 340 #>  [13270,] 470 340 #>  [13271,] 471 340 #>  [13272,] 472 340 #>  [13273,] 473 340 #>  [13274,] 474 340 #>  [13275,] 475 340 #>  [13276,] 476 340 #>  [13277,] 477 340 #>  [13278,] 478 340 #>  [13279,] 479 340 #>  [13280,] 480 340 #>  [13281,] 481 340 #>  [13282,] 482 340 #>  [13283,] 483 340 #>  [13284,] 484 340 #>  [13285,] 485 340 #>  [13286,] 486 340 #>  [13287,] 487 340 #>  [13288,] 488 340 #>  [13289,] 489 340 #>  [13290,] 490 340 #>  [13291,] 491 340 #>  [13292,] 492 340 #>  [13293,] 493 340 #>  [13294,] 494 340 #>  [13295,] 495 340 #>  [13296,] 496 340 #>  [13297,] 497 340 #>  [13298,] 498 340 #>  [13299,] 499 340 #>  [13300,] 500 340 #>  [13301,] 501 340 #>  [13302,] 502 340 #>  [13303,] 503 340 #>  [13304,] 504 340 #>  [13305,] 505 340 #>  [13306,] 506 340 #>  [13307,] 507 340 #>  [13308,] 508 340 #>  [13309,] 509 340 #>  [13310,] 510 340 #>  [13311,] 511 340 #>  [13312,] 512 340 #>  [13313,] 513 340 #>  [13314,] 514 340 #>  [13315,] 515 340 #>  [13316,] 516 340 #>  [13317,] 517 340 #>  [13318,] 518 340 #>  [13319,] 519 340 #>  [13320,] 520 340 #>  [13321,] 521 340 #>  [13322,] 522 340 #>  [13323,] 523 340 #>  [13324,] 524 340 #>  [13325,] 525 340 #>  [13326,] 526 340 #>  [13327,] 527 340 #>  [13328,] 528 340 #>  [13329,] 529 340 #>  [13330,] 530 340 #>  [13331,] 531 340 #>  [13332,] 532 340 #>  [13333,] 533 340 #>  [13334,] 534 340 #>  [13335,] 535 340 #>  [13336,] 536 340 #>  [13337,] 537 340 #>  [13338,] 538 340 #>  [13339,] 539 340 #>  [13340,] 540 340 #>  [13341,] 541 340 #>  [13342,] 542 340 #>  [13343,] 543 340 #>  [13344,] 544 340 #>  [13345,] 545 340 #>  [13346,] 546 340 #>  [13347,] 547 340 #>  [13348,] 548 340 #>  [13349,] 549 340 #>  [13350,] 550 340 #>  [13351,] 551 340 #>  [13352,] 552 340 #>  [13353,] 553 340 #>  [13354,] 554 340 #>  [13355,] 555 340 #>  [13356,] 556 340 #>  [13357,] 557 340 #>  [13358,] 558 340 #>  [13359,] 559 340 #>  [13360,] 560 340 #>  [13361,] 561 340 #>  [13362,] 562 340 #>  [13363,] 563 340 #>  [13364,] 564 340 #>  [13365,] 565 340 #>  [13366,] 566 340 #>  [13367,] 567 340 #>  [13368,] 568 340 #>  [13369,] 569 340 #>  [13370,] 570 340 #>  [13371,] 571 340 #>  [13372,] 572 340 #>  [13373,] 573 340 #>  [13374,] 574 340 #>  [13375,] 575 340 #>  [13376,] 576 340 #>  [13377,] 577 340 #>  [13378,] 578 340 #>  [13379,] 579 340 #>  [13380,] 580 340 #>  [13381,] 581 340 #>  [13382,] 582 340 #>  [13383,] 583 340 #>  [13384,] 584 340 #>  [13385,] 585 340 #>  [13386,] 586 340 #>  [13387,] 587 340 #>  [13388,] 588 340 #>  [13389,] 589 340 #>  [13390,] 590 340 #>  [13391,] 591 340 #>  [13392,] 592 340 #>  [13393,] 593 340 #>  [13394,] 594 340 #>  [13395,] 595 340 #>  [13396,] 596 340 #>  [13397,] 597 340 #>  [13398,] 598 340 #>  [13399,] 599 340 #>  [13400,] 600 340 #>  [13401,] 601 340 #>  [13402,] 602 340 #>  [13403,] 603 340 #>  [13404,] 604 340 #>  [13405,] 605 340 #>  [13406,] 606 340 #>  [13407,] 607 340 #>  [13408,] 608 340 #>  [13409,] 609 340 #>  [13410,] 610 340 #>  [13411,] 611 340 #>  [13412,] 612 340 #>  [13413,] 613 340 #>  [13414,] 614 340 #>  [13415,] 615 340 #>  [13416,] 616 340 #>  [13417,] 617 340 #>  [13418,] 618 340 #>  [13419,] 619 340 #>  [13420,] 620 340 #>  [13421,] 621 340 #>  [13422,] 622 340 #>  [13423,] 623 340 #>  [13424,] 624 340 #>  [13425,] 625 340 #>  [13426,] 626 340 #>  [13427,] 627 340 #>  [13428,] 628 340 #>  [13429,] 629 340 #>  [13430,] 630 340 #>  [13431,] 631 340 #>  [13432,] 632 340 #>  [13433,] 633 340 #>  [13434,] 634 340 #>  [13435,] 635 340 #>  [13436,] 636 340 #>  [13437,] 637 340 #>  [13438,] 638 340 #>  [13439,] 639 340 #>  [13440,] 640 340 #>  [13441,]   1 339 #>  [13442,]   2 339 #>  [13443,]   3 339 #>  [13444,]   4 339 #>  [13445,]   5 339 #>  [13446,]   6 339 #>  [13447,]   7 339 #>  [13448,]   8 339 #>  [13449,]   9 339 #>  [13450,]  10 339 #>  [13451,]  11 339 #>  [13452,]  12 339 #>  [13453,]  13 339 #>  [13454,]  14 339 #>  [13455,]  15 339 #>  [13456,]  16 339 #>  [13457,]  17 339 #>  [13458,]  18 339 #>  [13459,]  19 339 #>  [13460,]  20 339 #>  [13461,]  21 339 #>  [13462,]  22 339 #>  [13463,]  23 339 #>  [13464,]  24 339 #>  [13465,]  25 339 #>  [13466,]  26 339 #>  [13467,]  27 339 #>  [13468,]  28 339 #>  [13469,]  29 339 #>  [13470,]  30 339 #>  [13471,]  31 339 #>  [13472,]  32 339 #>  [13473,]  33 339 #>  [13474,]  34 339 #>  [13475,]  35 339 #>  [13476,]  36 339 #>  [13477,]  37 339 #>  [13478,]  38 339 #>  [13479,]  39 339 #>  [13480,]  40 339 #>  [13481,]  41 339 #>  [13482,]  42 339 #>  [13483,]  43 339 #>  [13484,]  44 339 #>  [13485,]  45 339 #>  [13486,]  46 339 #>  [13487,]  47 339 #>  [13488,]  48 339 #>  [13489,]  49 339 #>  [13490,]  50 339 #>  [13491,]  51 339 #>  [13492,]  52 339 #>  [13493,]  53 339 #>  [13494,]  54 339 #>  [13495,]  55 339 #>  [13496,]  56 339 #>  [13497,]  57 339 #>  [13498,]  58 339 #>  [13499,]  59 339 #>  [13500,]  60 339 #>  [13501,]  61 339 #>  [13502,]  62 339 #>  [13503,]  63 339 #>  [13504,]  64 339 #>  [13505,]  65 339 #>  [13506,]  66 339 #>  [13507,]  67 339 #>  [13508,]  68 339 #>  [13509,]  69 339 #>  [13510,]  70 339 #>  [13511,]  71 339 #>  [13512,]  72 339 #>  [13513,]  73 339 #>  [13514,]  74 339 #>  [13515,]  75 339 #>  [13516,]  76 339 #>  [13517,]  77 339 #>  [13518,]  78 339 #>  [13519,]  79 339 #>  [13520,]  80 339 #>  [13521,]  81 339 #>  [13522,]  82 339 #>  [13523,]  83 339 #>  [13524,]  84 339 #>  [13525,]  85 339 #>  [13526,]  86 339 #>  [13527,]  87 339 #>  [13528,]  88 339 #>  [13529,]  89 339 #>  [13530,]  90 339 #>  [13531,]  91 339 #>  [13532,]  92 339 #>  [13533,]  93 339 #>  [13534,]  94 339 #>  [13535,]  95 339 #>  [13536,]  96 339 #>  [13537,]  97 339 #>  [13538,]  98 339 #>  [13539,]  99 339 #>  [13540,] 100 339 #>  [13541,] 101 339 #>  [13542,] 102 339 #>  [13543,] 103 339 #>  [13544,] 104 339 #>  [13545,] 105 339 #>  [13546,] 106 339 #>  [13547,] 107 339 #>  [13548,] 108 339 #>  [13549,] 109 339 #>  [13550,] 110 339 #>  [13551,] 111 339 #>  [13552,] 112 339 #>  [13553,] 113 339 #>  [13554,] 114 339 #>  [13555,] 115 339 #>  [13556,] 116 339 #>  [13557,] 117 339 #>  [13558,] 118 339 #>  [13559,] 119 339 #>  [13560,] 120 339 #>  [13561,] 121 339 #>  [13562,] 122 339 #>  [13563,] 123 339 #>  [13564,] 124 339 #>  [13565,] 125 339 #>  [13566,] 126 339 #>  [13567,] 127 339 #>  [13568,] 128 339 #>  [13569,] 129 339 #>  [13570,] 130 339 #>  [13571,] 131 339 #>  [13572,] 132 339 #>  [13573,] 133 339 #>  [13574,] 134 339 #>  [13575,] 135 339 #>  [13576,] 136 339 #>  [13577,] 137 339 #>  [13578,] 138 339 #>  [13579,] 139 339 #>  [13580,] 140 339 #>  [13581,] 141 339 #>  [13582,] 142 339 #>  [13583,] 143 339 #>  [13584,] 144 339 #>  [13585,] 145 339 #>  [13586,] 146 339 #>  [13587,] 147 339 #>  [13588,] 148 339 #>  [13589,] 149 339 #>  [13590,] 150 339 #>  [13591,] 151 339 #>  [13592,] 152 339 #>  [13593,] 153 339 #>  [13594,] 154 339 #>  [13595,] 155 339 #>  [13596,] 156 339 #>  [13597,] 157 339 #>  [13598,] 158 339 #>  [13599,] 159 339 #>  [13600,] 160 339 #>  [13601,] 161 339 #>  [13602,] 162 339 #>  [13603,] 163 339 #>  [13604,] 164 339 #>  [13605,] 165 339 #>  [13606,] 166 339 #>  [13607,] 167 339 #>  [13608,] 168 339 #>  [13609,] 169 339 #>  [13610,] 170 339 #>  [13611,] 171 339 #>  [13612,] 172 339 #>  [13613,] 173 339 #>  [13614,] 174 339 #>  [13615,] 175 339 #>  [13616,] 176 339 #>  [13617,] 177 339 #>  [13618,] 178 339 #>  [13619,] 179 339 #>  [13620,] 180 339 #>  [13621,] 181 339 #>  [13622,] 182 339 #>  [13623,] 183 339 #>  [13624,] 184 339 #>  [13625,] 185 339 #>  [13626,] 186 339 #>  [13627,] 187 339 #>  [13628,] 188 339 #>  [13629,] 189 339 #>  [13630,] 190 339 #>  [13631,] 191 339 #>  [13632,] 192 339 #>  [13633,] 193 339 #>  [13634,] 194 339 #>  [13635,] 195 339 #>  [13636,] 196 339 #>  [13637,] 197 339 #>  [13638,] 198 339 #>  [13639,] 199 339 #>  [13640,] 200 339 #>  [13641,] 201 339 #>  [13642,] 202 339 #>  [13643,] 203 339 #>  [13644,] 204 339 #>  [13645,] 205 339 #>  [13646,] 206 339 #>  [13647,] 207 339 #>  [13648,] 208 339 #>  [13649,] 209 339 #>  [13650,] 210 339 #>  [13651,] 211 339 #>  [13652,] 212 339 #>  [13653,] 213 339 #>  [13654,] 214 339 #>  [13655,] 215 339 #>  [13656,] 216 339 #>  [13657,] 217 339 #>  [13658,] 218 339 #>  [13659,] 219 339 #>  [13660,] 220 339 #>  [13661,] 221 339 #>  [13662,] 222 339 #>  [13663,] 223 339 #>  [13664,] 224 339 #>  [13665,] 225 339 #>  [13666,] 226 339 #>  [13667,] 227 339 #>  [13668,] 228 339 #>  [13669,] 229 339 #>  [13670,] 230 339 #>  [13671,] 231 339 #>  [13672,] 232 339 #>  [13673,] 233 339 #>  [13674,] 234 339 #>  [13675,] 235 339 #>  [13676,] 236 339 #>  [13677,] 237 339 #>  [13678,] 238 339 #>  [13679,] 239 339 #>  [13680,] 240 339 #>  [13681,] 241 339 #>  [13682,] 242 339 #>  [13683,] 243 339 #>  [13684,] 244 339 #>  [13685,] 245 339 #>  [13686,] 246 339 #>  [13687,] 247 339 #>  [13688,] 248 339 #>  [13689,] 249 339 #>  [13690,] 250 339 #>  [13691,] 251 339 #>  [13692,] 252 339 #>  [13693,] 253 339 #>  [13694,] 254 339 #>  [13695,] 255 339 #>  [13696,] 256 339 #>  [13697,] 257 339 #>  [13698,] 258 339 #>  [13699,] 259 339 #>  [13700,] 260 339 #>  [13701,] 261 339 #>  [13702,] 262 339 #>  [13703,] 263 339 #>  [13704,] 264 339 #>  [13705,] 265 339 #>  [13706,] 266 339 #>  [13707,] 267 339 #>  [13708,] 268 339 #>  [13709,] 269 339 #>  [13710,] 270 339 #>  [13711,] 271 339 #>  [13712,] 272 339 #>  [13713,] 273 339 #>  [13714,] 274 339 #>  [13715,] 275 339 #>  [13716,] 276 339 #>  [13717,] 277 339 #>  [13718,] 278 339 #>  [13719,] 279 339 #>  [13720,] 280 339 #>  [13721,] 281 339 #>  [13722,] 282 339 #>  [13723,] 283 339 #>  [13724,] 284 339 #>  [13725,] 285 339 #>  [13726,] 286 339 #>  [13727,] 287 339 #>  [13728,] 288 339 #>  [13729,] 289 339 #>  [13730,] 290 339 #>  [13731,] 291 339 #>  [13732,] 292 339 #>  [13733,] 293 339 #>  [13734,] 294 339 #>  [13735,] 295 339 #>  [13736,] 296 339 #>  [13737,] 297 339 #>  [13738,] 298 339 #>  [13739,] 299 339 #>  [13740,] 300 339 #>  [13741,] 301 339 #>  [13742,] 302 339 #>  [13743,] 303 339 #>  [13744,] 304 339 #>  [13745,] 305 339 #>  [13746,] 306 339 #>  [13747,] 307 339 #>  [13748,] 308 339 #>  [13749,] 309 339 #>  [13750,] 310 339 #>  [13751,] 311 339 #>  [13752,] 312 339 #>  [13753,] 313 339 #>  [13754,] 314 339 #>  [13755,] 315 339 #>  [13756,] 316 339 #>  [13757,] 317 339 #>  [13758,] 318 339 #>  [13759,] 319 339 #>  [13760,] 320 339 #>  [13761,] 321 339 #>  [13762,] 322 339 #>  [13763,] 323 339 #>  [13764,] 324 339 #>  [13765,] 325 339 #>  [13766,] 326 339 #>  [13767,] 327 339 #>  [13768,] 328 339 #>  [13769,] 329 339 #>  [13770,] 330 339 #>  [13771,] 331 339 #>  [13772,] 332 339 #>  [13773,] 333 339 #>  [13774,] 334 339 #>  [13775,] 335 339 #>  [13776,] 336 339 #>  [13777,] 337 339 #>  [13778,] 338 339 #>  [13779,] 339 339 #>  [13780,] 340 339 #>  [13781,] 341 339 #>  [13782,] 342 339 #>  [13783,] 343 339 #>  [13784,] 344 339 #>  [13785,] 345 339 #>  [13786,] 346 339 #>  [13787,] 347 339 #>  [13788,] 348 339 #>  [13789,] 349 339 #>  [13790,] 350 339 #>  [13791,] 351 339 #>  [13792,] 352 339 #>  [13793,] 353 339 #>  [13794,] 354 339 #>  [13795,] 355 339 #>  [13796,] 356 339 #>  [13797,] 357 339 #>  [13798,] 358 339 #>  [13799,] 359 339 #>  [13800,] 360 339 #>  [13801,] 361 339 #>  [13802,] 362 339 #>  [13803,] 363 339 #>  [13804,] 364 339 #>  [13805,] 365 339 #>  [13806,] 366 339 #>  [13807,] 367 339 #>  [13808,] 368 339 #>  [13809,] 369 339 #>  [13810,] 370 339 #>  [13811,] 371 339 #>  [13812,] 372 339 #>  [13813,] 373 339 #>  [13814,] 374 339 #>  [13815,] 375 339 #>  [13816,] 376 339 #>  [13817,] 377 339 #>  [13818,] 378 339 #>  [13819,] 379 339 #>  [13820,] 380 339 #>  [13821,] 381 339 #>  [13822,] 382 339 #>  [13823,] 383 339 #>  [13824,] 384 339 #>  [13825,] 385 339 #>  [13826,] 386 339 #>  [13827,] 387 339 #>  [13828,] 388 339 #>  [13829,] 389 339 #>  [13830,] 390 339 #>  [13831,] 391 339 #>  [13832,] 392 339 #>  [13833,] 393 339 #>  [13834,] 394 339 #>  [13835,] 395 339 #>  [13836,] 396 339 #>  [13837,] 397 339 #>  [13838,] 398 339 #>  [13839,] 399 339 #>  [13840,] 400 339 #>  [13841,] 401 339 #>  [13842,] 402 339 #>  [13843,] 403 339 #>  [13844,] 404 339 #>  [13845,] 405 339 #>  [13846,] 406 339 #>  [13847,] 407 339 #>  [13848,] 408 339 #>  [13849,] 409 339 #>  [13850,] 410 339 #>  [13851,] 411 339 #>  [13852,] 412 339 #>  [13853,] 413 339 #>  [13854,] 414 339 #>  [13855,] 415 339 #>  [13856,] 416 339 #>  [13857,] 417 339 #>  [13858,] 418 339 #>  [13859,] 419 339 #>  [13860,] 420 339 #>  [13861,] 421 339 #>  [13862,] 422 339 #>  [13863,] 423 339 #>  [13864,] 424 339 #>  [13865,] 425 339 #>  [13866,] 426 339 #>  [13867,] 427 339 #>  [13868,] 428 339 #>  [13869,] 429 339 #>  [13870,] 430 339 #>  [13871,] 431 339 #>  [13872,] 432 339 #>  [13873,] 433 339 #>  [13874,] 434 339 #>  [13875,] 435 339 #>  [13876,] 436 339 #>  [13877,] 437 339 #>  [13878,] 438 339 #>  [13879,] 439 339 #>  [13880,] 440 339 #>  [13881,] 441 339 #>  [13882,] 442 339 #>  [13883,] 443 339 #>  [13884,] 444 339 #>  [13885,] 445 339 #>  [13886,] 446 339 #>  [13887,] 447 339 #>  [13888,] 448 339 #>  [13889,] 449 339 #>  [13890,] 450 339 #>  [13891,] 451 339 #>  [13892,] 452 339 #>  [13893,] 453 339 #>  [13894,] 454 339 #>  [13895,] 455 339 #>  [13896,] 456 339 #>  [13897,] 457 339 #>  [13898,] 458 339 #>  [13899,] 459 339 #>  [13900,] 460 339 #>  [13901,] 461 339 #>  [13902,] 462 339 #>  [13903,] 463 339 #>  [13904,] 464 339 #>  [13905,] 465 339 #>  [13906,] 466 339 #>  [13907,] 467 339 #>  [13908,] 468 339 #>  [13909,] 469 339 #>  [13910,] 470 339 #>  [13911,] 471 339 #>  [13912,] 472 339 #>  [13913,] 473 339 #>  [13914,] 474 339 #>  [13915,] 475 339 #>  [13916,] 476 339 #>  [13917,] 477 339 #>  [13918,] 478 339 #>  [13919,] 479 339 #>  [13920,] 480 339 #>  [13921,] 481 339 #>  [13922,] 482 339 #>  [13923,] 483 339 #>  [13924,] 484 339 #>  [13925,] 485 339 #>  [13926,] 486 339 #>  [13927,] 487 339 #>  [13928,] 488 339 #>  [13929,] 489 339 #>  [13930,] 490 339 #>  [13931,] 491 339 #>  [13932,] 492 339 #>  [13933,] 493 339 #>  [13934,] 494 339 #>  [13935,] 495 339 #>  [13936,] 496 339 #>  [13937,] 497 339 #>  [13938,] 498 339 #>  [13939,] 499 339 #>  [13940,] 500 339 #>  [13941,] 501 339 #>  [13942,] 502 339 #>  [13943,] 503 339 #>  [13944,] 504 339 #>  [13945,] 505 339 #>  [13946,] 506 339 #>  [13947,] 507 339 #>  [13948,] 508 339 #>  [13949,] 509 339 #>  [13950,] 510 339 #>  [13951,] 511 339 #>  [13952,] 512 339 #>  [13953,] 513 339 #>  [13954,] 514 339 #>  [13955,] 515 339 #>  [13956,] 516 339 #>  [13957,] 517 339 #>  [13958,] 518 339 #>  [13959,] 519 339 #>  [13960,] 520 339 #>  [13961,] 521 339 #>  [13962,] 522 339 #>  [13963,] 523 339 #>  [13964,] 524 339 #>  [13965,] 525 339 #>  [13966,] 526 339 #>  [13967,] 527 339 #>  [13968,] 528 339 #>  [13969,] 529 339 #>  [13970,] 530 339 #>  [13971,] 531 339 #>  [13972,] 532 339 #>  [13973,] 533 339 #>  [13974,] 534 339 #>  [13975,] 535 339 #>  [13976,] 536 339 #>  [13977,] 537 339 #>  [13978,] 538 339 #>  [13979,] 539 339 #>  [13980,] 540 339 #>  [13981,] 541 339 #>  [13982,] 542 339 #>  [13983,] 543 339 #>  [13984,] 544 339 #>  [13985,] 545 339 #>  [13986,] 546 339 #>  [13987,] 547 339 #>  [13988,] 548 339 #>  [13989,] 549 339 #>  [13990,] 550 339 #>  [13991,] 551 339 #>  [13992,] 552 339 #>  [13993,] 553 339 #>  [13994,] 554 339 #>  [13995,] 555 339 #>  [13996,] 556 339 #>  [13997,] 557 339 #>  [13998,] 558 339 #>  [13999,] 559 339 #>  [14000,] 560 339 #>  [14001,] 561 339 #>  [14002,] 562 339 #>  [14003,] 563 339 #>  [14004,] 564 339 #>  [14005,] 565 339 #>  [14006,] 566 339 #>  [14007,] 567 339 #>  [14008,] 568 339 #>  [14009,] 569 339 #>  [14010,] 570 339 #>  [14011,] 571 339 #>  [14012,] 572 339 #>  [14013,] 573 339 #>  [14014,] 574 339 #>  [14015,] 575 339 #>  [14016,] 576 339 #>  [14017,] 577 339 #>  [14018,] 578 339 #>  [14019,] 579 339 #>  [14020,] 580 339 #>  [14021,] 581 339 #>  [14022,] 582 339 #>  [14023,] 583 339 #>  [14024,] 584 339 #>  [14025,] 585 339 #>  [14026,] 586 339 #>  [14027,] 587 339 #>  [14028,] 588 339 #>  [14029,] 589 339 #>  [14030,] 590 339 #>  [14031,] 591 339 #>  [14032,] 592 339 #>  [14033,] 593 339 #>  [14034,] 594 339 #>  [14035,] 595 339 #>  [14036,] 596 339 #>  [14037,] 597 339 #>  [14038,] 598 339 #>  [14039,] 599 339 #>  [14040,] 600 339 #>  [14041,] 601 339 #>  [14042,] 602 339 #>  [14043,] 603 339 #>  [14044,] 604 339 #>  [14045,] 605 339 #>  [14046,] 606 339 #>  [14047,] 607 339 #>  [14048,] 608 339 #>  [14049,] 609 339 #>  [14050,] 610 339 #>  [14051,] 611 339 #>  [14052,] 612 339 #>  [14053,] 613 339 #>  [14054,] 614 339 #>  [14055,] 615 339 #>  [14056,] 616 339 #>  [14057,] 617 339 #>  [14058,] 618 339 #>  [14059,] 619 339 #>  [14060,] 620 339 #>  [14061,] 621 339 #>  [14062,] 622 339 #>  [14063,] 623 339 #>  [14064,] 624 339 #>  [14065,] 625 339 #>  [14066,] 626 339 #>  [14067,] 627 339 #>  [14068,] 628 339 #>  [14069,] 629 339 #>  [14070,] 630 339 #>  [14071,] 631 339 #>  [14072,] 632 339 #>  [14073,] 633 339 #>  [14074,] 634 339 #>  [14075,] 635 339 #>  [14076,] 636 339 #>  [14077,] 637 339 #>  [14078,] 638 339 #>  [14079,] 639 339 #>  [14080,] 640 339 #>  [14081,]   1 338 #>  [14082,]   2 338 #>  [14083,]   3 338 #>  [14084,]   4 338 #>  [14085,]   5 338 #>  [14086,]   6 338 #>  [14087,]   7 338 #>  [14088,]   8 338 #>  [14089,]   9 338 #>  [14090,]  10 338 #>  [14091,]  11 338 #>  [14092,]  12 338 #>  [14093,]  13 338 #>  [14094,]  14 338 #>  [14095,]  15 338 #>  [14096,]  16 338 #>  [14097,]  17 338 #>  [14098,]  18 338 #>  [14099,]  19 338 #>  [14100,]  20 338 #>  [14101,]  21 338 #>  [14102,]  22 338 #>  [14103,]  23 338 #>  [14104,]  24 338 #>  [14105,]  25 338 #>  [14106,]  26 338 #>  [14107,]  27 338 #>  [14108,]  28 338 #>  [14109,]  29 338 #>  [14110,]  30 338 #>  [14111,]  31 338 #>  [14112,]  32 338 #>  [14113,]  33 338 #>  [14114,]  34 338 #>  [14115,]  35 338 #>  [14116,]  36 338 #>  [14117,]  37 338 #>  [14118,]  38 338 #>  [14119,]  39 338 #>  [14120,]  40 338 #>  [14121,]  41 338 #>  [14122,]  42 338 #>  [14123,]  43 338 #>  [14124,]  44 338 #>  [14125,]  45 338 #>  [14126,]  46 338 #>  [14127,]  47 338 #>  [14128,]  48 338 #>  [14129,]  49 338 #>  [14130,]  50 338 #>  [14131,]  51 338 #>  [14132,]  52 338 #>  [14133,]  53 338 #>  [14134,]  54 338 #>  [14135,]  55 338 #>  [14136,]  56 338 #>  [14137,]  57 338 #>  [14138,]  58 338 #>  [14139,]  59 338 #>  [14140,]  60 338 #>  [14141,]  61 338 #>  [14142,]  62 338 #>  [14143,]  63 338 #>  [14144,]  64 338 #>  [14145,]  65 338 #>  [14146,]  66 338 #>  [14147,]  67 338 #>  [14148,]  68 338 #>  [14149,]  69 338 #>  [14150,]  70 338 #>  [14151,]  71 338 #>  [14152,]  72 338 #>  [14153,]  73 338 #>  [14154,]  74 338 #>  [14155,]  75 338 #>  [14156,]  76 338 #>  [14157,]  77 338 #>  [14158,]  78 338 #>  [14159,]  79 338 #>  [14160,]  80 338 #>  [14161,]  81 338 #>  [14162,]  82 338 #>  [14163,]  83 338 #>  [14164,]  84 338 #>  [14165,]  85 338 #>  [14166,]  86 338 #>  [14167,]  87 338 #>  [14168,]  88 338 #>  [14169,]  89 338 #>  [14170,]  90 338 #>  [14171,]  91 338 #>  [14172,]  92 338 #>  [14173,]  93 338 #>  [14174,]  94 338 #>  [14175,]  95 338 #>  [14176,]  96 338 #>  [14177,]  97 338 #>  [14178,]  98 338 #>  [14179,]  99 338 #>  [14180,] 100 338 #>  [14181,] 101 338 #>  [14182,] 102 338 #>  [14183,] 103 338 #>  [14184,] 104 338 #>  [14185,] 105 338 #>  [14186,] 106 338 #>  [14187,] 107 338 #>  [14188,] 108 338 #>  [14189,] 109 338 #>  [14190,] 110 338 #>  [14191,] 111 338 #>  [14192,] 112 338 #>  [14193,] 113 338 #>  [14194,] 114 338 #>  [14195,] 115 338 #>  [14196,] 116 338 #>  [14197,] 117 338 #>  [14198,] 118 338 #>  [14199,] 119 338 #>  [14200,] 120 338 #>  [14201,] 121 338 #>  [14202,] 122 338 #>  [14203,] 123 338 #>  [14204,] 124 338 #>  [14205,] 125 338 #>  [14206,] 126 338 #>  [14207,] 127 338 #>  [14208,] 128 338 #>  [14209,] 129 338 #>  [14210,] 130 338 #>  [14211,] 131 338 #>  [14212,] 132 338 #>  [14213,] 133 338 #>  [14214,] 134 338 #>  [14215,] 135 338 #>  [14216,] 136 338 #>  [14217,] 137 338 #>  [14218,] 138 338 #>  [14219,] 139 338 #>  [14220,] 140 338 #>  [14221,] 141 338 #>  [14222,] 142 338 #>  [14223,] 143 338 #>  [14224,] 144 338 #>  [14225,] 145 338 #>  [14226,] 146 338 #>  [14227,] 147 338 #>  [14228,] 148 338 #>  [14229,] 149 338 #>  [14230,] 150 338 #>  [14231,] 151 338 #>  [14232,] 152 338 #>  [14233,] 153 338 #>  [14234,] 154 338 #>  [14235,] 155 338 #>  [14236,] 156 338 #>  [14237,] 157 338 #>  [14238,] 158 338 #>  [14239,] 159 338 #>  [14240,] 160 338 #>  [14241,] 161 338 #>  [14242,] 162 338 #>  [14243,] 163 338 #>  [14244,] 164 338 #>  [14245,] 165 338 #>  [14246,] 166 338 #>  [14247,] 167 338 #>  [14248,] 168 338 #>  [14249,] 169 338 #>  [14250,] 170 338 #>  [14251,] 171 338 #>  [14252,] 172 338 #>  [14253,] 173 338 #>  [14254,] 174 338 #>  [14255,] 175 338 #>  [14256,] 176 338 #>  [14257,] 177 338 #>  [14258,] 178 338 #>  [14259,] 179 338 #>  [14260,] 180 338 #>  [14261,] 181 338 #>  [14262,] 182 338 #>  [14263,] 183 338 #>  [14264,] 184 338 #>  [14265,] 185 338 #>  [14266,] 186 338 #>  [14267,] 187 338 #>  [14268,] 188 338 #>  [14269,] 189 338 #>  [14270,] 190 338 #>  [14271,] 191 338 #>  [14272,] 192 338 #>  [14273,] 193 338 #>  [14274,] 194 338 #>  [14275,] 195 338 #>  [14276,] 196 338 #>  [14277,] 197 338 #>  [14278,] 198 338 #>  [14279,] 199 338 #>  [14280,] 200 338 #>  [14281,] 201 338 #>  [14282,] 202 338 #>  [14283,] 203 338 #>  [14284,] 204 338 #>  [14285,] 205 338 #>  [14286,] 206 338 #>  [14287,] 207 338 #>  [14288,] 208 338 #>  [14289,] 209 338 #>  [14290,] 210 338 #>  [14291,] 211 338 #>  [14292,] 212 338 #>  [14293,] 213 338 #>  [14294,] 214 338 #>  [14295,] 215 338 #>  [14296,] 216 338 #>  [14297,] 217 338 #>  [14298,] 218 338 #>  [14299,] 219 338 #>  [14300,] 220 338 #>  [14301,] 221 338 #>  [14302,] 222 338 #>  [14303,] 223 338 #>  [14304,] 224 338 #>  [14305,] 225 338 #>  [14306,] 226 338 #>  [14307,] 227 338 #>  [14308,] 228 338 #>  [14309,] 229 338 #>  [14310,] 230 338 #>  [14311,] 231 338 #>  [14312,] 232 338 #>  [14313,] 233 338 #>  [14314,] 234 338 #>  [14315,] 235 338 #>  [14316,] 236 338 #>  [14317,] 237 338 #>  [14318,] 238 338 #>  [14319,] 239 338 #>  [14320,] 240 338 #>  [14321,] 241 338 #>  [14322,] 242 338 #>  [14323,] 243 338 #>  [14324,] 244 338 #>  [14325,] 245 338 #>  [14326,] 246 338 #>  [14327,] 247 338 #>  [14328,] 248 338 #>  [14329,] 249 338 #>  [14330,] 250 338 #>  [14331,] 251 338 #>  [14332,] 252 338 #>  [14333,] 253 338 #>  [14334,] 254 338 #>  [14335,] 255 338 #>  [14336,] 256 338 #>  [14337,] 257 338 #>  [14338,] 258 338 #>  [14339,] 259 338 #>  [14340,] 260 338 #>  [14341,] 261 338 #>  [14342,] 262 338 #>  [14343,] 263 338 #>  [14344,] 264 338 #>  [14345,] 265 338 #>  [14346,] 266 338 #>  [14347,] 267 338 #>  [14348,] 268 338 #>  [14349,] 269 338 #>  [14350,] 270 338 #>  [14351,] 271 338 #>  [14352,] 272 338 #>  [14353,] 273 338 #>  [14354,] 274 338 #>  [14355,] 275 338 #>  [14356,] 276 338 #>  [14357,] 277 338 #>  [14358,] 278 338 #>  [14359,] 279 338 #>  [14360,] 280 338 #>  [14361,] 281 338 #>  [14362,] 282 338 #>  [14363,] 283 338 #>  [14364,] 284 338 #>  [14365,] 285 338 #>  [14366,] 286 338 #>  [14367,] 287 338 #>  [14368,] 288 338 #>  [14369,] 289 338 #>  [14370,] 290 338 #>  [14371,] 291 338 #>  [14372,] 292 338 #>  [14373,] 293 338 #>  [14374,] 294 338 #>  [14375,] 295 338 #>  [14376,] 296 338 #>  [14377,] 297 338 #>  [14378,] 298 338 #>  [14379,] 299 338 #>  [14380,] 300 338 #>  [14381,] 301 338 #>  [14382,] 302 338 #>  [14383,] 303 338 #>  [14384,] 304 338 #>  [14385,] 305 338 #>  [14386,] 306 338 #>  [14387,] 307 338 #>  [14388,] 308 338 #>  [14389,] 309 338 #>  [14390,] 310 338 #>  [14391,] 311 338 #>  [14392,] 312 338 #>  [14393,] 313 338 #>  [14394,] 314 338 #>  [14395,] 315 338 #>  [14396,] 316 338 #>  [14397,] 317 338 #>  [14398,] 318 338 #>  [14399,] 319 338 #>  [14400,] 320 338 #>  [14401,] 321 338 #>  [14402,] 322 338 #>  [14403,] 323 338 #>  [14404,] 324 338 #>  [14405,] 325 338 #>  [14406,] 326 338 #>  [14407,] 327 338 #>  [14408,] 328 338 #>  [14409,] 329 338 #>  [14410,] 330 338 #>  [14411,] 331 338 #>  [14412,] 332 338 #>  [14413,] 333 338 #>  [14414,] 334 338 #>  [14415,] 335 338 #>  [14416,] 336 338 #>  [14417,] 337 338 #>  [14418,] 338 338 #>  [14419,] 339 338 #>  [14420,] 340 338 #>  [14421,] 341 338 #>  [14422,] 342 338 #>  [14423,] 343 338 #>  [14424,] 344 338 #>  [14425,] 345 338 #>  [14426,] 346 338 #>  [14427,] 347 338 #>  [14428,] 348 338 #>  [14429,] 349 338 #>  [14430,] 350 338 #>  [14431,] 351 338 #>  [14432,] 352 338 #>  [14433,] 353 338 #>  [14434,] 354 338 #>  [14435,] 355 338 #>  [14436,] 356 338 #>  [14437,] 357 338 #>  [14438,] 358 338 #>  [14439,] 359 338 #>  [14440,] 360 338 #>  [14441,] 361 338 #>  [14442,] 362 338 #>  [14443,] 363 338 #>  [14444,] 364 338 #>  [14445,] 365 338 #>  [14446,] 366 338 #>  [14447,] 367 338 #>  [14448,] 368 338 #>  [14449,] 369 338 #>  [14450,] 370 338 #>  [14451,] 371 338 #>  [14452,] 372 338 #>  [14453,] 373 338 #>  [14454,] 374 338 #>  [14455,] 375 338 #>  [14456,] 376 338 #>  [14457,] 377 338 #>  [14458,] 378 338 #>  [14459,] 379 338 #>  [14460,] 380 338 #>  [14461,] 381 338 #>  [14462,] 382 338 #>  [14463,] 383 338 #>  [14464,] 384 338 #>  [14465,] 385 338 #>  [14466,] 386 338 #>  [14467,] 387 338 #>  [14468,] 388 338 #>  [14469,] 389 338 #>  [14470,] 390 338 #>  [14471,] 391 338 #>  [14472,] 392 338 #>  [14473,] 393 338 #>  [14474,] 394 338 #>  [14475,] 395 338 #>  [14476,] 396 338 #>  [14477,] 397 338 #>  [14478,] 398 338 #>  [14479,] 399 338 #>  [14480,] 400 338 #>  [14481,] 401 338 #>  [14482,] 402 338 #>  [14483,] 403 338 #>  [14484,] 404 338 #>  [14485,] 405 338 #>  [14486,] 406 338 #>  [14487,] 407 338 #>  [14488,] 408 338 #>  [14489,] 409 338 #>  [14490,] 410 338 #>  [14491,] 411 338 #>  [14492,] 412 338 #>  [14493,] 413 338 #>  [14494,] 414 338 #>  [14495,] 415 338 #>  [14496,] 416 338 #>  [14497,] 417 338 #>  [14498,] 418 338 #>  [14499,] 419 338 #>  [14500,] 420 338 #>  [14501,] 421 338 #>  [14502,] 422 338 #>  [14503,] 423 338 #>  [14504,] 424 338 #>  [14505,] 425 338 #>  [14506,] 426 338 #>  [14507,] 427 338 #>  [14508,] 428 338 #>  [14509,] 429 338 #>  [14510,] 430 338 #>  [14511,] 431 338 #>  [14512,] 432 338 #>  [14513,] 433 338 #>  [14514,] 434 338 #>  [14515,] 435 338 #>  [14516,] 436 338 #>  [14517,] 437 338 #>  [14518,] 438 338 #>  [14519,] 439 338 #>  [14520,] 440 338 #>  [14521,] 441 338 #>  [14522,] 442 338 #>  [14523,] 443 338 #>  [14524,] 444 338 #>  [14525,] 445 338 #>  [14526,] 446 338 #>  [14527,] 447 338 #>  [14528,] 448 338 #>  [14529,] 449 338 #>  [14530,] 450 338 #>  [14531,] 451 338 #>  [14532,] 452 338 #>  [14533,] 453 338 #>  [14534,] 454 338 #>  [14535,] 455 338 #>  [14536,] 456 338 #>  [14537,] 457 338 #>  [14538,] 458 338 #>  [14539,] 459 338 #>  [14540,] 460 338 #>  [14541,] 461 338 #>  [14542,] 462 338 #>  [14543,] 463 338 #>  [14544,] 464 338 #>  [14545,] 465 338 #>  [14546,] 466 338 #>  [14547,] 467 338 #>  [14548,] 468 338 #>  [14549,] 469 338 #>  [14550,] 470 338 #>  [14551,] 471 338 #>  [14552,] 472 338 #>  [14553,] 473 338 #>  [14554,] 474 338 #>  [14555,] 475 338 #>  [14556,] 476 338 #>  [14557,] 477 338 #>  [14558,] 478 338 #>  [14559,] 479 338 #>  [14560,] 480 338 #>  [14561,] 481 338 #>  [14562,] 482 338 #>  [14563,] 483 338 #>  [14564,] 484 338 #>  [14565,] 485 338 #>  [14566,] 486 338 #>  [14567,] 487 338 #>  [14568,] 488 338 #>  [14569,] 489 338 #>  [14570,] 490 338 #>  [14571,] 491 338 #>  [14572,] 492 338 #>  [14573,] 493 338 #>  [14574,] 494 338 #>  [14575,] 495 338 #>  [14576,] 496 338 #>  [14577,] 497 338 #>  [14578,] 498 338 #>  [14579,] 499 338 #>  [14580,] 500 338 #>  [14581,] 501 338 #>  [14582,] 502 338 #>  [14583,] 503 338 #>  [14584,] 504 338 #>  [14585,] 505 338 #>  [14586,] 506 338 #>  [14587,] 507 338 #>  [14588,] 508 338 #>  [14589,] 509 338 #>  [14590,] 510 338 #>  [14591,] 511 338 #>  [14592,] 512 338 #>  [14593,] 513 338 #>  [14594,] 514 338 #>  [14595,] 515 338 #>  [14596,] 516 338 #>  [14597,] 517 338 #>  [14598,] 518 338 #>  [14599,] 519 338 #>  [14600,] 520 338 #>  [14601,] 521 338 #>  [14602,] 522 338 #>  [14603,] 523 338 #>  [14604,] 524 338 #>  [14605,] 525 338 #>  [14606,] 526 338 #>  [14607,] 527 338 #>  [14608,] 528 338 #>  [14609,] 529 338 #>  [14610,] 530 338 #>  [14611,] 531 338 #>  [14612,] 532 338 #>  [14613,] 533 338 #>  [14614,] 534 338 #>  [14615,] 535 338 #>  [14616,] 536 338 #>  [14617,] 537 338 #>  [14618,] 538 338 #>  [14619,] 539 338 #>  [14620,] 540 338 #>  [14621,] 541 338 #>  [14622,] 542 338 #>  [14623,] 543 338 #>  [14624,] 544 338 #>  [14625,] 545 338 #>  [14626,] 546 338 #>  [14627,] 547 338 #>  [14628,] 548 338 #>  [14629,] 549 338 #>  [14630,] 550 338 #>  [14631,] 551 338 #>  [14632,] 552 338 #>  [14633,] 553 338 #>  [14634,] 554 338 #>  [14635,] 555 338 #>  [14636,] 556 338 #>  [14637,] 557 338 #>  [14638,] 558 338 #>  [14639,] 559 338 #>  [14640,] 560 338 #>  [14641,] 561 338 #>  [14642,] 562 338 #>  [14643,] 563 338 #>  [14644,] 564 338 #>  [14645,] 565 338 #>  [14646,] 566 338 #>  [14647,] 567 338 #>  [14648,] 568 338 #>  [14649,] 569 338 #>  [14650,] 570 338 #>  [14651,] 571 338 #>  [14652,] 572 338 #>  [14653,] 573 338 #>  [14654,] 574 338 #>  [14655,] 575 338 #>  [14656,] 576 338 #>  [14657,] 577 338 #>  [14658,] 578 338 #>  [14659,] 579 338 #>  [14660,] 580 338 #>  [14661,] 581 338 #>  [14662,] 582 338 #>  [14663,] 583 338 #>  [14664,] 584 338 #>  [14665,] 585 338 #>  [14666,] 586 338 #>  [14667,] 587 338 #>  [14668,] 588 338 #>  [14669,] 589 338 #>  [14670,] 590 338 #>  [14671,] 591 338 #>  [14672,] 592 338 #>  [14673,] 593 338 #>  [14674,] 594 338 #>  [14675,] 595 338 #>  [14676,] 596 338 #>  [14677,] 597 338 #>  [14678,] 598 338 #>  [14679,] 599 338 #>  [14680,] 600 338 #>  [14681,] 601 338 #>  [14682,] 602 338 #>  [14683,] 603 338 #>  [14684,] 604 338 #>  [14685,] 605 338 #>  [14686,] 606 338 #>  [14687,] 607 338 #>  [14688,] 608 338 #>  [14689,] 609 338 #>  [14690,] 610 338 #>  [14691,] 611 338 #>  [14692,] 612 338 #>  [14693,] 613 338 #>  [14694,] 614 338 #>  [14695,] 615 338 #>  [14696,] 616 338 #>  [14697,] 617 338 #>  [14698,] 618 338 #>  [14699,] 619 338 #>  [14700,] 620 338 #>  [14701,] 621 338 #>  [14702,] 622 338 #>  [14703,] 623 338 #>  [14704,] 624 338 #>  [14705,] 625 338 #>  [14706,] 626 338 #>  [14707,] 627 338 #>  [14708,] 628 338 #>  [14709,] 629 338 #>  [14710,] 630 338 #>  [14711,] 631 338 #>  [14712,] 632 338 #>  [14713,] 633 338 #>  [14714,] 634 338 #>  [14715,] 635 338 #>  [14716,] 636 338 #>  [14717,] 637 338 #>  [14718,] 638 338 #>  [14719,] 639 338 #>  [14720,] 640 338 #>  [14721,]   1 337 #>  [14722,]   2 337 #>  [14723,]   3 337 #>  [14724,]   4 337 #>  [14725,]   5 337 #>  [14726,]   6 337 #>  [14727,]   7 337 #>  [14728,]   8 337 #>  [14729,]   9 337 #>  [14730,]  10 337 #>  [14731,]  11 337 #>  [14732,]  12 337 #>  [14733,]  13 337 #>  [14734,]  14 337 #>  [14735,]  15 337 #>  [14736,]  16 337 #>  [14737,]  17 337 #>  [14738,]  18 337 #>  [14739,]  19 337 #>  [14740,]  20 337 #>  [14741,]  21 337 #>  [14742,]  22 337 #>  [14743,]  23 337 #>  [14744,]  24 337 #>  [14745,]  25 337 #>  [14746,]  26 337 #>  [14747,]  27 337 #>  [14748,]  28 337 #>  [14749,]  29 337 #>  [14750,]  30 337 #>  [14751,]  31 337 #>  [14752,]  32 337 #>  [14753,]  33 337 #>  [14754,]  34 337 #>  [14755,]  35 337 #>  [14756,]  36 337 #>  [14757,]  37 337 #>  [14758,]  38 337 #>  [14759,]  39 337 #>  [14760,]  40 337 #>  [14761,]  41 337 #>  [14762,]  42 337 #>  [14763,]  43 337 #>  [14764,]  44 337 #>  [14765,]  45 337 #>  [14766,]  46 337 #>  [14767,]  47 337 #>  [14768,]  48 337 #>  [14769,]  49 337 #>  [14770,]  50 337 #>  [14771,]  51 337 #>  [14772,]  52 337 #>  [14773,]  53 337 #>  [14774,]  54 337 #>  [14775,]  55 337 #>  [14776,]  56 337 #>  [14777,]  57 337 #>  [14778,]  58 337 #>  [14779,]  59 337 #>  [14780,]  60 337 #>  [14781,]  61 337 #>  [14782,]  62 337 #>  [14783,]  63 337 #>  [14784,]  64 337 #>  [14785,]  65 337 #>  [14786,]  66 337 #>  [14787,]  67 337 #>  [14788,]  68 337 #>  [14789,]  69 337 #>  [14790,]  70 337 #>  [14791,]  71 337 #>  [14792,]  72 337 #>  [14793,]  73 337 #>  [14794,]  74 337 #>  [14795,]  75 337 #>  [14796,]  76 337 #>  [14797,]  77 337 #>  [14798,]  78 337 #>  [14799,]  79 337 #>  [14800,]  80 337 #>  [14801,]  81 337 #>  [14802,]  82 337 #>  [14803,]  83 337 #>  [14804,]  84 337 #>  [14805,]  85 337 #>  [14806,]  86 337 #>  [14807,]  87 337 #>  [14808,]  88 337 #>  [14809,]  89 337 #>  [14810,]  90 337 #>  [14811,]  91 337 #>  [14812,]  92 337 #>  [14813,]  93 337 #>  [14814,]  94 337 #>  [14815,]  95 337 #>  [14816,]  96 337 #>  [14817,]  97 337 #>  [14818,]  98 337 #>  [14819,]  99 337 #>  [14820,] 100 337 #>  [14821,] 101 337 #>  [14822,] 102 337 #>  [14823,] 103 337 #>  [14824,] 104 337 #>  [14825,] 105 337 #>  [14826,] 106 337 #>  [14827,] 107 337 #>  [14828,] 108 337 #>  [14829,] 109 337 #>  [14830,] 110 337 #>  [14831,] 111 337 #>  [14832,] 112 337 #>  [14833,] 113 337 #>  [14834,] 114 337 #>  [14835,] 115 337 #>  [14836,] 116 337 #>  [14837,] 117 337 #>  [14838,] 118 337 #>  [14839,] 119 337 #>  [14840,] 120 337 #>  [14841,] 121 337 #>  [14842,] 122 337 #>  [14843,] 123 337 #>  [14844,] 124 337 #>  [14845,] 125 337 #>  [14846,] 126 337 #>  [14847,] 127 337 #>  [14848,] 128 337 #>  [14849,] 129 337 #>  [14850,] 130 337 #>  [14851,] 131 337 #>  [14852,] 132 337 #>  [14853,] 133 337 #>  [14854,] 134 337 #>  [14855,] 135 337 #>  [14856,] 136 337 #>  [14857,] 137 337 #>  [14858,] 138 337 #>  [14859,] 139 337 #>  [14860,] 140 337 #>  [14861,] 141 337 #>  [14862,] 142 337 #>  [14863,] 143 337 #>  [14864,] 144 337 #>  [14865,] 145 337 #>  [14866,] 146 337 #>  [14867,] 147 337 #>  [14868,] 148 337 #>  [14869,] 149 337 #>  [14870,] 150 337 #>  [14871,] 151 337 #>  [14872,] 152 337 #>  [14873,] 153 337 #>  [14874,] 154 337 #>  [14875,] 155 337 #>  [14876,] 156 337 #>  [14877,] 157 337 #>  [14878,] 158 337 #>  [14879,] 159 337 #>  [14880,] 160 337 #>  [14881,] 161 337 #>  [14882,] 162 337 #>  [14883,] 163 337 #>  [14884,] 164 337 #>  [14885,] 165 337 #>  [14886,] 166 337 #>  [14887,] 167 337 #>  [14888,] 168 337 #>  [14889,] 169 337 #>  [14890,] 170 337 #>  [14891,] 171 337 #>  [14892,] 172 337 #>  [14893,] 173 337 #>  [14894,] 174 337 #>  [14895,] 175 337 #>  [14896,] 176 337 #>  [14897,] 177 337 #>  [14898,] 178 337 #>  [14899,] 179 337 #>  [14900,] 180 337 #>  [14901,] 181 337 #>  [14902,] 182 337 #>  [14903,] 183 337 #>  [14904,] 184 337 #>  [14905,] 185 337 #>  [14906,] 186 337 #>  [14907,] 187 337 #>  [14908,] 188 337 #>  [14909,] 189 337 #>  [14910,] 190 337 #>  [14911,] 191 337 #>  [14912,] 192 337 #>  [14913,] 193 337 #>  [14914,] 194 337 #>  [14915,] 195 337 #>  [14916,] 196 337 #>  [14917,] 197 337 #>  [14918,] 198 337 #>  [14919,] 199 337 #>  [14920,] 200 337 #>  [14921,] 201 337 #>  [14922,] 202 337 #>  [14923,] 203 337 #>  [14924,] 204 337 #>  [14925,] 205 337 #>  [14926,] 206 337 #>  [14927,] 207 337 #>  [14928,] 208 337 #>  [14929,] 209 337 #>  [14930,] 210 337 #>  [14931,] 211 337 #>  [14932,] 212 337 #>  [14933,] 213 337 #>  [14934,] 214 337 #>  [14935,] 215 337 #>  [14936,] 216 337 #>  [14937,] 217 337 #>  [14938,] 218 337 #>  [14939,] 219 337 #>  [14940,] 220 337 #>  [14941,] 221 337 #>  [14942,] 222 337 #>  [14943,] 223 337 #>  [14944,] 224 337 #>  [14945,] 225 337 #>  [14946,] 226 337 #>  [14947,] 227 337 #>  [14948,] 228 337 #>  [14949,] 229 337 #>  [14950,] 230 337 #>  [14951,] 231 337 #>  [14952,] 232 337 #>  [14953,] 233 337 #>  [14954,] 234 337 #>  [14955,] 235 337 #>  [14956,] 236 337 #>  [14957,] 237 337 #>  [14958,] 238 337 #>  [14959,] 239 337 #>  [14960,] 240 337 #>  [14961,] 241 337 #>  [14962,] 242 337 #>  [14963,] 243 337 #>  [14964,] 244 337 #>  [14965,] 245 337 #>  [14966,] 246 337 #>  [14967,] 247 337 #>  [14968,] 248 337 #>  [14969,] 249 337 #>  [14970,] 250 337 #>  [14971,] 251 337 #>  [14972,] 252 337 #>  [14973,] 253 337 #>  [14974,] 254 337 #>  [14975,] 255 337 #>  [14976,] 256 337 #>  [14977,] 257 337 #>  [14978,] 258 337 #>  [14979,] 259 337 #>  [14980,] 260 337 #>  [14981,] 261 337 #>  [14982,] 262 337 #>  [14983,] 263 337 #>  [14984,] 264 337 #>  [14985,] 265 337 #>  [14986,] 266 337 #>  [14987,] 267 337 #>  [14988,] 268 337 #>  [14989,] 269 337 #>  [14990,] 270 337 #>  [14991,] 271 337 #>  [14992,] 272 337 #>  [14993,] 273 337 #>  [14994,] 274 337 #>  [14995,] 275 337 #>  [14996,] 276 337 #>  [14997,] 277 337 #>  [14998,] 278 337 #>  [14999,] 279 337 #>  [15000,] 280 337 #>  [15001,] 281 337 #>  [15002,] 282 337 #>  [15003,] 283 337 #>  [15004,] 284 337 #>  [15005,] 285 337 #>  [15006,] 286 337 #>  [15007,] 287 337 #>  [15008,] 288 337 #>  [15009,] 289 337 #>  [15010,] 290 337 #>  [15011,] 291 337 #>  [15012,] 292 337 #>  [15013,] 293 337 #>  [15014,] 294 337 #>  [15015,] 295 337 #>  [15016,] 296 337 #>  [15017,] 297 337 #>  [15018,] 298 337 #>  [15019,] 299 337 #>  [15020,] 300 337 #>  [15021,] 301 337 #>  [15022,] 302 337 #>  [15023,] 303 337 #>  [15024,] 304 337 #>  [15025,] 305 337 #>  [15026,] 306 337 #>  [15027,] 307 337 #>  [15028,] 308 337 #>  [15029,] 309 337 #>  [15030,] 310 337 #>  [15031,] 311 337 #>  [15032,] 312 337 #>  [15033,] 313 337 #>  [15034,] 314 337 #>  [15035,] 315 337 #>  [15036,] 316 337 #>  [15037,] 317 337 #>  [15038,] 318 337 #>  [15039,] 319 337 #>  [15040,] 320 337 #>  [15041,] 321 337 #>  [15042,] 322 337 #>  [15043,] 323 337 #>  [15044,] 324 337 #>  [15045,] 325 337 #>  [15046,] 326 337 #>  [15047,] 327 337 #>  [15048,] 328 337 #>  [15049,] 329 337 #>  [15050,] 330 337 #>  [15051,] 331 337 #>  [15052,] 332 337 #>  [15053,] 333 337 #>  [15054,] 334 337 #>  [15055,] 335 337 #>  [15056,] 336 337 #>  [15057,] 337 337 #>  [15058,] 338 337 #>  [15059,] 339 337 #>  [15060,] 340 337 #>  [15061,] 341 337 #>  [15062,] 342 337 #>  [15063,] 343 337 #>  [15064,] 344 337 #>  [15065,] 345 337 #>  [15066,] 346 337 #>  [15067,] 347 337 #>  [15068,] 348 337 #>  [15069,] 349 337 #>  [15070,] 350 337 #>  [15071,] 351 337 #>  [15072,] 352 337 #>  [15073,] 353 337 #>  [15074,] 354 337 #>  [15075,] 355 337 #>  [15076,] 356 337 #>  [15077,] 357 337 #>  [15078,] 358 337 #>  [15079,] 359 337 #>  [15080,] 360 337 #>  [15081,] 361 337 #>  [15082,] 362 337 #>  [15083,] 363 337 #>  [15084,] 364 337 #>  [15085,] 365 337 #>  [15086,] 366 337 #>  [15087,] 367 337 #>  [15088,] 368 337 #>  [15089,] 369 337 #>  [15090,] 370 337 #>  [15091,] 371 337 #>  [15092,] 372 337 #>  [15093,] 373 337 #>  [15094,] 374 337 #>  [15095,] 375 337 #>  [15096,] 376 337 #>  [15097,] 377 337 #>  [15098,] 378 337 #>  [15099,] 379 337 #>  [15100,] 380 337 #>  [15101,] 381 337 #>  [15102,] 382 337 #>  [15103,] 383 337 #>  [15104,] 384 337 #>  [15105,] 385 337 #>  [15106,] 386 337 #>  [15107,] 387 337 #>  [15108,] 388 337 #>  [15109,] 389 337 #>  [15110,] 390 337 #>  [15111,] 391 337 #>  [15112,] 392 337 #>  [15113,] 393 337 #>  [15114,] 394 337 #>  [15115,] 395 337 #>  [15116,] 396 337 #>  [15117,] 397 337 #>  [15118,] 398 337 #>  [15119,] 399 337 #>  [15120,] 400 337 #>  [15121,] 401 337 #>  [15122,] 402 337 #>  [15123,] 403 337 #>  [15124,] 404 337 #>  [15125,] 405 337 #>  [15126,] 406 337 #>  [15127,] 407 337 #>  [15128,] 408 337 #>  [15129,] 409 337 #>  [15130,] 410 337 #>  [15131,] 411 337 #>  [15132,] 412 337 #>  [15133,] 413 337 #>  [15134,] 414 337 #>  [15135,] 415 337 #>  [15136,] 416 337 #>  [15137,] 417 337 #>  [15138,] 418 337 #>  [15139,] 419 337 #>  [15140,] 420 337 #>  [15141,] 421 337 #>  [15142,] 422 337 #>  [15143,] 423 337 #>  [15144,] 424 337 #>  [15145,] 425 337 #>  [15146,] 426 337 #>  [15147,] 427 337 #>  [15148,] 428 337 #>  [15149,] 429 337 #>  [15150,] 430 337 #>  [15151,] 431 337 #>  [15152,] 432 337 #>  [15153,] 433 337 #>  [15154,] 434 337 #>  [15155,] 435 337 #>  [15156,] 436 337 #>  [15157,] 437 337 #>  [15158,] 438 337 #>  [15159,] 439 337 #>  [15160,] 440 337 #>  [15161,] 441 337 #>  [15162,] 442 337 #>  [15163,] 443 337 #>  [15164,] 444 337 #>  [15165,] 445 337 #>  [15166,] 446 337 #>  [15167,] 447 337 #>  [15168,] 448 337 #>  [15169,] 449 337 #>  [15170,] 450 337 #>  [15171,] 451 337 #>  [15172,] 452 337 #>  [15173,] 453 337 #>  [15174,] 454 337 #>  [15175,] 455 337 #>  [15176,] 456 337 #>  [15177,] 457 337 #>  [15178,] 458 337 #>  [15179,] 459 337 #>  [15180,] 460 337 #>  [15181,] 461 337 #>  [15182,] 462 337 #>  [15183,] 463 337 #>  [15184,] 464 337 #>  [15185,] 465 337 #>  [15186,] 466 337 #>  [15187,] 467 337 #>  [15188,] 468 337 #>  [15189,] 469 337 #>  [15190,] 470 337 #>  [15191,] 471 337 #>  [15192,] 472 337 #>  [15193,] 473 337 #>  [15194,] 474 337 #>  [15195,] 475 337 #>  [15196,] 476 337 #>  [15197,] 477 337 #>  [15198,] 478 337 #>  [15199,] 479 337 #>  [15200,] 480 337 #>  [15201,] 481 337 #>  [15202,] 482 337 #>  [15203,] 483 337 #>  [15204,] 484 337 #>  [15205,] 485 337 #>  [15206,] 486 337 #>  [15207,] 487 337 #>  [15208,] 488 337 #>  [15209,] 489 337 #>  [15210,] 490 337 #>  [15211,] 491 337 #>  [15212,] 492 337 #>  [15213,] 493 337 #>  [15214,] 494 337 #>  [15215,] 495 337 #>  [15216,] 496 337 #>  [15217,] 497 337 #>  [15218,] 498 337 #>  [15219,] 499 337 #>  [15220,] 500 337 #>  [15221,] 501 337 #>  [15222,] 502 337 #>  [15223,] 503 337 #>  [15224,] 504 337 #>  [15225,] 505 337 #>  [15226,] 506 337 #>  [15227,] 507 337 #>  [15228,] 508 337 #>  [15229,] 509 337 #>  [15230,] 510 337 #>  [15231,] 511 337 #>  [15232,] 512 337 #>  [15233,] 513 337 #>  [15234,] 514 337 #>  [15235,] 515 337 #>  [15236,] 516 337 #>  [15237,] 517 337 #>  [15238,] 518 337 #>  [15239,] 519 337 #>  [15240,] 520 337 #>  [15241,] 521 337 #>  [15242,] 522 337 #>  [15243,] 523 337 #>  [15244,] 524 337 #>  [15245,] 525 337 #>  [15246,] 526 337 #>  [15247,] 527 337 #>  [15248,] 528 337 #>  [15249,] 529 337 #>  [15250,] 530 337 #>  [15251,] 531 337 #>  [15252,] 532 337 #>  [15253,] 533 337 #>  [15254,] 534 337 #>  [15255,] 535 337 #>  [15256,] 536 337 #>  [15257,] 537 337 #>  [15258,] 538 337 #>  [15259,] 539 337 #>  [15260,] 540 337 #>  [15261,] 541 337 #>  [15262,] 542 337 #>  [15263,] 543 337 #>  [15264,] 544 337 #>  [15265,] 545 337 #>  [15266,] 546 337 #>  [15267,] 547 337 #>  [15268,] 548 337 #>  [15269,] 549 337 #>  [15270,] 550 337 #>  [15271,] 551 337 #>  [15272,] 552 337 #>  [15273,] 553 337 #>  [15274,] 554 337 #>  [15275,] 555 337 #>  [15276,] 556 337 #>  [15277,] 557 337 #>  [15278,] 558 337 #>  [15279,] 559 337 #>  [15280,] 560 337 #>  [15281,] 561 337 #>  [15282,] 562 337 #>  [15283,] 563 337 #>  [15284,] 564 337 #>  [15285,] 565 337 #>  [15286,] 566 337 #>  [15287,] 567 337 #>  [15288,] 568 337 #>  [15289,] 569 337 #>  [15290,] 570 337 #>  [15291,] 571 337 #>  [15292,] 572 337 #>  [15293,] 573 337 #>  [15294,] 574 337 #>  [15295,] 575 337 #>  [15296,] 576 337 #>  [15297,] 577 337 #>  [15298,] 578 337 #>  [15299,] 579 337 #>  [15300,] 580 337 #>  [15301,] 581 337 #>  [15302,] 582 337 #>  [15303,] 583 337 #>  [15304,] 584 337 #>  [15305,] 585 337 #>  [15306,] 586 337 #>  [15307,] 587 337 #>  [15308,] 588 337 #>  [15309,] 589 337 #>  [15310,] 590 337 #>  [15311,] 591 337 #>  [15312,] 592 337 #>  [15313,] 593 337 #>  [15314,] 594 337 #>  [15315,] 595 337 #>  [15316,] 596 337 #>  [15317,] 597 337 #>  [15318,] 598 337 #>  [15319,] 599 337 #>  [15320,] 600 337 #>  [15321,] 601 337 #>  [15322,] 602 337 #>  [15323,] 603 337 #>  [15324,] 604 337 #>  [15325,] 605 337 #>  [15326,] 606 337 #>  [15327,] 607 337 #>  [15328,] 608 337 #>  [15329,] 609 337 #>  [15330,] 610 337 #>  [15331,] 611 337 #>  [15332,] 612 337 #>  [15333,] 613 337 #>  [15334,] 614 337 #>  [15335,] 615 337 #>  [15336,] 616 337 #>  [15337,] 617 337 #>  [15338,] 618 337 #>  [15339,] 619 337 #>  [15340,] 620 337 #>  [15341,] 621 337 #>  [15342,] 622 337 #>  [15343,] 623 337 #>  [15344,] 624 337 #>  [15345,] 625 337 #>  [15346,] 626 337 #>  [15347,] 627 337 #>  [15348,] 628 337 #>  [15349,] 629 337 #>  [15350,] 630 337 #>  [15351,] 631 337 #>  [15352,] 632 337 #>  [15353,] 633 337 #>  [15354,] 634 337 #>  [15355,] 635 337 #>  [15356,] 636 337 #>  [15357,] 637 337 #>  [15358,] 638 337 #>  [15359,] 639 337 #>  [15360,] 640 337 #>  [15361,]   1 336 #>  [15362,]   2 336 #>  [15363,]   3 336 #>  [15364,]   4 336 #>  [15365,]   5 336 #>  [15366,]   6 336 #>  [15367,]   7 336 #>  [15368,]   8 336 #>  [15369,]   9 336 #>  [15370,]  10 336 #>  [15371,]  11 336 #>  [15372,]  12 336 #>  [15373,]  13 336 #>  [15374,]  14 336 #>  [15375,]  15 336 #>  [15376,]  16 336 #>  [15377,]  17 336 #>  [15378,]  18 336 #>  [15379,]  19 336 #>  [15380,]  20 336 #>  [15381,]  21 336 #>  [15382,]  22 336 #>  [15383,]  23 336 #>  [15384,]  24 336 #>  [15385,]  25 336 #>  [15386,]  26 336 #>  [15387,]  27 336 #>  [15388,]  28 336 #>  [15389,]  29 336 #>  [15390,]  30 336 #>  [15391,]  31 336 #>  [15392,]  32 336 #>  [15393,]  33 336 #>  [15394,]  34 336 #>  [15395,]  35 336 #>  [15396,]  36 336 #>  [15397,]  37 336 #>  [15398,]  38 336 #>  [15399,]  39 336 #>  [15400,]  40 336 #>  [15401,]  41 336 #>  [15402,]  42 336 #>  [15403,]  43 336 #>  [15404,]  44 336 #>  [15405,]  45 336 #>  [15406,]  46 336 #>  [15407,]  47 336 #>  [15408,]  48 336 #>  [15409,]  49 336 #>  [15410,]  50 336 #>  [15411,]  51 336 #>  [15412,]  52 336 #>  [15413,]  53 336 #>  [15414,]  54 336 #>  [15415,]  55 336 #>  [15416,]  56 336 #>  [15417,]  57 336 #>  [15418,]  58 336 #>  [15419,]  59 336 #>  [15420,]  60 336 #>  [15421,]  61 336 #>  [15422,]  62 336 #>  [15423,]  63 336 #>  [15424,]  64 336 #>  [15425,]  65 336 #>  [15426,]  66 336 #>  [15427,]  67 336 #>  [15428,]  68 336 #>  [15429,]  69 336 #>  [15430,]  70 336 #>  [15431,]  71 336 #>  [15432,]  72 336 #>  [15433,]  73 336 #>  [15434,]  74 336 #>  [15435,]  75 336 #>  [15436,]  76 336 #>  [15437,]  77 336 #>  [15438,]  78 336 #>  [15439,]  79 336 #>  [15440,]  80 336 #>  [15441,]  81 336 #>  [15442,]  82 336 #>  [15443,]  83 336 #>  [15444,]  84 336 #>  [15445,]  85 336 #>  [15446,]  86 336 #>  [15447,]  87 336 #>  [15448,]  88 336 #>  [15449,]  89 336 #>  [15450,]  90 336 #>  [15451,]  91 336 #>  [15452,]  92 336 #>  [15453,]  93 336 #>  [15454,]  94 336 #>  [15455,]  95 336 #>  [15456,]  96 336 #>  [15457,]  97 336 #>  [15458,]  98 336 #>  [15459,]  99 336 #>  [15460,] 100 336 #>  [15461,] 101 336 #>  [15462,] 102 336 #>  [15463,] 103 336 #>  [15464,] 104 336 #>  [15465,] 105 336 #>  [15466,] 106 336 #>  [15467,] 107 336 #>  [15468,] 108 336 #>  [15469,] 109 336 #>  [15470,] 110 336 #>  [15471,] 111 336 #>  [15472,] 112 336 #>  [15473,] 113 336 #>  [15474,] 114 336 #>  [15475,] 115 336 #>  [15476,] 116 336 #>  [15477,] 117 336 #>  [15478,] 118 336 #>  [15479,] 119 336 #>  [15480,] 120 336 #>  [15481,] 121 336 #>  [15482,] 122 336 #>  [15483,] 123 336 #>  [15484,] 124 336 #>  [15485,] 125 336 #>  [15486,] 126 336 #>  [15487,] 127 336 #>  [15488,] 128 336 #>  [15489,] 129 336 #>  [15490,] 130 336 #>  [15491,] 131 336 #>  [15492,] 132 336 #>  [15493,] 133 336 #>  [15494,] 134 336 #>  [15495,] 135 336 #>  [15496,] 136 336 #>  [15497,] 137 336 #>  [15498,] 138 336 #>  [15499,] 139 336 #>  [15500,] 140 336 #>  [15501,] 141 336 #>  [15502,] 142 336 #>  [15503,] 143 336 #>  [15504,] 144 336 #>  [15505,] 145 336 #>  [15506,] 146 336 #>  [15507,] 147 336 #>  [15508,] 148 336 #>  [15509,] 149 336 #>  [15510,] 150 336 #>  [15511,] 151 336 #>  [15512,] 152 336 #>  [15513,] 153 336 #>  [15514,] 154 336 #>  [15515,] 155 336 #>  [15516,] 156 336 #>  [15517,] 157 336 #>  [15518,] 158 336 #>  [15519,] 159 336 #>  [15520,] 160 336 #>  [15521,] 161 336 #>  [15522,] 162 336 #>  [15523,] 163 336 #>  [15524,] 164 336 #>  [15525,] 165 336 #>  [15526,] 166 336 #>  [15527,] 167 336 #>  [15528,] 168 336 #>  [15529,] 169 336 #>  [15530,] 170 336 #>  [15531,] 171 336 #>  [15532,] 172 336 #>  [15533,] 173 336 #>  [15534,] 174 336 #>  [15535,] 175 336 #>  [15536,] 176 336 #>  [15537,] 177 336 #>  [15538,] 178 336 #>  [15539,] 179 336 #>  [15540,] 180 336 #>  [15541,] 181 336 #>  [15542,] 182 336 #>  [15543,] 183 336 #>  [15544,] 184 336 #>  [15545,] 185 336 #>  [15546,] 186 336 #>  [15547,] 187 336 #>  [15548,] 188 336 #>  [15549,] 189 336 #>  [15550,] 190 336 #>  [15551,] 191 336 #>  [15552,] 192 336 #>  [15553,] 193 336 #>  [15554,] 194 336 #>  [15555,] 195 336 #>  [15556,] 196 336 #>  [15557,] 197 336 #>  [15558,] 198 336 #>  [15559,] 199 336 #>  [15560,] 200 336 #>  [15561,] 201 336 #>  [15562,] 202 336 #>  [15563,] 203 336 #>  [15564,] 204 336 #>  [15565,] 205 336 #>  [15566,] 206 336 #>  [15567,] 207 336 #>  [15568,] 208 336 #>  [15569,] 209 336 #>  [15570,] 210 336 #>  [15571,] 211 336 #>  [15572,] 212 336 #>  [15573,] 213 336 #>  [15574,] 214 336 #>  [15575,] 215 336 #>  [15576,] 216 336 #>  [15577,] 217 336 #>  [15578,] 218 336 #>  [15579,] 219 336 #>  [15580,] 220 336 #>  [15581,] 221 336 #>  [15582,] 222 336 #>  [15583,] 223 336 #>  [15584,] 224 336 #>  [15585,] 225 336 #>  [15586,] 226 336 #>  [15587,] 227 336 #>  [15588,] 228 336 #>  [15589,] 229 336 #>  [15590,] 230 336 #>  [15591,] 231 336 #>  [15592,] 232 336 #>  [15593,] 233 336 #>  [15594,] 234 336 #>  [15595,] 235 336 #>  [15596,] 236 336 #>  [15597,] 237 336 #>  [15598,] 238 336 #>  [15599,] 239 336 #>  [15600,] 240 336 #>  [15601,] 241 336 #>  [15602,] 242 336 #>  [15603,] 243 336 #>  [15604,] 244 336 #>  [15605,] 245 336 #>  [15606,] 246 336 #>  [15607,] 247 336 #>  [15608,] 248 336 #>  [15609,] 249 336 #>  [15610,] 250 336 #>  [15611,] 251 336 #>  [15612,] 252 336 #>  [15613,] 253 336 #>  [15614,] 254 336 #>  [15615,] 255 336 #>  [15616,] 256 336 #>  [15617,] 257 336 #>  [15618,] 258 336 #>  [15619,] 259 336 #>  [15620,] 260 336 #>  [15621,] 261 336 #>  [15622,] 262 336 #>  [15623,] 263 336 #>  [15624,] 264 336 #>  [15625,] 265 336 #>  [15626,] 266 336 #>  [15627,] 267 336 #>  [15628,] 268 336 #>  [15629,] 269 336 #>  [15630,] 270 336 #>  [15631,] 271 336 #>  [15632,] 272 336 #>  [15633,] 273 336 #>  [15634,] 274 336 #>  [15635,] 275 336 #>  [15636,] 276 336 #>  [15637,] 277 336 #>  [15638,] 278 336 #>  [15639,] 279 336 #>  [15640,] 280 336 #>  [15641,] 281 336 #>  [15642,] 282 336 #>  [15643,] 283 336 #>  [15644,] 284 336 #>  [15645,] 285 336 #>  [15646,] 286 336 #>  [15647,] 287 336 #>  [15648,] 288 336 #>  [15649,] 289 336 #>  [15650,] 290 336 #>  [15651,] 291 336 #>  [15652,] 292 336 #>  [15653,] 293 336 #>  [15654,] 294 336 #>  [15655,] 295 336 #>  [15656,] 296 336 #>  [15657,] 297 336 #>  [15658,] 298 336 #>  [15659,] 299 336 #>  [15660,] 300 336 #>  [15661,] 301 336 #>  [15662,] 302 336 #>  [15663,] 303 336 #>  [15664,] 304 336 #>  [15665,] 305 336 #>  [15666,] 306 336 #>  [15667,] 307 336 #>  [15668,] 308 336 #>  [15669,] 309 336 #>  [15670,] 310 336 #>  [15671,] 311 336 #>  [15672,] 312 336 #>  [15673,] 313 336 #>  [15674,] 314 336 #>  [15675,] 315 336 #>  [15676,] 316 336 #>  [15677,] 317 336 #>  [15678,] 318 336 #>  [15679,] 319 336 #>  [15680,] 320 336 #>  [15681,] 321 336 #>  [15682,] 322 336 #>  [15683,] 323 336 #>  [15684,] 324 336 #>  [15685,] 325 336 #>  [15686,] 326 336 #>  [15687,] 327 336 #>  [15688,] 328 336 #>  [15689,] 329 336 #>  [15690,] 330 336 #>  [15691,] 331 336 #>  [15692,] 332 336 #>  [15693,] 333 336 #>  [15694,] 334 336 #>  [15695,] 335 336 #>  [15696,] 336 336 #>  [15697,] 337 336 #>  [15698,] 338 336 #>  [15699,] 339 336 #>  [15700,] 340 336 #>  [15701,] 341 336 #>  [15702,] 342 336 #>  [15703,] 343 336 #>  [15704,] 344 336 #>  [15705,] 345 336 #>  [15706,] 346 336 #>  [15707,] 347 336 #>  [15708,] 348 336 #>  [15709,] 349 336 #>  [15710,] 350 336 #>  [15711,] 351 336 #>  [15712,] 352 336 #>  [15713,] 353 336 #>  [15714,] 354 336 #>  [15715,] 355 336 #>  [15716,] 356 336 #>  [15717,] 357 336 #>  [15718,] 358 336 #>  [15719,] 359 336 #>  [15720,] 360 336 #>  [15721,] 361 336 #>  [15722,] 362 336 #>  [15723,] 363 336 #>  [15724,] 364 336 #>  [15725,] 365 336 #>  [15726,] 366 336 #>  [15727,] 367 336 #>  [15728,] 368 336 #>  [15729,] 369 336 #>  [15730,] 370 336 #>  [15731,] 371 336 #>  [15732,] 372 336 #>  [15733,] 373 336 #>  [15734,] 374 336 #>  [15735,] 375 336 #>  [15736,] 376 336 #>  [15737,] 377 336 #>  [15738,] 378 336 #>  [15739,] 379 336 #>  [15740,] 380 336 #>  [15741,] 381 336 #>  [15742,] 382 336 #>  [15743,] 383 336 #>  [15744,] 384 336 #>  [15745,] 385 336 #>  [15746,] 386 336 #>  [15747,] 387 336 #>  [15748,] 388 336 #>  [15749,] 389 336 #>  [15750,] 390 336 #>  [15751,] 391 336 #>  [15752,] 392 336 #>  [15753,] 393 336 #>  [15754,] 394 336 #>  [15755,] 395 336 #>  [15756,] 396 336 #>  [15757,] 397 336 #>  [15758,] 398 336 #>  [15759,] 399 336 #>  [15760,] 400 336 #>  [15761,] 401 336 #>  [15762,] 402 336 #>  [15763,] 403 336 #>  [15764,] 404 336 #>  [15765,] 405 336 #>  [15766,] 406 336 #>  [15767,] 407 336 #>  [15768,] 408 336 #>  [15769,] 409 336 #>  [15770,] 410 336 #>  [15771,] 411 336 #>  [15772,] 412 336 #>  [15773,] 413 336 #>  [15774,] 414 336 #>  [15775,] 415 336 #>  [15776,] 416 336 #>  [15777,] 417 336 #>  [15778,] 418 336 #>  [15779,] 419 336 #>  [15780,] 420 336 #>  [15781,] 421 336 #>  [15782,] 422 336 #>  [15783,] 423 336 #>  [15784,] 424 336 #>  [15785,] 425 336 #>  [15786,] 426 336 #>  [15787,] 427 336 #>  [15788,] 428 336 #>  [15789,] 429 336 #>  [15790,] 430 336 #>  [15791,] 431 336 #>  [15792,] 432 336 #>  [15793,] 433 336 #>  [15794,] 434 336 #>  [15795,] 435 336 #>  [15796,] 436 336 #>  [15797,] 437 336 #>  [15798,] 438 336 #>  [15799,] 439 336 #>  [15800,] 440 336 #>  [15801,] 441 336 #>  [15802,] 442 336 #>  [15803,] 443 336 #>  [15804,] 444 336 #>  [15805,] 445 336 #>  [15806,] 446 336 #>  [15807,] 447 336 #>  [15808,] 448 336 #>  [15809,] 449 336 #>  [15810,] 450 336 #>  [15811,] 451 336 #>  [15812,] 452 336 #>  [15813,] 453 336 #>  [15814,] 454 336 #>  [15815,] 455 336 #>  [15816,] 456 336 #>  [15817,] 457 336 #>  [15818,] 458 336 #>  [15819,] 459 336 #>  [15820,] 460 336 #>  [15821,] 461 336 #>  [15822,] 462 336 #>  [15823,] 463 336 #>  [15824,] 464 336 #>  [15825,] 465 336 #>  [15826,] 466 336 #>  [15827,] 467 336 #>  [15828,] 468 336 #>  [15829,] 469 336 #>  [15830,] 470 336 #>  [15831,] 471 336 #>  [15832,] 472 336 #>  [15833,] 473 336 #>  [15834,] 474 336 #>  [15835,] 475 336 #>  [15836,] 476 336 #>  [15837,] 477 336 #>  [15838,] 478 336 #>  [15839,] 479 336 #>  [15840,] 480 336 #>  [15841,] 481 336 #>  [15842,] 482 336 #>  [15843,] 483 336 #>  [15844,] 484 336 #>  [15845,] 485 336 #>  [15846,] 486 336 #>  [15847,] 487 336 #>  [15848,] 488 336 #>  [15849,] 489 336 #>  [15850,] 490 336 #>  [15851,] 491 336 #>  [15852,] 492 336 #>  [15853,] 493 336 #>  [15854,] 494 336 #>  [15855,] 495 336 #>  [15856,] 496 336 #>  [15857,] 497 336 #>  [15858,] 498 336 #>  [15859,] 499 336 #>  [15860,] 500 336 #>  [15861,] 501 336 #>  [15862,] 502 336 #>  [15863,] 503 336 #>  [15864,] 504 336 #>  [15865,] 505 336 #>  [15866,] 506 336 #>  [15867,] 507 336 #>  [15868,] 508 336 #>  [15869,] 509 336 #>  [15870,] 510 336 #>  [15871,] 511 336 #>  [15872,] 512 336 #>  [15873,] 513 336 #>  [15874,] 514 336 #>  [15875,] 515 336 #>  [15876,] 516 336 #>  [15877,] 517 336 #>  [15878,] 518 336 #>  [15879,] 519 336 #>  [15880,] 520 336 #>  [15881,] 521 336 #>  [15882,] 522 336 #>  [15883,] 523 336 #>  [15884,] 524 336 #>  [15885,] 525 336 #>  [15886,] 526 336 #>  [15887,] 527 336 #>  [15888,] 528 336 #>  [15889,] 529 336 #>  [15890,] 530 336 #>  [15891,] 531 336 #>  [15892,] 532 336 #>  [15893,] 533 336 #>  [15894,] 534 336 #>  [15895,] 535 336 #>  [15896,] 536 336 #>  [15897,] 537 336 #>  [15898,] 538 336 #>  [15899,] 539 336 #>  [15900,] 540 336 #>  [15901,] 541 336 #>  [15902,] 542 336 #>  [15903,] 543 336 #>  [15904,] 544 336 #>  [15905,] 545 336 #>  [15906,] 546 336 #>  [15907,] 547 336 #>  [15908,] 548 336 #>  [15909,] 549 336 #>  [15910,] 550 336 #>  [15911,] 551 336 #>  [15912,] 552 336 #>  [15913,] 553 336 #>  [15914,] 554 336 #>  [15915,] 555 336 #>  [15916,] 556 336 #>  [15917,] 557 336 #>  [15918,] 558 336 #>  [15919,] 559 336 #>  [15920,] 560 336 #>  [15921,] 561 336 #>  [15922,] 562 336 #>  [15923,] 563 336 #>  [15924,] 564 336 #>  [15925,] 565 336 #>  [15926,] 566 336 #>  [15927,] 567 336 #>  [15928,] 568 336 #>  [15929,] 569 336 #>  [15930,] 570 336 #>  [15931,] 571 336 #>  [15932,] 572 336 #>  [15933,] 573 336 #>  [15934,] 574 336 #>  [15935,] 575 336 #>  [15936,] 576 336 #>  [15937,] 577 336 #>  [15938,] 578 336 #>  [15939,] 579 336 #>  [15940,] 580 336 #>  [15941,] 581 336 #>  [15942,] 582 336 #>  [15943,] 583 336 #>  [15944,] 584 336 #>  [15945,] 585 336 #>  [15946,] 586 336 #>  [15947,] 587 336 #>  [15948,] 588 336 #>  [15949,] 589 336 #>  [15950,] 590 336 #>  [15951,] 591 336 #>  [15952,] 592 336 #>  [15953,] 593 336 #>  [15954,] 594 336 #>  [15955,] 595 336 #>  [15956,] 596 336 #>  [15957,] 597 336 #>  [15958,] 598 336 #>  [15959,] 599 336 #>  [15960,] 600 336 #>  [15961,] 601 336 #>  [15962,] 602 336 #>  [15963,] 603 336 #>  [15964,] 604 336 #>  [15965,] 605 336 #>  [15966,] 606 336 #>  [15967,] 607 336 #>  [15968,] 608 336 #>  [15969,] 609 336 #>  [15970,] 610 336 #>  [15971,] 611 336 #>  [15972,] 612 336 #>  [15973,] 613 336 #>  [15974,] 614 336 #>  [15975,] 615 336 #>  [15976,] 616 336 #>  [15977,] 617 336 #>  [15978,] 618 336 #>  [15979,] 619 336 #>  [15980,] 620 336 #>  [15981,] 621 336 #>  [15982,] 622 336 #>  [15983,] 623 336 #>  [15984,] 624 336 #>  [15985,] 625 336 #>  [15986,] 626 336 #>  [15987,] 627 336 #>  [15988,] 628 336 #>  [15989,] 629 336 #>  [15990,] 630 336 #>  [15991,] 631 336 #>  [15992,] 632 336 #>  [15993,] 633 336 #>  [15994,] 634 336 #>  [15995,] 635 336 #>  [15996,] 636 336 #>  [15997,] 637 336 #>  [15998,] 638 336 #>  [15999,] 639 336 #>  [16000,] 640 336 #>  [16001,]   1 335 #>  [16002,]   2 335 #>  [16003,]   3 335 #>  [16004,]   4 335 #>  [16005,]   5 335 #>  [16006,]   6 335 #>  [16007,]   7 335 #>  [16008,]   8 335 #>  [16009,]   9 335 #>  [16010,]  10 335 #>  [16011,]  11 335 #>  [16012,]  12 335 #>  [16013,]  13 335 #>  [16014,]  14 335 #>  [16015,]  15 335 #>  [16016,]  16 335 #>  [16017,]  17 335 #>  [16018,]  18 335 #>  [16019,]  19 335 #>  [16020,]  20 335 #>  [16021,]  21 335 #>  [16022,]  22 335 #>  [16023,]  23 335 #>  [16024,]  24 335 #>  [16025,]  25 335 #>  [16026,]  26 335 #>  [16027,]  27 335 #>  [16028,]  28 335 #>  [16029,]  29 335 #>  [16030,]  30 335 #>  [16031,]  31 335 #>  [16032,]  32 335 #>  [16033,]  33 335 #>  [16034,]  34 335 #>  [16035,]  35 335 #>  [16036,]  36 335 #>  [16037,]  37 335 #>  [16038,]  38 335 #>  [16039,]  39 335 #>  [16040,]  40 335 #>  [16041,]  41 335 #>  [16042,]  42 335 #>  [16043,]  43 335 #>  [16044,]  44 335 #>  [16045,]  45 335 #>  [16046,]  46 335 #>  [16047,]  47 335 #>  [16048,]  48 335 #>  [16049,]  49 335 #>  [16050,]  50 335 #>  [16051,]  51 335 #>  [16052,]  52 335 #>  [16053,]  53 335 #>  [16054,]  54 335 #>  [16055,]  55 335 #>  [16056,]  56 335 #>  [16057,]  57 335 #>  [16058,]  58 335 #>  [16059,]  59 335 #>  [16060,]  60 335 #>  [16061,]  61 335 #>  [16062,]  62 335 #>  [16063,]  63 335 #>  [16064,]  64 335 #>  [16065,]  65 335 #>  [16066,]  66 335 #>  [16067,]  67 335 #>  [16068,]  68 335 #>  [16069,]  69 335 #>  [16070,]  70 335 #>  [16071,]  71 335 #>  [16072,]  72 335 #>  [16073,]  73 335 #>  [16074,]  74 335 #>  [16075,]  75 335 #>  [16076,]  76 335 #>  [16077,]  77 335 #>  [16078,]  78 335 #>  [16079,]  79 335 #>  [16080,]  80 335 #>  [16081,]  81 335 #>  [16082,]  82 335 #>  [16083,]  83 335 #>  [16084,]  84 335 #>  [16085,]  85 335 #>  [16086,]  86 335 #>  [16087,]  87 335 #>  [16088,]  88 335 #>  [16089,]  89 335 #>  [16090,]  90 335 #>  [16091,]  91 335 #>  [16092,]  92 335 #>  [16093,]  93 335 #>  [16094,]  94 335 #>  [16095,]  95 335 #>  [16096,]  96 335 #>  [16097,]  97 335 #>  [16098,]  98 335 #>  [16099,]  99 335 #>  [16100,] 100 335 #>  [16101,] 101 335 #>  [16102,] 102 335 #>  [16103,] 103 335 #>  [16104,] 104 335 #>  [16105,] 105 335 #>  [16106,] 106 335 #>  [16107,] 107 335 #>  [16108,] 108 335 #>  [16109,] 109 335 #>  [16110,] 110 335 #>  [16111,] 111 335 #>  [16112,] 112 335 #>  [16113,] 113 335 #>  [16114,] 114 335 #>  [16115,] 115 335 #>  [16116,] 116 335 #>  [16117,] 117 335 #>  [16118,] 118 335 #>  [16119,] 119 335 #>  [16120,] 120 335 #>  [16121,] 121 335 #>  [16122,] 122 335 #>  [16123,] 123 335 #>  [16124,] 124 335 #>  [16125,] 125 335 #>  [16126,] 126 335 #>  [16127,] 127 335 #>  [16128,] 128 335 #>  [16129,] 129 335 #>  [16130,] 130 335 #>  [16131,] 131 335 #>  [16132,] 132 335 #>  [16133,] 133 335 #>  [16134,] 134 335 #>  [16135,] 135 335 #>  [16136,] 136 335 #>  [16137,] 137 335 #>  [16138,] 138 335 #>  [16139,] 139 335 #>  [16140,] 140 335 #>  [16141,] 141 335 #>  [16142,] 142 335 #>  [16143,] 143 335 #>  [16144,] 144 335 #>  [16145,] 145 335 #>  [16146,] 146 335 #>  [16147,] 147 335 #>  [16148,] 148 335 #>  [16149,] 149 335 #>  [16150,] 150 335 #>  [16151,] 151 335 #>  [16152,] 152 335 #>  [16153,] 153 335 #>  [16154,] 154 335 #>  [16155,] 155 335 #>  [16156,] 156 335 #>  [16157,] 157 335 #>  [16158,] 158 335 #>  [16159,] 159 335 #>  [16160,] 160 335 #>  [16161,] 161 335 #>  [16162,] 162 335 #>  [16163,] 163 335 #>  [16164,] 164 335 #>  [16165,] 165 335 #>  [16166,] 166 335 #>  [16167,] 167 335 #>  [16168,] 168 335 #>  [16169,] 169 335 #>  [16170,] 170 335 #>  [16171,] 171 335 #>  [16172,] 172 335 #>  [16173,] 173 335 #>  [16174,] 174 335 #>  [16175,] 175 335 #>  [16176,] 176 335 #>  [16177,] 177 335 #>  [16178,] 178 335 #>  [16179,] 179 335 #>  [16180,] 180 335 #>  [16181,] 181 335 #>  [16182,] 182 335 #>  [16183,] 183 335 #>  [16184,] 184 335 #>  [16185,] 185 335 #>  [16186,] 186 335 #>  [16187,] 187 335 #>  [16188,] 188 335 #>  [16189,] 189 335 #>  [16190,] 190 335 #>  [16191,] 191 335 #>  [16192,] 192 335 #>  [16193,] 193 335 #>  [16194,] 194 335 #>  [16195,] 195 335 #>  [16196,] 196 335 #>  [16197,] 197 335 #>  [16198,] 198 335 #>  [16199,] 199 335 #>  [16200,] 200 335 #>  [16201,] 201 335 #>  [16202,] 202 335 #>  [16203,] 203 335 #>  [16204,] 204 335 #>  [16205,] 205 335 #>  [16206,] 206 335 #>  [16207,] 207 335 #>  [16208,] 208 335 #>  [16209,] 209 335 #>  [16210,] 210 335 #>  [16211,] 211 335 #>  [16212,] 212 335 #>  [16213,] 213 335 #>  [16214,] 214 335 #>  [16215,] 215 335 #>  [16216,] 216 335 #>  [16217,] 217 335 #>  [16218,] 218 335 #>  [16219,] 219 335 #>  [16220,] 220 335 #>  [16221,] 221 335 #>  [16222,] 222 335 #>  [16223,] 223 335 #>  [16224,] 224 335 #>  [16225,] 225 335 #>  [16226,] 226 335 #>  [16227,] 227 335 #>  [16228,] 228 335 #>  [16229,] 229 335 #>  [16230,] 230 335 #>  [16231,] 231 335 #>  [16232,] 232 335 #>  [16233,] 233 335 #>  [16234,] 234 335 #>  [16235,] 235 335 #>  [16236,] 236 335 #>  [16237,] 237 335 #>  [16238,] 238 335 #>  [16239,] 239 335 #>  [16240,] 240 335 #>  [16241,] 241 335 #>  [16242,] 242 335 #>  [16243,] 243 335 #>  [16244,] 244 335 #>  [16245,] 245 335 #>  [16246,] 246 335 #>  [16247,] 247 335 #>  [16248,] 248 335 #>  [16249,] 249 335 #>  [16250,] 250 335 #>  [16251,] 251 335 #>  [16252,] 252 335 #>  [16253,] 253 335 #>  [16254,] 254 335 #>  [16255,] 255 335 #>  [16256,] 256 335 #>  [16257,] 257 335 #>  [16258,] 258 335 #>  [16259,] 259 335 #>  [16260,] 260 335 #>  [16261,] 261 335 #>  [16262,] 262 335 #>  [16263,] 263 335 #>  [16264,] 264 335 #>  [16265,] 265 335 #>  [16266,] 266 335 #>  [16267,] 267 335 #>  [16268,] 268 335 #>  [16269,] 269 335 #>  [16270,] 270 335 #>  [16271,] 271 335 #>  [16272,] 272 335 #>  [16273,] 273 335 #>  [16274,] 274 335 #>  [16275,] 275 335 #>  [16276,] 276 335 #>  [16277,] 277 335 #>  [16278,] 278 335 #>  [16279,] 279 335 #>  [16280,] 280 335 #>  [16281,] 281 335 #>  [16282,] 282 335 #>  [16283,] 283 335 #>  [16284,] 284 335 #>  [16285,] 285 335 #>  [16286,] 286 335 #>  [16287,] 287 335 #>  [16288,] 288 335 #>  [16289,] 289 335 #>  [16290,] 290 335 #>  [16291,] 291 335 #>  [16292,] 292 335 #>  [16293,] 293 335 #>  [16294,] 294 335 #>  [16295,] 295 335 #>  [16296,] 296 335 #>  [16297,] 297 335 #>  [16298,] 298 335 #>  [16299,] 299 335 #>  [16300,] 300 335 #>  [16301,] 301 335 #>  [16302,] 302 335 #>  [16303,] 303 335 #>  [16304,] 304 335 #>  [16305,] 305 335 #>  [16306,] 306 335 #>  [16307,] 307 335 #>  [16308,] 308 335 #>  [16309,] 309 335 #>  [16310,] 310 335 #>  [16311,] 311 335 #>  [16312,] 312 335 #>  [16313,] 313 335 #>  [16314,] 314 335 #>  [16315,] 315 335 #>  [16316,] 316 335 #>  [16317,] 317 335 #>  [16318,] 318 335 #>  [16319,] 319 335 #>  [16320,] 320 335 #>  [16321,] 321 335 #>  [16322,] 322 335 #>  [16323,] 323 335 #>  [16324,] 324 335 #>  [16325,] 325 335 #>  [16326,] 326 335 #>  [16327,] 327 335 #>  [16328,] 328 335 #>  [16329,] 329 335 #>  [16330,] 330 335 #>  [16331,] 331 335 #>  [16332,] 332 335 #>  [16333,] 333 335 #>  [16334,] 334 335 #>  [16335,] 335 335 #>  [16336,] 336 335 #>  [16337,] 337 335 #>  [16338,] 338 335 #>  [16339,] 339 335 #>  [16340,] 340 335 #>  [16341,] 341 335 #>  [16342,] 342 335 #>  [16343,] 343 335 #>  [16344,] 344 335 #>  [16345,] 345 335 #>  [16346,] 346 335 #>  [16347,] 347 335 #>  [16348,] 348 335 #>  [16349,] 349 335 #>  [16350,] 350 335 #>  [16351,] 351 335 #>  [16352,] 352 335 #>  [16353,] 353 335 #>  [16354,] 354 335 #>  [16355,] 355 335 #>  [16356,] 356 335 #>  [16357,] 357 335 #>  [16358,] 358 335 #>  [16359,] 359 335 #>  [16360,] 360 335 #>  [16361,] 361 335 #>  [16362,] 362 335 #>  [16363,] 363 335 #>  [16364,] 364 335 #>  [16365,] 365 335 #>  [16366,] 366 335 #>  [16367,] 367 335 #>  [16368,] 368 335 #>  [16369,] 369 335 #>  [16370,] 370 335 #>  [16371,] 371 335 #>  [16372,] 372 335 #>  [16373,] 373 335 #>  [16374,] 374 335 #>  [16375,] 375 335 #>  [16376,] 376 335 #>  [16377,] 377 335 #>  [16378,] 378 335 #>  [16379,] 379 335 #>  [16380,] 380 335 #>  [16381,] 381 335 #>  [16382,] 382 335 #>  [16383,] 383 335 #>  [16384,] 384 335 #>  [16385,] 385 335 #>  [16386,] 386 335 #>  [16387,] 387 335 #>  [16388,] 388 335 #>  [16389,] 389 335 #>  [16390,] 390 335 #>  [16391,] 391 335 #>  [16392,] 392 335 #>  [16393,] 393 335 #>  [16394,] 394 335 #>  [16395,] 395 335 #>  [16396,] 396 335 #>  [16397,] 397 335 #>  [16398,] 398 335 #>  [16399,] 399 335 #>  [16400,] 400 335 #>  [16401,] 401 335 #>  [16402,] 402 335 #>  [16403,] 403 335 #>  [16404,] 404 335 #>  [16405,] 405 335 #>  [16406,] 406 335 #>  [16407,] 407 335 #>  [16408,] 408 335 #>  [16409,] 409 335 #>  [16410,] 410 335 #>  [16411,] 411 335 #>  [16412,] 412 335 #>  [16413,] 413 335 #>  [16414,] 414 335 #>  [16415,] 415 335 #>  [16416,] 416 335 #>  [16417,] 417 335 #>  [16418,] 418 335 #>  [16419,] 419 335 #>  [16420,] 420 335 #>  [16421,] 421 335 #>  [16422,] 422 335 #>  [16423,] 423 335 #>  [16424,] 424 335 #>  [16425,] 425 335 #>  [16426,] 426 335 #>  [16427,] 427 335 #>  [16428,] 428 335 #>  [16429,] 429 335 #>  [16430,] 430 335 #>  [16431,] 431 335 #>  [16432,] 432 335 #>  [16433,] 433 335 #>  [16434,] 434 335 #>  [16435,] 435 335 #>  [16436,] 436 335 #>  [16437,] 437 335 #>  [16438,] 438 335 #>  [16439,] 439 335 #>  [16440,] 440 335 #>  [16441,] 441 335 #>  [16442,] 442 335 #>  [16443,] 443 335 #>  [16444,] 444 335 #>  [16445,] 445 335 #>  [16446,] 446 335 #>  [16447,] 447 335 #>  [16448,] 448 335 #>  [16449,] 449 335 #>  [16450,] 450 335 #>  [16451,] 451 335 #>  [16452,] 452 335 #>  [16453,] 453 335 #>  [16454,] 454 335 #>  [16455,] 455 335 #>  [16456,] 456 335 #>  [16457,] 457 335 #>  [16458,] 458 335 #>  [16459,] 459 335 #>  [16460,] 460 335 #>  [16461,] 461 335 #>  [16462,] 462 335 #>  [16463,] 463 335 #>  [16464,] 464 335 #>  [16465,] 465 335 #>  [16466,] 466 335 #>  [16467,] 467 335 #>  [16468,] 468 335 #>  [16469,] 469 335 #>  [16470,] 470 335 #>  [16471,] 471 335 #>  [16472,] 472 335 #>  [16473,] 473 335 #>  [16474,] 474 335 #>  [16475,] 475 335 #>  [16476,] 476 335 #>  [16477,] 477 335 #>  [16478,] 478 335 #>  [16479,] 479 335 #>  [16480,] 480 335 #>  [16481,] 481 335 #>  [16482,] 482 335 #>  [16483,] 483 335 #>  [16484,] 484 335 #>  [16485,] 485 335 #>  [16486,] 486 335 #>  [16487,] 487 335 #>  [16488,] 488 335 #>  [16489,] 489 335 #>  [16490,] 490 335 #>  [16491,] 491 335 #>  [16492,] 492 335 #>  [16493,] 493 335 #>  [16494,] 494 335 #>  [16495,] 495 335 #>  [16496,] 496 335 #>  [16497,] 497 335 #>  [16498,] 498 335 #>  [16499,] 499 335 #>  [16500,] 500 335 #>  [16501,] 501 335 #>  [16502,] 502 335 #>  [16503,] 503 335 #>  [16504,] 504 335 #>  [16505,] 505 335 #>  [16506,] 506 335 #>  [16507,] 507 335 #>  [16508,] 508 335 #>  [16509,] 509 335 #>  [16510,] 510 335 #>  [16511,] 511 335 #>  [16512,] 512 335 #>  [16513,] 513 335 #>  [16514,] 514 335 #>  [16515,] 515 335 #>  [16516,] 516 335 #>  [16517,] 517 335 #>  [16518,] 518 335 #>  [16519,] 519 335 #>  [16520,] 520 335 #>  [16521,] 521 335 #>  [16522,] 522 335 #>  [16523,] 523 335 #>  [16524,] 524 335 #>  [16525,] 525 335 #>  [16526,] 526 335 #>  [16527,] 527 335 #>  [16528,] 528 335 #>  [16529,] 529 335 #>  [16530,] 530 335 #>  [16531,] 531 335 #>  [16532,] 532 335 #>  [16533,] 533 335 #>  [16534,] 534 335 #>  [16535,] 535 335 #>  [16536,] 536 335 #>  [16537,] 537 335 #>  [16538,] 538 335 #>  [16539,] 539 335 #>  [16540,] 540 335 #>  [16541,] 541 335 #>  [16542,] 542 335 #>  [16543,] 543 335 #>  [16544,] 544 335 #>  [16545,] 545 335 #>  [16546,] 546 335 #>  [16547,] 547 335 #>  [16548,] 548 335 #>  [16549,] 549 335 #>  [16550,] 550 335 #>  [16551,] 551 335 #>  [16552,] 552 335 #>  [16553,] 553 335 #>  [16554,] 554 335 #>  [16555,] 555 335 #>  [16556,] 556 335 #>  [16557,] 557 335 #>  [16558,] 558 335 #>  [16559,] 559 335 #>  [16560,] 560 335 #>  [16561,] 561 335 #>  [16562,] 562 335 #>  [16563,] 563 335 #>  [16564,] 564 335 #>  [16565,] 565 335 #>  [16566,] 566 335 #>  [16567,] 567 335 #>  [16568,] 568 335 #>  [16569,] 569 335 #>  [16570,] 570 335 #>  [16571,] 571 335 #>  [16572,] 572 335 #>  [16573,] 573 335 #>  [16574,] 574 335 #>  [16575,] 575 335 #>  [16576,] 576 335 #>  [16577,] 577 335 #>  [16578,] 578 335 #>  [16579,] 579 335 #>  [16580,] 580 335 #>  [16581,] 581 335 #>  [16582,] 582 335 #>  [16583,] 583 335 #>  [16584,] 584 335 #>  [16585,] 585 335 #>  [16586,] 586 335 #>  [16587,] 587 335 #>  [16588,] 588 335 #>  [16589,] 589 335 #>  [16590,] 590 335 #>  [16591,] 591 335 #>  [16592,] 592 335 #>  [16593,] 593 335 #>  [16594,] 594 335 #>  [16595,] 595 335 #>  [16596,] 596 335 #>  [16597,] 597 335 #>  [16598,] 598 335 #>  [16599,] 599 335 #>  [16600,] 600 335 #>  [16601,] 601 335 #>  [16602,] 602 335 #>  [16603,] 603 335 #>  [16604,] 604 335 #>  [16605,] 605 335 #>  [16606,] 606 335 #>  [16607,] 607 335 #>  [16608,] 608 335 #>  [16609,] 609 335 #>  [16610,] 610 335 #>  [16611,] 611 335 #>  [16612,] 612 335 #>  [16613,] 613 335 #>  [16614,] 614 335 #>  [16615,] 615 335 #>  [16616,] 616 335 #>  [16617,] 617 335 #>  [16618,] 618 335 #>  [16619,] 619 335 #>  [16620,] 620 335 #>  [16621,] 621 335 #>  [16622,] 622 335 #>  [16623,] 623 335 #>  [16624,] 624 335 #>  [16625,] 625 335 #>  [16626,] 626 335 #>  [16627,] 627 335 #>  [16628,] 628 335 #>  [16629,] 629 335 #>  [16630,] 630 335 #>  [16631,] 631 335 #>  [16632,] 632 335 #>  [16633,] 633 335 #>  [16634,] 634 335 #>  [16635,] 635 335 #>  [16636,] 636 335 #>  [16637,] 637 335 #>  [16638,] 638 335 #>  [16639,] 639 335 #>  [16640,] 640 335 #>  [16641,]   1 334 #>  [16642,]   2 334 #>  [16643,]   3 334 #>  [16644,]   4 334 #>  [16645,]   5 334 #>  [16646,]   6 334 #>  [16647,]   7 334 #>  [16648,]   8 334 #>  [16649,]   9 334 #>  [16650,]  10 334 #>  [16651,]  11 334 #>  [16652,]  12 334 #>  [16653,]  13 334 #>  [16654,]  14 334 #>  [16655,]  15 334 #>  [16656,]  16 334 #>  [16657,]  17 334 #>  [16658,]  18 334 #>  [16659,]  19 334 #>  [16660,]  20 334 #>  [16661,]  21 334 #>  [16662,]  22 334 #>  [16663,]  23 334 #>  [16664,]  24 334 #>  [16665,]  25 334 #>  [16666,]  26 334 #>  [16667,]  27 334 #>  [16668,]  28 334 #>  [16669,]  29 334 #>  [16670,]  30 334 #>  [16671,]  31 334 #>  [16672,]  32 334 #>  [16673,]  33 334 #>  [16674,]  34 334 #>  [16675,]  35 334 #>  [16676,]  36 334 #>  [16677,]  37 334 #>  [16678,]  38 334 #>  [16679,]  39 334 #>  [16680,]  40 334 #>  [16681,]  41 334 #>  [16682,]  42 334 #>  [16683,]  43 334 #>  [16684,]  44 334 #>  [16685,]  45 334 #>  [16686,]  46 334 #>  [16687,]  47 334 #>  [16688,]  48 334 #>  [16689,]  49 334 #>  [16690,]  50 334 #>  [16691,]  51 334 #>  [16692,]  52 334 #>  [16693,]  53 334 #>  [16694,]  54 334 #>  [16695,]  55 334 #>  [16696,]  56 334 #>  [16697,]  57 334 #>  [16698,]  58 334 #>  [16699,]  59 334 #>  [16700,]  60 334 #>  [16701,]  61 334 #>  [16702,]  62 334 #>  [16703,]  63 334 #>  [16704,]  64 334 #>  [16705,]  65 334 #>  [16706,]  66 334 #>  [16707,]  67 334 #>  [16708,]  68 334 #>  [16709,]  69 334 #>  [16710,]  70 334 #>  [16711,]  71 334 #>  [16712,]  72 334 #>  [16713,]  73 334 #>  [16714,]  74 334 #>  [16715,]  75 334 #>  [16716,]  76 334 #>  [16717,]  77 334 #>  [16718,]  78 334 #>  [16719,]  79 334 #>  [16720,]  80 334 #>  [16721,]  81 334 #>  [16722,]  82 334 #>  [16723,]  83 334 #>  [16724,]  84 334 #>  [16725,]  85 334 #>  [16726,]  86 334 #>  [16727,]  87 334 #>  [16728,]  88 334 #>  [16729,]  89 334 #>  [16730,]  90 334 #>  [16731,]  91 334 #>  [16732,]  92 334 #>  [16733,]  93 334 #>  [16734,]  94 334 #>  [16735,]  95 334 #>  [16736,]  96 334 #>  [16737,]  97 334 #>  [16738,]  98 334 #>  [16739,]  99 334 #>  [16740,] 100 334 #>  [16741,] 101 334 #>  [16742,] 102 334 #>  [16743,] 103 334 #>  [16744,] 104 334 #>  [16745,] 105 334 #>  [16746,] 106 334 #>  [16747,] 107 334 #>  [16748,] 108 334 #>  [16749,] 109 334 #>  [16750,] 110 334 #>  [16751,] 111 334 #>  [16752,] 112 334 #>  [16753,] 113 334 #>  [16754,] 114 334 #>  [16755,] 115 334 #>  [16756,] 116 334 #>  [16757,] 117 334 #>  [16758,] 118 334 #>  [16759,] 119 334 #>  [16760,] 120 334 #>  [16761,] 121 334 #>  [16762,] 122 334 #>  [16763,] 123 334 #>  [16764,] 124 334 #>  [16765,] 125 334 #>  [16766,] 126 334 #>  [16767,] 127 334 #>  [16768,] 128 334 #>  [16769,] 129 334 #>  [16770,] 130 334 #>  [16771,] 131 334 #>  [16772,] 132 334 #>  [16773,] 133 334 #>  [16774,] 134 334 #>  [16775,] 135 334 #>  [16776,] 136 334 #>  [16777,] 137 334 #>  [16778,] 138 334 #>  [16779,] 139 334 #>  [16780,] 140 334 #>  [16781,] 141 334 #>  [16782,] 142 334 #>  [16783,] 143 334 #>  [16784,] 144 334 #>  [16785,] 145 334 #>  [16786,] 146 334 #>  [16787,] 147 334 #>  [16788,] 148 334 #>  [16789,] 149 334 #>  [16790,] 150 334 #>  [16791,] 151 334 #>  [16792,] 152 334 #>  [16793,] 153 334 #>  [16794,] 154 334 #>  [16795,] 155 334 #>  [16796,] 156 334 #>  [16797,] 157 334 #>  [16798,] 158 334 #>  [16799,] 159 334 #>  [16800,] 160 334 #>  [16801,] 161 334 #>  [16802,] 162 334 #>  [16803,] 163 334 #>  [16804,] 164 334 #>  [16805,] 165 334 #>  [16806,] 166 334 #>  [16807,] 167 334 #>  [16808,] 168 334 #>  [16809,] 169 334 #>  [16810,] 170 334 #>  [16811,] 171 334 #>  [16812,] 172 334 #>  [16813,] 173 334 #>  [16814,] 174 334 #>  [16815,] 175 334 #>  [16816,] 176 334 #>  [16817,] 177 334 #>  [16818,] 178 334 #>  [16819,] 179 334 #>  [16820,] 180 334 #>  [16821,] 181 334 #>  [16822,] 182 334 #>  [16823,] 183 334 #>  [16824,] 184 334 #>  [16825,] 185 334 #>  [16826,] 186 334 #>  [16827,] 187 334 #>  [16828,] 188 334 #>  [16829,] 189 334 #>  [16830,] 190 334 #>  [16831,] 191 334 #>  [16832,] 192 334 #>  [16833,] 193 334 #>  [16834,] 194 334 #>  [16835,] 195 334 #>  [16836,] 196 334 #>  [16837,] 197 334 #>  [16838,] 198 334 #>  [16839,] 199 334 #>  [16840,] 200 334 #>  [16841,] 201 334 #>  [16842,] 202 334 #>  [16843,] 203 334 #>  [16844,] 204 334 #>  [16845,] 205 334 #>  [16846,] 206 334 #>  [16847,] 207 334 #>  [16848,] 208 334 #>  [16849,] 209 334 #>  [16850,] 210 334 #>  [16851,] 211 334 #>  [16852,] 212 334 #>  [16853,] 213 334 #>  [16854,] 214 334 #>  [16855,] 215 334 #>  [16856,] 216 334 #>  [16857,] 217 334 #>  [16858,] 218 334 #>  [16859,] 219 334 #>  [16860,] 220 334 #>  [16861,] 221 334 #>  [16862,] 222 334 #>  [16863,] 223 334 #>  [16864,] 224 334 #>  [16865,] 225 334 #>  [16866,] 226 334 #>  [16867,] 227 334 #>  [16868,] 228 334 #>  [16869,] 229 334 #>  [16870,] 230 334 #>  [16871,] 231 334 #>  [16872,] 232 334 #>  [16873,] 233 334 #>  [16874,] 234 334 #>  [16875,] 235 334 #>  [16876,] 236 334 #>  [16877,] 237 334 #>  [16878,] 238 334 #>  [16879,] 239 334 #>  [16880,] 240 334 #>  [16881,] 241 334 #>  [16882,] 242 334 #>  [16883,] 243 334 #>  [16884,] 244 334 #>  [16885,] 245 334 #>  [16886,] 246 334 #>  [16887,] 247 334 #>  [16888,] 248 334 #>  [16889,] 249 334 #>  [16890,] 250 334 #>  [16891,] 251 334 #>  [16892,] 252 334 #>  [16893,] 253 334 #>  [16894,] 254 334 #>  [16895,] 255 334 #>  [16896,] 256 334 #>  [16897,] 257 334 #>  [16898,] 258 334 #>  [16899,] 259 334 #>  [16900,] 260 334 #>  [16901,] 261 334 #>  [16902,] 262 334 #>  [16903,] 263 334 #>  [16904,] 264 334 #>  [16905,] 265 334 #>  [16906,] 266 334 #>  [16907,] 267 334 #>  [16908,] 268 334 #>  [16909,] 269 334 #>  [16910,] 270 334 #>  [16911,] 271 334 #>  [16912,] 272 334 #>  [16913,] 273 334 #>  [16914,] 274 334 #>  [16915,] 275 334 #>  [16916,] 276 334 #>  [16917,] 277 334 #>  [16918,] 278 334 #>  [16919,] 279 334 #>  [16920,] 280 334 #>  [16921,] 281 334 #>  [16922,] 282 334 #>  [16923,] 283 334 #>  [16924,] 284 334 #>  [16925,] 285 334 #>  [16926,] 286 334 #>  [16927,] 287 334 #>  [16928,] 288 334 #>  [16929,] 289 334 #>  [16930,] 290 334 #>  [16931,] 291 334 #>  [16932,] 292 334 #>  [16933,] 293 334 #>  [16934,] 294 334 #>  [16935,] 295 334 #>  [16936,] 296 334 #>  [16937,] 297 334 #>  [16938,] 298 334 #>  [16939,] 299 334 #>  [16940,] 300 334 #>  [16941,] 301 334 #>  [16942,] 302 334 #>  [16943,] 303 334 #>  [16944,] 304 334 #>  [16945,] 305 334 #>  [16946,] 306 334 #>  [16947,] 307 334 #>  [16948,] 308 334 #>  [16949,] 309 334 #>  [16950,] 310 334 #>  [16951,] 311 334 #>  [16952,] 312 334 #>  [16953,] 313 334 #>  [16954,] 314 334 #>  [16955,] 315 334 #>  [16956,] 316 334 #>  [16957,] 317 334 #>  [16958,] 318 334 #>  [16959,] 319 334 #>  [16960,] 320 334 #>  [16961,] 321 334 #>  [16962,] 322 334 #>  [16963,] 323 334 #>  [16964,] 324 334 #>  [16965,] 325 334 #>  [16966,] 326 334 #>  [16967,] 327 334 #>  [16968,] 328 334 #>  [16969,] 329 334 #>  [16970,] 330 334 #>  [16971,] 331 334 #>  [16972,] 332 334 #>  [16973,] 333 334 #>  [16974,] 334 334 #>  [16975,] 335 334 #>  [16976,] 336 334 #>  [16977,] 337 334 #>  [16978,] 338 334 #>  [16979,] 339 334 #>  [16980,] 340 334 #>  [16981,] 341 334 #>  [16982,] 342 334 #>  [16983,] 343 334 #>  [16984,] 344 334 #>  [16985,] 345 334 #>  [16986,] 346 334 #>  [16987,] 347 334 #>  [16988,] 348 334 #>  [16989,] 349 334 #>  [16990,] 350 334 #>  [16991,] 351 334 #>  [16992,] 352 334 #>  [16993,] 353 334 #>  [16994,] 354 334 #>  [16995,] 355 334 #>  [16996,] 356 334 #>  [16997,] 357 334 #>  [16998,] 358 334 #>  [16999,] 359 334 #>  [17000,] 360 334 #>  [17001,] 361 334 #>  [17002,] 362 334 #>  [17003,] 363 334 #>  [17004,] 364 334 #>  [17005,] 365 334 #>  [17006,] 366 334 #>  [17007,] 367 334 #>  [17008,] 368 334 #>  [17009,] 369 334 #>  [17010,] 370 334 #>  [17011,] 371 334 #>  [17012,] 372 334 #>  [17013,] 373 334 #>  [17014,] 374 334 #>  [17015,] 375 334 #>  [17016,] 376 334 #>  [17017,] 377 334 #>  [17018,] 378 334 #>  [17019,] 379 334 #>  [17020,] 380 334 #>  [17021,] 381 334 #>  [17022,] 382 334 #>  [17023,] 383 334 #>  [17024,] 384 334 #>  [17025,] 385 334 #>  [17026,] 386 334 #>  [17027,] 387 334 #>  [17028,] 388 334 #>  [17029,] 389 334 #>  [17030,] 390 334 #>  [17031,] 391 334 #>  [17032,] 392 334 #>  [17033,] 393 334 #>  [17034,] 394 334 #>  [17035,] 395 334 #>  [17036,] 396 334 #>  [17037,] 397 334 #>  [17038,] 398 334 #>  [17039,] 399 334 #>  [17040,] 400 334 #>  [17041,] 401 334 #>  [17042,] 402 334 #>  [17043,] 403 334 #>  [17044,] 404 334 #>  [17045,] 405 334 #>  [17046,] 406 334 #>  [17047,] 407 334 #>  [17048,] 408 334 #>  [17049,] 409 334 #>  [17050,] 410 334 #>  [17051,] 411 334 #>  [17052,] 412 334 #>  [17053,] 413 334 #>  [17054,] 414 334 #>  [17055,] 415 334 #>  [17056,] 416 334 #>  [17057,] 417 334 #>  [17058,] 418 334 #>  [17059,] 419 334 #>  [17060,] 420 334 #>  [17061,] 421 334 #>  [17062,] 422 334 #>  [17063,] 423 334 #>  [17064,] 424 334 #>  [17065,] 425 334 #>  [17066,] 426 334 #>  [17067,] 427 334 #>  [17068,] 428 334 #>  [17069,] 429 334 #>  [17070,] 430 334 #>  [17071,] 431 334 #>  [17072,] 432 334 #>  [17073,] 433 334 #>  [17074,] 434 334 #>  [17075,] 435 334 #>  [17076,] 436 334 #>  [17077,] 437 334 #>  [17078,] 438 334 #>  [17079,] 439 334 #>  [17080,] 440 334 #>  [17081,] 441 334 #>  [17082,] 442 334 #>  [17083,] 443 334 #>  [17084,] 444 334 #>  [17085,] 445 334 #>  [17086,] 446 334 #>  [17087,] 447 334 #>  [17088,] 448 334 #>  [17089,] 449 334 #>  [17090,] 450 334 #>  [17091,] 451 334 #>  [17092,] 452 334 #>  [17093,] 453 334 #>  [17094,] 454 334 #>  [17095,] 455 334 #>  [17096,] 456 334 #>  [17097,] 457 334 #>  [17098,] 458 334 #>  [17099,] 459 334 #>  [17100,] 460 334 #>  [17101,] 461 334 #>  [17102,] 462 334 #>  [17103,] 463 334 #>  [17104,] 464 334 #>  [17105,] 465 334 #>  [17106,] 466 334 #>  [17107,] 467 334 #>  [17108,] 468 334 #>  [17109,] 469 334 #>  [17110,] 470 334 #>  [17111,] 471 334 #>  [17112,] 472 334 #>  [17113,] 473 334 #>  [17114,] 474 334 #>  [17115,] 475 334 #>  [17116,] 476 334 #>  [17117,] 477 334 #>  [17118,] 478 334 #>  [17119,] 479 334 #>  [17120,] 480 334 #>  [17121,] 481 334 #>  [17122,] 482 334 #>  [17123,] 483 334 #>  [17124,] 484 334 #>  [17125,] 485 334 #>  [17126,] 486 334 #>  [17127,] 487 334 #>  [17128,] 488 334 #>  [17129,] 489 334 #>  [17130,] 490 334 #>  [17131,] 491 334 #>  [17132,] 492 334 #>  [17133,] 493 334 #>  [17134,] 494 334 #>  [17135,] 495 334 #>  [17136,] 496 334 #>  [17137,] 497 334 #>  [17138,] 498 334 #>  [17139,] 499 334 #>  [17140,] 500 334 #>  [17141,] 501 334 #>  [17142,] 502 334 #>  [17143,] 503 334 #>  [17144,] 504 334 #>  [17145,] 505 334 #>  [17146,] 506 334 #>  [17147,] 507 334 #>  [17148,] 508 334 #>  [17149,] 509 334 #>  [17150,] 510 334 #>  [17151,] 511 334 #>  [17152,] 512 334 #>  [17153,] 513 334 #>  [17154,] 514 334 #>  [17155,] 515 334 #>  [17156,] 516 334 #>  [17157,] 517 334 #>  [17158,] 518 334 #>  [17159,] 519 334 #>  [17160,] 520 334 #>  [17161,] 521 334 #>  [17162,] 522 334 #>  [17163,] 523 334 #>  [17164,] 524 334 #>  [17165,] 525 334 #>  [17166,] 526 334 #>  [17167,] 527 334 #>  [17168,] 528 334 #>  [17169,] 529 334 #>  [17170,] 530 334 #>  [17171,] 531 334 #>  [17172,] 532 334 #>  [17173,] 533 334 #>  [17174,] 534 334 #>  [17175,] 535 334 #>  [17176,] 536 334 #>  [17177,] 537 334 #>  [17178,] 538 334 #>  [17179,] 539 334 #>  [17180,] 540 334 #>  [17181,] 541 334 #>  [17182,] 542 334 #>  [17183,] 543 334 #>  [17184,] 544 334 #>  [17185,] 545 334 #>  [17186,] 546 334 #>  [17187,] 547 334 #>  [17188,] 548 334 #>  [17189,] 549 334 #>  [17190,] 550 334 #>  [17191,] 551 334 #>  [17192,] 552 334 #>  [17193,] 553 334 #>  [17194,] 554 334 #>  [17195,] 555 334 #>  [17196,] 556 334 #>  [17197,] 557 334 #>  [17198,] 558 334 #>  [17199,] 559 334 #>  [17200,] 560 334 #>  [17201,] 561 334 #>  [17202,] 562 334 #>  [17203,] 563 334 #>  [17204,] 564 334 #>  [17205,] 565 334 #>  [17206,] 566 334 #>  [17207,] 567 334 #>  [17208,] 568 334 #>  [17209,] 569 334 #>  [17210,] 570 334 #>  [17211,] 571 334 #>  [17212,] 572 334 #>  [17213,] 573 334 #>  [17214,] 574 334 #>  [17215,] 575 334 #>  [17216,] 576 334 #>  [17217,] 577 334 #>  [17218,] 578 334 #>  [17219,] 579 334 #>  [17220,] 580 334 #>  [17221,] 581 334 #>  [17222,] 582 334 #>  [17223,] 583 334 #>  [17224,] 584 334 #>  [17225,] 585 334 #>  [17226,] 586 334 #>  [17227,] 587 334 #>  [17228,] 588 334 #>  [17229,] 589 334 #>  [17230,] 590 334 #>  [17231,] 591 334 #>  [17232,] 592 334 #>  [17233,] 593 334 #>  [17234,] 594 334 #>  [17235,] 595 334 #>  [17236,] 596 334 #>  [17237,] 597 334 #>  [17238,] 598 334 #>  [17239,] 599 334 #>  [17240,] 600 334 #>  [17241,] 601 334 #>  [17242,] 602 334 #>  [17243,] 603 334 #>  [17244,] 604 334 #>  [17245,] 605 334 #>  [17246,] 606 334 #>  [17247,] 607 334 #>  [17248,] 608 334 #>  [17249,] 609 334 #>  [17250,] 610 334 #>  [17251,] 611 334 #>  [17252,] 612 334 #>  [17253,] 613 334 #>  [17254,] 614 334 #>  [17255,] 615 334 #>  [17256,] 616 334 #>  [17257,] 617 334 #>  [17258,] 618 334 #>  [17259,] 619 334 #>  [17260,] 620 334 #>  [17261,] 621 334 #>  [17262,] 622 334 #>  [17263,] 623 334 #>  [17264,] 624 334 #>  [17265,] 625 334 #>  [17266,] 626 334 #>  [17267,] 627 334 #>  [17268,] 628 334 #>  [17269,] 629 334 #>  [17270,] 630 334 #>  [17271,] 631 334 #>  [17272,] 632 334 #>  [17273,] 633 334 #>  [17274,] 634 334 #>  [17275,] 635 334 #>  [17276,] 636 334 #>  [17277,] 637 334 #>  [17278,] 638 334 #>  [17279,] 639 334 #>  [17280,] 640 334 #>  [17281,]   1 333 #>  [17282,]   2 333 #>  [17283,]   3 333 #>  [17284,]   4 333 #>  [17285,]   5 333 #>  [17286,]   6 333 #>  [17287,]   7 333 #>  [17288,]   8 333 #>  [17289,]   9 333 #>  [17290,]  10 333 #>  [17291,]  11 333 #>  [17292,]  12 333 #>  [17293,]  13 333 #>  [17294,]  14 333 #>  [17295,]  15 333 #>  [17296,]  16 333 #>  [17297,]  17 333 #>  [17298,]  18 333 #>  [17299,]  19 333 #>  [17300,]  20 333 #>  [17301,]  21 333 #>  [17302,]  22 333 #>  [17303,]  23 333 #>  [17304,]  24 333 #>  [17305,]  25 333 #>  [17306,]  26 333 #>  [17307,]  27 333 #>  [17308,]  28 333 #>  [17309,]  29 333 #>  [17310,]  30 333 #>  [17311,]  31 333 #>  [17312,]  32 333 #>  [17313,]  33 333 #>  [17314,]  34 333 #>  [17315,]  35 333 #>  [17316,]  36 333 #>  [17317,]  37 333 #>  [17318,]  38 333 #>  [17319,]  39 333 #>  [17320,]  40 333 #>  [17321,]  41 333 #>  [17322,]  42 333 #>  [17323,]  43 333 #>  [17324,]  44 333 #>  [17325,]  45 333 #>  [17326,]  46 333 #>  [17327,]  47 333 #>  [17328,]  48 333 #>  [17329,]  49 333 #>  [17330,]  50 333 #>  [17331,]  51 333 #>  [17332,]  52 333 #>  [17333,]  53 333 #>  [17334,]  54 333 #>  [17335,]  55 333 #>  [17336,]  56 333 #>  [17337,]  57 333 #>  [17338,]  58 333 #>  [17339,]  59 333 #>  [17340,]  60 333 #>  [17341,]  61 333 #>  [17342,]  62 333 #>  [17343,]  63 333 #>  [17344,]  64 333 #>  [17345,]  65 333 #>  [17346,]  66 333 #>  [17347,]  67 333 #>  [17348,]  68 333 #>  [17349,]  69 333 #>  [17350,]  70 333 #>  [17351,]  71 333 #>  [17352,]  72 333 #>  [17353,]  73 333 #>  [17354,]  74 333 #>  [17355,]  75 333 #>  [17356,]  76 333 #>  [17357,]  77 333 #>  [17358,]  78 333 #>  [17359,]  79 333 #>  [17360,]  80 333 #>  [17361,]  81 333 #>  [17362,]  82 333 #>  [17363,]  83 333 #>  [17364,]  84 333 #>  [17365,]  85 333 #>  [17366,]  86 333 #>  [17367,]  87 333 #>  [17368,]  88 333 #>  [17369,]  89 333 #>  [17370,]  90 333 #>  [17371,]  91 333 #>  [17372,]  92 333 #>  [17373,]  93 333 #>  [17374,]  94 333 #>  [17375,]  95 333 #>  [17376,]  96 333 #>  [17377,]  97 333 #>  [17378,]  98 333 #>  [17379,]  99 333 #>  [17380,] 100 333 #>  [17381,] 101 333 #>  [17382,] 102 333 #>  [17383,] 103 333 #>  [17384,] 104 333 #>  [17385,] 105 333 #>  [17386,] 106 333 #>  [17387,] 107 333 #>  [17388,] 108 333 #>  [17389,] 109 333 #>  [17390,] 110 333 #>  [17391,] 111 333 #>  [17392,] 112 333 #>  [17393,] 113 333 #>  [17394,] 114 333 #>  [17395,] 115 333 #>  [17396,] 116 333 #>  [17397,] 117 333 #>  [17398,] 118 333 #>  [17399,] 119 333 #>  [17400,] 120 333 #>  [17401,] 121 333 #>  [17402,] 122 333 #>  [17403,] 123 333 #>  [17404,] 124 333 #>  [17405,] 125 333 #>  [17406,] 126 333 #>  [17407,] 127 333 #>  [17408,] 128 333 #>  [17409,] 129 333 #>  [17410,] 130 333 #>  [17411,] 131 333 #>  [17412,] 132 333 #>  [17413,] 133 333 #>  [17414,] 134 333 #>  [17415,] 135 333 #>  [17416,] 136 333 #>  [17417,] 137 333 #>  [17418,] 138 333 #>  [17419,] 139 333 #>  [17420,] 140 333 #>  [17421,] 141 333 #>  [17422,] 142 333 #>  [17423,] 143 333 #>  [17424,] 144 333 #>  [17425,] 145 333 #>  [17426,] 146 333 #>  [17427,] 147 333 #>  [17428,] 148 333 #>  [17429,] 149 333 #>  [17430,] 150 333 #>  [17431,] 151 333 #>  [17432,] 152 333 #>  [17433,] 153 333 #>  [17434,] 154 333 #>  [17435,] 155 333 #>  [17436,] 156 333 #>  [17437,] 157 333 #>  [17438,] 158 333 #>  [17439,] 159 333 #>  [17440,] 160 333 #>  [17441,] 161 333 #>  [17442,] 162 333 #>  [17443,] 163 333 #>  [17444,] 164 333 #>  [17445,] 165 333 #>  [17446,] 166 333 #>  [17447,] 167 333 #>  [17448,] 168 333 #>  [17449,] 169 333 #>  [17450,] 170 333 #>  [17451,] 171 333 #>  [17452,] 172 333 #>  [17453,] 173 333 #>  [17454,] 174 333 #>  [17455,] 175 333 #>  [17456,] 176 333 #>  [17457,] 177 333 #>  [17458,] 178 333 #>  [17459,] 179 333 #>  [17460,] 180 333 #>  [17461,] 181 333 #>  [17462,] 182 333 #>  [17463,] 183 333 #>  [17464,] 184 333 #>  [17465,] 185 333 #>  [17466,] 186 333 #>  [17467,] 187 333 #>  [17468,] 188 333 #>  [17469,] 189 333 #>  [17470,] 190 333 #>  [17471,] 191 333 #>  [17472,] 192 333 #>  [17473,] 193 333 #>  [17474,] 194 333 #>  [17475,] 195 333 #>  [17476,] 196 333 #>  [17477,] 197 333 #>  [17478,] 198 333 #>  [17479,] 199 333 #>  [17480,] 200 333 #>  [17481,] 201 333 #>  [17482,] 202 333 #>  [17483,] 203 333 #>  [17484,] 204 333 #>  [17485,] 205 333 #>  [17486,] 206 333 #>  [17487,] 207 333 #>  [17488,] 208 333 #>  [17489,] 209 333 #>  [17490,] 210 333 #>  [17491,] 211 333 #>  [17492,] 212 333 #>  [17493,] 213 333 #>  [17494,] 214 333 #>  [17495,] 215 333 #>  [17496,] 216 333 #>  [17497,] 217 333 #>  [17498,] 218 333 #>  [17499,] 219 333 #>  [17500,] 220 333 #>  [17501,] 221 333 #>  [17502,] 222 333 #>  [17503,] 223 333 #>  [17504,] 224 333 #>  [17505,] 225 333 #>  [17506,] 226 333 #>  [17507,] 227 333 #>  [17508,] 228 333 #>  [17509,] 229 333 #>  [17510,] 230 333 #>  [17511,] 231 333 #>  [17512,] 232 333 #>  [17513,] 233 333 #>  [17514,] 234 333 #>  [17515,] 235 333 #>  [17516,] 236 333 #>  [17517,] 237 333 #>  [17518,] 238 333 #>  [17519,] 239 333 #>  [17520,] 240 333 #>  [17521,] 241 333 #>  [17522,] 242 333 #>  [17523,] 243 333 #>  [17524,] 244 333 #>  [17525,] 245 333 #>  [17526,] 246 333 #>  [17527,] 247 333 #>  [17528,] 248 333 #>  [17529,] 249 333 #>  [17530,] 250 333 #>  [17531,] 251 333 #>  [17532,] 252 333 #>  [17533,] 253 333 #>  [17534,] 254 333 #>  [17535,] 255 333 #>  [17536,] 256 333 #>  [17537,] 257 333 #>  [17538,] 258 333 #>  [17539,] 259 333 #>  [17540,] 260 333 #>  [17541,] 261 333 #>  [17542,] 262 333 #>  [17543,] 263 333 #>  [17544,] 264 333 #>  [17545,] 265 333 #>  [17546,] 266 333 #>  [17547,] 267 333 #>  [17548,] 268 333 #>  [17549,] 269 333 #>  [17550,] 270 333 #>  [17551,] 271 333 #>  [17552,] 272 333 #>  [17553,] 273 333 #>  [17554,] 274 333 #>  [17555,] 275 333 #>  [17556,] 276 333 #>  [17557,] 277 333 #>  [17558,] 278 333 #>  [17559,] 279 333 #>  [17560,] 280 333 #>  [17561,] 281 333 #>  [17562,] 282 333 #>  [17563,] 283 333 #>  [17564,] 284 333 #>  [17565,] 285 333 #>  [17566,] 286 333 #>  [17567,] 287 333 #>  [17568,] 288 333 #>  [17569,] 289 333 #>  [17570,] 290 333 #>  [17571,] 291 333 #>  [17572,] 292 333 #>  [17573,] 293 333 #>  [17574,] 294 333 #>  [17575,] 295 333 #>  [17576,] 296 333 #>  [17577,] 297 333 #>  [17578,] 298 333 #>  [17579,] 299 333 #>  [17580,] 300 333 #>  [17581,] 301 333 #>  [17582,] 302 333 #>  [17583,] 303 333 #>  [17584,] 304 333 #>  [17585,] 305 333 #>  [17586,] 306 333 #>  [17587,] 307 333 #>  [17588,] 308 333 #>  [17589,] 309 333 #>  [17590,] 310 333 #>  [17591,] 311 333 #>  [17592,] 312 333 #>  [17593,] 313 333 #>  [17594,] 314 333 #>  [17595,] 315 333 #>  [17596,] 316 333 #>  [17597,] 317 333 #>  [17598,] 318 333 #>  [17599,] 319 333 #>  [17600,] 320 333 #>  [17601,] 321 333 #>  [17602,] 322 333 #>  [17603,] 323 333 #>  [17604,] 324 333 #>  [17605,] 325 333 #>  [17606,] 326 333 #>  [17607,] 327 333 #>  [17608,] 328 333 #>  [17609,] 329 333 #>  [17610,] 330 333 #>  [17611,] 331 333 #>  [17612,] 332 333 #>  [17613,] 333 333 #>  [17614,] 334 333 #>  [17615,] 335 333 #>  [17616,] 336 333 #>  [17617,] 337 333 #>  [17618,] 338 333 #>  [17619,] 339 333 #>  [17620,] 340 333 #>  [17621,] 341 333 #>  [17622,] 342 333 #>  [17623,] 343 333 #>  [17624,] 344 333 #>  [17625,] 345 333 #>  [17626,] 346 333 #>  [17627,] 347 333 #>  [17628,] 348 333 #>  [17629,] 349 333 #>  [17630,] 350 333 #>  [17631,] 351 333 #>  [17632,] 352 333 #>  [17633,] 353 333 #>  [17634,] 354 333 #>  [17635,] 355 333 #>  [17636,] 356 333 #>  [17637,] 357 333 #>  [17638,] 358 333 #>  [17639,] 359 333 #>  [17640,] 360 333 #>  [17641,] 361 333 #>  [17642,] 362 333 #>  [17643,] 363 333 #>  [17644,] 364 333 #>  [17645,] 365 333 #>  [17646,] 366 333 #>  [17647,] 367 333 #>  [17648,] 368 333 #>  [17649,] 369 333 #>  [17650,] 370 333 #>  [17651,] 371 333 #>  [17652,] 372 333 #>  [17653,] 373 333 #>  [17654,] 374 333 #>  [17655,] 375 333 #>  [17656,] 376 333 #>  [17657,] 377 333 #>  [17658,] 378 333 #>  [17659,] 379 333 #>  [17660,] 380 333 #>  [17661,] 381 333 #>  [17662,] 382 333 #>  [17663,] 383 333 #>  [17664,] 384 333 #>  [17665,] 385 333 #>  [17666,] 386 333 #>  [17667,] 387 333 #>  [17668,] 388 333 #>  [17669,] 389 333 #>  [17670,] 390 333 #>  [17671,] 391 333 #>  [17672,] 392 333 #>  [17673,] 393 333 #>  [17674,] 394 333 #>  [17675,] 395 333 #>  [17676,] 396 333 #>  [17677,] 397 333 #>  [17678,] 398 333 #>  [17679,] 399 333 #>  [17680,] 400 333 #>  [17681,] 401 333 #>  [17682,] 402 333 #>  [17683,] 403 333 #>  [17684,] 404 333 #>  [17685,] 405 333 #>  [17686,] 406 333 #>  [17687,] 407 333 #>  [17688,] 408 333 #>  [17689,] 409 333 #>  [17690,] 410 333 #>  [17691,] 411 333 #>  [17692,] 412 333 #>  [17693,] 413 333 #>  [17694,] 414 333 #>  [17695,] 415 333 #>  [17696,] 416 333 #>  [17697,] 417 333 #>  [17698,] 418 333 #>  [17699,] 419 333 #>  [17700,] 420 333 #>  [17701,] 421 333 #>  [17702,] 422 333 #>  [17703,] 423 333 #>  [17704,] 424 333 #>  [17705,] 425 333 #>  [17706,] 426 333 #>  [17707,] 427 333 #>  [17708,] 428 333 #>  [17709,] 429 333 #>  [17710,] 430 333 #>  [17711,] 431 333 #>  [17712,] 432 333 #>  [17713,] 433 333 #>  [17714,] 434 333 #>  [17715,] 435 333 #>  [17716,] 436 333 #>  [17717,] 437 333 #>  [17718,] 438 333 #>  [17719,] 439 333 #>  [17720,] 440 333 #>  [17721,] 441 333 #>  [17722,] 442 333 #>  [17723,] 443 333 #>  [17724,] 444 333 #>  [17725,] 445 333 #>  [17726,] 446 333 #>  [17727,] 447 333 #>  [17728,] 448 333 #>  [17729,] 449 333 #>  [17730,] 450 333 #>  [17731,] 451 333 #>  [17732,] 452 333 #>  [17733,] 453 333 #>  [17734,] 454 333 #>  [17735,] 455 333 #>  [17736,] 456 333 #>  [17737,] 457 333 #>  [17738,] 458 333 #>  [17739,] 459 333 #>  [17740,] 460 333 #>  [17741,] 461 333 #>  [17742,] 462 333 #>  [17743,] 463 333 #>  [17744,] 464 333 #>  [17745,] 465 333 #>  [17746,] 466 333 #>  [17747,] 467 333 #>  [17748,] 468 333 #>  [17749,] 469 333 #>  [17750,] 470 333 #>  [17751,] 471 333 #>  [17752,] 472 333 #>  [17753,] 473 333 #>  [17754,] 474 333 #>  [17755,] 475 333 #>  [17756,] 476 333 #>  [17757,] 477 333 #>  [17758,] 478 333 #>  [17759,] 479 333 #>  [17760,] 480 333 #>  [17761,] 481 333 #>  [17762,] 482 333 #>  [17763,] 483 333 #>  [17764,] 484 333 #>  [17765,] 485 333 #>  [17766,] 486 333 #>  [17767,] 487 333 #>  [17768,] 488 333 #>  [17769,] 489 333 #>  [17770,] 490 333 #>  [17771,] 491 333 #>  [17772,] 492 333 #>  [17773,] 493 333 #>  [17774,] 494 333 #>  [17775,] 495 333 #>  [17776,] 496 333 #>  [17777,] 497 333 #>  [17778,] 498 333 #>  [17779,] 499 333 #>  [17780,] 500 333 #>  [17781,] 501 333 #>  [17782,] 502 333 #>  [17783,] 503 333 #>  [17784,] 504 333 #>  [17785,] 505 333 #>  [17786,] 506 333 #>  [17787,] 507 333 #>  [17788,] 508 333 #>  [17789,] 509 333 #>  [17790,] 510 333 #>  [17791,] 511 333 #>  [17792,] 512 333 #>  [17793,] 513 333 #>  [17794,] 514 333 #>  [17795,] 515 333 #>  [17796,] 516 333 #>  [17797,] 517 333 #>  [17798,] 518 333 #>  [17799,] 519 333 #>  [17800,] 520 333 #>  [17801,] 521 333 #>  [17802,] 522 333 #>  [17803,] 523 333 #>  [17804,] 524 333 #>  [17805,] 525 333 #>  [17806,] 526 333 #>  [17807,] 527 333 #>  [17808,] 528 333 #>  [17809,] 529 333 #>  [17810,] 530 333 #>  [17811,] 531 333 #>  [17812,] 532 333 #>  [17813,] 533 333 #>  [17814,] 534 333 #>  [17815,] 535 333 #>  [17816,] 536 333 #>  [17817,] 537 333 #>  [17818,] 538 333 #>  [17819,] 539 333 #>  [17820,] 540 333 #>  [17821,] 541 333 #>  [17822,] 542 333 #>  [17823,] 543 333 #>  [17824,] 544 333 #>  [17825,] 545 333 #>  [17826,] 546 333 #>  [17827,] 547 333 #>  [17828,] 548 333 #>  [17829,] 549 333 #>  [17830,] 550 333 #>  [17831,] 551 333 #>  [17832,] 552 333 #>  [17833,] 553 333 #>  [17834,] 554 333 #>  [17835,] 555 333 #>  [17836,] 556 333 #>  [17837,] 557 333 #>  [17838,] 558 333 #>  [17839,] 559 333 #>  [17840,] 560 333 #>  [17841,] 561 333 #>  [17842,] 562 333 #>  [17843,] 563 333 #>  [17844,] 564 333 #>  [17845,] 565 333 #>  [17846,] 566 333 #>  [17847,] 567 333 #>  [17848,] 568 333 #>  [17849,] 569 333 #>  [17850,] 570 333 #>  [17851,] 571 333 #>  [17852,] 572 333 #>  [17853,] 573 333 #>  [17854,] 574 333 #>  [17855,] 575 333 #>  [17856,] 576 333 #>  [17857,] 577 333 #>  [17858,] 578 333 #>  [17859,] 579 333 #>  [17860,] 580 333 #>  [17861,] 581 333 #>  [17862,] 582 333 #>  [17863,] 583 333 #>  [17864,] 584 333 #>  [17865,] 585 333 #>  [17866,] 586 333 #>  [17867,] 587 333 #>  [17868,] 588 333 #>  [17869,] 589 333 #>  [17870,] 590 333 #>  [17871,] 591 333 #>  [17872,] 592 333 #>  [17873,] 593 333 #>  [17874,] 594 333 #>  [17875,] 595 333 #>  [17876,] 596 333 #>  [17877,] 597 333 #>  [17878,] 598 333 #>  [17879,] 599 333 #>  [17880,] 600 333 #>  [17881,] 601 333 #>  [17882,] 602 333 #>  [17883,] 603 333 #>  [17884,] 604 333 #>  [17885,] 605 333 #>  [17886,] 606 333 #>  [17887,] 607 333 #>  [17888,] 608 333 #>  [17889,] 609 333 #>  [17890,] 610 333 #>  [17891,] 611 333 #>  [17892,] 612 333 #>  [17893,] 613 333 #>  [17894,] 614 333 #>  [17895,] 615 333 #>  [17896,] 616 333 #>  [17897,] 617 333 #>  [17898,] 618 333 #>  [17899,] 619 333 #>  [17900,] 620 333 #>  [17901,] 621 333 #>  [17902,] 622 333 #>  [17903,] 623 333 #>  [17904,] 624 333 #>  [17905,] 625 333 #>  [17906,] 626 333 #>  [17907,] 627 333 #>  [17908,] 628 333 #>  [17909,] 629 333 #>  [17910,] 630 333 #>  [17911,] 631 333 #>  [17912,] 632 333 #>  [17913,] 633 333 #>  [17914,] 634 333 #>  [17915,] 635 333 #>  [17916,] 636 333 #>  [17917,] 637 333 #>  [17918,] 638 333 #>  [17919,] 639 333 #>  [17920,] 640 333 #>  [17921,]   1 332 #>  [17922,]   2 332 #>  [17923,]   3 332 #>  [17924,]   4 332 #>  [17925,]   5 332 #>  [17926,]   6 332 #>  [17927,]   7 332 #>  [17928,]   8 332 #>  [17929,]   9 332 #>  [17930,]  10 332 #>  [17931,]  11 332 #>  [17932,]  12 332 #>  [17933,]  13 332 #>  [17934,]  14 332 #>  [17935,]  15 332 #>  [17936,]  16 332 #>  [17937,]  17 332 #>  [17938,]  18 332 #>  [17939,]  19 332 #>  [17940,]  20 332 #>  [17941,]  21 332 #>  [17942,]  22 332 #>  [17943,]  23 332 #>  [17944,]  24 332 #>  [17945,]  25 332 #>  [17946,]  26 332 #>  [17947,]  27 332 #>  [17948,]  28 332 #>  [17949,]  29 332 #>  [17950,]  30 332 #>  [17951,]  31 332 #>  [17952,]  32 332 #>  [17953,]  33 332 #>  [17954,]  34 332 #>  [17955,]  35 332 #>  [17956,]  36 332 #>  [17957,]  37 332 #>  [17958,]  38 332 #>  [17959,]  39 332 #>  [17960,]  40 332 #>  [17961,]  41 332 #>  [17962,]  42 332 #>  [17963,]  43 332 #>  [17964,]  44 332 #>  [17965,]  45 332 #>  [17966,]  46 332 #>  [17967,]  47 332 #>  [17968,]  48 332 #>  [17969,]  49 332 #>  [17970,]  50 332 #>  [17971,]  51 332 #>  [17972,]  52 332 #>  [17973,]  53 332 #>  [17974,]  54 332 #>  [17975,]  55 332 #>  [17976,]  56 332 #>  [17977,]  57 332 #>  [17978,]  58 332 #>  [17979,]  59 332 #>  [17980,]  60 332 #>  [17981,]  61 332 #>  [17982,]  62 332 #>  [17983,]  63 332 #>  [17984,]  64 332 #>  [17985,]  65 332 #>  [17986,]  66 332 #>  [17987,]  67 332 #>  [17988,]  68 332 #>  [17989,]  69 332 #>  [17990,]  70 332 #>  [17991,]  71 332 #>  [17992,]  72 332 #>  [17993,]  73 332 #>  [17994,]  74 332 #>  [17995,]  75 332 #>  [17996,]  76 332 #>  [17997,]  77 332 #>  [17998,]  78 332 #>  [17999,]  79 332 #>  [18000,]  80 332 #>  [18001,]  81 332 #>  [18002,]  82 332 #>  [18003,]  83 332 #>  [18004,]  84 332 #>  [18005,]  85 332 #>  [18006,]  86 332 #>  [18007,]  87 332 #>  [18008,]  88 332 #>  [18009,]  89 332 #>  [18010,]  90 332 #>  [18011,]  91 332 #>  [18012,]  92 332 #>  [18013,]  93 332 #>  [18014,]  94 332 #>  [18015,]  95 332 #>  [18016,]  96 332 #>  [18017,]  97 332 #>  [18018,]  98 332 #>  [18019,]  99 332 #>  [18020,] 100 332 #>  [18021,] 101 332 #>  [18022,] 102 332 #>  [18023,] 103 332 #>  [18024,] 104 332 #>  [18025,] 105 332 #>  [18026,] 106 332 #>  [18027,] 107 332 #>  [18028,] 108 332 #>  [18029,] 109 332 #>  [18030,] 110 332 #>  [18031,] 111 332 #>  [18032,] 112 332 #>  [18033,] 113 332 #>  [18034,] 114 332 #>  [18035,] 115 332 #>  [18036,] 116 332 #>  [18037,] 117 332 #>  [18038,] 118 332 #>  [18039,] 119 332 #>  [18040,] 120 332 #>  [18041,] 121 332 #>  [18042,] 122 332 #>  [18043,] 123 332 #>  [18044,] 124 332 #>  [18045,] 125 332 #>  [18046,] 126 332 #>  [18047,] 127 332 #>  [18048,] 128 332 #>  [18049,] 129 332 #>  [18050,] 130 332 #>  [18051,] 131 332 #>  [18052,] 132 332 #>  [18053,] 133 332 #>  [18054,] 134 332 #>  [18055,] 135 332 #>  [18056,] 136 332 #>  [18057,] 137 332 #>  [18058,] 138 332 #>  [18059,] 139 332 #>  [18060,] 140 332 #>  [18061,] 141 332 #>  [18062,] 142 332 #>  [18063,] 143 332 #>  [18064,] 144 332 #>  [18065,] 145 332 #>  [18066,] 146 332 #>  [18067,] 147 332 #>  [18068,] 148 332 #>  [18069,] 149 332 #>  [18070,] 150 332 #>  [18071,] 151 332 #>  [18072,] 152 332 #>  [18073,] 153 332 #>  [18074,] 154 332 #>  [18075,] 155 332 #>  [18076,] 156 332 #>  [18077,] 157 332 #>  [18078,] 158 332 #>  [18079,] 159 332 #>  [18080,] 160 332 #>  [18081,] 161 332 #>  [18082,] 162 332 #>  [18083,] 163 332 #>  [18084,] 164 332 #>  [18085,] 165 332 #>  [18086,] 166 332 #>  [18087,] 167 332 #>  [18088,] 168 332 #>  [18089,] 169 332 #>  [18090,] 170 332 #>  [18091,] 171 332 #>  [18092,] 172 332 #>  [18093,] 173 332 #>  [18094,] 174 332 #>  [18095,] 175 332 #>  [18096,] 176 332 #>  [18097,] 177 332 #>  [18098,] 178 332 #>  [18099,] 179 332 #>  [18100,] 180 332 #>  [18101,] 181 332 #>  [18102,] 182 332 #>  [18103,] 183 332 #>  [18104,] 184 332 #>  [18105,] 185 332 #>  [18106,] 186 332 #>  [18107,] 187 332 #>  [18108,] 188 332 #>  [18109,] 189 332 #>  [18110,] 190 332 #>  [18111,] 191 332 #>  [18112,] 192 332 #>  [18113,] 193 332 #>  [18114,] 194 332 #>  [18115,] 195 332 #>  [18116,] 196 332 #>  [18117,] 197 332 #>  [18118,] 198 332 #>  [18119,] 199 332 #>  [18120,] 200 332 #>  [18121,] 201 332 #>  [18122,] 202 332 #>  [18123,] 203 332 #>  [18124,] 204 332 #>  [18125,] 205 332 #>  [18126,] 206 332 #>  [18127,] 207 332 #>  [18128,] 208 332 #>  [18129,] 209 332 #>  [18130,] 210 332 #>  [18131,] 211 332 #>  [18132,] 212 332 #>  [18133,] 213 332 #>  [18134,] 214 332 #>  [18135,] 215 332 #>  [18136,] 216 332 #>  [18137,] 217 332 #>  [18138,] 218 332 #>  [18139,] 219 332 #>  [18140,] 220 332 #>  [18141,] 221 332 #>  [18142,] 222 332 #>  [18143,] 223 332 #>  [18144,] 224 332 #>  [18145,] 225 332 #>  [18146,] 226 332 #>  [18147,] 227 332 #>  [18148,] 228 332 #>  [18149,] 229 332 #>  [18150,] 230 332 #>  [18151,] 231 332 #>  [18152,] 232 332 #>  [18153,] 233 332 #>  [18154,] 234 332 #>  [18155,] 235 332 #>  [18156,] 236 332 #>  [18157,] 237 332 #>  [18158,] 238 332 #>  [18159,] 239 332 #>  [18160,] 240 332 #>  [18161,] 241 332 #>  [18162,] 242 332 #>  [18163,] 243 332 #>  [18164,] 244 332 #>  [18165,] 245 332 #>  [18166,] 246 332 #>  [18167,] 247 332 #>  [18168,] 248 332 #>  [18169,] 249 332 #>  [18170,] 250 332 #>  [18171,] 251 332 #>  [18172,] 252 332 #>  [18173,] 253 332 #>  [18174,] 254 332 #>  [18175,] 255 332 #>  [18176,] 256 332 #>  [18177,] 257 332 #>  [18178,] 258 332 #>  [18179,] 259 332 #>  [18180,] 260 332 #>  [18181,] 261 332 #>  [18182,] 262 332 #>  [18183,] 263 332 #>  [18184,] 264 332 #>  [18185,] 265 332 #>  [18186,] 266 332 #>  [18187,] 267 332 #>  [18188,] 268 332 #>  [18189,] 269 332 #>  [18190,] 270 332 #>  [18191,] 271 332 #>  [18192,] 272 332 #>  [18193,] 273 332 #>  [18194,] 274 332 #>  [18195,] 275 332 #>  [18196,] 276 332 #>  [18197,] 277 332 #>  [18198,] 278 332 #>  [18199,] 279 332 #>  [18200,] 280 332 #>  [18201,] 281 332 #>  [18202,] 282 332 #>  [18203,] 283 332 #>  [18204,] 284 332 #>  [18205,] 285 332 #>  [18206,] 286 332 #>  [18207,] 287 332 #>  [18208,] 288 332 #>  [18209,] 289 332 #>  [18210,] 290 332 #>  [18211,] 291 332 #>  [18212,] 292 332 #>  [18213,] 293 332 #>  [18214,] 294 332 #>  [18215,] 295 332 #>  [18216,] 296 332 #>  [18217,] 297 332 #>  [18218,] 298 332 #>  [18219,] 299 332 #>  [18220,] 300 332 #>  [18221,] 301 332 #>  [18222,] 302 332 #>  [18223,] 303 332 #>  [18224,] 304 332 #>  [18225,] 305 332 #>  [18226,] 306 332 #>  [18227,] 307 332 #>  [18228,] 308 332 #>  [18229,] 309 332 #>  [18230,] 310 332 #>  [18231,] 311 332 #>  [18232,] 312 332 #>  [18233,] 313 332 #>  [18234,] 314 332 #>  [18235,] 315 332 #>  [18236,] 316 332 #>  [18237,] 317 332 #>  [18238,] 318 332 #>  [18239,] 319 332 #>  [18240,] 320 332 #>  [18241,] 321 332 #>  [18242,] 322 332 #>  [18243,] 323 332 #>  [18244,] 324 332 #>  [18245,] 325 332 #>  [18246,] 326 332 #>  [18247,] 327 332 #>  [18248,] 328 332 #>  [18249,] 329 332 #>  [18250,] 330 332 #>  [18251,] 331 332 #>  [18252,] 332 332 #>  [18253,] 333 332 #>  [18254,] 334 332 #>  [18255,] 335 332 #>  [18256,] 336 332 #>  [18257,] 337 332 #>  [18258,] 338 332 #>  [18259,] 339 332 #>  [18260,] 340 332 #>  [18261,] 341 332 #>  [18262,] 342 332 #>  [18263,] 343 332 #>  [18264,] 344 332 #>  [18265,] 345 332 #>  [18266,] 346 332 #>  [18267,] 347 332 #>  [18268,] 348 332 #>  [18269,] 349 332 #>  [18270,] 350 332 #>  [18271,] 351 332 #>  [18272,] 352 332 #>  [18273,] 353 332 #>  [18274,] 354 332 #>  [18275,] 355 332 #>  [18276,] 356 332 #>  [18277,] 357 332 #>  [18278,] 358 332 #>  [18279,] 359 332 #>  [18280,] 360 332 #>  [18281,] 361 332 #>  [18282,] 362 332 #>  [18283,] 363 332 #>  [18284,] 364 332 #>  [18285,] 365 332 #>  [18286,] 366 332 #>  [18287,] 367 332 #>  [18288,] 368 332 #>  [18289,] 369 332 #>  [18290,] 370 332 #>  [18291,] 371 332 #>  [18292,] 372 332 #>  [18293,] 373 332 #>  [18294,] 374 332 #>  [18295,] 375 332 #>  [18296,] 376 332 #>  [18297,] 377 332 #>  [18298,] 378 332 #>  [18299,] 379 332 #>  [18300,] 380 332 #>  [18301,] 381 332 #>  [18302,] 382 332 #>  [18303,] 383 332 #>  [18304,] 384 332 #>  [18305,] 385 332 #>  [18306,] 386 332 #>  [18307,] 387 332 #>  [18308,] 388 332 #>  [18309,] 389 332 #>  [18310,] 390 332 #>  [18311,] 391 332 #>  [18312,] 392 332 #>  [18313,] 393 332 #>  [18314,] 394 332 #>  [18315,] 395 332 #>  [18316,] 396 332 #>  [18317,] 397 332 #>  [18318,] 398 332 #>  [18319,] 399 332 #>  [18320,] 400 332 #>  [18321,] 401 332 #>  [18322,] 402 332 #>  [18323,] 403 332 #>  [18324,] 404 332 #>  [18325,] 405 332 #>  [18326,] 406 332 #>  [18327,] 407 332 #>  [18328,] 408 332 #>  [18329,] 409 332 #>  [18330,] 410 332 #>  [18331,] 411 332 #>  [18332,] 412 332 #>  [18333,] 413 332 #>  [18334,] 414 332 #>  [18335,] 415 332 #>  [18336,] 416 332 #>  [18337,] 417 332 #>  [18338,] 418 332 #>  [18339,] 419 332 #>  [18340,] 420 332 #>  [18341,] 421 332 #>  [18342,] 422 332 #>  [18343,] 423 332 #>  [18344,] 424 332 #>  [18345,] 425 332 #>  [18346,] 426 332 #>  [18347,] 427 332 #>  [18348,] 428 332 #>  [18349,] 429 332 #>  [18350,] 430 332 #>  [18351,] 431 332 #>  [18352,] 432 332 #>  [18353,] 433 332 #>  [18354,] 434 332 #>  [18355,] 435 332 #>  [18356,] 436 332 #>  [18357,] 437 332 #>  [18358,] 438 332 #>  [18359,] 439 332 #>  [18360,] 440 332 #>  [18361,] 441 332 #>  [18362,] 442 332 #>  [18363,] 443 332 #>  [18364,] 444 332 #>  [18365,] 445 332 #>  [18366,] 446 332 #>  [18367,] 447 332 #>  [18368,] 448 332 #>  [18369,] 449 332 #>  [18370,] 450 332 #>  [18371,] 451 332 #>  [18372,] 452 332 #>  [18373,] 453 332 #>  [18374,] 454 332 #>  [18375,] 455 332 #>  [18376,] 456 332 #>  [18377,] 457 332 #>  [18378,] 458 332 #>  [18379,] 459 332 #>  [18380,] 460 332 #>  [18381,] 461 332 #>  [18382,] 462 332 #>  [18383,] 463 332 #>  [18384,] 464 332 #>  [18385,] 465 332 #>  [18386,] 466 332 #>  [18387,] 467 332 #>  [18388,] 468 332 #>  [18389,] 469 332 #>  [18390,] 470 332 #>  [18391,] 471 332 #>  [18392,] 472 332 #>  [18393,] 473 332 #>  [18394,] 474 332 #>  [18395,] 475 332 #>  [18396,] 476 332 #>  [18397,] 477 332 #>  [18398,] 478 332 #>  [18399,] 479 332 #>  [18400,] 480 332 #>  [18401,] 481 332 #>  [18402,] 482 332 #>  [18403,] 483 332 #>  [18404,] 484 332 #>  [18405,] 485 332 #>  [18406,] 486 332 #>  [18407,] 487 332 #>  [18408,] 488 332 #>  [18409,] 489 332 #>  [18410,] 490 332 #>  [18411,] 491 332 #>  [18412,] 492 332 #>  [18413,] 493 332 #>  [18414,] 494 332 #>  [18415,] 495 332 #>  [18416,] 496 332 #>  [18417,] 497 332 #>  [18418,] 498 332 #>  [18419,] 499 332 #>  [18420,] 500 332 #>  [18421,] 501 332 #>  [18422,] 502 332 #>  [18423,] 503 332 #>  [18424,] 504 332 #>  [18425,] 505 332 #>  [18426,] 506 332 #>  [18427,] 507 332 #>  [18428,] 508 332 #>  [18429,] 509 332 #>  [18430,] 510 332 #>  [18431,] 511 332 #>  [18432,] 512 332 #>  [18433,] 513 332 #>  [18434,] 514 332 #>  [18435,] 515 332 #>  [18436,] 516 332 #>  [18437,] 517 332 #>  [18438,] 518 332 #>  [18439,] 519 332 #>  [18440,] 520 332 #>  [18441,] 521 332 #>  [18442,] 522 332 #>  [18443,] 523 332 #>  [18444,] 524 332 #>  [18445,] 525 332 #>  [18446,] 526 332 #>  [18447,] 527 332 #>  [18448,] 528 332 #>  [18449,] 529 332 #>  [18450,] 530 332 #>  [18451,] 531 332 #>  [18452,] 532 332 #>  [18453,] 533 332 #>  [18454,] 534 332 #>  [18455,] 535 332 #>  [18456,] 536 332 #>  [18457,] 537 332 #>  [18458,] 538 332 #>  [18459,] 539 332 #>  [18460,] 540 332 #>  [18461,] 541 332 #>  [18462,] 542 332 #>  [18463,] 543 332 #>  [18464,] 544 332 #>  [18465,] 545 332 #>  [18466,] 546 332 #>  [18467,] 547 332 #>  [18468,] 548 332 #>  [18469,] 549 332 #>  [18470,] 550 332 #>  [18471,] 551 332 #>  [18472,] 552 332 #>  [18473,] 553 332 #>  [18474,] 554 332 #>  [18475,] 555 332 #>  [18476,] 556 332 #>  [18477,] 557 332 #>  [18478,] 558 332 #>  [18479,] 559 332 #>  [18480,] 560 332 #>  [18481,] 561 332 #>  [18482,] 562 332 #>  [18483,] 563 332 #>  [18484,] 564 332 #>  [18485,] 565 332 #>  [18486,] 566 332 #>  [18487,] 567 332 #>  [18488,] 568 332 #>  [18489,] 569 332 #>  [18490,] 570 332 #>  [18491,] 571 332 #>  [18492,] 572 332 #>  [18493,] 573 332 #>  [18494,] 574 332 #>  [18495,] 575 332 #>  [18496,] 576 332 #>  [18497,] 577 332 #>  [18498,] 578 332 #>  [18499,] 579 332 #>  [18500,] 580 332 #>  [18501,] 581 332 #>  [18502,] 582 332 #>  [18503,] 583 332 #>  [18504,] 584 332 #>  [18505,] 585 332 #>  [18506,] 586 332 #>  [18507,] 587 332 #>  [18508,] 588 332 #>  [18509,] 589 332 #>  [18510,] 590 332 #>  [18511,] 591 332 #>  [18512,] 592 332 #>  [18513,] 593 332 #>  [18514,] 594 332 #>  [18515,] 595 332 #>  [18516,] 596 332 #>  [18517,] 597 332 #>  [18518,] 598 332 #>  [18519,] 599 332 #>  [18520,] 600 332 #>  [18521,] 601 332 #>  [18522,] 602 332 #>  [18523,] 603 332 #>  [18524,] 604 332 #>  [18525,] 605 332 #>  [18526,] 606 332 #>  [18527,] 607 332 #>  [18528,] 608 332 #>  [18529,] 609 332 #>  [18530,] 610 332 #>  [18531,] 611 332 #>  [18532,] 612 332 #>  [18533,] 613 332 #>  [18534,] 614 332 #>  [18535,] 615 332 #>  [18536,] 616 332 #>  [18537,] 617 332 #>  [18538,] 618 332 #>  [18539,] 619 332 #>  [18540,] 620 332 #>  [18541,] 621 332 #>  [18542,] 622 332 #>  [18543,] 623 332 #>  [18544,] 624 332 #>  [18545,] 625 332 #>  [18546,] 626 332 #>  [18547,] 627 332 #>  [18548,] 628 332 #>  [18549,] 629 332 #>  [18550,] 630 332 #>  [18551,] 631 332 #>  [18552,] 632 332 #>  [18553,] 633 332 #>  [18554,] 634 332 #>  [18555,] 635 332 #>  [18556,] 636 332 #>  [18557,] 637 332 #>  [18558,] 638 332 #>  [18559,] 639 332 #>  [18560,] 640 332 #>  [18561,]   1 331 #>  [18562,]   2 331 #>  [18563,]   3 331 #>  [18564,]   4 331 #>  [18565,]   5 331 #>  [18566,]   6 331 #>  [18567,]   7 331 #>  [18568,]   8 331 #>  [18569,]   9 331 #>  [18570,]  10 331 #>  [18571,]  11 331 #>  [18572,]  12 331 #>  [18573,]  13 331 #>  [18574,]  14 331 #>  [18575,]  15 331 #>  [18576,]  16 331 #>  [18577,]  17 331 #>  [18578,]  18 331 #>  [18579,]  19 331 #>  [18580,]  20 331 #>  [18581,]  21 331 #>  [18582,]  22 331 #>  [18583,]  23 331 #>  [18584,]  24 331 #>  [18585,]  25 331 #>  [18586,]  26 331 #>  [18587,]  27 331 #>  [18588,]  28 331 #>  [18589,]  29 331 #>  [18590,]  30 331 #>  [18591,]  31 331 #>  [18592,]  32 331 #>  [18593,]  33 331 #>  [18594,]  34 331 #>  [18595,]  35 331 #>  [18596,]  36 331 #>  [18597,]  37 331 #>  [18598,]  38 331 #>  [18599,]  39 331 #>  [18600,]  40 331 #>  [18601,]  41 331 #>  [18602,]  42 331 #>  [18603,]  43 331 #>  [18604,]  44 331 #>  [18605,]  45 331 #>  [18606,]  46 331 #>  [18607,]  47 331 #>  [18608,]  48 331 #>  [18609,]  49 331 #>  [18610,]  50 331 #>  [18611,]  51 331 #>  [18612,]  52 331 #>  [18613,]  53 331 #>  [18614,]  54 331 #>  [18615,]  55 331 #>  [18616,]  56 331 #>  [18617,]  57 331 #>  [18618,]  58 331 #>  [18619,]  59 331 #>  [18620,]  60 331 #>  [18621,]  61 331 #>  [18622,]  62 331 #>  [18623,]  63 331 #>  [18624,]  64 331 #>  [18625,]  65 331 #>  [18626,]  66 331 #>  [18627,]  67 331 #>  [18628,]  68 331 #>  [18629,]  69 331 #>  [18630,]  70 331 #>  [18631,]  71 331 #>  [18632,]  72 331 #>  [18633,]  73 331 #>  [18634,]  74 331 #>  [18635,]  75 331 #>  [18636,]  76 331 #>  [18637,]  77 331 #>  [18638,]  78 331 #>  [18639,]  79 331 #>  [18640,]  80 331 #>  [18641,]  81 331 #>  [18642,]  82 331 #>  [18643,]  83 331 #>  [18644,]  84 331 #>  [18645,]  85 331 #>  [18646,]  86 331 #>  [18647,]  87 331 #>  [18648,]  88 331 #>  [18649,]  89 331 #>  [18650,]  90 331 #>  [18651,]  91 331 #>  [18652,]  92 331 #>  [18653,]  93 331 #>  [18654,]  94 331 #>  [18655,]  95 331 #>  [18656,]  96 331 #>  [18657,]  97 331 #>  [18658,]  98 331 #>  [18659,]  99 331 #>  [18660,] 100 331 #>  [18661,] 101 331 #>  [18662,] 102 331 #>  [18663,] 103 331 #>  [18664,] 104 331 #>  [18665,] 105 331 #>  [18666,] 106 331 #>  [18667,] 107 331 #>  [18668,] 108 331 #>  [18669,] 109 331 #>  [18670,] 110 331 #>  [18671,] 111 331 #>  [18672,] 112 331 #>  [18673,] 113 331 #>  [18674,] 114 331 #>  [18675,] 115 331 #>  [18676,] 116 331 #>  [18677,] 117 331 #>  [18678,] 118 331 #>  [18679,] 119 331 #>  [18680,] 120 331 #>  [18681,] 121 331 #>  [18682,] 122 331 #>  [18683,] 123 331 #>  [18684,] 124 331 #>  [18685,] 125 331 #>  [18686,] 126 331 #>  [18687,] 127 331 #>  [18688,] 128 331 #>  [18689,] 129 331 #>  [18690,] 130 331 #>  [18691,] 131 331 #>  [18692,] 132 331 #>  [18693,] 133 331 #>  [18694,] 134 331 #>  [18695,] 135 331 #>  [18696,] 136 331 #>  [18697,] 137 331 #>  [18698,] 138 331 #>  [18699,] 139 331 #>  [18700,] 140 331 #>  [18701,] 141 331 #>  [18702,] 142 331 #>  [18703,] 143 331 #>  [18704,] 144 331 #>  [18705,] 145 331 #>  [18706,] 146 331 #>  [18707,] 147 331 #>  [18708,] 148 331 #>  [18709,] 149 331 #>  [18710,] 150 331 #>  [18711,] 151 331 #>  [18712,] 152 331 #>  [18713,] 153 331 #>  [18714,] 154 331 #>  [18715,] 155 331 #>  [18716,] 156 331 #>  [18717,] 157 331 #>  [18718,] 158 331 #>  [18719,] 159 331 #>  [18720,] 160 331 #>  [18721,] 161 331 #>  [18722,] 162 331 #>  [18723,] 163 331 #>  [18724,] 164 331 #>  [18725,] 165 331 #>  [18726,] 166 331 #>  [18727,] 167 331 #>  [18728,] 168 331 #>  [18729,] 169 331 #>  [18730,] 170 331 #>  [18731,] 171 331 #>  [18732,] 172 331 #>  [18733,] 173 331 #>  [18734,] 174 331 #>  [18735,] 175 331 #>  [18736,] 176 331 #>  [18737,] 177 331 #>  [18738,] 178 331 #>  [18739,] 179 331 #>  [18740,] 180 331 #>  [18741,] 181 331 #>  [18742,] 182 331 #>  [18743,] 183 331 #>  [18744,] 184 331 #>  [18745,] 185 331 #>  [18746,] 186 331 #>  [18747,] 187 331 #>  [18748,] 188 331 #>  [18749,] 189 331 #>  [18750,] 190 331 #>  [18751,] 191 331 #>  [18752,] 192 331 #>  [18753,] 193 331 #>  [18754,] 194 331 #>  [18755,] 195 331 #>  [18756,] 196 331 #>  [18757,] 197 331 #>  [18758,] 198 331 #>  [18759,] 199 331 #>  [18760,] 200 331 #>  [18761,] 201 331 #>  [18762,] 202 331 #>  [18763,] 203 331 #>  [18764,] 204 331 #>  [18765,] 205 331 #>  [18766,] 206 331 #>  [18767,] 207 331 #>  [18768,] 208 331 #>  [18769,] 209 331 #>  [18770,] 210 331 #>  [18771,] 211 331 #>  [18772,] 212 331 #>  [18773,] 213 331 #>  [18774,] 214 331 #>  [18775,] 215 331 #>  [18776,] 216 331 #>  [18777,] 217 331 #>  [18778,] 218 331 #>  [18779,] 219 331 #>  [18780,] 220 331 #>  [18781,] 221 331 #>  [18782,] 222 331 #>  [18783,] 223 331 #>  [18784,] 224 331 #>  [18785,] 225 331 #>  [18786,] 226 331 #>  [18787,] 227 331 #>  [18788,] 228 331 #>  [18789,] 229 331 #>  [18790,] 230 331 #>  [18791,] 231 331 #>  [18792,] 232 331 #>  [18793,] 233 331 #>  [18794,] 234 331 #>  [18795,] 235 331 #>  [18796,] 236 331 #>  [18797,] 237 331 #>  [18798,] 238 331 #>  [18799,] 239 331 #>  [18800,] 240 331 #>  [18801,] 241 331 #>  [18802,] 242 331 #>  [18803,] 243 331 #>  [18804,] 244 331 #>  [18805,] 245 331 #>  [18806,] 246 331 #>  [18807,] 247 331 #>  [18808,] 248 331 #>  [18809,] 249 331 #>  [18810,] 250 331 #>  [18811,] 251 331 #>  [18812,] 252 331 #>  [18813,] 253 331 #>  [18814,] 254 331 #>  [18815,] 255 331 #>  [18816,] 256 331 #>  [18817,] 257 331 #>  [18818,] 258 331 #>  [18819,] 259 331 #>  [18820,] 260 331 #>  [18821,] 261 331 #>  [18822,] 262 331 #>  [18823,] 263 331 #>  [18824,] 264 331 #>  [18825,] 265 331 #>  [18826,] 266 331 #>  [18827,] 267 331 #>  [18828,] 268 331 #>  [18829,] 269 331 #>  [18830,] 270 331 #>  [18831,] 271 331 #>  [18832,] 272 331 #>  [18833,] 273 331 #>  [18834,] 274 331 #>  [18835,] 275 331 #>  [18836,] 276 331 #>  [18837,] 277 331 #>  [18838,] 278 331 #>  [18839,] 279 331 #>  [18840,] 280 331 #>  [18841,] 281 331 #>  [18842,] 282 331 #>  [18843,] 283 331 #>  [18844,] 284 331 #>  [18845,] 285 331 #>  [18846,] 286 331 #>  [18847,] 287 331 #>  [18848,] 288 331 #>  [18849,] 289 331 #>  [18850,] 290 331 #>  [18851,] 291 331 #>  [18852,] 292 331 #>  [18853,] 293 331 #>  [18854,] 294 331 #>  [18855,] 295 331 #>  [18856,] 296 331 #>  [18857,] 297 331 #>  [18858,] 298 331 #>  [18859,] 299 331 #>  [18860,] 300 331 #>  [18861,] 301 331 #>  [18862,] 302 331 #>  [18863,] 303 331 #>  [18864,] 304 331 #>  [18865,] 305 331 #>  [18866,] 306 331 #>  [18867,] 307 331 #>  [18868,] 308 331 #>  [18869,] 309 331 #>  [18870,] 310 331 #>  [18871,] 311 331 #>  [18872,] 312 331 #>  [18873,] 313 331 #>  [18874,] 314 331 #>  [18875,] 315 331 #>  [18876,] 316 331 #>  [18877,] 317 331 #>  [18878,] 318 331 #>  [18879,] 319 331 #>  [18880,] 320 331 #>  [18881,] 321 331 #>  [18882,] 322 331 #>  [18883,] 323 331 #>  [18884,] 324 331 #>  [18885,] 325 331 #>  [18886,] 326 331 #>  [18887,] 327 331 #>  [18888,] 328 331 #>  [18889,] 329 331 #>  [18890,] 330 331 #>  [18891,] 331 331 #>  [18892,] 332 331 #>  [18893,] 333 331 #>  [18894,] 334 331 #>  [18895,] 335 331 #>  [18896,] 336 331 #>  [18897,] 337 331 #>  [18898,] 338 331 #>  [18899,] 339 331 #>  [18900,] 340 331 #>  [18901,] 341 331 #>  [18902,] 342 331 #>  [18903,] 343 331 #>  [18904,] 344 331 #>  [18905,] 345 331 #>  [18906,] 346 331 #>  [18907,] 347 331 #>  [18908,] 348 331 #>  [18909,] 349 331 #>  [18910,] 350 331 #>  [18911,] 351 331 #>  [18912,] 352 331 #>  [18913,] 353 331 #>  [18914,] 354 331 #>  [18915,] 355 331 #>  [18916,] 356 331 #>  [18917,] 357 331 #>  [18918,] 358 331 #>  [18919,] 359 331 #>  [18920,] 360 331 #>  [18921,] 361 331 #>  [18922,] 362 331 #>  [18923,] 363 331 #>  [18924,] 364 331 #>  [18925,] 365 331 #>  [18926,] 366 331 #>  [18927,] 367 331 #>  [18928,] 368 331 #>  [18929,] 369 331 #>  [18930,] 370 331 #>  [18931,] 371 331 #>  [18932,] 372 331 #>  [18933,] 373 331 #>  [18934,] 374 331 #>  [18935,] 375 331 #>  [18936,] 376 331 #>  [18937,] 377 331 #>  [18938,] 378 331 #>  [18939,] 379 331 #>  [18940,] 380 331 #>  [18941,] 381 331 #>  [18942,] 382 331 #>  [18943,] 383 331 #>  [18944,] 384 331 #>  [18945,] 385 331 #>  [18946,] 386 331 #>  [18947,] 387 331 #>  [18948,] 388 331 #>  [18949,] 389 331 #>  [18950,] 390 331 #>  [18951,] 391 331 #>  [18952,] 392 331 #>  [18953,] 393 331 #>  [18954,] 394 331 #>  [18955,] 395 331 #>  [18956,] 396 331 #>  [18957,] 397 331 #>  [18958,] 398 331 #>  [18959,] 399 331 #>  [18960,] 400 331 #>  [18961,] 401 331 #>  [18962,] 402 331 #>  [18963,] 403 331 #>  [18964,] 404 331 #>  [18965,] 405 331 #>  [18966,] 406 331 #>  [18967,] 407 331 #>  [18968,] 408 331 #>  [18969,] 409 331 #>  [18970,] 410 331 #>  [18971,] 411 331 #>  [18972,] 412 331 #>  [18973,] 413 331 #>  [18974,] 414 331 #>  [18975,] 415 331 #>  [18976,] 416 331 #>  [18977,] 417 331 #>  [18978,] 418 331 #>  [18979,] 419 331 #>  [18980,] 420 331 #>  [18981,] 421 331 #>  [18982,] 422 331 #>  [18983,] 423 331 #>  [18984,] 424 331 #>  [18985,] 425 331 #>  [18986,] 426 331 #>  [18987,] 427 331 #>  [18988,] 428 331 #>  [18989,] 429 331 #>  [18990,] 430 331 #>  [18991,] 431 331 #>  [18992,] 432 331 #>  [18993,] 433 331 #>  [18994,] 434 331 #>  [18995,] 435 331 #>  [18996,] 436 331 #>  [18997,] 437 331 #>  [18998,] 438 331 #>  [18999,] 439 331 #>  [19000,] 440 331 #>  [19001,] 441 331 #>  [19002,] 442 331 #>  [19003,] 443 331 #>  [19004,] 444 331 #>  [19005,] 445 331 #>  [19006,] 446 331 #>  [19007,] 447 331 #>  [19008,] 448 331 #>  [19009,] 449 331 #>  [19010,] 450 331 #>  [19011,] 451 331 #>  [19012,] 452 331 #>  [19013,] 453 331 #>  [19014,] 454 331 #>  [19015,] 455 331 #>  [19016,] 456 331 #>  [19017,] 457 331 #>  [19018,] 458 331 #>  [19019,] 459 331 #>  [19020,] 460 331 #>  [19021,] 461 331 #>  [19022,] 462 331 #>  [19023,] 463 331 #>  [19024,] 464 331 #>  [19025,] 465 331 #>  [19026,] 466 331 #>  [19027,] 467 331 #>  [19028,] 468 331 #>  [19029,] 469 331 #>  [19030,] 470 331 #>  [19031,] 471 331 #>  [19032,] 472 331 #>  [19033,] 473 331 #>  [19034,] 474 331 #>  [19035,] 475 331 #>  [19036,] 476 331 #>  [19037,] 477 331 #>  [19038,] 478 331 #>  [19039,] 479 331 #>  [19040,] 480 331 #>  [19041,] 481 331 #>  [19042,] 482 331 #>  [19043,] 483 331 #>  [19044,] 484 331 #>  [19045,] 485 331 #>  [19046,] 486 331 #>  [19047,] 487 331 #>  [19048,] 488 331 #>  [19049,] 489 331 #>  [19050,] 490 331 #>  [19051,] 491 331 #>  [19052,] 492 331 #>  [19053,] 493 331 #>  [19054,] 494 331 #>  [19055,] 495 331 #>  [19056,] 496 331 #>  [19057,] 497 331 #>  [19058,] 498 331 #>  [19059,] 499 331 #>  [19060,] 500 331 #>  [19061,] 501 331 #>  [19062,] 502 331 #>  [19063,] 503 331 #>  [19064,] 504 331 #>  [19065,] 505 331 #>  [19066,] 506 331 #>  [19067,] 507 331 #>  [19068,] 508 331 #>  [19069,] 509 331 #>  [19070,] 510 331 #>  [19071,] 511 331 #>  [19072,] 512 331 #>  [19073,] 513 331 #>  [19074,] 514 331 #>  [19075,] 515 331 #>  [19076,] 516 331 #>  [19077,] 517 331 #>  [19078,] 518 331 #>  [19079,] 519 331 #>  [19080,] 520 331 #>  [19081,] 521 331 #>  [19082,] 522 331 #>  [19083,] 523 331 #>  [19084,] 524 331 #>  [19085,] 525 331 #>  [19086,] 526 331 #>  [19087,] 527 331 #>  [19088,] 528 331 #>  [19089,] 529 331 #>  [19090,] 530 331 #>  [19091,] 531 331 #>  [19092,] 532 331 #>  [19093,] 533 331 #>  [19094,] 534 331 #>  [19095,] 535 331 #>  [19096,] 536 331 #>  [19097,] 537 331 #>  [19098,] 538 331 #>  [19099,] 539 331 #>  [19100,] 540 331 #>  [19101,] 541 331 #>  [19102,] 542 331 #>  [19103,] 543 331 #>  [19104,] 544 331 #>  [19105,] 545 331 #>  [19106,] 546 331 #>  [19107,] 547 331 #>  [19108,] 548 331 #>  [19109,] 549 331 #>  [19110,] 550 331 #>  [19111,] 551 331 #>  [19112,] 552 331 #>  [19113,] 553 331 #>  [19114,] 554 331 #>  [19115,] 555 331 #>  [19116,] 556 331 #>  [19117,] 557 331 #>  [19118,] 558 331 #>  [19119,] 559 331 #>  [19120,] 560 331 #>  [19121,] 561 331 #>  [19122,] 562 331 #>  [19123,] 563 331 #>  [19124,] 564 331 #>  [19125,] 565 331 #>  [19126,] 566 331 #>  [19127,] 567 331 #>  [19128,] 568 331 #>  [19129,] 569 331 #>  [19130,] 570 331 #>  [19131,] 571 331 #>  [19132,] 572 331 #>  [19133,] 573 331 #>  [19134,] 574 331 #>  [19135,] 575 331 #>  [19136,] 576 331 #>  [19137,] 577 331 #>  [19138,] 578 331 #>  [19139,] 579 331 #>  [19140,] 580 331 #>  [19141,] 581 331 #>  [19142,] 582 331 #>  [19143,] 583 331 #>  [19144,] 584 331 #>  [19145,] 585 331 #>  [19146,] 586 331 #>  [19147,] 587 331 #>  [19148,] 588 331 #>  [19149,] 589 331 #>  [19150,] 590 331 #>  [19151,] 591 331 #>  [19152,] 592 331 #>  [19153,] 593 331 #>  [19154,] 594 331 #>  [19155,] 595 331 #>  [19156,] 596 331 #>  [19157,] 597 331 #>  [19158,] 598 331 #>  [19159,] 599 331 #>  [19160,] 600 331 #>  [19161,] 601 331 #>  [19162,] 602 331 #>  [19163,] 603 331 #>  [19164,] 604 331 #>  [19165,] 605 331 #>  [19166,] 606 331 #>  [19167,] 607 331 #>  [19168,] 608 331 #>  [19169,] 609 331 #>  [19170,] 610 331 #>  [19171,] 611 331 #>  [19172,] 612 331 #>  [19173,] 613 331 #>  [19174,] 614 331 #>  [19175,] 615 331 #>  [19176,] 616 331 #>  [19177,] 617 331 #>  [19178,] 618 331 #>  [19179,] 619 331 #>  [19180,] 620 331 #>  [19181,] 621 331 #>  [19182,] 622 331 #>  [19183,] 623 331 #>  [19184,] 624 331 #>  [19185,] 625 331 #>  [19186,] 626 331 #>  [19187,] 627 331 #>  [19188,] 628 331 #>  [19189,] 629 331 #>  [19190,] 630 331 #>  [19191,] 631 331 #>  [19192,] 632 331 #>  [19193,] 633 331 #>  [19194,] 634 331 #>  [19195,] 635 331 #>  [19196,] 636 331 #>  [19197,] 637 331 #>  [19198,] 638 331 #>  [19199,] 639 331 #>  [19200,] 640 331 #>  [19201,]   1 330 #>  [19202,]   2 330 #>  [19203,]   3 330 #>  [19204,]   4 330 #>  [19205,]   5 330 #>  [19206,]   6 330 #>  [19207,]   7 330 #>  [19208,]   8 330 #>  [19209,]   9 330 #>  [19210,]  10 330 #>  [19211,]  11 330 #>  [19212,]  12 330 #>  [19213,]  13 330 #>  [19214,]  14 330 #>  [19215,]  15 330 #>  [19216,]  16 330 #>  [19217,]  17 330 #>  [19218,]  18 330 #>  [19219,]  19 330 #>  [19220,]  20 330 #>  [19221,]  21 330 #>  [19222,]  22 330 #>  [19223,]  23 330 #>  [19224,]  24 330 #>  [19225,]  25 330 #>  [19226,]  26 330 #>  [19227,]  27 330 #>  [19228,]  28 330 #>  [19229,]  29 330 #>  [19230,]  30 330 #>  [19231,]  31 330 #>  [19232,]  32 330 #>  [19233,]  33 330 #>  [19234,]  34 330 #>  [19235,]  35 330 #>  [19236,]  36 330 #>  [19237,]  37 330 #>  [19238,]  38 330 #>  [19239,]  39 330 #>  [19240,]  40 330 #>  [19241,]  41 330 #>  [19242,]  42 330 #>  [19243,]  43 330 #>  [19244,]  44 330 #>  [19245,]  45 330 #>  [19246,]  46 330 #>  [19247,]  47 330 #>  [19248,]  48 330 #>  [19249,]  49 330 #>  [19250,]  50 330 #>  [19251,]  51 330 #>  [19252,]  52 330 #>  [19253,]  53 330 #>  [19254,]  54 330 #>  [19255,]  55 330 #>  [19256,]  56 330 #>  [19257,]  57 330 #>  [19258,]  58 330 #>  [19259,]  59 330 #>  [19260,]  60 330 #>  [19261,]  61 330 #>  [19262,]  62 330 #>  [19263,]  63 330 #>  [19264,]  64 330 #>  [19265,]  65 330 #>  [19266,]  66 330 #>  [19267,]  67 330 #>  [19268,]  68 330 #>  [19269,]  69 330 #>  [19270,]  70 330 #>  [19271,]  71 330 #>  [19272,]  72 330 #>  [19273,]  73 330 #>  [19274,]  74 330 #>  [19275,]  75 330 #>  [19276,]  76 330 #>  [19277,]  77 330 #>  [19278,]  78 330 #>  [19279,]  79 330 #>  [19280,]  80 330 #>  [19281,]  81 330 #>  [19282,]  82 330 #>  [19283,]  83 330 #>  [19284,]  84 330 #>  [19285,]  85 330 #>  [19286,]  86 330 #>  [19287,]  87 330 #>  [19288,]  88 330 #>  [19289,]  89 330 #>  [19290,]  90 330 #>  [19291,]  91 330 #>  [19292,]  92 330 #>  [19293,]  93 330 #>  [19294,]  94 330 #>  [19295,]  95 330 #>  [19296,]  96 330 #>  [19297,]  97 330 #>  [19298,]  98 330 #>  [19299,]  99 330 #>  [19300,] 100 330 #>  [19301,] 101 330 #>  [19302,] 102 330 #>  [19303,] 103 330 #>  [19304,] 104 330 #>  [19305,] 105 330 #>  [19306,] 106 330 #>  [19307,] 107 330 #>  [19308,] 108 330 #>  [19309,] 109 330 #>  [19310,] 110 330 #>  [19311,] 111 330 #>  [19312,] 112 330 #>  [19313,] 113 330 #>  [19314,] 114 330 #>  [19315,] 115 330 #>  [19316,] 116 330 #>  [19317,] 117 330 #>  [19318,] 118 330 #>  [19319,] 119 330 #>  [19320,] 120 330 #>  [19321,] 121 330 #>  [19322,] 122 330 #>  [19323,] 123 330 #>  [19324,] 124 330 #>  [19325,] 125 330 #>  [19326,] 126 330 #>  [19327,] 127 330 #>  [19328,] 128 330 #>  [19329,] 129 330 #>  [19330,] 130 330 #>  [19331,] 131 330 #>  [19332,] 132 330 #>  [19333,] 133 330 #>  [19334,] 134 330 #>  [19335,] 135 330 #>  [19336,] 136 330 #>  [19337,] 137 330 #>  [19338,] 138 330 #>  [19339,] 139 330 #>  [19340,] 140 330 #>  [19341,] 141 330 #>  [19342,] 142 330 #>  [19343,] 143 330 #>  [19344,] 144 330 #>  [19345,] 145 330 #>  [19346,] 146 330 #>  [19347,] 147 330 #>  [19348,] 148 330 #>  [19349,] 149 330 #>  [19350,] 150 330 #>  [19351,] 151 330 #>  [19352,] 152 330 #>  [19353,] 153 330 #>  [19354,] 154 330 #>  [19355,] 155 330 #>  [19356,] 156 330 #>  [19357,] 157 330 #>  [19358,] 158 330 #>  [19359,] 159 330 #>  [19360,] 160 330 #>  [19361,] 161 330 #>  [19362,] 162 330 #>  [19363,] 163 330 #>  [19364,] 164 330 #>  [19365,] 165 330 #>  [19366,] 166 330 #>  [19367,] 167 330 #>  [19368,] 168 330 #>  [19369,] 169 330 #>  [19370,] 170 330 #>  [19371,] 171 330 #>  [19372,] 172 330 #>  [19373,] 173 330 #>  [19374,] 174 330 #>  [19375,] 175 330 #>  [19376,] 176 330 #>  [19377,] 177 330 #>  [19378,] 178 330 #>  [19379,] 179 330 #>  [19380,] 180 330 #>  [19381,] 181 330 #>  [19382,] 182 330 #>  [19383,] 183 330 #>  [19384,] 184 330 #>  [19385,] 185 330 #>  [19386,] 186 330 #>  [19387,] 187 330 #>  [19388,] 188 330 #>  [19389,] 189 330 #>  [19390,] 190 330 #>  [19391,] 191 330 #>  [19392,] 192 330 #>  [19393,] 193 330 #>  [19394,] 194 330 #>  [19395,] 195 330 #>  [19396,] 196 330 #>  [19397,] 197 330 #>  [19398,] 198 330 #>  [19399,] 199 330 #>  [19400,] 200 330 #>  [19401,] 201 330 #>  [19402,] 202 330 #>  [19403,] 203 330 #>  [19404,] 204 330 #>  [19405,] 205 330 #>  [19406,] 206 330 #>  [19407,] 207 330 #>  [19408,] 208 330 #>  [19409,] 209 330 #>  [19410,] 210 330 #>  [19411,] 211 330 #>  [19412,] 212 330 #>  [19413,] 213 330 #>  [19414,] 214 330 #>  [19415,] 215 330 #>  [19416,] 216 330 #>  [19417,] 217 330 #>  [19418,] 218 330 #>  [19419,] 219 330 #>  [19420,] 220 330 #>  [19421,] 221 330 #>  [19422,] 222 330 #>  [19423,] 223 330 #>  [19424,] 224 330 #>  [19425,] 225 330 #>  [19426,] 226 330 #>  [19427,] 227 330 #>  [19428,] 228 330 #>  [19429,] 229 330 #>  [19430,] 230 330 #>  [19431,] 231 330 #>  [19432,] 232 330 #>  [19433,] 233 330 #>  [19434,] 234 330 #>  [19435,] 235 330 #>  [19436,] 236 330 #>  [19437,] 237 330 #>  [19438,] 238 330 #>  [19439,] 239 330 #>  [19440,] 240 330 #>  [19441,] 241 330 #>  [19442,] 242 330 #>  [19443,] 243 330 #>  [19444,] 244 330 #>  [19445,] 245 330 #>  [19446,] 246 330 #>  [19447,] 247 330 #>  [19448,] 248 330 #>  [19449,] 249 330 #>  [19450,] 250 330 #>  [19451,] 251 330 #>  [19452,] 252 330 #>  [19453,] 253 330 #>  [19454,] 254 330 #>  [19455,] 255 330 #>  [19456,] 256 330 #>  [19457,] 257 330 #>  [19458,] 258 330 #>  [19459,] 259 330 #>  [19460,] 260 330 #>  [19461,] 261 330 #>  [19462,] 262 330 #>  [19463,] 263 330 #>  [19464,] 264 330 #>  [19465,] 265 330 #>  [19466,] 266 330 #>  [19467,] 267 330 #>  [19468,] 268 330 #>  [19469,] 269 330 #>  [19470,] 270 330 #>  [19471,] 271 330 #>  [19472,] 272 330 #>  [19473,] 273 330 #>  [19474,] 274 330 #>  [19475,] 275 330 #>  [19476,] 276 330 #>  [19477,] 277 330 #>  [19478,] 278 330 #>  [19479,] 279 330 #>  [19480,] 280 330 #>  [19481,] 281 330 #>  [19482,] 282 330 #>  [19483,] 283 330 #>  [19484,] 284 330 #>  [19485,] 285 330 #>  [19486,] 286 330 #>  [19487,] 287 330 #>  [19488,] 288 330 #>  [19489,] 289 330 #>  [19490,] 290 330 #>  [19491,] 291 330 #>  [19492,] 292 330 #>  [19493,] 293 330 #>  [19494,] 294 330 #>  [19495,] 295 330 #>  [19496,] 296 330 #>  [19497,] 297 330 #>  [19498,] 298 330 #>  [19499,] 299 330 #>  [19500,] 300 330 #>  [19501,] 301 330 #>  [19502,] 302 330 #>  [19503,] 303 330 #>  [19504,] 304 330 #>  [19505,] 305 330 #>  [19506,] 306 330 #>  [19507,] 307 330 #>  [19508,] 308 330 #>  [19509,] 309 330 #>  [19510,] 310 330 #>  [19511,] 311 330 #>  [19512,] 312 330 #>  [19513,] 313 330 #>  [19514,] 314 330 #>  [19515,] 315 330 #>  [19516,] 316 330 #>  [19517,] 317 330 #>  [19518,] 318 330 #>  [19519,] 319 330 #>  [19520,] 320 330 #>  [19521,] 321 330 #>  [19522,] 322 330 #>  [19523,] 323 330 #>  [19524,] 324 330 #>  [19525,] 325 330 #>  [19526,] 326 330 #>  [19527,] 327 330 #>  [19528,] 328 330 #>  [19529,] 329 330 #>  [19530,] 330 330 #>  [19531,] 331 330 #>  [19532,] 332 330 #>  [19533,] 333 330 #>  [19534,] 334 330 #>  [19535,] 335 330 #>  [19536,] 336 330 #>  [19537,] 337 330 #>  [19538,] 338 330 #>  [19539,] 339 330 #>  [19540,] 340 330 #>  [19541,] 341 330 #>  [19542,] 342 330 #>  [19543,] 343 330 #>  [19544,] 344 330 #>  [19545,] 345 330 #>  [19546,] 346 330 #>  [19547,] 347 330 #>  [19548,] 348 330 #>  [19549,] 349 330 #>  [19550,] 350 330 #>  [19551,] 351 330 #>  [19552,] 352 330 #>  [19553,] 353 330 #>  [19554,] 354 330 #>  [19555,] 355 330 #>  [19556,] 356 330 #>  [19557,] 357 330 #>  [19558,] 358 330 #>  [19559,] 359 330 #>  [19560,] 360 330 #>  [19561,] 361 330 #>  [19562,] 362 330 #>  [19563,] 363 330 #>  [19564,] 364 330 #>  [19565,] 365 330 #>  [19566,] 366 330 #>  [19567,] 367 330 #>  [19568,] 368 330 #>  [19569,] 369 330 #>  [19570,] 370 330 #>  [19571,] 371 330 #>  [19572,] 372 330 #>  [19573,] 373 330 #>  [19574,] 374 330 #>  [19575,] 375 330 #>  [19576,] 376 330 #>  [19577,] 377 330 #>  [19578,] 378 330 #>  [19579,] 379 330 #>  [19580,] 380 330 #>  [19581,] 381 330 #>  [19582,] 382 330 #>  [19583,] 383 330 #>  [19584,] 384 330 #>  [19585,] 385 330 #>  [19586,] 386 330 #>  [19587,] 387 330 #>  [19588,] 388 330 #>  [19589,] 389 330 #>  [19590,] 390 330 #>  [19591,] 391 330 #>  [19592,] 392 330 #>  [19593,] 393 330 #>  [19594,] 394 330 #>  [19595,] 395 330 #>  [19596,] 396 330 #>  [19597,] 397 330 #>  [19598,] 398 330 #>  [19599,] 399 330 #>  [19600,] 400 330 #>  [19601,] 401 330 #>  [19602,] 402 330 #>  [19603,] 403 330 #>  [19604,] 404 330 #>  [19605,] 405 330 #>  [19606,] 406 330 #>  [19607,] 407 330 #>  [19608,] 408 330 #>  [19609,] 409 330 #>  [19610,] 410 330 #>  [19611,] 411 330 #>  [19612,] 412 330 #>  [19613,] 413 330 #>  [19614,] 414 330 #>  [19615,] 415 330 #>  [19616,] 416 330 #>  [19617,] 417 330 #>  [19618,] 418 330 #>  [19619,] 419 330 #>  [19620,] 420 330 #>  [19621,] 421 330 #>  [19622,] 422 330 #>  [19623,] 423 330 #>  [19624,] 424 330 #>  [19625,] 425 330 #>  [19626,] 426 330 #>  [19627,] 427 330 #>  [19628,] 428 330 #>  [19629,] 429 330 #>  [19630,] 430 330 #>  [19631,] 431 330 #>  [19632,] 432 330 #>  [19633,] 433 330 #>  [19634,] 434 330 #>  [19635,] 435 330 #>  [19636,] 436 330 #>  [19637,] 437 330 #>  [19638,] 438 330 #>  [19639,] 439 330 #>  [19640,] 440 330 #>  [19641,] 441 330 #>  [19642,] 442 330 #>  [19643,] 443 330 #>  [19644,] 444 330 #>  [19645,] 445 330 #>  [19646,] 446 330 #>  [19647,] 447 330 #>  [19648,] 448 330 #>  [19649,] 449 330 #>  [19650,] 450 330 #>  [19651,] 451 330 #>  [19652,] 452 330 #>  [19653,] 453 330 #>  [19654,] 454 330 #>  [19655,] 455 330 #>  [19656,] 456 330 #>  [19657,] 457 330 #>  [19658,] 458 330 #>  [19659,] 459 330 #>  [19660,] 460 330 #>  [19661,] 461 330 #>  [19662,] 462 330 #>  [19663,] 463 330 #>  [19664,] 464 330 #>  [19665,] 465 330 #>  [19666,] 466 330 #>  [19667,] 467 330 #>  [19668,] 468 330 #>  [19669,] 469 330 #>  [19670,] 470 330 #>  [19671,] 471 330 #>  [19672,] 472 330 #>  [19673,] 473 330 #>  [19674,] 474 330 #>  [19675,] 475 330 #>  [19676,] 476 330 #>  [19677,] 477 330 #>  [19678,] 478 330 #>  [19679,] 479 330 #>  [19680,] 480 330 #>  [19681,] 481 330 #>  [19682,] 482 330 #>  [19683,] 483 330 #>  [19684,] 484 330 #>  [19685,] 485 330 #>  [19686,] 486 330 #>  [19687,] 487 330 #>  [19688,] 488 330 #>  [19689,] 489 330 #>  [19690,] 490 330 #>  [19691,] 491 330 #>  [19692,] 492 330 #>  [19693,] 493 330 #>  [19694,] 494 330 #>  [19695,] 495 330 #>  [19696,] 496 330 #>  [19697,] 497 330 #>  [19698,] 498 330 #>  [19699,] 499 330 #>  [19700,] 500 330 #>  [19701,] 501 330 #>  [19702,] 502 330 #>  [19703,] 503 330 #>  [19704,] 504 330 #>  [19705,] 505 330 #>  [19706,] 506 330 #>  [19707,] 507 330 #>  [19708,] 508 330 #>  [19709,] 509 330 #>  [19710,] 510 330 #>  [19711,] 511 330 #>  [19712,] 512 330 #>  [19713,] 513 330 #>  [19714,] 514 330 #>  [19715,] 515 330 #>  [19716,] 516 330 #>  [19717,] 517 330 #>  [19718,] 518 330 #>  [19719,] 519 330 #>  [19720,] 520 330 #>  [19721,] 521 330 #>  [19722,] 522 330 #>  [19723,] 523 330 #>  [19724,] 524 330 #>  [19725,] 525 330 #>  [19726,] 526 330 #>  [19727,] 527 330 #>  [19728,] 528 330 #>  [19729,] 529 330 #>  [19730,] 530 330 #>  [19731,] 531 330 #>  [19732,] 532 330 #>  [19733,] 533 330 #>  [19734,] 534 330 #>  [19735,] 535 330 #>  [19736,] 536 330 #>  [19737,] 537 330 #>  [19738,] 538 330 #>  [19739,] 539 330 #>  [19740,] 540 330 #>  [19741,] 541 330 #>  [19742,] 542 330 #>  [19743,] 543 330 #>  [19744,] 544 330 #>  [19745,] 545 330 #>  [19746,] 546 330 #>  [19747,] 547 330 #>  [19748,] 548 330 #>  [19749,] 549 330 #>  [19750,] 550 330 #>  [19751,] 551 330 #>  [19752,] 552 330 #>  [19753,] 553 330 #>  [19754,] 554 330 #>  [19755,] 555 330 #>  [19756,] 556 330 #>  [19757,] 557 330 #>  [19758,] 558 330 #>  [19759,] 559 330 #>  [19760,] 560 330 #>  [19761,] 561 330 #>  [19762,] 562 330 #>  [19763,] 563 330 #>  [19764,] 564 330 #>  [19765,] 565 330 #>  [19766,] 566 330 #>  [19767,] 567 330 #>  [19768,] 568 330 #>  [19769,] 569 330 #>  [19770,] 570 330 #>  [19771,] 571 330 #>  [19772,] 572 330 #>  [19773,] 573 330 #>  [19774,] 574 330 #>  [19775,] 575 330 #>  [19776,] 576 330 #>  [19777,] 577 330 #>  [19778,] 578 330 #>  [19779,] 579 330 #>  [19780,] 580 330 #>  [19781,] 581 330 #>  [19782,] 582 330 #>  [19783,] 583 330 #>  [19784,] 584 330 #>  [19785,] 585 330 #>  [19786,] 586 330 #>  [19787,] 587 330 #>  [19788,] 588 330 #>  [19789,] 589 330 #>  [19790,] 590 330 #>  [19791,] 591 330 #>  [19792,] 592 330 #>  [19793,] 593 330 #>  [19794,] 594 330 #>  [19795,] 595 330 #>  [19796,] 596 330 #>  [19797,] 597 330 #>  [19798,] 598 330 #>  [19799,] 599 330 #>  [19800,] 600 330 #>  [19801,] 601 330 #>  [19802,] 602 330 #>  [19803,] 603 330 #>  [19804,] 604 330 #>  [19805,] 605 330 #>  [19806,] 606 330 #>  [19807,] 607 330 #>  [19808,] 608 330 #>  [19809,] 609 330 #>  [19810,] 610 330 #>  [19811,] 611 330 #>  [19812,] 612 330 #>  [19813,] 613 330 #>  [19814,] 614 330 #>  [19815,] 615 330 #>  [19816,] 616 330 #>  [19817,] 617 330 #>  [19818,] 618 330 #>  [19819,] 619 330 #>  [19820,] 620 330 #>  [19821,] 621 330 #>  [19822,] 622 330 #>  [19823,] 623 330 #>  [19824,] 624 330 #>  [19825,] 625 330 #>  [19826,] 626 330 #>  [19827,] 627 330 #>  [19828,] 628 330 #>  [19829,] 629 330 #>  [19830,] 630 330 #>  [19831,] 631 330 #>  [19832,] 632 330 #>  [19833,] 633 330 #>  [19834,] 634 330 #>  [19835,] 635 330 #>  [19836,] 636 330 #>  [19837,] 637 330 #>  [19838,] 638 330 #>  [19839,] 639 330 #>  [19840,] 640 330 #>  [19841,]   1 329 #>  [19842,]   2 329 #>  [19843,]   3 329 #>  [19844,]   4 329 #>  [19845,]   5 329 #>  [19846,]   6 329 #>  [19847,]   7 329 #>  [19848,]   8 329 #>  [19849,]   9 329 #>  [19850,]  10 329 #>  [19851,]  11 329 #>  [19852,]  12 329 #>  [19853,]  13 329 #>  [19854,]  14 329 #>  [19855,]  15 329 #>  [19856,]  16 329 #>  [19857,]  17 329 #>  [19858,]  18 329 #>  [19859,]  19 329 #>  [19860,]  20 329 #>  [19861,]  21 329 #>  [19862,]  22 329 #>  [19863,]  23 329 #>  [19864,]  24 329 #>  [19865,]  25 329 #>  [19866,]  26 329 #>  [19867,]  27 329 #>  [19868,]  28 329 #>  [19869,]  29 329 #>  [19870,]  30 329 #>  [19871,]  31 329 #>  [19872,]  32 329 #>  [19873,]  33 329 #>  [19874,]  34 329 #>  [19875,]  35 329 #>  [19876,]  36 329 #>  [19877,]  37 329 #>  [19878,]  38 329 #>  [19879,]  39 329 #>  [19880,]  40 329 #>  [19881,]  41 329 #>  [19882,]  42 329 #>  [19883,]  43 329 #>  [19884,]  44 329 #>  [19885,]  45 329 #>  [19886,]  46 329 #>  [19887,]  47 329 #>  [19888,]  48 329 #>  [19889,]  49 329 #>  [19890,]  50 329 #>  [19891,]  51 329 #>  [19892,]  52 329 #>  [19893,]  53 329 #>  [19894,]  54 329 #>  [19895,]  55 329 #>  [19896,]  56 329 #>  [19897,]  57 329 #>  [19898,]  58 329 #>  [19899,]  59 329 #>  [19900,]  60 329 #>  [19901,]  61 329 #>  [19902,]  62 329 #>  [19903,]  63 329 #>  [19904,]  64 329 #>  [19905,]  65 329 #>  [19906,]  66 329 #>  [19907,]  67 329 #>  [19908,]  68 329 #>  [19909,]  69 329 #>  [19910,]  70 329 #>  [19911,]  71 329 #>  [19912,]  72 329 #>  [19913,]  73 329 #>  [19914,]  74 329 #>  [19915,]  75 329 #>  [19916,]  76 329 #>  [19917,]  77 329 #>  [19918,]  78 329 #>  [19919,]  79 329 #>  [19920,]  80 329 #>  [19921,]  81 329 #>  [19922,]  82 329 #>  [19923,]  83 329 #>  [19924,]  84 329 #>  [19925,]  85 329 #>  [19926,]  86 329 #>  [19927,]  87 329 #>  [19928,]  88 329 #>  [19929,]  89 329 #>  [19930,]  90 329 #>  [19931,]  91 329 #>  [19932,]  92 329 #>  [19933,]  93 329 #>  [19934,]  94 329 #>  [19935,]  95 329 #>  [19936,]  96 329 #>  [19937,]  97 329 #>  [19938,]  98 329 #>  [19939,]  99 329 #>  [19940,] 100 329 #>  [19941,] 101 329 #>  [19942,] 102 329 #>  [19943,] 103 329 #>  [19944,] 104 329 #>  [19945,] 105 329 #>  [19946,] 106 329 #>  [19947,] 107 329 #>  [19948,] 108 329 #>  [19949,] 109 329 #>  [19950,] 110 329 #>  [19951,] 111 329 #>  [19952,] 112 329 #>  [19953,] 113 329 #>  [19954,] 114 329 #>  [19955,] 115 329 #>  [19956,] 116 329 #>  [19957,] 117 329 #>  [19958,] 118 329 #>  [19959,] 119 329 #>  [19960,] 120 329 #>  [19961,] 121 329 #>  [19962,] 122 329 #>  [19963,] 123 329 #>  [19964,] 124 329 #>  [19965,] 125 329 #>  [19966,] 126 329 #>  [19967,] 127 329 #>  [19968,] 128 329 #>  [19969,] 129 329 #>  [19970,] 130 329 #>  [19971,] 131 329 #>  [19972,] 132 329 #>  [19973,] 133 329 #>  [19974,] 134 329 #>  [19975,] 135 329 #>  [19976,] 136 329 #>  [19977,] 137 329 #>  [19978,] 138 329 #>  [19979,] 139 329 #>  [19980,] 140 329 #>  [19981,] 141 329 #>  [19982,] 142 329 #>  [19983,] 143 329 #>  [19984,] 144 329 #>  [19985,] 145 329 #>  [19986,] 146 329 #>  [19987,] 147 329 #>  [19988,] 148 329 #>  [19989,] 149 329 #>  [19990,] 150 329 #>  [19991,] 151 329 #>  [19992,] 152 329 #>  [19993,] 153 329 #>  [19994,] 154 329 #>  [19995,] 155 329 #>  [19996,] 156 329 #>  [19997,] 157 329 #>  [19998,] 158 329 #>  [19999,] 159 329 #>  [20000,] 160 329 #>  [20001,] 161 329 #>  [20002,] 162 329 #>  [20003,] 163 329 #>  [20004,] 164 329 #>  [20005,] 165 329 #>  [20006,] 166 329 #>  [20007,] 167 329 #>  [20008,] 168 329 #>  [20009,] 169 329 #>  [20010,] 170 329 #>  [20011,] 171 329 #>  [20012,] 172 329 #>  [20013,] 173 329 #>  [20014,] 174 329 #>  [20015,] 175 329 #>  [20016,] 176 329 #>  [20017,] 177 329 #>  [20018,] 178 329 #>  [20019,] 179 329 #>  [20020,] 180 329 #>  [20021,] 181 329 #>  [20022,] 182 329 #>  [20023,] 183 329 #>  [20024,] 184 329 #>  [20025,] 185 329 #>  [20026,] 186 329 #>  [20027,] 187 329 #>  [20028,] 188 329 #>  [20029,] 189 329 #>  [20030,] 190 329 #>  [20031,] 191 329 #>  [20032,] 192 329 #>  [20033,] 193 329 #>  [20034,] 194 329 #>  [20035,] 195 329 #>  [20036,] 196 329 #>  [20037,] 197 329 #>  [20038,] 198 329 #>  [20039,] 199 329 #>  [20040,] 200 329 #>  [20041,] 201 329 #>  [20042,] 202 329 #>  [20043,] 203 329 #>  [20044,] 204 329 #>  [20045,] 205 329 #>  [20046,] 206 329 #>  [20047,] 207 329 #>  [20048,] 208 329 #>  [20049,] 209 329 #>  [20050,] 210 329 #>  [20051,] 211 329 #>  [20052,] 212 329 #>  [20053,] 213 329 #>  [20054,] 214 329 #>  [20055,] 215 329 #>  [20056,] 216 329 #>  [20057,] 217 329 #>  [20058,] 218 329 #>  [20059,] 219 329 #>  [20060,] 220 329 #>  [20061,] 221 329 #>  [20062,] 222 329 #>  [20063,] 223 329 #>  [20064,] 224 329 #>  [20065,] 225 329 #>  [20066,] 226 329 #>  [20067,] 227 329 #>  [20068,] 228 329 #>  [20069,] 229 329 #>  [20070,] 230 329 #>  [20071,] 231 329 #>  [20072,] 232 329 #>  [20073,] 233 329 #>  [20074,] 234 329 #>  [20075,] 235 329 #>  [20076,] 236 329 #>  [20077,] 237 329 #>  [20078,] 238 329 #>  [20079,] 239 329 #>  [20080,] 240 329 #>  [20081,] 241 329 #>  [20082,] 242 329 #>  [20083,] 243 329 #>  [20084,] 244 329 #>  [20085,] 245 329 #>  [20086,] 246 329 #>  [20087,] 247 329 #>  [20088,] 248 329 #>  [20089,] 249 329 #>  [20090,] 250 329 #>  [20091,] 251 329 #>  [20092,] 252 329 #>  [20093,] 253 329 #>  [20094,] 254 329 #>  [20095,] 255 329 #>  [20096,] 256 329 #>  [20097,] 257 329 #>  [20098,] 258 329 #>  [20099,] 259 329 #>  [20100,] 260 329 #>  [20101,] 261 329 #>  [20102,] 262 329 #>  [20103,] 263 329 #>  [20104,] 264 329 #>  [20105,] 265 329 #>  [20106,] 266 329 #>  [20107,] 267 329 #>  [20108,] 268 329 #>  [20109,] 269 329 #>  [20110,] 270 329 #>  [20111,] 271 329 #>  [20112,] 272 329 #>  [20113,] 273 329 #>  [20114,] 274 329 #>  [20115,] 275 329 #>  [20116,] 276 329 #>  [20117,] 277 329 #>  [20118,] 278 329 #>  [20119,] 279 329 #>  [20120,] 280 329 #>  [20121,] 281 329 #>  [20122,] 282 329 #>  [20123,] 283 329 #>  [20124,] 284 329 #>  [20125,] 285 329 #>  [20126,] 286 329 #>  [20127,] 287 329 #>  [20128,] 288 329 #>  [20129,] 289 329 #>  [20130,] 290 329 #>  [20131,] 291 329 #>  [20132,] 292 329 #>  [20133,] 293 329 #>  [20134,] 294 329 #>  [20135,] 295 329 #>  [20136,] 296 329 #>  [20137,] 297 329 #>  [20138,] 298 329 #>  [20139,] 299 329 #>  [20140,] 300 329 #>  [20141,] 301 329 #>  [20142,] 302 329 #>  [20143,] 303 329 #>  [20144,] 304 329 #>  [20145,] 305 329 #>  [20146,] 306 329 #>  [20147,] 307 329 #>  [20148,] 308 329 #>  [20149,] 309 329 #>  [20150,] 310 329 #>  [20151,] 311 329 #>  [20152,] 312 329 #>  [20153,] 313 329 #>  [20154,] 314 329 #>  [20155,] 315 329 #>  [20156,] 316 329 #>  [20157,] 317 329 #>  [20158,] 318 329 #>  [20159,] 319 329 #>  [20160,] 320 329 #>  [20161,] 321 329 #>  [20162,] 322 329 #>  [20163,] 323 329 #>  [20164,] 324 329 #>  [20165,] 325 329 #>  [20166,] 326 329 #>  [20167,] 327 329 #>  [20168,] 328 329 #>  [20169,] 329 329 #>  [20170,] 330 329 #>  [20171,] 331 329 #>  [20172,] 332 329 #>  [20173,] 333 329 #>  [20174,] 334 329 #>  [20175,] 335 329 #>  [20176,] 336 329 #>  [20177,] 337 329 #>  [20178,] 338 329 #>  [20179,] 339 329 #>  [20180,] 340 329 #>  [20181,] 341 329 #>  [20182,] 342 329 #>  [20183,] 343 329 #>  [20184,] 344 329 #>  [20185,] 345 329 #>  [20186,] 346 329 #>  [20187,] 347 329 #>  [20188,] 348 329 #>  [20189,] 349 329 #>  [20190,] 350 329 #>  [20191,] 351 329 #>  [20192,] 352 329 #>  [20193,] 353 329 #>  [20194,] 354 329 #>  [20195,] 355 329 #>  [20196,] 356 329 #>  [20197,] 357 329 #>  [20198,] 358 329 #>  [20199,] 359 329 #>  [20200,] 360 329 #>  [20201,] 361 329 #>  [20202,] 362 329 #>  [20203,] 363 329 #>  [20204,] 364 329 #>  [20205,] 365 329 #>  [20206,] 366 329 #>  [20207,] 367 329 #>  [20208,] 368 329 #>  [20209,] 369 329 #>  [20210,] 370 329 #>  [20211,] 371 329 #>  [20212,] 372 329 #>  [20213,] 373 329 #>  [20214,] 374 329 #>  [20215,] 375 329 #>  [20216,] 376 329 #>  [20217,] 377 329 #>  [20218,] 378 329 #>  [20219,] 379 329 #>  [20220,] 380 329 #>  [20221,] 381 329 #>  [20222,] 382 329 #>  [20223,] 383 329 #>  [20224,] 384 329 #>  [20225,] 385 329 #>  [20226,] 386 329 #>  [20227,] 387 329 #>  [20228,] 388 329 #>  [20229,] 389 329 #>  [20230,] 390 329 #>  [20231,] 391 329 #>  [20232,] 392 329 #>  [20233,] 393 329 #>  [20234,] 394 329 #>  [20235,] 395 329 #>  [20236,] 396 329 #>  [20237,] 397 329 #>  [20238,] 398 329 #>  [20239,] 399 329 #>  [20240,] 400 329 #>  [20241,] 401 329 #>  [20242,] 402 329 #>  [20243,] 403 329 #>  [20244,] 404 329 #>  [20245,] 405 329 #>  [20246,] 406 329 #>  [20247,] 407 329 #>  [20248,] 408 329 #>  [20249,] 409 329 #>  [20250,] 410 329 #>  [20251,] 411 329 #>  [20252,] 412 329 #>  [20253,] 413 329 #>  [20254,] 414 329 #>  [20255,] 415 329 #>  [20256,] 416 329 #>  [20257,] 417 329 #>  [20258,] 418 329 #>  [20259,] 419 329 #>  [20260,] 420 329 #>  [20261,] 421 329 #>  [20262,] 422 329 #>  [20263,] 423 329 #>  [20264,] 424 329 #>  [20265,] 425 329 #>  [20266,] 426 329 #>  [20267,] 427 329 #>  [20268,] 428 329 #>  [20269,] 429 329 #>  [20270,] 430 329 #>  [20271,] 431 329 #>  [20272,] 432 329 #>  [20273,] 433 329 #>  [20274,] 434 329 #>  [20275,] 435 329 #>  [20276,] 436 329 #>  [20277,] 437 329 #>  [20278,] 438 329 #>  [20279,] 439 329 #>  [20280,] 440 329 #>  [20281,] 441 329 #>  [20282,] 442 329 #>  [20283,] 443 329 #>  [20284,] 444 329 #>  [20285,] 445 329 #>  [20286,] 446 329 #>  [20287,] 447 329 #>  [20288,] 448 329 #>  [20289,] 449 329 #>  [20290,] 450 329 #>  [20291,] 451 329 #>  [20292,] 452 329 #>  [20293,] 453 329 #>  [20294,] 454 329 #>  [20295,] 455 329 #>  [20296,] 456 329 #>  [20297,] 457 329 #>  [20298,] 458 329 #>  [20299,] 459 329 #>  [20300,] 460 329 #>  [20301,] 461 329 #>  [20302,] 462 329 #>  [20303,] 463 329 #>  [20304,] 464 329 #>  [20305,] 465 329 #>  [20306,] 466 329 #>  [20307,] 467 329 #>  [20308,] 468 329 #>  [20309,] 469 329 #>  [20310,] 470 329 #>  [20311,] 471 329 #>  [20312,] 472 329 #>  [20313,] 473 329 #>  [20314,] 474 329 #>  [20315,] 475 329 #>  [20316,] 476 329 #>  [20317,] 477 329 #>  [20318,] 478 329 #>  [20319,] 479 329 #>  [20320,] 480 329 #>  [20321,] 481 329 #>  [20322,] 482 329 #>  [20323,] 483 329 #>  [20324,] 484 329 #>  [20325,] 485 329 #>  [20326,] 486 329 #>  [20327,] 487 329 #>  [20328,] 488 329 #>  [20329,] 489 329 #>  [20330,] 490 329 #>  [20331,] 491 329 #>  [20332,] 492 329 #>  [20333,] 493 329 #>  [20334,] 494 329 #>  [20335,] 495 329 #>  [20336,] 496 329 #>  [20337,] 497 329 #>  [20338,] 498 329 #>  [20339,] 499 329 #>  [20340,] 500 329 #>  [20341,] 501 329 #>  [20342,] 502 329 #>  [20343,] 503 329 #>  [20344,] 504 329 #>  [20345,] 505 329 #>  [20346,] 506 329 #>  [20347,] 507 329 #>  [20348,] 508 329 #>  [20349,] 509 329 #>  [20350,] 510 329 #>  [20351,] 511 329 #>  [20352,] 512 329 #>  [20353,] 513 329 #>  [20354,] 514 329 #>  [20355,] 515 329 #>  [20356,] 516 329 #>  [20357,] 517 329 #>  [20358,] 518 329 #>  [20359,] 519 329 #>  [20360,] 520 329 #>  [20361,] 521 329 #>  [20362,] 522 329 #>  [20363,] 523 329 #>  [20364,] 524 329 #>  [20365,] 525 329 #>  [20366,] 526 329 #>  [20367,] 527 329 #>  [20368,] 528 329 #>  [20369,] 529 329 #>  [20370,] 530 329 #>  [20371,] 531 329 #>  [20372,] 532 329 #>  [20373,] 533 329 #>  [20374,] 534 329 #>  [20375,] 535 329 #>  [20376,] 536 329 #>  [20377,] 537 329 #>  [20378,] 538 329 #>  [20379,] 539 329 #>  [20380,] 540 329 #>  [20381,] 541 329 #>  [20382,] 542 329 #>  [20383,] 543 329 #>  [20384,] 544 329 #>  [20385,] 545 329 #>  [20386,] 546 329 #>  [20387,] 547 329 #>  [20388,] 548 329 #>  [20389,] 549 329 #>  [20390,] 550 329 #>  [20391,] 551 329 #>  [20392,] 552 329 #>  [20393,] 553 329 #>  [20394,] 554 329 #>  [20395,] 555 329 #>  [20396,] 556 329 #>  [20397,] 557 329 #>  [20398,] 558 329 #>  [20399,] 559 329 #>  [20400,] 560 329 #>  [20401,] 561 329 #>  [20402,] 562 329 #>  [20403,] 563 329 #>  [20404,] 564 329 #>  [20405,] 565 329 #>  [20406,] 566 329 #>  [20407,] 567 329 #>  [20408,] 568 329 #>  [20409,] 569 329 #>  [20410,] 570 329 #>  [20411,] 571 329 #>  [20412,] 572 329 #>  [20413,] 573 329 #>  [20414,] 574 329 #>  [20415,] 575 329 #>  [20416,] 576 329 #>  [20417,] 577 329 #>  [20418,] 578 329 #>  [20419,] 579 329 #>  [20420,] 580 329 #>  [20421,] 581 329 #>  [20422,] 582 329 #>  [20423,] 583 329 #>  [20424,] 584 329 #>  [20425,] 585 329 #>  [20426,] 586 329 #>  [20427,] 587 329 #>  [20428,] 588 329 #>  [20429,] 589 329 #>  [20430,] 590 329 #>  [20431,] 591 329 #>  [20432,] 592 329 #>  [20433,] 593 329 #>  [20434,] 594 329 #>  [20435,] 595 329 #>  [20436,] 596 329 #>  [20437,] 597 329 #>  [20438,] 598 329 #>  [20439,] 599 329 #>  [20440,] 600 329 #>  [20441,] 601 329 #>  [20442,] 602 329 #>  [20443,] 603 329 #>  [20444,] 604 329 #>  [20445,] 605 329 #>  [20446,] 606 329 #>  [20447,] 607 329 #>  [20448,] 608 329 #>  [20449,] 609 329 #>  [20450,] 610 329 #>  [20451,] 611 329 #>  [20452,] 612 329 #>  [20453,] 613 329 #>  [20454,] 614 329 #>  [20455,] 615 329 #>  [20456,] 616 329 #>  [20457,] 617 329 #>  [20458,] 618 329 #>  [20459,] 619 329 #>  [20460,] 620 329 #>  [20461,] 621 329 #>  [20462,] 622 329 #>  [20463,] 623 329 #>  [20464,] 624 329 #>  [20465,] 625 329 #>  [20466,] 626 329 #>  [20467,] 627 329 #>  [20468,] 628 329 #>  [20469,] 629 329 #>  [20470,] 630 329 #>  [20471,] 631 329 #>  [20472,] 632 329 #>  [20473,] 633 329 #>  [20474,] 634 329 #>  [20475,] 635 329 #>  [20476,] 636 329 #>  [20477,] 637 329 #>  [20478,] 638 329 #>  [20479,] 639 329 #>  [20480,] 640 329 #>  [20481,]   1 328 #>  [20482,]   2 328 #>  [20483,]   3 328 #>  [20484,]   4 328 #>  [20485,]   5 328 #>  [20486,]   6 328 #>  [20487,]   7 328 #>  [20488,]   8 328 #>  [20489,]   9 328 #>  [20490,]  10 328 #>  [20491,]  11 328 #>  [20492,]  12 328 #>  [20493,]  13 328 #>  [20494,]  14 328 #>  [20495,]  15 328 #>  [20496,]  16 328 #>  [20497,]  17 328 #>  [20498,]  18 328 #>  [20499,]  19 328 #>  [20500,]  20 328 #>  [20501,]  21 328 #>  [20502,]  22 328 #>  [20503,]  23 328 #>  [20504,]  24 328 #>  [20505,]  25 328 #>  [20506,]  26 328 #>  [20507,]  27 328 #>  [20508,]  28 328 #>  [20509,]  29 328 #>  [20510,]  30 328 #>  [20511,]  31 328 #>  [20512,]  32 328 #>  [20513,]  33 328 #>  [20514,]  34 328 #>  [20515,]  35 328 #>  [20516,]  36 328 #>  [20517,]  37 328 #>  [20518,]  38 328 #>  [20519,]  39 328 #>  [20520,]  40 328 #>  [20521,]  41 328 #>  [20522,]  42 328 #>  [20523,]  43 328 #>  [20524,]  44 328 #>  [20525,]  45 328 #>  [20526,]  46 328 #>  [20527,]  47 328 #>  [20528,]  48 328 #>  [20529,]  49 328 #>  [20530,]  50 328 #>  [20531,]  51 328 #>  [20532,]  52 328 #>  [20533,]  53 328 #>  [20534,]  54 328 #>  [20535,]  55 328 #>  [20536,]  56 328 #>  [20537,]  57 328 #>  [20538,]  58 328 #>  [20539,]  59 328 #>  [20540,]  60 328 #>  [20541,]  61 328 #>  [20542,]  62 328 #>  [20543,]  63 328 #>  [20544,]  64 328 #>  [20545,]  65 328 #>  [20546,]  66 328 #>  [20547,]  67 328 #>  [20548,]  68 328 #>  [20549,]  69 328 #>  [20550,]  70 328 #>  [20551,]  71 328 #>  [20552,]  72 328 #>  [20553,]  73 328 #>  [20554,]  74 328 #>  [20555,]  75 328 #>  [20556,]  76 328 #>  [20557,]  77 328 #>  [20558,]  78 328 #>  [20559,]  79 328 #>  [20560,]  80 328 #>  [20561,]  81 328 #>  [20562,]  82 328 #>  [20563,]  83 328 #>  [20564,]  84 328 #>  [20565,]  85 328 #>  [20566,]  86 328 #>  [20567,]  87 328 #>  [20568,]  88 328 #>  [20569,]  89 328 #>  [20570,]  90 328 #>  [20571,]  91 328 #>  [20572,]  92 328 #>  [20573,]  93 328 #>  [20574,]  94 328 #>  [20575,]  95 328 #>  [20576,]  96 328 #>  [20577,]  97 328 #>  [20578,]  98 328 #>  [20579,]  99 328 #>  [20580,] 100 328 #>  [20581,] 101 328 #>  [20582,] 102 328 #>  [20583,] 103 328 #>  [20584,] 104 328 #>  [20585,] 105 328 #>  [20586,] 106 328 #>  [20587,] 107 328 #>  [20588,] 108 328 #>  [20589,] 109 328 #>  [20590,] 110 328 #>  [20591,] 111 328 #>  [20592,] 112 328 #>  [20593,] 113 328 #>  [20594,] 114 328 #>  [20595,] 115 328 #>  [20596,] 116 328 #>  [20597,] 117 328 #>  [20598,] 118 328 #>  [20599,] 119 328 #>  [20600,] 120 328 #>  [20601,] 121 328 #>  [20602,] 122 328 #>  [20603,] 123 328 #>  [20604,] 124 328 #>  [20605,] 125 328 #>  [20606,] 126 328 #>  [20607,] 127 328 #>  [20608,] 128 328 #>  [20609,] 129 328 #>  [20610,] 130 328 #>  [20611,] 131 328 #>  [20612,] 132 328 #>  [20613,] 133 328 #>  [20614,] 134 328 #>  [20615,] 135 328 #>  [20616,] 136 328 #>  [20617,] 137 328 #>  [20618,] 138 328 #>  [20619,] 139 328 #>  [20620,] 140 328 #>  [20621,] 141 328 #>  [20622,] 142 328 #>  [20623,] 143 328 #>  [20624,] 144 328 #>  [20625,] 145 328 #>  [20626,] 146 328 #>  [20627,] 147 328 #>  [20628,] 148 328 #>  [20629,] 149 328 #>  [20630,] 150 328 #>  [20631,] 151 328 #>  [20632,] 152 328 #>  [20633,] 153 328 #>  [20634,] 154 328 #>  [20635,] 155 328 #>  [20636,] 156 328 #>  [20637,] 157 328 #>  [20638,] 158 328 #>  [20639,] 159 328 #>  [20640,] 160 328 #>  [20641,] 161 328 #>  [20642,] 162 328 #>  [20643,] 163 328 #>  [20644,] 164 328 #>  [20645,] 165 328 #>  [20646,] 166 328 #>  [20647,] 167 328 #>  [20648,] 168 328 #>  [20649,] 169 328 #>  [20650,] 170 328 #>  [20651,] 171 328 #>  [20652,] 172 328 #>  [20653,] 173 328 #>  [20654,] 174 328 #>  [20655,] 175 328 #>  [20656,] 176 328 #>  [20657,] 177 328 #>  [20658,] 178 328 #>  [20659,] 179 328 #>  [20660,] 180 328 #>  [20661,] 181 328 #>  [20662,] 182 328 #>  [20663,] 183 328 #>  [20664,] 184 328 #>  [20665,] 185 328 #>  [20666,] 186 328 #>  [20667,] 187 328 #>  [20668,] 188 328 #>  [20669,] 189 328 #>  [20670,] 190 328 #>  [20671,] 191 328 #>  [20672,] 192 328 #>  [20673,] 193 328 #>  [20674,] 194 328 #>  [20675,] 195 328 #>  [20676,] 196 328 #>  [20677,] 197 328 #>  [20678,] 198 328 #>  [20679,] 199 328 #>  [20680,] 200 328 #>  [20681,] 201 328 #>  [20682,] 202 328 #>  [20683,] 203 328 #>  [20684,] 204 328 #>  [20685,] 205 328 #>  [20686,] 206 328 #>  [20687,] 207 328 #>  [20688,] 208 328 #>  [20689,] 209 328 #>  [20690,] 210 328 #>  [20691,] 211 328 #>  [20692,] 212 328 #>  [20693,] 213 328 #>  [20694,] 214 328 #>  [20695,] 215 328 #>  [20696,] 216 328 #>  [20697,] 217 328 #>  [20698,] 218 328 #>  [20699,] 219 328 #>  [20700,] 220 328 #>  [20701,] 221 328 #>  [20702,] 222 328 #>  [20703,] 223 328 #>  [20704,] 224 328 #>  [20705,] 225 328 #>  [20706,] 226 328 #>  [20707,] 227 328 #>  [20708,] 228 328 #>  [20709,] 229 328 #>  [20710,] 230 328 #>  [20711,] 231 328 #>  [20712,] 232 328 #>  [20713,] 233 328 #>  [20714,] 234 328 #>  [20715,] 235 328 #>  [20716,] 236 328 #>  [20717,] 237 328 #>  [20718,] 238 328 #>  [20719,] 239 328 #>  [20720,] 240 328 #>  [20721,] 241 328 #>  [20722,] 242 328 #>  [20723,] 243 328 #>  [20724,] 244 328 #>  [20725,] 245 328 #>  [20726,] 246 328 #>  [20727,] 247 328 #>  [20728,] 248 328 #>  [20729,] 249 328 #>  [20730,] 250 328 #>  [20731,] 251 328 #>  [20732,] 252 328 #>  [20733,] 253 328 #>  [20734,] 254 328 #>  [20735,] 255 328 #>  [20736,] 256 328 #>  [20737,] 257 328 #>  [20738,] 258 328 #>  [20739,] 259 328 #>  [20740,] 260 328 #>  [20741,] 261 328 #>  [20742,] 262 328 #>  [20743,] 263 328 #>  [20744,] 264 328 #>  [20745,] 265 328 #>  [20746,] 266 328 #>  [20747,] 267 328 #>  [20748,] 268 328 #>  [20749,] 269 328 #>  [20750,] 270 328 #>  [20751,] 271 328 #>  [20752,] 272 328 #>  [20753,] 273 328 #>  [20754,] 274 328 #>  [20755,] 275 328 #>  [20756,] 276 328 #>  [20757,] 277 328 #>  [20758,] 278 328 #>  [20759,] 279 328 #>  [20760,] 280 328 #>  [20761,] 281 328 #>  [20762,] 282 328 #>  [20763,] 283 328 #>  [20764,] 284 328 #>  [20765,] 285 328 #>  [20766,] 286 328 #>  [20767,] 287 328 #>  [20768,] 288 328 #>  [20769,] 289 328 #>  [20770,] 290 328 #>  [20771,] 291 328 #>  [20772,] 292 328 #>  [20773,] 293 328 #>  [20774,] 294 328 #>  [20775,] 295 328 #>  [20776,] 296 328 #>  [20777,] 297 328 #>  [20778,] 298 328 #>  [20779,] 299 328 #>  [20780,] 300 328 #>  [20781,] 301 328 #>  [20782,] 302 328 #>  [20783,] 303 328 #>  [20784,] 304 328 #>  [20785,] 305 328 #>  [20786,] 306 328 #>  [20787,] 307 328 #>  [20788,] 308 328 #>  [20789,] 309 328 #>  [20790,] 310 328 #>  [20791,] 311 328 #>  [20792,] 312 328 #>  [20793,] 313 328 #>  [20794,] 314 328 #>  [20795,] 315 328 #>  [20796,] 316 328 #>  [20797,] 317 328 #>  [20798,] 318 328 #>  [20799,] 319 328 #>  [20800,] 320 328 #>  [20801,] 321 328 #>  [20802,] 322 328 #>  [20803,] 323 328 #>  [20804,] 324 328 #>  [20805,] 325 328 #>  [20806,] 326 328 #>  [20807,] 327 328 #>  [20808,] 328 328 #>  [20809,] 329 328 #>  [20810,] 330 328 #>  [20811,] 331 328 #>  [20812,] 332 328 #>  [20813,] 333 328 #>  [20814,] 334 328 #>  [20815,] 335 328 #>  [20816,] 336 328 #>  [20817,] 337 328 #>  [20818,] 338 328 #>  [20819,] 339 328 #>  [20820,] 340 328 #>  [20821,] 341 328 #>  [20822,] 342 328 #>  [20823,] 343 328 #>  [20824,] 344 328 #>  [20825,] 345 328 #>  [20826,] 346 328 #>  [20827,] 347 328 #>  [20828,] 348 328 #>  [20829,] 349 328 #>  [20830,] 350 328 #>  [20831,] 351 328 #>  [20832,] 352 328 #>  [20833,] 353 328 #>  [20834,] 354 328 #>  [20835,] 355 328 #>  [20836,] 356 328 #>  [20837,] 357 328 #>  [20838,] 358 328 #>  [20839,] 359 328 #>  [20840,] 360 328 #>  [20841,] 361 328 #>  [20842,] 362 328 #>  [20843,] 363 328 #>  [20844,] 364 328 #>  [20845,] 365 328 #>  [20846,] 366 328 #>  [20847,] 367 328 #>  [20848,] 368 328 #>  [20849,] 369 328 #>  [20850,] 370 328 #>  [20851,] 371 328 #>  [20852,] 372 328 #>  [20853,] 373 328 #>  [20854,] 374 328 #>  [20855,] 375 328 #>  [20856,] 376 328 #>  [20857,] 377 328 #>  [20858,] 378 328 #>  [20859,] 379 328 #>  [20860,] 380 328 #>  [20861,] 381 328 #>  [20862,] 382 328 #>  [20863,] 383 328 #>  [20864,] 384 328 #>  [20865,] 385 328 #>  [20866,] 386 328 #>  [20867,] 387 328 #>  [20868,] 388 328 #>  [20869,] 389 328 #>  [20870,] 390 328 #>  [20871,] 391 328 #>  [20872,] 392 328 #>  [20873,] 393 328 #>  [20874,] 394 328 #>  [20875,] 395 328 #>  [20876,] 396 328 #>  [20877,] 397 328 #>  [20878,] 398 328 #>  [20879,] 399 328 #>  [20880,] 400 328 #>  [20881,] 401 328 #>  [20882,] 402 328 #>  [20883,] 403 328 #>  [20884,] 404 328 #>  [20885,] 405 328 #>  [20886,] 406 328 #>  [20887,] 407 328 #>  [20888,] 408 328 #>  [20889,] 409 328 #>  [20890,] 410 328 #>  [20891,] 411 328 #>  [20892,] 412 328 #>  [20893,] 413 328 #>  [20894,] 414 328 #>  [20895,] 415 328 #>  [20896,] 416 328 #>  [20897,] 417 328 #>  [20898,] 418 328 #>  [20899,] 419 328 #>  [20900,] 420 328 #>  [20901,] 421 328 #>  [20902,] 422 328 #>  [20903,] 423 328 #>  [20904,] 424 328 #>  [20905,] 425 328 #>  [20906,] 426 328 #>  [20907,] 427 328 #>  [20908,] 428 328 #>  [20909,] 429 328 #>  [20910,] 430 328 #>  [20911,] 431 328 #>  [20912,] 432 328 #>  [20913,] 433 328 #>  [20914,] 434 328 #>  [20915,] 435 328 #>  [20916,] 436 328 #>  [20917,] 437 328 #>  [20918,] 438 328 #>  [20919,] 439 328 #>  [20920,] 440 328 #>  [20921,] 441 328 #>  [20922,] 442 328 #>  [20923,] 443 328 #>  [20924,] 444 328 #>  [20925,] 445 328 #>  [20926,] 446 328 #>  [20927,] 447 328 #>  [20928,] 448 328 #>  [20929,] 449 328 #>  [20930,] 450 328 #>  [20931,] 451 328 #>  [20932,] 452 328 #>  [20933,] 453 328 #>  [20934,] 454 328 #>  [20935,] 455 328 #>  [20936,] 456 328 #>  [20937,] 457 328 #>  [20938,] 458 328 #>  [20939,] 459 328 #>  [20940,] 460 328 #>  [20941,] 461 328 #>  [20942,] 462 328 #>  [20943,] 463 328 #>  [20944,] 464 328 #>  [20945,] 465 328 #>  [20946,] 466 328 #>  [20947,] 467 328 #>  [20948,] 468 328 #>  [20949,] 469 328 #>  [20950,] 470 328 #>  [20951,] 471 328 #>  [20952,] 472 328 #>  [20953,] 473 328 #>  [20954,] 474 328 #>  [20955,] 475 328 #>  [20956,] 476 328 #>  [20957,] 477 328 #>  [20958,] 478 328 #>  [20959,] 479 328 #>  [20960,] 480 328 #>  [20961,] 481 328 #>  [20962,] 482 328 #>  [20963,] 483 328 #>  [20964,] 484 328 #>  [20965,] 485 328 #>  [20966,] 486 328 #>  [20967,] 487 328 #>  [20968,] 488 328 #>  [20969,] 489 328 #>  [20970,] 490 328 #>  [20971,] 491 328 #>  [20972,] 492 328 #>  [20973,] 493 328 #>  [20974,] 494 328 #>  [20975,] 495 328 #>  [20976,] 496 328 #>  [20977,] 497 328 #>  [20978,] 498 328 #>  [20979,] 499 328 #>  [20980,] 500 328 #>  [20981,] 501 328 #>  [20982,] 502 328 #>  [20983,] 503 328 #>  [20984,] 504 328 #>  [20985,] 505 328 #>  [20986,] 506 328 #>  [20987,] 507 328 #>  [20988,] 508 328 #>  [20989,] 509 328 #>  [20990,] 510 328 #>  [20991,] 511 328 #>  [20992,] 512 328 #>  [20993,] 513 328 #>  [20994,] 514 328 #>  [20995,] 515 328 #>  [20996,] 516 328 #>  [20997,] 517 328 #>  [20998,] 518 328 #>  [20999,] 519 328 #>  [21000,] 520 328 #>  [21001,] 521 328 #>  [21002,] 522 328 #>  [21003,] 523 328 #>  [21004,] 524 328 #>  [21005,] 525 328 #>  [21006,] 526 328 #>  [21007,] 527 328 #>  [21008,] 528 328 #>  [21009,] 529 328 #>  [21010,] 530 328 #>  [21011,] 531 328 #>  [21012,] 532 328 #>  [21013,] 533 328 #>  [21014,] 534 328 #>  [21015,] 535 328 #>  [21016,] 536 328 #>  [21017,] 537 328 #>  [21018,] 538 328 #>  [21019,] 539 328 #>  [21020,] 540 328 #>  [21021,] 541 328 #>  [21022,] 542 328 #>  [21023,] 543 328 #>  [21024,] 544 328 #>  [21025,] 545 328 #>  [21026,] 546 328 #>  [21027,] 547 328 #>  [21028,] 548 328 #>  [21029,] 549 328 #>  [21030,] 550 328 #>  [21031,] 551 328 #>  [21032,] 552 328 #>  [21033,] 553 328 #>  [21034,] 554 328 #>  [21035,] 555 328 #>  [21036,] 556 328 #>  [21037,] 557 328 #>  [21038,] 558 328 #>  [21039,] 559 328 #>  [21040,] 560 328 #>  [21041,] 561 328 #>  [21042,] 562 328 #>  [21043,] 563 328 #>  [21044,] 564 328 #>  [21045,] 565 328 #>  [21046,] 566 328 #>  [21047,] 567 328 #>  [21048,] 568 328 #>  [21049,] 569 328 #>  [21050,] 570 328 #>  [21051,] 571 328 #>  [21052,] 572 328 #>  [21053,] 573 328 #>  [21054,] 574 328 #>  [21055,] 575 328 #>  [21056,] 576 328 #>  [21057,] 577 328 #>  [21058,] 578 328 #>  [21059,] 579 328 #>  [21060,] 580 328 #>  [21061,] 581 328 #>  [21062,] 582 328 #>  [21063,] 583 328 #>  [21064,] 584 328 #>  [21065,] 585 328 #>  [21066,] 586 328 #>  [21067,] 587 328 #>  [21068,] 588 328 #>  [21069,] 589 328 #>  [21070,] 590 328 #>  [21071,] 591 328 #>  [21072,] 592 328 #>  [21073,] 593 328 #>  [21074,] 594 328 #>  [21075,] 595 328 #>  [21076,] 596 328 #>  [21077,] 597 328 #>  [21078,] 598 328 #>  [21079,] 599 328 #>  [21080,] 600 328 #>  [21081,] 601 328 #>  [21082,] 602 328 #>  [21083,] 603 328 #>  [21084,] 604 328 #>  [21085,] 605 328 #>  [21086,] 606 328 #>  [21087,] 607 328 #>  [21088,] 608 328 #>  [21089,] 609 328 #>  [21090,] 610 328 #>  [21091,] 611 328 #>  [21092,] 612 328 #>  [21093,] 613 328 #>  [21094,] 614 328 #>  [21095,] 615 328 #>  [21096,] 616 328 #>  [21097,] 617 328 #>  [21098,] 618 328 #>  [21099,] 619 328 #>  [21100,] 620 328 #>  [21101,] 621 328 #>  [21102,] 622 328 #>  [21103,] 623 328 #>  [21104,] 624 328 #>  [21105,] 625 328 #>  [21106,] 626 328 #>  [21107,] 627 328 #>  [21108,] 628 328 #>  [21109,] 629 328 #>  [21110,] 630 328 #>  [21111,] 631 328 #>  [21112,] 632 328 #>  [21113,] 633 328 #>  [21114,] 634 328 #>  [21115,] 635 328 #>  [21116,] 636 328 #>  [21117,] 637 328 #>  [21118,] 638 328 #>  [21119,] 639 328 #>  [21120,] 640 328 #>  [21121,]   1 327 #>  [21122,]   2 327 #>  [21123,]   3 327 #>  [21124,]   4 327 #>  [21125,]   5 327 #>  [21126,]   6 327 #>  [21127,]   7 327 #>  [21128,]   8 327 #>  [21129,]   9 327 #>  [21130,]  10 327 #>  [21131,]  11 327 #>  [21132,]  12 327 #>  [21133,]  13 327 #>  [21134,]  14 327 #>  [21135,]  15 327 #>  [21136,]  16 327 #>  [21137,]  17 327 #>  [21138,]  18 327 #>  [21139,]  19 327 #>  [21140,]  20 327 #>  [21141,]  21 327 #>  [21142,]  22 327 #>  [21143,]  23 327 #>  [21144,]  24 327 #>  [21145,]  25 327 #>  [21146,]  26 327 #>  [21147,]  27 327 #>  [21148,]  28 327 #>  [21149,]  29 327 #>  [21150,]  30 327 #>  [21151,]  31 327 #>  [21152,]  32 327 #>  [21153,]  33 327 #>  [21154,]  34 327 #>  [21155,]  35 327 #>  [21156,]  36 327 #>  [21157,]  37 327 #>  [21158,]  38 327 #>  [21159,]  39 327 #>  [21160,]  40 327 #>  [21161,]  41 327 #>  [21162,]  42 327 #>  [21163,]  43 327 #>  [21164,]  44 327 #>  [21165,]  45 327 #>  [21166,]  46 327 #>  [21167,]  47 327 #>  [21168,]  48 327 #>  [21169,]  49 327 #>  [21170,]  50 327 #>  [21171,]  51 327 #>  [21172,]  52 327 #>  [21173,]  53 327 #>  [21174,]  54 327 #>  [21175,]  55 327 #>  [21176,]  56 327 #>  [21177,]  57 327 #>  [21178,]  58 327 #>  [21179,]  59 327 #>  [21180,]  60 327 #>  [21181,]  61 327 #>  [21182,]  62 327 #>  [21183,]  63 327 #>  [21184,]  64 327 #>  [21185,]  65 327 #>  [21186,]  66 327 #>  [21187,]  67 327 #>  [21188,]  68 327 #>  [21189,]  69 327 #>  [21190,]  70 327 #>  [21191,]  71 327 #>  [21192,]  72 327 #>  [21193,]  73 327 #>  [21194,]  74 327 #>  [21195,]  75 327 #>  [21196,]  76 327 #>  [21197,]  77 327 #>  [21198,]  78 327 #>  [21199,]  79 327 #>  [21200,]  80 327 #>  [21201,]  81 327 #>  [21202,]  82 327 #>  [21203,]  83 327 #>  [21204,]  84 327 #>  [21205,]  85 327 #>  [21206,]  86 327 #>  [21207,]  87 327 #>  [21208,]  88 327 #>  [21209,]  89 327 #>  [21210,]  90 327 #>  [21211,]  91 327 #>  [21212,]  92 327 #>  [21213,]  93 327 #>  [21214,]  94 327 #>  [21215,]  95 327 #>  [21216,]  96 327 #>  [21217,]  97 327 #>  [21218,]  98 327 #>  [21219,]  99 327 #>  [21220,] 100 327 #>  [21221,] 101 327 #>  [21222,] 102 327 #>  [21223,] 103 327 #>  [21224,] 104 327 #>  [21225,] 105 327 #>  [21226,] 106 327 #>  [21227,] 107 327 #>  [21228,] 108 327 #>  [21229,] 109 327 #>  [21230,] 110 327 #>  [21231,] 111 327 #>  [21232,] 112 327 #>  [21233,] 113 327 #>  [21234,] 114 327 #>  [21235,] 115 327 #>  [21236,] 116 327 #>  [21237,] 117 327 #>  [21238,] 118 327 #>  [21239,] 119 327 #>  [21240,] 120 327 #>  [21241,] 121 327 #>  [21242,] 122 327 #>  [21243,] 123 327 #>  [21244,] 124 327 #>  [21245,] 125 327 #>  [21246,] 126 327 #>  [21247,] 127 327 #>  [21248,] 128 327 #>  [21249,] 129 327 #>  [21250,] 130 327 #>  [21251,] 131 327 #>  [21252,] 132 327 #>  [21253,] 133 327 #>  [21254,] 134 327 #>  [21255,] 135 327 #>  [21256,] 136 327 #>  [21257,] 137 327 #>  [21258,] 138 327 #>  [21259,] 139 327 #>  [21260,] 140 327 #>  [21261,] 141 327 #>  [21262,] 142 327 #>  [21263,] 143 327 #>  [21264,] 144 327 #>  [21265,] 145 327 #>  [21266,] 146 327 #>  [21267,] 147 327 #>  [21268,] 148 327 #>  [21269,] 149 327 #>  [21270,] 150 327 #>  [21271,] 151 327 #>  [21272,] 152 327 #>  [21273,] 153 327 #>  [21274,] 154 327 #>  [21275,] 155 327 #>  [21276,] 156 327 #>  [21277,] 157 327 #>  [21278,] 158 327 #>  [21279,] 159 327 #>  [21280,] 160 327 #>  [21281,] 161 327 #>  [21282,] 162 327 #>  [21283,] 163 327 #>  [21284,] 164 327 #>  [21285,] 165 327 #>  [21286,] 166 327 #>  [21287,] 167 327 #>  [21288,] 168 327 #>  [21289,] 169 327 #>  [21290,] 170 327 #>  [21291,] 171 327 #>  [21292,] 172 327 #>  [21293,] 173 327 #>  [21294,] 174 327 #>  [21295,] 175 327 #>  [21296,] 176 327 #>  [21297,] 177 327 #>  [21298,] 178 327 #>  [21299,] 179 327 #>  [21300,] 180 327 #>  [21301,] 181 327 #>  [21302,] 182 327 #>  [21303,] 183 327 #>  [21304,] 184 327 #>  [21305,] 185 327 #>  [21306,] 186 327 #>  [21307,] 187 327 #>  [21308,] 188 327 #>  [21309,] 189 327 #>  [21310,] 190 327 #>  [21311,] 191 327 #>  [21312,] 192 327 #>  [21313,] 193 327 #>  [21314,] 194 327 #>  [21315,] 195 327 #>  [21316,] 196 327 #>  [21317,] 197 327 #>  [21318,] 198 327 #>  [21319,] 199 327 #>  [21320,] 200 327 #>  [21321,] 201 327 #>  [21322,] 202 327 #>  [21323,] 203 327 #>  [21324,] 204 327 #>  [21325,] 205 327 #>  [21326,] 206 327 #>  [21327,] 207 327 #>  [21328,] 208 327 #>  [21329,] 209 327 #>  [21330,] 210 327 #>  [21331,] 211 327 #>  [21332,] 212 327 #>  [21333,] 213 327 #>  [21334,] 214 327 #>  [21335,] 215 327 #>  [21336,] 216 327 #>  [21337,] 217 327 #>  [21338,] 218 327 #>  [21339,] 219 327 #>  [21340,] 220 327 #>  [21341,] 221 327 #>  [21342,] 222 327 #>  [21343,] 223 327 #>  [21344,] 224 327 #>  [21345,] 225 327 #>  [21346,] 226 327 #>  [21347,] 227 327 #>  [21348,] 228 327 #>  [21349,] 229 327 #>  [21350,] 230 327 #>  [21351,] 231 327 #>  [21352,] 232 327 #>  [21353,] 233 327 #>  [21354,] 234 327 #>  [21355,] 235 327 #>  [21356,] 236 327 #>  [21357,] 237 327 #>  [21358,] 238 327 #>  [21359,] 239 327 #>  [21360,] 240 327 #>  [21361,] 241 327 #>  [21362,] 242 327 #>  [21363,] 243 327 #>  [21364,] 244 327 #>  [21365,] 245 327 #>  [21366,] 246 327 #>  [21367,] 247 327 #>  [21368,] 248 327 #>  [21369,] 249 327 #>  [21370,] 250 327 #>  [21371,] 251 327 #>  [21372,] 252 327 #>  [21373,] 253 327 #>  [21374,] 254 327 #>  [21375,] 255 327 #>  [21376,] 256 327 #>  [21377,] 257 327 #>  [21378,] 258 327 #>  [21379,] 259 327 #>  [21380,] 260 327 #>  [21381,] 261 327 #>  [21382,] 262 327 #>  [21383,] 263 327 #>  [21384,] 264 327 #>  [21385,] 265 327 #>  [21386,] 266 327 #>  [21387,] 267 327 #>  [21388,] 268 327 #>  [21389,] 269 327 #>  [21390,] 270 327 #>  [21391,] 271 327 #>  [21392,] 272 327 #>  [21393,] 273 327 #>  [21394,] 274 327 #>  [21395,] 275 327 #>  [21396,] 276 327 #>  [21397,] 277 327 #>  [21398,] 278 327 #>  [21399,] 279 327 #>  [21400,] 280 327 #>  [21401,] 281 327 #>  [21402,] 282 327 #>  [21403,] 283 327 #>  [21404,] 284 327 #>  [21405,] 285 327 #>  [21406,] 286 327 #>  [21407,] 287 327 #>  [21408,] 288 327 #>  [21409,] 289 327 #>  [21410,] 290 327 #>  [21411,] 291 327 #>  [21412,] 292 327 #>  [21413,] 293 327 #>  [21414,] 294 327 #>  [21415,] 295 327 #>  [21416,] 296 327 #>  [21417,] 297 327 #>  [21418,] 298 327 #>  [21419,] 299 327 #>  [21420,] 300 327 #>  [21421,] 301 327 #>  [21422,] 302 327 #>  [21423,] 303 327 #>  [21424,] 304 327 #>  [21425,] 305 327 #>  [21426,] 306 327 #>  [21427,] 307 327 #>  [21428,] 308 327 #>  [21429,] 309 327 #>  [21430,] 310 327 #>  [21431,] 311 327 #>  [21432,] 312 327 #>  [21433,] 313 327 #>  [21434,] 314 327 #>  [21435,] 315 327 #>  [21436,] 316 327 #>  [21437,] 317 327 #>  [21438,] 318 327 #>  [21439,] 319 327 #>  [21440,] 320 327 #>  [21441,] 321 327 #>  [21442,] 322 327 #>  [21443,] 323 327 #>  [21444,] 324 327 #>  [21445,] 325 327 #>  [21446,] 326 327 #>  [21447,] 327 327 #>  [21448,] 328 327 #>  [21449,] 329 327 #>  [21450,] 330 327 #>  [21451,] 331 327 #>  [21452,] 332 327 #>  [21453,] 333 327 #>  [21454,] 334 327 #>  [21455,] 335 327 #>  [21456,] 336 327 #>  [21457,] 337 327 #>  [21458,] 338 327 #>  [21459,] 339 327 #>  [21460,] 340 327 #>  [21461,] 341 327 #>  [21462,] 342 327 #>  [21463,] 343 327 #>  [21464,] 344 327 #>  [21465,] 345 327 #>  [21466,] 346 327 #>  [21467,] 347 327 #>  [21468,] 348 327 #>  [21469,] 349 327 #>  [21470,] 350 327 #>  [21471,] 351 327 #>  [21472,] 352 327 #>  [21473,] 353 327 #>  [21474,] 354 327 #>  [21475,] 355 327 #>  [21476,] 356 327 #>  [21477,] 357 327 #>  [21478,] 358 327 #>  [21479,] 359 327 #>  [21480,] 360 327 #>  [21481,] 361 327 #>  [21482,] 362 327 #>  [21483,] 363 327 #>  [21484,] 364 327 #>  [21485,] 365 327 #>  [21486,] 366 327 #>  [21487,] 367 327 #>  [21488,] 368 327 #>  [21489,] 369 327 #>  [21490,] 370 327 #>  [21491,] 371 327 #>  [21492,] 372 327 #>  [21493,] 373 327 #>  [21494,] 374 327 #>  [21495,] 375 327 #>  [21496,] 376 327 #>  [21497,] 377 327 #>  [21498,] 378 327 #>  [21499,] 379 327 #>  [21500,] 380 327 #>  [21501,] 381 327 #>  [21502,] 382 327 #>  [21503,] 383 327 #>  [21504,] 384 327 #>  [21505,] 385 327 #>  [21506,] 386 327 #>  [21507,] 387 327 #>  [21508,] 388 327 #>  [21509,] 389 327 #>  [21510,] 390 327 #>  [21511,] 391 327 #>  [21512,] 392 327 #>  [21513,] 393 327 #>  [21514,] 394 327 #>  [21515,] 395 327 #>  [21516,] 396 327 #>  [21517,] 397 327 #>  [21518,] 398 327 #>  [21519,] 399 327 #>  [21520,] 400 327 #>  [21521,] 401 327 #>  [21522,] 402 327 #>  [21523,] 403 327 #>  [21524,] 404 327 #>  [21525,] 405 327 #>  [21526,] 406 327 #>  [21527,] 407 327 #>  [21528,] 408 327 #>  [21529,] 409 327 #>  [21530,] 410 327 #>  [21531,] 411 327 #>  [21532,] 412 327 #>  [21533,] 413 327 #>  [21534,] 414 327 #>  [21535,] 415 327 #>  [21536,] 416 327 #>  [21537,] 417 327 #>  [21538,] 418 327 #>  [21539,] 419 327 #>  [21540,] 420 327 #>  [21541,] 421 327 #>  [21542,] 422 327 #>  [21543,] 423 327 #>  [21544,] 424 327 #>  [21545,] 425 327 #>  [21546,] 426 327 #>  [21547,] 427 327 #>  [21548,] 428 327 #>  [21549,] 429 327 #>  [21550,] 430 327 #>  [21551,] 431 327 #>  [21552,] 432 327 #>  [21553,] 433 327 #>  [21554,] 434 327 #>  [21555,] 435 327 #>  [21556,] 436 327 #>  [21557,] 437 327 #>  [21558,] 438 327 #>  [21559,] 439 327 #>  [21560,] 440 327 #>  [21561,] 441 327 #>  [21562,] 442 327 #>  [21563,] 443 327 #>  [21564,] 444 327 #>  [21565,] 445 327 #>  [21566,] 446 327 #>  [21567,] 447 327 #>  [21568,] 448 327 #>  [21569,] 449 327 #>  [21570,] 450 327 #>  [21571,] 451 327 #>  [21572,] 452 327 #>  [21573,] 453 327 #>  [21574,] 454 327 #>  [21575,] 455 327 #>  [21576,] 456 327 #>  [21577,] 457 327 #>  [21578,] 458 327 #>  [21579,] 459 327 #>  [21580,] 460 327 #>  [21581,] 461 327 #>  [21582,] 462 327 #>  [21583,] 463 327 #>  [21584,] 464 327 #>  [21585,] 465 327 #>  [21586,] 466 327 #>  [21587,] 467 327 #>  [21588,] 468 327 #>  [21589,] 469 327 #>  [21590,] 470 327 #>  [21591,] 471 327 #>  [21592,] 472 327 #>  [21593,] 473 327 #>  [21594,] 474 327 #>  [21595,] 475 327 #>  [21596,] 476 327 #>  [21597,] 477 327 #>  [21598,] 478 327 #>  [21599,] 479 327 #>  [21600,] 480 327 #>  [21601,] 481 327 #>  [21602,] 482 327 #>  [21603,] 483 327 #>  [21604,] 484 327 #>  [21605,] 485 327 #>  [21606,] 486 327 #>  [21607,] 487 327 #>  [21608,] 488 327 #>  [21609,] 489 327 #>  [21610,] 490 327 #>  [21611,] 491 327 #>  [21612,] 492 327 #>  [21613,] 493 327 #>  [21614,] 494 327 #>  [21615,] 495 327 #>  [21616,] 496 327 #>  [21617,] 497 327 #>  [21618,] 498 327 #>  [21619,] 499 327 #>  [21620,] 500 327 #>  [21621,] 501 327 #>  [21622,] 502 327 #>  [21623,] 503 327 #>  [21624,] 504 327 #>  [21625,] 505 327 #>  [21626,] 506 327 #>  [21627,] 507 327 #>  [21628,] 508 327 #>  [21629,] 509 327 #>  [21630,] 510 327 #>  [21631,] 511 327 #>  [21632,] 512 327 #>  [21633,] 513 327 #>  [21634,] 514 327 #>  [21635,] 515 327 #>  [21636,] 516 327 #>  [21637,] 517 327 #>  [21638,] 518 327 #>  [21639,] 519 327 #>  [21640,] 520 327 #>  [21641,] 521 327 #>  [21642,] 522 327 #>  [21643,] 523 327 #>  [21644,] 524 327 #>  [21645,] 525 327 #>  [21646,] 526 327 #>  [21647,] 527 327 #>  [21648,] 528 327 #>  [21649,] 529 327 #>  [21650,] 530 327 #>  [21651,] 531 327 #>  [21652,] 532 327 #>  [21653,] 533 327 #>  [21654,] 534 327 #>  [21655,] 535 327 #>  [21656,] 536 327 #>  [21657,] 537 327 #>  [21658,] 538 327 #>  [21659,] 539 327 #>  [21660,] 540 327 #>  [21661,] 541 327 #>  [21662,] 542 327 #>  [21663,] 543 327 #>  [21664,] 544 327 #>  [21665,] 545 327 #>  [21666,] 546 327 #>  [21667,] 547 327 #>  [21668,] 548 327 #>  [21669,] 549 327 #>  [21670,] 550 327 #>  [21671,] 551 327 #>  [21672,] 552 327 #>  [21673,] 553 327 #>  [21674,] 554 327 #>  [21675,] 555 327 #>  [21676,] 556 327 #>  [21677,] 557 327 #>  [21678,] 558 327 #>  [21679,] 559 327 #>  [21680,] 560 327 #>  [21681,] 561 327 #>  [21682,] 562 327 #>  [21683,] 563 327 #>  [21684,] 564 327 #>  [21685,] 565 327 #>  [21686,] 566 327 #>  [21687,] 567 327 #>  [21688,] 568 327 #>  [21689,] 569 327 #>  [21690,] 570 327 #>  [21691,] 571 327 #>  [21692,] 572 327 #>  [21693,] 573 327 #>  [21694,] 574 327 #>  [21695,] 575 327 #>  [21696,] 576 327 #>  [21697,] 577 327 #>  [21698,] 578 327 #>  [21699,] 579 327 #>  [21700,] 580 327 #>  [21701,] 581 327 #>  [21702,] 582 327 #>  [21703,] 583 327 #>  [21704,] 584 327 #>  [21705,] 585 327 #>  [21706,] 586 327 #>  [21707,] 587 327 #>  [21708,] 588 327 #>  [21709,] 589 327 #>  [21710,] 590 327 #>  [21711,] 591 327 #>  [21712,] 592 327 #>  [21713,] 593 327 #>  [21714,] 594 327 #>  [21715,] 595 327 #>  [21716,] 596 327 #>  [21717,] 597 327 #>  [21718,] 598 327 #>  [21719,] 599 327 #>  [21720,] 600 327 #>  [21721,] 601 327 #>  [21722,] 602 327 #>  [21723,] 603 327 #>  [21724,] 604 327 #>  [21725,] 605 327 #>  [21726,] 606 327 #>  [21727,] 607 327 #>  [21728,] 608 327 #>  [21729,] 609 327 #>  [21730,] 610 327 #>  [21731,] 611 327 #>  [21732,] 612 327 #>  [21733,] 613 327 #>  [21734,] 614 327 #>  [21735,] 615 327 #>  [21736,] 616 327 #>  [21737,] 617 327 #>  [21738,] 618 327 #>  [21739,] 619 327 #>  [21740,] 620 327 #>  [21741,] 621 327 #>  [21742,] 622 327 #>  [21743,] 623 327 #>  [21744,] 624 327 #>  [21745,] 625 327 #>  [21746,] 626 327 #>  [21747,] 627 327 #>  [21748,] 628 327 #>  [21749,] 629 327 #>  [21750,] 630 327 #>  [21751,] 631 327 #>  [21752,] 632 327 #>  [21753,] 633 327 #>  [21754,] 634 327 #>  [21755,] 635 327 #>  [21756,] 636 327 #>  [21757,] 637 327 #>  [21758,] 638 327 #>  [21759,] 639 327 #>  [21760,] 640 327 #>  [21761,]   1 326 #>  [21762,]   2 326 #>  [21763,]   3 326 #>  [21764,]   4 326 #>  [21765,]   5 326 #>  [21766,]   6 326 #>  [21767,]   7 326 #>  [21768,]   8 326 #>  [21769,]   9 326 #>  [21770,]  10 326 #>  [21771,]  11 326 #>  [21772,]  12 326 #>  [21773,]  13 326 #>  [21774,]  14 326 #>  [21775,]  15 326 #>  [21776,]  16 326 #>  [21777,]  17 326 #>  [21778,]  18 326 #>  [21779,]  19 326 #>  [21780,]  20 326 #>  [21781,]  21 326 #>  [21782,]  22 326 #>  [21783,]  23 326 #>  [21784,]  24 326 #>  [21785,]  25 326 #>  [21786,]  26 326 #>  [21787,]  27 326 #>  [21788,]  28 326 #>  [21789,]  29 326 #>  [21790,]  30 326 #>  [21791,]  31 326 #>  [21792,]  32 326 #>  [21793,]  33 326 #>  [21794,]  34 326 #>  [21795,]  35 326 #>  [21796,]  36 326 #>  [21797,]  37 326 #>  [21798,]  38 326 #>  [21799,]  39 326 #>  [21800,]  40 326 #>  [21801,]  41 326 #>  [21802,]  42 326 #>  [21803,]  43 326 #>  [21804,]  44 326 #>  [21805,]  45 326 #>  [21806,]  46 326 #>  [21807,]  47 326 #>  [21808,]  48 326 #>  [21809,]  49 326 #>  [21810,]  50 326 #>  [21811,]  51 326 #>  [21812,]  52 326 #>  [21813,]  53 326 #>  [21814,]  54 326 #>  [21815,]  55 326 #>  [21816,]  56 326 #>  [21817,]  57 326 #>  [21818,]  58 326 #>  [21819,]  59 326 #>  [21820,]  60 326 #>  [21821,]  61 326 #>  [21822,]  62 326 #>  [21823,]  63 326 #>  [21824,]  64 326 #>  [21825,]  65 326 #>  [21826,]  66 326 #>  [21827,]  67 326 #>  [21828,]  68 326 #>  [21829,]  69 326 #>  [21830,]  70 326 #>  [21831,]  71 326 #>  [21832,]  72 326 #>  [21833,]  73 326 #>  [21834,]  74 326 #>  [21835,]  75 326 #>  [21836,]  76 326 #>  [21837,]  77 326 #>  [21838,]  78 326 #>  [21839,]  79 326 #>  [21840,]  80 326 #>  [21841,]  81 326 #>  [21842,]  82 326 #>  [21843,]  83 326 #>  [21844,]  84 326 #>  [21845,]  85 326 #>  [21846,]  86 326 #>  [21847,]  87 326 #>  [21848,]  88 326 #>  [21849,]  89 326 #>  [21850,]  90 326 #>  [21851,]  91 326 #>  [21852,]  92 326 #>  [21853,]  93 326 #>  [21854,]  94 326 #>  [21855,]  95 326 #>  [21856,]  96 326 #>  [21857,]  97 326 #>  [21858,]  98 326 #>  [21859,]  99 326 #>  [21860,] 100 326 #>  [21861,] 101 326 #>  [21862,] 102 326 #>  [21863,] 103 326 #>  [21864,] 104 326 #>  [21865,] 105 326 #>  [21866,] 106 326 #>  [21867,] 107 326 #>  [21868,] 108 326 #>  [21869,] 109 326 #>  [21870,] 110 326 #>  [21871,] 111 326 #>  [21872,] 112 326 #>  [21873,] 113 326 #>  [21874,] 114 326 #>  [21875,] 115 326 #>  [21876,] 116 326 #>  [21877,] 117 326 #>  [21878,] 118 326 #>  [21879,] 119 326 #>  [21880,] 120 326 #>  [21881,] 121 326 #>  [21882,] 122 326 #>  [21883,] 123 326 #>  [21884,] 124 326 #>  [21885,] 125 326 #>  [21886,] 126 326 #>  [21887,] 127 326 #>  [21888,] 128 326 #>  [21889,] 129 326 #>  [21890,] 130 326 #>  [21891,] 131 326 #>  [21892,] 132 326 #>  [21893,] 133 326 #>  [21894,] 134 326 #>  [21895,] 135 326 #>  [21896,] 136 326 #>  [21897,] 137 326 #>  [21898,] 138 326 #>  [21899,] 139 326 #>  [21900,] 140 326 #>  [21901,] 141 326 #>  [21902,] 142 326 #>  [21903,] 143 326 #>  [21904,] 144 326 #>  [21905,] 145 326 #>  [21906,] 146 326 #>  [21907,] 147 326 #>  [21908,] 148 326 #>  [21909,] 149 326 #>  [21910,] 150 326 #>  [21911,] 151 326 #>  [21912,] 152 326 #>  [21913,] 153 326 #>  [21914,] 154 326 #>  [21915,] 155 326 #>  [21916,] 156 326 #>  [21917,] 157 326 #>  [21918,] 158 326 #>  [21919,] 159 326 #>  [21920,] 160 326 #>  [21921,] 161 326 #>  [21922,] 162 326 #>  [21923,] 163 326 #>  [21924,] 164 326 #>  [21925,] 165 326 #>  [21926,] 166 326 #>  [21927,] 167 326 #>  [21928,] 168 326 #>  [21929,] 169 326 #>  [21930,] 170 326 #>  [21931,] 171 326 #>  [21932,] 172 326 #>  [21933,] 173 326 #>  [21934,] 174 326 #>  [21935,] 175 326 #>  [21936,] 176 326 #>  [21937,] 177 326 #>  [21938,] 178 326 #>  [21939,] 179 326 #>  [21940,] 180 326 #>  [21941,] 181 326 #>  [21942,] 182 326 #>  [21943,] 183 326 #>  [21944,] 184 326 #>  [21945,] 185 326 #>  [21946,] 186 326 #>  [21947,] 187 326 #>  [21948,] 188 326 #>  [21949,] 189 326 #>  [21950,] 190 326 #>  [21951,] 191 326 #>  [21952,] 192 326 #>  [21953,] 193 326 #>  [21954,] 194 326 #>  [21955,] 195 326 #>  [21956,] 196 326 #>  [21957,] 197 326 #>  [21958,] 198 326 #>  [21959,] 199 326 #>  [21960,] 200 326 #>  [21961,] 201 326 #>  [21962,] 202 326 #>  [21963,] 203 326 #>  [21964,] 204 326 #>  [21965,] 205 326 #>  [21966,] 206 326 #>  [21967,] 207 326 #>  [21968,] 208 326 #>  [21969,] 209 326 #>  [21970,] 210 326 #>  [21971,] 211 326 #>  [21972,] 212 326 #>  [21973,] 213 326 #>  [21974,] 214 326 #>  [21975,] 215 326 #>  [21976,] 216 326 #>  [21977,] 217 326 #>  [21978,] 218 326 #>  [21979,] 219 326 #>  [21980,] 220 326 #>  [21981,] 221 326 #>  [21982,] 222 326 #>  [21983,] 223 326 #>  [21984,] 224 326 #>  [21985,] 225 326 #>  [21986,] 226 326 #>  [21987,] 227 326 #>  [21988,] 228 326 #>  [21989,] 229 326 #>  [21990,] 230 326 #>  [21991,] 231 326 #>  [21992,] 232 326 #>  [21993,] 233 326 #>  [21994,] 234 326 #>  [21995,] 235 326 #>  [21996,] 236 326 #>  [21997,] 237 326 #>  [21998,] 238 326 #>  [21999,] 239 326 #>  [22000,] 240 326 #>  [22001,] 241 326 #>  [22002,] 242 326 #>  [22003,] 243 326 #>  [22004,] 244 326 #>  [22005,] 245 326 #>  [22006,] 246 326 #>  [22007,] 247 326 #>  [22008,] 248 326 #>  [22009,] 249 326 #>  [22010,] 250 326 #>  [22011,] 251 326 #>  [22012,] 252 326 #>  [22013,] 253 326 #>  [22014,] 254 326 #>  [22015,] 255 326 #>  [22016,] 256 326 #>  [22017,] 257 326 #>  [22018,] 258 326 #>  [22019,] 259 326 #>  [22020,] 260 326 #>  [22021,] 261 326 #>  [22022,] 262 326 #>  [22023,] 263 326 #>  [22024,] 264 326 #>  [22025,] 265 326 #>  [22026,] 266 326 #>  [22027,] 267 326 #>  [22028,] 268 326 #>  [22029,] 269 326 #>  [22030,] 270 326 #>  [22031,] 271 326 #>  [22032,] 272 326 #>  [22033,] 273 326 #>  [22034,] 274 326 #>  [22035,] 275 326 #>  [22036,] 276 326 #>  [22037,] 277 326 #>  [22038,] 278 326 #>  [22039,] 279 326 #>  [22040,] 280 326 #>  [22041,] 281 326 #>  [22042,] 282 326 #>  [22043,] 283 326 #>  [22044,] 284 326 #>  [22045,] 285 326 #>  [22046,] 286 326 #>  [22047,] 287 326 #>  [22048,] 288 326 #>  [22049,] 289 326 #>  [22050,] 290 326 #>  [22051,] 291 326 #>  [22052,] 292 326 #>  [22053,] 293 326 #>  [22054,] 294 326 #>  [22055,] 295 326 #>  [22056,] 296 326 #>  [22057,] 297 326 #>  [22058,] 298 326 #>  [22059,] 299 326 #>  [22060,] 300 326 #>  [22061,] 301 326 #>  [22062,] 302 326 #>  [22063,] 303 326 #>  [22064,] 304 326 #>  [22065,] 305 326 #>  [22066,] 306 326 #>  [22067,] 307 326 #>  [22068,] 308 326 #>  [22069,] 309 326 #>  [22070,] 310 326 #>  [22071,] 311 326 #>  [22072,] 312 326 #>  [22073,] 313 326 #>  [22074,] 314 326 #>  [22075,] 315 326 #>  [22076,] 316 326 #>  [22077,] 317 326 #>  [22078,] 318 326 #>  [22079,] 319 326 #>  [22080,] 320 326 #>  [22081,] 321 326 #>  [22082,] 322 326 #>  [22083,] 323 326 #>  [22084,] 324 326 #>  [22085,] 325 326 #>  [22086,] 326 326 #>  [22087,] 327 326 #>  [22088,] 328 326 #>  [22089,] 329 326 #>  [22090,] 330 326 #>  [22091,] 331 326 #>  [22092,] 332 326 #>  [22093,] 333 326 #>  [22094,] 334 326 #>  [22095,] 335 326 #>  [22096,] 336 326 #>  [22097,] 337 326 #>  [22098,] 338 326 #>  [22099,] 339 326 #>  [22100,] 340 326 #>  [22101,] 341 326 #>  [22102,] 342 326 #>  [22103,] 343 326 #>  [22104,] 344 326 #>  [22105,] 345 326 #>  [22106,] 346 326 #>  [22107,] 347 326 #>  [22108,] 348 326 #>  [22109,] 349 326 #>  [22110,] 350 326 #>  [22111,] 351 326 #>  [22112,] 352 326 #>  [22113,] 353 326 #>  [22114,] 354 326 #>  [22115,] 355 326 #>  [22116,] 356 326 #>  [22117,] 357 326 #>  [22118,] 358 326 #>  [22119,] 359 326 #>  [22120,] 360 326 #>  [22121,] 361 326 #>  [22122,] 362 326 #>  [22123,] 363 326 #>  [22124,] 364 326 #>  [22125,] 365 326 #>  [22126,] 366 326 #>  [22127,] 367 326 #>  [22128,] 368 326 #>  [22129,] 369 326 #>  [22130,] 370 326 #>  [22131,] 371 326 #>  [22132,] 372 326 #>  [22133,] 373 326 #>  [22134,] 374 326 #>  [22135,] 375 326 #>  [22136,] 376 326 #>  [22137,] 377 326 #>  [22138,] 378 326 #>  [22139,] 379 326 #>  [22140,] 380 326 #>  [22141,] 381 326 #>  [22142,] 382 326 #>  [22143,] 383 326 #>  [22144,] 384 326 #>  [22145,] 385 326 #>  [22146,] 386 326 #>  [22147,] 387 326 #>  [22148,] 388 326 #>  [22149,] 389 326 #>  [22150,] 390 326 #>  [22151,] 391 326 #>  [22152,] 392 326 #>  [22153,] 393 326 #>  [22154,] 394 326 #>  [22155,] 395 326 #>  [22156,] 396 326 #>  [22157,] 397 326 #>  [22158,] 398 326 #>  [22159,] 399 326 #>  [22160,] 400 326 #>  [22161,] 401 326 #>  [22162,] 402 326 #>  [22163,] 403 326 #>  [22164,] 404 326 #>  [22165,] 405 326 #>  [22166,] 406 326 #>  [22167,] 407 326 #>  [22168,] 408 326 #>  [22169,] 409 326 #>  [22170,] 410 326 #>  [22171,] 411 326 #>  [22172,] 412 326 #>  [22173,] 413 326 #>  [22174,] 414 326 #>  [22175,] 415 326 #>  [22176,] 416 326 #>  [22177,] 417 326 #>  [22178,] 418 326 #>  [22179,] 419 326 #>  [22180,] 420 326 #>  [22181,] 421 326 #>  [22182,] 422 326 #>  [22183,] 423 326 #>  [22184,] 424 326 #>  [22185,] 425 326 #>  [22186,] 426 326 #>  [22187,] 427 326 #>  [22188,] 428 326 #>  [22189,] 429 326 #>  [22190,] 430 326 #>  [22191,] 431 326 #>  [22192,] 432 326 #>  [22193,] 433 326 #>  [22194,] 434 326 #>  [22195,] 435 326 #>  [22196,] 436 326 #>  [22197,] 437 326 #>  [22198,] 438 326 #>  [22199,] 439 326 #>  [22200,] 440 326 #>  [22201,] 441 326 #>  [22202,] 442 326 #>  [22203,] 443 326 #>  [22204,] 444 326 #>  [22205,] 445 326 #>  [22206,] 446 326 #>  [22207,] 447 326 #>  [22208,] 448 326 #>  [22209,] 449 326 #>  [22210,] 450 326 #>  [22211,] 451 326 #>  [22212,] 452 326 #>  [22213,] 453 326 #>  [22214,] 454 326 #>  [22215,] 455 326 #>  [22216,] 456 326 #>  [22217,] 457 326 #>  [22218,] 458 326 #>  [22219,] 459 326 #>  [22220,] 460 326 #>  [22221,] 461 326 #>  [22222,] 462 326 #>  [22223,] 463 326 #>  [22224,] 464 326 #>  [22225,] 465 326 #>  [22226,] 466 326 #>  [22227,] 467 326 #>  [22228,] 468 326 #>  [22229,] 469 326 #>  [22230,] 470 326 #>  [22231,] 471 326 #>  [22232,] 472 326 #>  [22233,] 473 326 #>  [22234,] 474 326 #>  [22235,] 475 326 #>  [22236,] 476 326 #>  [22237,] 477 326 #>  [22238,] 478 326 #>  [22239,] 479 326 #>  [22240,] 480 326 #>  [22241,] 481 326 #>  [22242,] 482 326 #>  [22243,] 483 326 #>  [22244,] 484 326 #>  [22245,] 485 326 #>  [22246,] 486 326 #>  [22247,] 487 326 #>  [22248,] 488 326 #>  [22249,] 489 326 #>  [22250,] 490 326 #>  [22251,] 491 326 #>  [22252,] 492 326 #>  [22253,] 493 326 #>  [22254,] 494 326 #>  [22255,] 495 326 #>  [22256,] 496 326 #>  [22257,] 497 326 #>  [22258,] 498 326 #>  [22259,] 499 326 #>  [22260,] 500 326 #>  [22261,] 501 326 #>  [22262,] 502 326 #>  [22263,] 503 326 #>  [22264,] 504 326 #>  [22265,] 505 326 #>  [22266,] 506 326 #>  [22267,] 507 326 #>  [22268,] 508 326 #>  [22269,] 509 326 #>  [22270,] 510 326 #>  [22271,] 511 326 #>  [22272,] 512 326 #>  [22273,] 513 326 #>  [22274,] 514 326 #>  [22275,] 515 326 #>  [22276,] 516 326 #>  [22277,] 517 326 #>  [22278,] 518 326 #>  [22279,] 519 326 #>  [22280,] 520 326 #>  [22281,] 521 326 #>  [22282,] 522 326 #>  [22283,] 523 326 #>  [22284,] 524 326 #>  [22285,] 525 326 #>  [22286,] 526 326 #>  [22287,] 527 326 #>  [22288,] 528 326 #>  [22289,] 529 326 #>  [22290,] 530 326 #>  [22291,] 531 326 #>  [22292,] 532 326 #>  [22293,] 533 326 #>  [22294,] 534 326 #>  [22295,] 535 326 #>  [22296,] 536 326 #>  [22297,] 537 326 #>  [22298,] 538 326 #>  [22299,] 539 326 #>  [22300,] 540 326 #>  [22301,] 541 326 #>  [22302,] 542 326 #>  [22303,] 543 326 #>  [22304,] 544 326 #>  [22305,] 545 326 #>  [22306,] 546 326 #>  [22307,] 547 326 #>  [22308,] 548 326 #>  [22309,] 549 326 #>  [22310,] 550 326 #>  [22311,] 551 326 #>  [22312,] 552 326 #>  [22313,] 553 326 #>  [22314,] 554 326 #>  [22315,] 555 326 #>  [22316,] 556 326 #>  [22317,] 557 326 #>  [22318,] 558 326 #>  [22319,] 559 326 #>  [22320,] 560 326 #>  [22321,] 561 326 #>  [22322,] 562 326 #>  [22323,] 563 326 #>  [22324,] 564 326 #>  [22325,] 565 326 #>  [22326,] 566 326 #>  [22327,] 567 326 #>  [22328,] 568 326 #>  [22329,] 569 326 #>  [22330,] 570 326 #>  [22331,] 571 326 #>  [22332,] 572 326 #>  [22333,] 573 326 #>  [22334,] 574 326 #>  [22335,] 575 326 #>  [22336,] 576 326 #>  [22337,] 577 326 #>  [22338,] 578 326 #>  [22339,] 579 326 #>  [22340,] 580 326 #>  [22341,] 581 326 #>  [22342,] 582 326 #>  [22343,] 583 326 #>  [22344,] 584 326 #>  [22345,] 585 326 #>  [22346,] 586 326 #>  [22347,] 587 326 #>  [22348,] 588 326 #>  [22349,] 589 326 #>  [22350,] 590 326 #>  [22351,] 591 326 #>  [22352,] 592 326 #>  [22353,] 593 326 #>  [22354,] 594 326 #>  [22355,] 595 326 #>  [22356,] 596 326 #>  [22357,] 597 326 #>  [22358,] 598 326 #>  [22359,] 599 326 #>  [22360,] 600 326 #>  [22361,] 601 326 #>  [22362,] 602 326 #>  [22363,] 603 326 #>  [22364,] 604 326 #>  [22365,] 605 326 #>  [22366,] 606 326 #>  [22367,] 607 326 #>  [22368,] 608 326 #>  [22369,] 609 326 #>  [22370,] 610 326 #>  [22371,] 611 326 #>  [22372,] 612 326 #>  [22373,] 613 326 #>  [22374,] 614 326 #>  [22375,] 615 326 #>  [22376,] 616 326 #>  [22377,] 617 326 #>  [22378,] 618 326 #>  [22379,] 619 326 #>  [22380,] 620 326 #>  [22381,] 621 326 #>  [22382,] 622 326 #>  [22383,] 623 326 #>  [22384,] 624 326 #>  [22385,] 625 326 #>  [22386,] 626 326 #>  [22387,] 627 326 #>  [22388,] 628 326 #>  [22389,] 629 326 #>  [22390,] 630 326 #>  [22391,] 631 326 #>  [22392,] 632 326 #>  [22393,] 633 326 #>  [22394,] 634 326 #>  [22395,] 635 326 #>  [22396,] 636 326 #>  [22397,] 637 326 #>  [22398,] 638 326 #>  [22399,] 639 326 #>  [22400,] 640 326 #>  [22401,]   1 325 #>  [22402,]   2 325 #>  [22403,]   3 325 #>  [22404,]   4 325 #>  [22405,]   5 325 #>  [22406,]   6 325 #>  [22407,]   7 325 #>  [22408,]   8 325 #>  [22409,]   9 325 #>  [22410,]  10 325 #>  [22411,]  11 325 #>  [22412,]  12 325 #>  [22413,]  13 325 #>  [22414,]  14 325 #>  [22415,]  15 325 #>  [22416,]  16 325 #>  [22417,]  17 325 #>  [22418,]  18 325 #>  [22419,]  19 325 #>  [22420,]  20 325 #>  [22421,]  21 325 #>  [22422,]  22 325 #>  [22423,]  23 325 #>  [22424,]  24 325 #>  [22425,]  25 325 #>  [22426,]  26 325 #>  [22427,]  27 325 #>  [22428,]  28 325 #>  [22429,]  29 325 #>  [22430,]  30 325 #>  [22431,]  31 325 #>  [22432,]  32 325 #>  [22433,]  33 325 #>  [22434,]  34 325 #>  [22435,]  35 325 #>  [22436,]  36 325 #>  [22437,]  37 325 #>  [22438,]  38 325 #>  [22439,]  39 325 #>  [22440,]  40 325 #>  [22441,]  41 325 #>  [22442,]  42 325 #>  [22443,]  43 325 #>  [22444,]  44 325 #>  [22445,]  45 325 #>  [22446,]  46 325 #>  [22447,]  47 325 #>  [22448,]  48 325 #>  [22449,]  49 325 #>  [22450,]  50 325 #>  [22451,]  51 325 #>  [22452,]  52 325 #>  [22453,]  53 325 #>  [22454,]  54 325 #>  [22455,]  55 325 #>  [22456,]  56 325 #>  [22457,]  57 325 #>  [22458,]  58 325 #>  [22459,]  59 325 #>  [22460,]  60 325 #>  [22461,]  61 325 #>  [22462,]  62 325 #>  [22463,]  63 325 #>  [22464,]  64 325 #>  [22465,]  65 325 #>  [22466,]  66 325 #>  [22467,]  67 325 #>  [22468,]  68 325 #>  [22469,]  69 325 #>  [22470,]  70 325 #>  [22471,]  71 325 #>  [22472,]  72 325 #>  [22473,]  73 325 #>  [22474,]  74 325 #>  [22475,]  75 325 #>  [22476,]  76 325 #>  [22477,]  77 325 #>  [22478,]  78 325 #>  [22479,]  79 325 #>  [22480,]  80 325 #>  [22481,]  81 325 #>  [22482,]  82 325 #>  [22483,]  83 325 #>  [22484,]  84 325 #>  [22485,]  85 325 #>  [22486,]  86 325 #>  [22487,]  87 325 #>  [22488,]  88 325 #>  [22489,]  89 325 #>  [22490,]  90 325 #>  [22491,]  91 325 #>  [22492,]  92 325 #>  [22493,]  93 325 #>  [22494,]  94 325 #>  [22495,]  95 325 #>  [22496,]  96 325 #>  [22497,]  97 325 #>  [22498,]  98 325 #>  [22499,]  99 325 #>  [22500,] 100 325 #>  [22501,] 101 325 #>  [22502,] 102 325 #>  [22503,] 103 325 #>  [22504,] 104 325 #>  [22505,] 105 325 #>  [22506,] 106 325 #>  [22507,] 107 325 #>  [22508,] 108 325 #>  [22509,] 109 325 #>  [22510,] 110 325 #>  [22511,] 111 325 #>  [22512,] 112 325 #>  [22513,] 113 325 #>  [22514,] 114 325 #>  [22515,] 115 325 #>  [22516,] 116 325 #>  [22517,] 117 325 #>  [22518,] 118 325 #>  [22519,] 119 325 #>  [22520,] 120 325 #>  [22521,] 121 325 #>  [22522,] 122 325 #>  [22523,] 123 325 #>  [22524,] 124 325 #>  [22525,] 125 325 #>  [22526,] 126 325 #>  [22527,] 127 325 #>  [22528,] 128 325 #>  [22529,] 129 325 #>  [22530,] 130 325 #>  [22531,] 131 325 #>  [22532,] 132 325 #>  [22533,] 133 325 #>  [22534,] 134 325 #>  [22535,] 135 325 #>  [22536,] 136 325 #>  [22537,] 137 325 #>  [22538,] 138 325 #>  [22539,] 139 325 #>  [22540,] 140 325 #>  [22541,] 141 325 #>  [22542,] 142 325 #>  [22543,] 143 325 #>  [22544,] 144 325 #>  [22545,] 145 325 #>  [22546,] 146 325 #>  [22547,] 147 325 #>  [22548,] 148 325 #>  [22549,] 149 325 #>  [22550,] 150 325 #>  [22551,] 151 325 #>  [22552,] 152 325 #>  [22553,] 153 325 #>  [22554,] 154 325 #>  [22555,] 155 325 #>  [22556,] 156 325 #>  [22557,] 157 325 #>  [22558,] 158 325 #>  [22559,] 159 325 #>  [22560,] 160 325 #>  [22561,] 161 325 #>  [22562,] 162 325 #>  [22563,] 163 325 #>  [22564,] 164 325 #>  [22565,] 165 325 #>  [22566,] 166 325 #>  [22567,] 167 325 #>  [22568,] 168 325 #>  [22569,] 169 325 #>  [22570,] 170 325 #>  [22571,] 171 325 #>  [22572,] 172 325 #>  [22573,] 173 325 #>  [22574,] 174 325 #>  [22575,] 175 325 #>  [22576,] 176 325 #>  [22577,] 177 325 #>  [22578,] 178 325 #>  [22579,] 179 325 #>  [22580,] 180 325 #>  [22581,] 181 325 #>  [22582,] 182 325 #>  [22583,] 183 325 #>  [22584,] 184 325 #>  [22585,] 185 325 #>  [22586,] 186 325 #>  [22587,] 187 325 #>  [22588,] 188 325 #>  [22589,] 189 325 #>  [22590,] 190 325 #>  [22591,] 191 325 #>  [22592,] 192 325 #>  [22593,] 193 325 #>  [22594,] 194 325 #>  [22595,] 195 325 #>  [22596,] 196 325 #>  [22597,] 197 325 #>  [22598,] 198 325 #>  [22599,] 199 325 #>  [22600,] 200 325 #>  [22601,] 201 325 #>  [22602,] 202 325 #>  [22603,] 203 325 #>  [22604,] 204 325 #>  [22605,] 205 325 #>  [22606,] 206 325 #>  [22607,] 207 325 #>  [22608,] 208 325 #>  [22609,] 209 325 #>  [22610,] 210 325 #>  [22611,] 211 325 #>  [22612,] 212 325 #>  [22613,] 213 325 #>  [22614,] 214 325 #>  [22615,] 215 325 #>  [22616,] 216 325 #>  [22617,] 217 325 #>  [22618,] 218 325 #>  [22619,] 219 325 #>  [22620,] 220 325 #>  [22621,] 221 325 #>  [22622,] 222 325 #>  [22623,] 223 325 #>  [22624,] 224 325 #>  [22625,] 225 325 #>  [22626,] 226 325 #>  [22627,] 227 325 #>  [22628,] 228 325 #>  [22629,] 229 325 #>  [22630,] 230 325 #>  [22631,] 231 325 #>  [22632,] 232 325 #>  [22633,] 233 325 #>  [22634,] 234 325 #>  [22635,] 235 325 #>  [22636,] 236 325 #>  [22637,] 237 325 #>  [22638,] 238 325 #>  [22639,] 239 325 #>  [22640,] 240 325 #>  [22641,] 241 325 #>  [22642,] 242 325 #>  [22643,] 243 325 #>  [22644,] 244 325 #>  [22645,] 245 325 #>  [22646,] 246 325 #>  [22647,] 247 325 #>  [22648,] 248 325 #>  [22649,] 249 325 #>  [22650,] 250 325 #>  [22651,] 251 325 #>  [22652,] 252 325 #>  [22653,] 253 325 #>  [22654,] 254 325 #>  [22655,] 255 325 #>  [22656,] 256 325 #>  [22657,] 257 325 #>  [22658,] 258 325 #>  [22659,] 259 325 #>  [22660,] 260 325 #>  [22661,] 261 325 #>  [22662,] 262 325 #>  [22663,] 263 325 #>  [22664,] 264 325 #>  [22665,] 265 325 #>  [22666,] 266 325 #>  [22667,] 267 325 #>  [22668,] 268 325 #>  [22669,] 269 325 #>  [22670,] 270 325 #>  [22671,] 271 325 #>  [22672,] 272 325 #>  [22673,] 273 325 #>  [22674,] 274 325 #>  [22675,] 275 325 #>  [22676,] 276 325 #>  [22677,] 277 325 #>  [22678,] 278 325 #>  [22679,] 279 325 #>  [22680,] 280 325 #>  [22681,] 281 325 #>  [22682,] 282 325 #>  [22683,] 283 325 #>  [22684,] 284 325 #>  [22685,] 285 325 #>  [22686,] 286 325 #>  [22687,] 287 325 #>  [22688,] 288 325 #>  [22689,] 289 325 #>  [22690,] 290 325 #>  [22691,] 291 325 #>  [22692,] 292 325 #>  [22693,] 293 325 #>  [22694,] 294 325 #>  [22695,] 295 325 #>  [22696,] 296 325 #>  [22697,] 297 325 #>  [22698,] 298 325 #>  [22699,] 299 325 #>  [22700,] 300 325 #>  [22701,] 301 325 #>  [22702,] 302 325 #>  [22703,] 303 325 #>  [22704,] 304 325 #>  [22705,] 305 325 #>  [22706,] 306 325 #>  [22707,] 307 325 #>  [22708,] 308 325 #>  [22709,] 309 325 #>  [22710,] 310 325 #>  [22711,] 311 325 #>  [22712,] 312 325 #>  [22713,] 313 325 #>  [22714,] 314 325 #>  [22715,] 315 325 #>  [22716,] 316 325 #>  [22717,] 317 325 #>  [22718,] 318 325 #>  [22719,] 319 325 #>  [22720,] 320 325 #>  [22721,] 321 325 #>  [22722,] 322 325 #>  [22723,] 323 325 #>  [22724,] 324 325 #>  [22725,] 325 325 #>  [22726,] 326 325 #>  [22727,] 327 325 #>  [22728,] 328 325 #>  [22729,] 329 325 #>  [22730,] 330 325 #>  [22731,] 331 325 #>  [22732,] 332 325 #>  [22733,] 333 325 #>  [22734,] 334 325 #>  [22735,] 335 325 #>  [22736,] 336 325 #>  [22737,] 337 325 #>  [22738,] 338 325 #>  [22739,] 339 325 #>  [22740,] 340 325 #>  [22741,] 341 325 #>  [22742,] 342 325 #>  [22743,] 343 325 #>  [22744,] 344 325 #>  [22745,] 345 325 #>  [22746,] 346 325 #>  [22747,] 347 325 #>  [22748,] 348 325 #>  [22749,] 349 325 #>  [22750,] 350 325 #>  [22751,] 351 325 #>  [22752,] 352 325 #>  [22753,] 353 325 #>  [22754,] 354 325 #>  [22755,] 355 325 #>  [22756,] 356 325 #>  [22757,] 357 325 #>  [22758,] 358 325 #>  [22759,] 359 325 #>  [22760,] 360 325 #>  [22761,] 361 325 #>  [22762,] 362 325 #>  [22763,] 363 325 #>  [22764,] 364 325 #>  [22765,] 365 325 #>  [22766,] 366 325 #>  [22767,] 367 325 #>  [22768,] 368 325 #>  [22769,] 369 325 #>  [22770,] 370 325 #>  [22771,] 371 325 #>  [22772,] 372 325 #>  [22773,] 373 325 #>  [22774,] 374 325 #>  [22775,] 375 325 #>  [22776,] 376 325 #>  [22777,] 377 325 #>  [22778,] 378 325 #>  [22779,] 379 325 #>  [22780,] 380 325 #>  [22781,] 381 325 #>  [22782,] 382 325 #>  [22783,] 383 325 #>  [22784,] 384 325 #>  [22785,] 385 325 #>  [22786,] 386 325 #>  [22787,] 387 325 #>  [22788,] 388 325 #>  [22789,] 389 325 #>  [22790,] 390 325 #>  [22791,] 391 325 #>  [22792,] 392 325 #>  [22793,] 393 325 #>  [22794,] 394 325 #>  [22795,] 395 325 #>  [22796,] 396 325 #>  [22797,] 397 325 #>  [22798,] 398 325 #>  [22799,] 399 325 #>  [22800,] 400 325 #>  [22801,] 401 325 #>  [22802,] 402 325 #>  [22803,] 403 325 #>  [22804,] 404 325 #>  [22805,] 405 325 #>  [22806,] 406 325 #>  [22807,] 407 325 #>  [22808,] 408 325 #>  [22809,] 409 325 #>  [22810,] 410 325 #>  [22811,] 411 325 #>  [22812,] 412 325 #>  [22813,] 413 325 #>  [22814,] 414 325 #>  [22815,] 415 325 #>  [22816,] 416 325 #>  [22817,] 417 325 #>  [22818,] 418 325 #>  [22819,] 419 325 #>  [22820,] 420 325 #>  [22821,] 421 325 #>  [22822,] 422 325 #>  [22823,] 423 325 #>  [22824,] 424 325 #>  [22825,] 425 325 #>  [22826,] 426 325 #>  [22827,] 427 325 #>  [22828,] 428 325 #>  [22829,] 429 325 #>  [22830,] 430 325 #>  [22831,] 431 325 #>  [22832,] 432 325 #>  [22833,] 433 325 #>  [22834,] 434 325 #>  [22835,] 435 325 #>  [22836,] 436 325 #>  [22837,] 437 325 #>  [22838,] 438 325 #>  [22839,] 439 325 #>  [22840,] 440 325 #>  [22841,] 441 325 #>  [22842,] 442 325 #>  [22843,] 443 325 #>  [22844,] 444 325 #>  [22845,] 445 325 #>  [22846,] 446 325 #>  [22847,] 447 325 #>  [22848,] 448 325 #>  [22849,] 449 325 #>  [22850,] 450 325 #>  [22851,] 451 325 #>  [22852,] 452 325 #>  [22853,] 453 325 #>  [22854,] 454 325 #>  [22855,] 455 325 #>  [22856,] 456 325 #>  [22857,] 457 325 #>  [22858,] 458 325 #>  [22859,] 459 325 #>  [22860,] 460 325 #>  [22861,] 461 325 #>  [22862,] 462 325 #>  [22863,] 463 325 #>  [22864,] 464 325 #>  [22865,] 465 325 #>  [22866,] 466 325 #>  [22867,] 467 325 #>  [22868,] 468 325 #>  [22869,] 469 325 #>  [22870,] 470 325 #>  [22871,] 471 325 #>  [22872,] 472 325 #>  [22873,] 473 325 #>  [22874,] 474 325 #>  [22875,] 475 325 #>  [22876,] 476 325 #>  [22877,] 477 325 #>  [22878,] 478 325 #>  [22879,] 479 325 #>  [22880,] 480 325 #>  [22881,] 481 325 #>  [22882,] 482 325 #>  [22883,] 483 325 #>  [22884,] 484 325 #>  [22885,] 485 325 #>  [22886,] 486 325 #>  [22887,] 487 325 #>  [22888,] 488 325 #>  [22889,] 489 325 #>  [22890,] 490 325 #>  [22891,] 491 325 #>  [22892,] 492 325 #>  [22893,] 493 325 #>  [22894,] 494 325 #>  [22895,] 495 325 #>  [22896,] 496 325 #>  [22897,] 497 325 #>  [22898,] 498 325 #>  [22899,] 499 325 #>  [22900,] 500 325 #>  [22901,] 501 325 #>  [22902,] 502 325 #>  [22903,] 503 325 #>  [22904,] 504 325 #>  [22905,] 505 325 #>  [22906,] 506 325 #>  [22907,] 507 325 #>  [22908,] 508 325 #>  [22909,] 509 325 #>  [22910,] 510 325 #>  [22911,] 511 325 #>  [22912,] 512 325 #>  [22913,] 513 325 #>  [22914,] 514 325 #>  [22915,] 515 325 #>  [22916,] 516 325 #>  [22917,] 517 325 #>  [22918,] 518 325 #>  [22919,] 519 325 #>  [22920,] 520 325 #>  [22921,] 521 325 #>  [22922,] 522 325 #>  [22923,] 523 325 #>  [22924,] 524 325 #>  [22925,] 525 325 #>  [22926,] 526 325 #>  [22927,] 527 325 #>  [22928,] 528 325 #>  [22929,] 529 325 #>  [22930,] 530 325 #>  [22931,] 531 325 #>  [22932,] 532 325 #>  [22933,] 533 325 #>  [22934,] 534 325 #>  [22935,] 535 325 #>  [22936,] 536 325 #>  [22937,] 537 325 #>  [22938,] 538 325 #>  [22939,] 539 325 #>  [22940,] 540 325 #>  [22941,] 541 325 #>  [22942,] 542 325 #>  [22943,] 543 325 #>  [22944,] 544 325 #>  [22945,] 545 325 #>  [22946,] 546 325 #>  [22947,] 547 325 #>  [22948,] 548 325 #>  [22949,] 549 325 #>  [22950,] 550 325 #>  [22951,] 551 325 #>  [22952,] 552 325 #>  [22953,] 553 325 #>  [22954,] 554 325 #>  [22955,] 555 325 #>  [22956,] 556 325 #>  [22957,] 557 325 #>  [22958,] 558 325 #>  [22959,] 559 325 #>  [22960,] 560 325 #>  [22961,] 561 325 #>  [22962,] 562 325 #>  [22963,] 563 325 #>  [22964,] 564 325 #>  [22965,] 565 325 #>  [22966,] 566 325 #>  [22967,] 567 325 #>  [22968,] 568 325 #>  [22969,] 569 325 #>  [22970,] 570 325 #>  [22971,] 571 325 #>  [22972,] 572 325 #>  [22973,] 573 325 #>  [22974,] 574 325 #>  [22975,] 575 325 #>  [22976,] 576 325 #>  [22977,] 577 325 #>  [22978,] 578 325 #>  [22979,] 579 325 #>  [22980,] 580 325 #>  [22981,] 581 325 #>  [22982,] 582 325 #>  [22983,] 583 325 #>  [22984,] 584 325 #>  [22985,] 585 325 #>  [22986,] 586 325 #>  [22987,] 587 325 #>  [22988,] 588 325 #>  [22989,] 589 325 #>  [22990,] 590 325 #>  [22991,] 591 325 #>  [22992,] 592 325 #>  [22993,] 593 325 #>  [22994,] 594 325 #>  [22995,] 595 325 #>  [22996,] 596 325 #>  [22997,] 597 325 #>  [22998,] 598 325 #>  [22999,] 599 325 #>  [23000,] 600 325 #>  [23001,] 601 325 #>  [23002,] 602 325 #>  [23003,] 603 325 #>  [23004,] 604 325 #>  [23005,] 605 325 #>  [23006,] 606 325 #>  [23007,] 607 325 #>  [23008,] 608 325 #>  [23009,] 609 325 #>  [23010,] 610 325 #>  [23011,] 611 325 #>  [23012,] 612 325 #>  [23013,] 613 325 #>  [23014,] 614 325 #>  [23015,] 615 325 #>  [23016,] 616 325 #>  [23017,] 617 325 #>  [23018,] 618 325 #>  [23019,] 619 325 #>  [23020,] 620 325 #>  [23021,] 621 325 #>  [23022,] 622 325 #>  [23023,] 623 325 #>  [23024,] 624 325 #>  [23025,] 625 325 #>  [23026,] 626 325 #>  [23027,] 627 325 #>  [23028,] 628 325 #>  [23029,] 629 325 #>  [23030,] 630 325 #>  [23031,] 631 325 #>  [23032,] 632 325 #>  [23033,] 633 325 #>  [23034,] 634 325 #>  [23035,] 635 325 #>  [23036,] 636 325 #>  [23037,] 637 325 #>  [23038,] 638 325 #>  [23039,] 639 325 #>  [23040,] 640 325 #>  [23041,]   1 324 #>  [23042,]   2 324 #>  [23043,]   3 324 #>  [23044,]   4 324 #>  [23045,]   5 324 #>  [23046,]   6 324 #>  [23047,]   7 324 #>  [23048,]   8 324 #>  [23049,]   9 324 #>  [23050,]  10 324 #>  [23051,]  11 324 #>  [23052,]  12 324 #>  [23053,]  13 324 #>  [23054,]  14 324 #>  [23055,]  15 324 #>  [23056,]  16 324 #>  [23057,]  17 324 #>  [23058,]  18 324 #>  [23059,]  19 324 #>  [23060,]  20 324 #>  [23061,]  21 324 #>  [23062,]  22 324 #>  [23063,]  23 324 #>  [23064,]  24 324 #>  [23065,]  25 324 #>  [23066,]  26 324 #>  [23067,]  27 324 #>  [23068,]  28 324 #>  [23069,]  29 324 #>  [23070,]  30 324 #>  [23071,]  31 324 #>  [23072,]  32 324 #>  [23073,]  33 324 #>  [23074,]  34 324 #>  [23075,]  35 324 #>  [23076,]  36 324 #>  [23077,]  37 324 #>  [23078,]  38 324 #>  [23079,]  39 324 #>  [23080,]  40 324 #>  [23081,]  41 324 #>  [23082,]  42 324 #>  [23083,]  43 324 #>  [23084,]  44 324 #>  [23085,]  45 324 #>  [23086,]  46 324 #>  [23087,]  47 324 #>  [23088,]  48 324 #>  [23089,]  49 324 #>  [23090,]  50 324 #>  [23091,]  51 324 #>  [23092,]  52 324 #>  [23093,]  53 324 #>  [23094,]  54 324 #>  [23095,]  55 324 #>  [23096,]  56 324 #>  [23097,]  57 324 #>  [23098,]  58 324 #>  [23099,]  59 324 #>  [23100,]  60 324 #>  [23101,]  61 324 #>  [23102,]  62 324 #>  [23103,]  63 324 #>  [23104,]  64 324 #>  [23105,]  65 324 #>  [23106,]  66 324 #>  [23107,]  67 324 #>  [23108,]  68 324 #>  [23109,]  69 324 #>  [23110,]  70 324 #>  [23111,]  71 324 #>  [23112,]  72 324 #>  [23113,]  73 324 #>  [23114,]  74 324 #>  [23115,]  75 324 #>  [23116,]  76 324 #>  [23117,]  77 324 #>  [23118,]  78 324 #>  [23119,]  79 324 #>  [23120,]  80 324 #>  [23121,]  81 324 #>  [23122,]  82 324 #>  [23123,]  83 324 #>  [23124,]  84 324 #>  [23125,]  85 324 #>  [23126,]  86 324 #>  [23127,]  87 324 #>  [23128,]  88 324 #>  [23129,]  89 324 #>  [23130,]  90 324 #>  [23131,]  91 324 #>  [23132,]  92 324 #>  [23133,]  93 324 #>  [23134,]  94 324 #>  [23135,]  95 324 #>  [23136,]  96 324 #>  [23137,]  97 324 #>  [23138,]  98 324 #>  [23139,]  99 324 #>  [23140,] 100 324 #>  [23141,] 101 324 #>  [23142,] 102 324 #>  [23143,] 103 324 #>  [23144,] 104 324 #>  [23145,] 105 324 #>  [23146,] 106 324 #>  [23147,] 107 324 #>  [23148,] 108 324 #>  [23149,] 109 324 #>  [23150,] 110 324 #>  [23151,] 111 324 #>  [23152,] 112 324 #>  [23153,] 113 324 #>  [23154,] 114 324 #>  [23155,] 115 324 #>  [23156,] 116 324 #>  [23157,] 117 324 #>  [23158,] 118 324 #>  [23159,] 119 324 #>  [23160,] 120 324 #>  [23161,] 121 324 #>  [23162,] 122 324 #>  [23163,] 123 324 #>  [23164,] 124 324 #>  [23165,] 125 324 #>  [23166,] 126 324 #>  [23167,] 127 324 #>  [23168,] 128 324 #>  [23169,] 129 324 #>  [23170,] 130 324 #>  [23171,] 131 324 #>  [23172,] 132 324 #>  [23173,] 133 324 #>  [23174,] 134 324 #>  [23175,] 135 324 #>  [23176,] 136 324 #>  [23177,] 137 324 #>  [23178,] 138 324 #>  [23179,] 139 324 #>  [23180,] 140 324 #>  [23181,] 141 324 #>  [23182,] 142 324 #>  [23183,] 143 324 #>  [23184,] 144 324 #>  [23185,] 145 324 #>  [23186,] 146 324 #>  [23187,] 147 324 #>  [23188,] 148 324 #>  [23189,] 149 324 #>  [23190,] 150 324 #>  [23191,] 151 324 #>  [23192,] 152 324 #>  [23193,] 153 324 #>  [23194,] 154 324 #>  [23195,] 155 324 #>  [23196,] 156 324 #>  [23197,] 157 324 #>  [23198,] 158 324 #>  [23199,] 159 324 #>  [23200,] 160 324 #>  [23201,] 161 324 #>  [23202,] 162 324 #>  [23203,] 163 324 #>  [23204,] 164 324 #>  [23205,] 165 324 #>  [23206,] 166 324 #>  [23207,] 167 324 #>  [23208,] 168 324 #>  [23209,] 169 324 #>  [23210,] 170 324 #>  [23211,] 171 324 #>  [23212,] 172 324 #>  [23213,] 173 324 #>  [23214,] 174 324 #>  [23215,] 175 324 #>  [23216,] 176 324 #>  [23217,] 177 324 #>  [23218,] 178 324 #>  [23219,] 179 324 #>  [23220,] 180 324 #>  [23221,] 181 324 #>  [23222,] 182 324 #>  [23223,] 183 324 #>  [23224,] 184 324 #>  [23225,] 185 324 #>  [23226,] 186 324 #>  [23227,] 187 324 #>  [23228,] 188 324 #>  [23229,] 189 324 #>  [23230,] 190 324 #>  [23231,] 191 324 #>  [23232,] 192 324 #>  [23233,] 193 324 #>  [23234,] 194 324 #>  [23235,] 195 324 #>  [23236,] 196 324 #>  [23237,] 197 324 #>  [23238,] 198 324 #>  [23239,] 199 324 #>  [23240,] 200 324 #>  [23241,] 201 324 #>  [23242,] 202 324 #>  [23243,] 203 324 #>  [23244,] 204 324 #>  [23245,] 205 324 #>  [23246,] 206 324 #>  [23247,] 207 324 #>  [23248,] 208 324 #>  [23249,] 209 324 #>  [23250,] 210 324 #>  [23251,] 211 324 #>  [23252,] 212 324 #>  [23253,] 213 324 #>  [23254,] 214 324 #>  [23255,] 215 324 #>  [23256,] 216 324 #>  [23257,] 217 324 #>  [23258,] 218 324 #>  [23259,] 219 324 #>  [23260,] 220 324 #>  [23261,] 221 324 #>  [23262,] 222 324 #>  [23263,] 223 324 #>  [23264,] 224 324 #>  [23265,] 225 324 #>  [23266,] 226 324 #>  [23267,] 227 324 #>  [23268,] 228 324 #>  [23269,] 229 324 #>  [23270,] 230 324 #>  [23271,] 231 324 #>  [23272,] 232 324 #>  [23273,] 233 324 #>  [23274,] 234 324 #>  [23275,] 235 324 #>  [23276,] 236 324 #>  [23277,] 237 324 #>  [23278,] 238 324 #>  [23279,] 239 324 #>  [23280,] 240 324 #>  [23281,] 241 324 #>  [23282,] 242 324 #>  [23283,] 243 324 #>  [23284,] 244 324 #>  [23285,] 245 324 #>  [23286,] 246 324 #>  [23287,] 247 324 #>  [23288,] 248 324 #>  [23289,] 249 324 #>  [23290,] 250 324 #>  [23291,] 251 324 #>  [23292,] 252 324 #>  [23293,] 253 324 #>  [23294,] 254 324 #>  [23295,] 255 324 #>  [23296,] 256 324 #>  [23297,] 257 324 #>  [23298,] 258 324 #>  [23299,] 259 324 #>  [23300,] 260 324 #>  [23301,] 261 324 #>  [23302,] 262 324 #>  [23303,] 263 324 #>  [23304,] 264 324 #>  [23305,] 265 324 #>  [23306,] 266 324 #>  [23307,] 267 324 #>  [23308,] 268 324 #>  [23309,] 269 324 #>  [23310,] 270 324 #>  [23311,] 271 324 #>  [23312,] 272 324 #>  [23313,] 273 324 #>  [23314,] 274 324 #>  [23315,] 275 324 #>  [23316,] 276 324 #>  [23317,] 277 324 #>  [23318,] 278 324 #>  [23319,] 279 324 #>  [23320,] 280 324 #>  [23321,] 281 324 #>  [23322,] 282 324 #>  [23323,] 283 324 #>  [23324,] 284 324 #>  [23325,] 285 324 #>  [23326,] 286 324 #>  [23327,] 287 324 #>  [23328,] 288 324 #>  [23329,] 289 324 #>  [23330,] 290 324 #>  [23331,] 291 324 #>  [23332,] 292 324 #>  [23333,] 293 324 #>  [23334,] 294 324 #>  [23335,] 295 324 #>  [23336,] 296 324 #>  [23337,] 297 324 #>  [23338,] 298 324 #>  [23339,] 299 324 #>  [23340,] 300 324 #>  [23341,] 301 324 #>  [23342,] 302 324 #>  [23343,] 303 324 #>  [23344,] 304 324 #>  [23345,] 305 324 #>  [23346,] 306 324 #>  [23347,] 307 324 #>  [23348,] 308 324 #>  [23349,] 309 324 #>  [23350,] 310 324 #>  [23351,] 311 324 #>  [23352,] 312 324 #>  [23353,] 313 324 #>  [23354,] 314 324 #>  [23355,] 315 324 #>  [23356,] 316 324 #>  [23357,] 317 324 #>  [23358,] 318 324 #>  [23359,] 319 324 #>  [23360,] 320 324 #>  [23361,] 321 324 #>  [23362,] 322 324 #>  [23363,] 323 324 #>  [23364,] 324 324 #>  [23365,] 325 324 #>  [23366,] 326 324 #>  [23367,] 327 324 #>  [23368,] 328 324 #>  [23369,] 329 324 #>  [23370,] 330 324 #>  [23371,] 331 324 #>  [23372,] 332 324 #>  [23373,] 333 324 #>  [23374,] 334 324 #>  [23375,] 335 324 #>  [23376,] 336 324 #>  [23377,] 337 324 #>  [23378,] 338 324 #>  [23379,] 339 324 #>  [23380,] 340 324 #>  [23381,] 341 324 #>  [23382,] 342 324 #>  [23383,] 343 324 #>  [23384,] 344 324 #>  [23385,] 345 324 #>  [23386,] 346 324 #>  [23387,] 347 324 #>  [23388,] 348 324 #>  [23389,] 349 324 #>  [23390,] 350 324 #>  [23391,] 351 324 #>  [23392,] 352 324 #>  [23393,] 353 324 #>  [23394,] 354 324 #>  [23395,] 355 324 #>  [23396,] 356 324 #>  [23397,] 357 324 #>  [23398,] 358 324 #>  [23399,] 359 324 #>  [23400,] 360 324 #>  [23401,] 361 324 #>  [23402,] 362 324 #>  [23403,] 363 324 #>  [23404,] 364 324 #>  [23405,] 365 324 #>  [23406,] 366 324 #>  [23407,] 367 324 #>  [23408,] 368 324 #>  [23409,] 369 324 #>  [23410,] 370 324 #>  [23411,] 371 324 #>  [23412,] 372 324 #>  [23413,] 373 324 #>  [23414,] 374 324 #>  [23415,] 375 324 #>  [23416,] 376 324 #>  [23417,] 377 324 #>  [23418,] 378 324 #>  [23419,] 379 324 #>  [23420,] 380 324 #>  [23421,] 381 324 #>  [23422,] 382 324 #>  [23423,] 383 324 #>  [23424,] 384 324 #>  [23425,] 385 324 #>  [23426,] 386 324 #>  [23427,] 387 324 #>  [23428,] 388 324 #>  [23429,] 389 324 #>  [23430,] 390 324 #>  [23431,] 391 324 #>  [23432,] 392 324 #>  [23433,] 393 324 #>  [23434,] 394 324 #>  [23435,] 395 324 #>  [23436,] 396 324 #>  [23437,] 397 324 #>  [23438,] 398 324 #>  [23439,] 399 324 #>  [23440,] 400 324 #>  [23441,] 401 324 #>  [23442,] 402 324 #>  [23443,] 403 324 #>  [23444,] 404 324 #>  [23445,] 405 324 #>  [23446,] 406 324 #>  [23447,] 407 324 #>  [23448,] 408 324 #>  [23449,] 409 324 #>  [23450,] 410 324 #>  [23451,] 411 324 #>  [23452,] 412 324 #>  [23453,] 413 324 #>  [23454,] 414 324 #>  [23455,] 415 324 #>  [23456,] 416 324 #>  [23457,] 417 324 #>  [23458,] 418 324 #>  [23459,] 419 324 #>  [23460,] 420 324 #>  [23461,] 421 324 #>  [23462,] 422 324 #>  [23463,] 423 324 #>  [23464,] 424 324 #>  [23465,] 425 324 #>  [23466,] 426 324 #>  [23467,] 427 324 #>  [23468,] 428 324 #>  [23469,] 429 324 #>  [23470,] 430 324 #>  [23471,] 431 324 #>  [23472,] 432 324 #>  [23473,] 433 324 #>  [23474,] 434 324 #>  [23475,] 435 324 #>  [23476,] 436 324 #>  [23477,] 437 324 #>  [23478,] 438 324 #>  [23479,] 439 324 #>  [23480,] 440 324 #>  [23481,] 441 324 #>  [23482,] 442 324 #>  [23483,] 443 324 #>  [23484,] 444 324 #>  [23485,] 445 324 #>  [23486,] 446 324 #>  [23487,] 447 324 #>  [23488,] 448 324 #>  [23489,] 449 324 #>  [23490,] 450 324 #>  [23491,] 451 324 #>  [23492,] 452 324 #>  [23493,] 453 324 #>  [23494,] 454 324 #>  [23495,] 455 324 #>  [23496,] 456 324 #>  [23497,] 457 324 #>  [23498,] 458 324 #>  [23499,] 459 324 #>  [23500,] 460 324 #>  [23501,] 461 324 #>  [23502,] 462 324 #>  [23503,] 463 324 #>  [23504,] 464 324 #>  [23505,] 465 324 #>  [23506,] 466 324 #>  [23507,] 467 324 #>  [23508,] 468 324 #>  [23509,] 469 324 #>  [23510,] 470 324 #>  [23511,] 471 324 #>  [23512,] 472 324 #>  [23513,] 473 324 #>  [23514,] 474 324 #>  [23515,] 475 324 #>  [23516,] 476 324 #>  [23517,] 477 324 #>  [23518,] 478 324 #>  [23519,] 479 324 #>  [23520,] 480 324 #>  [23521,] 481 324 #>  [23522,] 482 324 #>  [23523,] 483 324 #>  [23524,] 484 324 #>  [23525,] 485 324 #>  [23526,] 486 324 #>  [23527,] 487 324 #>  [23528,] 488 324 #>  [23529,] 489 324 #>  [23530,] 490 324 #>  [23531,] 491 324 #>  [23532,] 492 324 #>  [23533,] 493 324 #>  [23534,] 494 324 #>  [23535,] 495 324 #>  [23536,] 496 324 #>  [23537,] 497 324 #>  [23538,] 498 324 #>  [23539,] 499 324 #>  [23540,] 500 324 #>  [23541,] 501 324 #>  [23542,] 502 324 #>  [23543,] 503 324 #>  [23544,] 504 324 #>  [23545,] 505 324 #>  [23546,] 506 324 #>  [23547,] 507 324 #>  [23548,] 508 324 #>  [23549,] 509 324 #>  [23550,] 510 324 #>  [23551,] 511 324 #>  [23552,] 512 324 #>  [23553,] 513 324 #>  [23554,] 514 324 #>  [23555,] 515 324 #>  [23556,] 516 324 #>  [23557,] 517 324 #>  [23558,] 518 324 #>  [23559,] 519 324 #>  [23560,] 520 324 #>  [23561,] 521 324 #>  [23562,] 522 324 #>  [23563,] 523 324 #>  [23564,] 524 324 #>  [23565,] 525 324 #>  [23566,] 526 324 #>  [23567,] 527 324 #>  [23568,] 528 324 #>  [23569,] 529 324 #>  [23570,] 530 324 #>  [23571,] 531 324 #>  [23572,] 532 324 #>  [23573,] 533 324 #>  [23574,] 534 324 #>  [23575,] 535 324 #>  [23576,] 536 324 #>  [23577,] 537 324 #>  [23578,] 538 324 #>  [23579,] 539 324 #>  [23580,] 540 324 #>  [23581,] 541 324 #>  [23582,] 542 324 #>  [23583,] 543 324 #>  [23584,] 544 324 #>  [23585,] 545 324 #>  [23586,] 546 324 #>  [23587,] 547 324 #>  [23588,] 548 324 #>  [23589,] 549 324 #>  [23590,] 550 324 #>  [23591,] 551 324 #>  [23592,] 552 324 #>  [23593,] 553 324 #>  [23594,] 554 324 #>  [23595,] 555 324 #>  [23596,] 556 324 #>  [23597,] 557 324 #>  [23598,] 558 324 #>  [23599,] 559 324 #>  [23600,] 560 324 #>  [23601,] 561 324 #>  [23602,] 562 324 #>  [23603,] 563 324 #>  [23604,] 564 324 #>  [23605,] 565 324 #>  [23606,] 566 324 #>  [23607,] 567 324 #>  [23608,] 568 324 #>  [23609,] 569 324 #>  [23610,] 570 324 #>  [23611,] 571 324 #>  [23612,] 572 324 #>  [23613,] 573 324 #>  [23614,] 574 324 #>  [23615,] 575 324 #>  [23616,] 576 324 #>  [23617,] 577 324 #>  [23618,] 578 324 #>  [23619,] 579 324 #>  [23620,] 580 324 #>  [23621,] 581 324 #>  [23622,] 582 324 #>  [23623,] 583 324 #>  [23624,] 584 324 #>  [23625,] 585 324 #>  [23626,] 586 324 #>  [23627,] 587 324 #>  [23628,] 588 324 #>  [23629,] 589 324 #>  [23630,] 590 324 #>  [23631,] 591 324 #>  [23632,] 592 324 #>  [23633,] 593 324 #>  [23634,] 594 324 #>  [23635,] 595 324 #>  [23636,] 596 324 #>  [23637,] 597 324 #>  [23638,] 598 324 #>  [23639,] 599 324 #>  [23640,] 600 324 #>  [23641,] 601 324 #>  [23642,] 602 324 #>  [23643,] 603 324 #>  [23644,] 604 324 #>  [23645,] 605 324 #>  [23646,] 606 324 #>  [23647,] 607 324 #>  [23648,] 608 324 #>  [23649,] 609 324 #>  [23650,] 610 324 #>  [23651,] 611 324 #>  [23652,] 612 324 #>  [23653,] 613 324 #>  [23654,] 614 324 #>  [23655,] 615 324 #>  [23656,] 616 324 #>  [23657,] 617 324 #>  [23658,] 618 324 #>  [23659,] 619 324 #>  [23660,] 620 324 #>  [23661,] 621 324 #>  [23662,] 622 324 #>  [23663,] 623 324 #>  [23664,] 624 324 #>  [23665,] 625 324 #>  [23666,] 626 324 #>  [23667,] 627 324 #>  [23668,] 628 324 #>  [23669,] 629 324 #>  [23670,] 630 324 #>  [23671,] 631 324 #>  [23672,] 632 324 #>  [23673,] 633 324 #>  [23674,] 634 324 #>  [23675,] 635 324 #>  [23676,] 636 324 #>  [23677,] 637 324 #>  [23678,] 638 324 #>  [23679,] 639 324 #>  [23680,] 640 324 #>  [23681,]   1 323 #>  [23682,]   2 323 #>  [23683,]   3 323 #>  [23684,]   4 323 #>  [23685,]   5 323 #>  [23686,]   6 323 #>  [23687,]   7 323 #>  [23688,]   8 323 #>  [23689,]   9 323 #>  [23690,]  10 323 #>  [23691,]  11 323 #>  [23692,]  12 323 #>  [23693,]  13 323 #>  [23694,]  14 323 #>  [23695,]  15 323 #>  [23696,]  16 323 #>  [23697,]  17 323 #>  [23698,]  18 323 #>  [23699,]  19 323 #>  [23700,]  20 323 #>  [23701,]  21 323 #>  [23702,]  22 323 #>  [23703,]  23 323 #>  [23704,]  24 323 #>  [23705,]  25 323 #>  [23706,]  26 323 #>  [23707,]  27 323 #>  [23708,]  28 323 #>  [23709,]  29 323 #>  [23710,]  30 323 #>  [23711,]  31 323 #>  [23712,]  32 323 #>  [23713,]  33 323 #>  [23714,]  34 323 #>  [23715,]  35 323 #>  [23716,]  36 323 #>  [23717,]  37 323 #>  [23718,]  38 323 #>  [23719,]  39 323 #>  [23720,]  40 323 #>  [23721,]  41 323 #>  [23722,]  42 323 #>  [23723,]  43 323 #>  [23724,]  44 323 #>  [23725,]  45 323 #>  [23726,]  46 323 #>  [23727,]  47 323 #>  [23728,]  48 323 #>  [23729,]  49 323 #>  [23730,]  50 323 #>  [23731,]  51 323 #>  [23732,]  52 323 #>  [23733,]  53 323 #>  [23734,]  54 323 #>  [23735,]  55 323 #>  [23736,]  56 323 #>  [23737,]  57 323 #>  [23738,]  58 323 #>  [23739,]  59 323 #>  [23740,]  60 323 #>  [23741,]  61 323 #>  [23742,]  62 323 #>  [23743,]  63 323 #>  [23744,]  64 323 #>  [23745,]  65 323 #>  [23746,]  66 323 #>  [23747,]  67 323 #>  [23748,]  68 323 #>  [23749,]  69 323 #>  [23750,]  70 323 #>  [23751,]  71 323 #>  [23752,]  72 323 #>  [23753,]  73 323 #>  [23754,]  74 323 #>  [23755,]  75 323 #>  [23756,]  76 323 #>  [23757,]  77 323 #>  [23758,]  78 323 #>  [23759,]  79 323 #>  [23760,]  80 323 #>  [23761,]  81 323 #>  [23762,]  82 323 #>  [23763,]  83 323 #>  [23764,]  84 323 #>  [23765,]  85 323 #>  [23766,]  86 323 #>  [23767,]  87 323 #>  [23768,]  88 323 #>  [23769,]  89 323 #>  [23770,]  90 323 #>  [23771,]  91 323 #>  [23772,]  92 323 #>  [23773,]  93 323 #>  [23774,]  94 323 #>  [23775,]  95 323 #>  [23776,]  96 323 #>  [23777,]  97 323 #>  [23778,]  98 323 #>  [23779,]  99 323 #>  [23780,] 100 323 #>  [23781,] 101 323 #>  [23782,] 102 323 #>  [23783,] 103 323 #>  [23784,] 104 323 #>  [23785,] 105 323 #>  [23786,] 106 323 #>  [23787,] 107 323 #>  [23788,] 108 323 #>  [23789,] 109 323 #>  [23790,] 110 323 #>  [23791,] 111 323 #>  [23792,] 112 323 #>  [23793,] 113 323 #>  [23794,] 114 323 #>  [23795,] 115 323 #>  [23796,] 116 323 #>  [23797,] 117 323 #>  [23798,] 118 323 #>  [23799,] 119 323 #>  [23800,] 120 323 #>  [23801,] 121 323 #>  [23802,] 122 323 #>  [23803,] 123 323 #>  [23804,] 124 323 #>  [23805,] 125 323 #>  [23806,] 126 323 #>  [23807,] 127 323 #>  [23808,] 128 323 #>  [23809,] 129 323 #>  [23810,] 130 323 #>  [23811,] 131 323 #>  [23812,] 132 323 #>  [23813,] 133 323 #>  [23814,] 134 323 #>  [23815,] 135 323 #>  [23816,] 136 323 #>  [23817,] 137 323 #>  [23818,] 138 323 #>  [23819,] 139 323 #>  [23820,] 140 323 #>  [23821,] 141 323 #>  [23822,] 142 323 #>  [23823,] 143 323 #>  [23824,] 144 323 #>  [23825,] 145 323 #>  [23826,] 146 323 #>  [23827,] 147 323 #>  [23828,] 148 323 #>  [23829,] 149 323 #>  [23830,] 150 323 #>  [23831,] 151 323 #>  [23832,] 152 323 #>  [23833,] 153 323 #>  [23834,] 154 323 #>  [23835,] 155 323 #>  [23836,] 156 323 #>  [23837,] 157 323 #>  [23838,] 158 323 #>  [23839,] 159 323 #>  [23840,] 160 323 #>  [23841,] 161 323 #>  [23842,] 162 323 #>  [23843,] 163 323 #>  [23844,] 164 323 #>  [23845,] 165 323 #>  [23846,] 166 323 #>  [23847,] 167 323 #>  [23848,] 168 323 #>  [23849,] 169 323 #>  [23850,] 170 323 #>  [23851,] 171 323 #>  [23852,] 172 323 #>  [23853,] 173 323 #>  [23854,] 174 323 #>  [23855,] 175 323 #>  [23856,] 176 323 #>  [23857,] 177 323 #>  [23858,] 178 323 #>  [23859,] 179 323 #>  [23860,] 180 323 #>  [23861,] 181 323 #>  [23862,] 182 323 #>  [23863,] 183 323 #>  [23864,] 184 323 #>  [23865,] 185 323 #>  [23866,] 186 323 #>  [23867,] 187 323 #>  [23868,] 188 323 #>  [23869,] 189 323 #>  [23870,] 190 323 #>  [23871,] 191 323 #>  [23872,] 192 323 #>  [23873,] 193 323 #>  [23874,] 194 323 #>  [23875,] 195 323 #>  [23876,] 196 323 #>  [23877,] 197 323 #>  [23878,] 198 323 #>  [23879,] 199 323 #>  [23880,] 200 323 #>  [23881,] 201 323 #>  [23882,] 202 323 #>  [23883,] 203 323 #>  [23884,] 204 323 #>  [23885,] 205 323 #>  [23886,] 206 323 #>  [23887,] 207 323 #>  [23888,] 208 323 #>  [23889,] 209 323 #>  [23890,] 210 323 #>  [23891,] 211 323 #>  [23892,] 212 323 #>  [23893,] 213 323 #>  [23894,] 214 323 #>  [23895,] 215 323 #>  [23896,] 216 323 #>  [23897,] 217 323 #>  [23898,] 218 323 #>  [23899,] 219 323 #>  [23900,] 220 323 #>  [23901,] 221 323 #>  [23902,] 222 323 #>  [23903,] 223 323 #>  [23904,] 224 323 #>  [23905,] 225 323 #>  [23906,] 226 323 #>  [23907,] 227 323 #>  [23908,] 228 323 #>  [23909,] 229 323 #>  [23910,] 230 323 #>  [23911,] 231 323 #>  [23912,] 232 323 #>  [23913,] 233 323 #>  [23914,] 234 323 #>  [23915,] 235 323 #>  [23916,] 236 323 #>  [23917,] 237 323 #>  [23918,] 238 323 #>  [23919,] 239 323 #>  [23920,] 240 323 #>  [23921,] 241 323 #>  [23922,] 242 323 #>  [23923,] 243 323 #>  [23924,] 244 323 #>  [23925,] 245 323 #>  [23926,] 246 323 #>  [23927,] 247 323 #>  [23928,] 248 323 #>  [23929,] 249 323 #>  [23930,] 250 323 #>  [23931,] 251 323 #>  [23932,] 252 323 #>  [23933,] 253 323 #>  [23934,] 254 323 #>  [23935,] 255 323 #>  [23936,] 256 323 #>  [23937,] 257 323 #>  [23938,] 258 323 #>  [23939,] 259 323 #>  [23940,] 260 323 #>  [23941,] 261 323 #>  [23942,] 262 323 #>  [23943,] 263 323 #>  [23944,] 264 323 #>  [23945,] 265 323 #>  [23946,] 266 323 #>  [23947,] 267 323 #>  [23948,] 268 323 #>  [23949,] 269 323 #>  [23950,] 270 323 #>  [23951,] 271 323 #>  [23952,] 272 323 #>  [23953,] 273 323 #>  [23954,] 274 323 #>  [23955,] 275 323 #>  [23956,] 276 323 #>  [23957,] 277 323 #>  [23958,] 278 323 #>  [23959,] 279 323 #>  [23960,] 280 323 #>  [23961,] 281 323 #>  [23962,] 282 323 #>  [23963,] 283 323 #>  [23964,] 284 323 #>  [23965,] 285 323 #>  [23966,] 286 323 #>  [23967,] 287 323 #>  [23968,] 288 323 #>  [23969,] 289 323 #>  [23970,] 290 323 #>  [23971,] 291 323 #>  [23972,] 292 323 #>  [23973,] 293 323 #>  [23974,] 294 323 #>  [23975,] 295 323 #>  [23976,] 296 323 #>  [23977,] 297 323 #>  [23978,] 298 323 #>  [23979,] 299 323 #>  [23980,] 300 323 #>  [23981,] 301 323 #>  [23982,] 302 323 #>  [23983,] 303 323 #>  [23984,] 304 323 #>  [23985,] 305 323 #>  [23986,] 306 323 #>  [23987,] 307 323 #>  [23988,] 308 323 #>  [23989,] 309 323 #>  [23990,] 310 323 #>  [23991,] 311 323 #>  [23992,] 312 323 #>  [23993,] 313 323 #>  [23994,] 314 323 #>  [23995,] 315 323 #>  [23996,] 316 323 #>  [23997,] 317 323 #>  [23998,] 318 323 #>  [23999,] 319 323 #>  [24000,] 320 323 #>  [24001,] 321 323 #>  [24002,] 322 323 #>  [24003,] 323 323 #>  [24004,] 324 323 #>  [24005,] 325 323 #>  [24006,] 326 323 #>  [24007,] 327 323 #>  [24008,] 328 323 #>  [24009,] 329 323 #>  [24010,] 330 323 #>  [24011,] 331 323 #>  [24012,] 332 323 #>  [24013,] 333 323 #>  [24014,] 334 323 #>  [24015,] 335 323 #>  [24016,] 336 323 #>  [24017,] 337 323 #>  [24018,] 338 323 #>  [24019,] 339 323 #>  [24020,] 340 323 #>  [24021,] 341 323 #>  [24022,] 342 323 #>  [24023,] 343 323 #>  [24024,] 344 323 #>  [24025,] 345 323 #>  [24026,] 346 323 #>  [24027,] 347 323 #>  [24028,] 348 323 #>  [24029,] 349 323 #>  [24030,] 350 323 #>  [24031,] 351 323 #>  [24032,] 352 323 #>  [24033,] 353 323 #>  [24034,] 354 323 #>  [24035,] 355 323 #>  [24036,] 356 323 #>  [24037,] 357 323 #>  [24038,] 358 323 #>  [24039,] 359 323 #>  [24040,] 360 323 #>  [24041,] 361 323 #>  [24042,] 362 323 #>  [24043,] 363 323 #>  [24044,] 364 323 #>  [24045,] 365 323 #>  [24046,] 366 323 #>  [24047,] 367 323 #>  [24048,] 368 323 #>  [24049,] 369 323 #>  [24050,] 370 323 #>  [24051,] 371 323 #>  [24052,] 372 323 #>  [24053,] 373 323 #>  [24054,] 374 323 #>  [24055,] 375 323 #>  [24056,] 376 323 #>  [24057,] 377 323 #>  [24058,] 378 323 #>  [24059,] 379 323 #>  [24060,] 380 323 #>  [24061,] 381 323 #>  [24062,] 382 323 #>  [24063,] 383 323 #>  [24064,] 384 323 #>  [24065,] 385 323 #>  [24066,] 386 323 #>  [24067,] 387 323 #>  [24068,] 388 323 #>  [24069,] 389 323 #>  [24070,] 390 323 #>  [24071,] 391 323 #>  [24072,] 392 323 #>  [24073,] 393 323 #>  [24074,] 394 323 #>  [24075,] 395 323 #>  [24076,] 396 323 #>  [24077,] 397 323 #>  [24078,] 398 323 #>  [24079,] 399 323 #>  [24080,] 400 323 #>  [24081,] 401 323 #>  [24082,] 402 323 #>  [24083,] 403 323 #>  [24084,] 404 323 #>  [24085,] 405 323 #>  [24086,] 406 323 #>  [24087,] 407 323 #>  [24088,] 408 323 #>  [24089,] 409 323 #>  [24090,] 410 323 #>  [24091,] 411 323 #>  [24092,] 412 323 #>  [24093,] 413 323 #>  [24094,] 414 323 #>  [24095,] 415 323 #>  [24096,] 416 323 #>  [24097,] 417 323 #>  [24098,] 418 323 #>  [24099,] 419 323 #>  [24100,] 420 323 #>  [24101,] 421 323 #>  [24102,] 422 323 #>  [24103,] 423 323 #>  [24104,] 424 323 #>  [24105,] 425 323 #>  [24106,] 426 323 #>  [24107,] 427 323 #>  [24108,] 428 323 #>  [24109,] 429 323 #>  [24110,] 430 323 #>  [24111,] 431 323 #>  [24112,] 432 323 #>  [24113,] 433 323 #>  [24114,] 434 323 #>  [24115,] 435 323 #>  [24116,] 436 323 #>  [24117,] 437 323 #>  [24118,] 438 323 #>  [24119,] 439 323 #>  [24120,] 440 323 #>  [24121,] 441 323 #>  [24122,] 442 323 #>  [24123,] 443 323 #>  [24124,] 444 323 #>  [24125,] 445 323 #>  [24126,] 446 323 #>  [24127,] 447 323 #>  [24128,] 448 323 #>  [24129,] 449 323 #>  [24130,] 450 323 #>  [24131,] 451 323 #>  [24132,] 452 323 #>  [24133,] 453 323 #>  [24134,] 454 323 #>  [24135,] 455 323 #>  [24136,] 456 323 #>  [24137,] 457 323 #>  [24138,] 458 323 #>  [24139,] 459 323 #>  [24140,] 460 323 #>  [24141,] 461 323 #>  [24142,] 462 323 #>  [24143,] 463 323 #>  [24144,] 464 323 #>  [24145,] 465 323 #>  [24146,] 466 323 #>  [24147,] 467 323 #>  [24148,] 468 323 #>  [24149,] 469 323 #>  [24150,] 470 323 #>  [24151,] 471 323 #>  [24152,] 472 323 #>  [24153,] 473 323 #>  [24154,] 474 323 #>  [24155,] 475 323 #>  [24156,] 476 323 #>  [24157,] 477 323 #>  [24158,] 478 323 #>  [24159,] 479 323 #>  [24160,] 480 323 #>  [24161,] 481 323 #>  [24162,] 482 323 #>  [24163,] 483 323 #>  [24164,] 484 323 #>  [24165,] 485 323 #>  [24166,] 486 323 #>  [24167,] 487 323 #>  [24168,] 488 323 #>  [24169,] 489 323 #>  [24170,] 490 323 #>  [24171,] 491 323 #>  [24172,] 492 323 #>  [24173,] 493 323 #>  [24174,] 494 323 #>  [24175,] 495 323 #>  [24176,] 496 323 #>  [24177,] 497 323 #>  [24178,] 498 323 #>  [24179,] 499 323 #>  [24180,] 500 323 #>  [24181,] 501 323 #>  [24182,] 502 323 #>  [24183,] 503 323 #>  [24184,] 504 323 #>  [24185,] 505 323 #>  [24186,] 506 323 #>  [24187,] 507 323 #>  [24188,] 508 323 #>  [24189,] 509 323 #>  [24190,] 510 323 #>  [24191,] 511 323 #>  [24192,] 512 323 #>  [24193,] 513 323 #>  [24194,] 514 323 #>  [24195,] 515 323 #>  [24196,] 516 323 #>  [24197,] 517 323 #>  [24198,] 518 323 #>  [24199,] 519 323 #>  [24200,] 520 323 #>  [24201,] 521 323 #>  [24202,] 522 323 #>  [24203,] 523 323 #>  [24204,] 524 323 #>  [24205,] 525 323 #>  [24206,] 526 323 #>  [24207,] 527 323 #>  [24208,] 528 323 #>  [24209,] 529 323 #>  [24210,] 530 323 #>  [24211,] 531 323 #>  [24212,] 532 323 #>  [24213,] 533 323 #>  [24214,] 534 323 #>  [24215,] 535 323 #>  [24216,] 536 323 #>  [24217,] 537 323 #>  [24218,] 538 323 #>  [24219,] 539 323 #>  [24220,] 540 323 #>  [24221,] 541 323 #>  [24222,] 542 323 #>  [24223,] 543 323 #>  [24224,] 544 323 #>  [24225,] 545 323 #>  [24226,] 546 323 #>  [24227,] 547 323 #>  [24228,] 548 323 #>  [24229,] 549 323 #>  [24230,] 550 323 #>  [24231,] 551 323 #>  [24232,] 552 323 #>  [24233,] 553 323 #>  [24234,] 554 323 #>  [24235,] 555 323 #>  [24236,] 556 323 #>  [24237,] 557 323 #>  [24238,] 558 323 #>  [24239,] 559 323 #>  [24240,] 560 323 #>  [24241,] 561 323 #>  [24242,] 562 323 #>  [24243,] 563 323 #>  [24244,] 564 323 #>  [24245,] 565 323 #>  [24246,] 566 323 #>  [24247,] 567 323 #>  [24248,] 568 323 #>  [24249,] 569 323 #>  [24250,] 570 323 #>  [24251,] 571 323 #>  [24252,] 572 323 #>  [24253,] 573 323 #>  [24254,] 574 323 #>  [24255,] 575 323 #>  [24256,] 576 323 #>  [24257,] 577 323 #>  [24258,] 578 323 #>  [24259,] 579 323 #>  [24260,] 580 323 #>  [24261,] 581 323 #>  [24262,] 582 323 #>  [24263,] 583 323 #>  [24264,] 584 323 #>  [24265,] 585 323 #>  [24266,] 586 323 #>  [24267,] 587 323 #>  [24268,] 588 323 #>  [24269,] 589 323 #>  [24270,] 590 323 #>  [24271,] 591 323 #>  [24272,] 592 323 #>  [24273,] 593 323 #>  [24274,] 594 323 #>  [24275,] 595 323 #>  [24276,] 596 323 #>  [24277,] 597 323 #>  [24278,] 598 323 #>  [24279,] 599 323 #>  [24280,] 600 323 #>  [24281,] 601 323 #>  [24282,] 602 323 #>  [24283,] 603 323 #>  [24284,] 604 323 #>  [24285,] 605 323 #>  [24286,] 606 323 #>  [24287,] 607 323 #>  [24288,] 608 323 #>  [24289,] 609 323 #>  [24290,] 610 323 #>  [24291,] 611 323 #>  [24292,] 612 323 #>  [24293,] 613 323 #>  [24294,] 614 323 #>  [24295,] 615 323 #>  [24296,] 616 323 #>  [24297,] 617 323 #>  [24298,] 618 323 #>  [24299,] 619 323 #>  [24300,] 620 323 #>  [24301,] 621 323 #>  [24302,] 622 323 #>  [24303,] 623 323 #>  [24304,] 624 323 #>  [24305,] 625 323 #>  [24306,] 626 323 #>  [24307,] 627 323 #>  [24308,] 628 323 #>  [24309,] 629 323 #>  [24310,] 630 323 #>  [24311,] 631 323 #>  [24312,] 632 323 #>  [24313,] 633 323 #>  [24314,] 634 323 #>  [24315,] 635 323 #>  [24316,] 636 323 #>  [24317,] 637 323 #>  [24318,] 638 323 #>  [24319,] 639 323 #>  [24320,] 640 323 #>  [24321,]   1 322 #>  [24322,]   2 322 #>  [24323,]   3 322 #>  [24324,]   4 322 #>  [24325,]   5 322 #>  [24326,]   6 322 #>  [24327,]   7 322 #>  [24328,]   8 322 #>  [24329,]   9 322 #>  [24330,]  10 322 #>  [24331,]  11 322 #>  [24332,]  12 322 #>  [24333,]  13 322 #>  [24334,]  14 322 #>  [24335,]  15 322 #>  [24336,]  16 322 #>  [24337,]  17 322 #>  [24338,]  18 322 #>  [24339,]  19 322 #>  [24340,]  20 322 #>  [24341,]  21 322 #>  [24342,]  22 322 #>  [24343,]  23 322 #>  [24344,]  24 322 #>  [24345,]  25 322 #>  [24346,]  26 322 #>  [24347,]  27 322 #>  [24348,]  28 322 #>  [24349,]  29 322 #>  [24350,]  30 322 #>  [24351,]  31 322 #>  [24352,]  32 322 #>  [24353,]  33 322 #>  [24354,]  34 322 #>  [24355,]  35 322 #>  [24356,]  36 322 #>  [24357,]  37 322 #>  [24358,]  38 322 #>  [24359,]  39 322 #>  [24360,]  40 322 #>  [24361,]  41 322 #>  [24362,]  42 322 #>  [24363,]  43 322 #>  [24364,]  44 322 #>  [24365,]  45 322 #>  [24366,]  46 322 #>  [24367,]  47 322 #>  [24368,]  48 322 #>  [24369,]  49 322 #>  [24370,]  50 322 #>  [24371,]  51 322 #>  [24372,]  52 322 #>  [24373,]  53 322 #>  [24374,]  54 322 #>  [24375,]  55 322 #>  [24376,]  56 322 #>  [24377,]  57 322 #>  [24378,]  58 322 #>  [24379,]  59 322 #>  [24380,]  60 322 #>  [24381,]  61 322 #>  [24382,]  62 322 #>  [24383,]  63 322 #>  [24384,]  64 322 #>  [24385,]  65 322 #>  [24386,]  66 322 #>  [24387,]  67 322 #>  [24388,]  68 322 #>  [24389,]  69 322 #>  [24390,]  70 322 #>  [24391,]  71 322 #>  [24392,]  72 322 #>  [24393,]  73 322 #>  [24394,]  74 322 #>  [24395,]  75 322 #>  [24396,]  76 322 #>  [24397,]  77 322 #>  [24398,]  78 322 #>  [24399,]  79 322 #>  [24400,]  80 322 #>  [24401,]  81 322 #>  [24402,]  82 322 #>  [24403,]  83 322 #>  [24404,]  84 322 #>  [24405,]  85 322 #>  [24406,]  86 322 #>  [24407,]  87 322 #>  [24408,]  88 322 #>  [24409,]  89 322 #>  [24410,]  90 322 #>  [24411,]  91 322 #>  [24412,]  92 322 #>  [24413,]  93 322 #>  [24414,]  94 322 #>  [24415,]  95 322 #>  [24416,]  96 322 #>  [24417,]  97 322 #>  [24418,]  98 322 #>  [24419,]  99 322 #>  [24420,] 100 322 #>  [24421,] 101 322 #>  [24422,] 102 322 #>  [24423,] 103 322 #>  [24424,] 104 322 #>  [24425,] 105 322 #>  [24426,] 106 322 #>  [24427,] 107 322 #>  [24428,] 108 322 #>  [24429,] 109 322 #>  [24430,] 110 322 #>  [24431,] 111 322 #>  [24432,] 112 322 #>  [24433,] 113 322 #>  [24434,] 114 322 #>  [24435,] 115 322 #>  [24436,] 116 322 #>  [24437,] 117 322 #>  [24438,] 118 322 #>  [24439,] 119 322 #>  [24440,] 120 322 #>  [24441,] 121 322 #>  [24442,] 122 322 #>  [24443,] 123 322 #>  [24444,] 124 322 #>  [24445,] 125 322 #>  [24446,] 126 322 #>  [24447,] 127 322 #>  [24448,] 128 322 #>  [24449,] 129 322 #>  [24450,] 130 322 #>  [24451,] 131 322 #>  [24452,] 132 322 #>  [24453,] 133 322 #>  [24454,] 134 322 #>  [24455,] 135 322 #>  [24456,] 136 322 #>  [24457,] 137 322 #>  [24458,] 138 322 #>  [24459,] 139 322 #>  [24460,] 140 322 #>  [24461,] 141 322 #>  [24462,] 142 322 #>  [24463,] 143 322 #>  [24464,] 144 322 #>  [24465,] 145 322 #>  [24466,] 146 322 #>  [24467,] 147 322 #>  [24468,] 148 322 #>  [24469,] 149 322 #>  [24470,] 150 322 #>  [24471,] 151 322 #>  [24472,] 152 322 #>  [24473,] 153 322 #>  [24474,] 154 322 #>  [24475,] 155 322 #>  [24476,] 156 322 #>  [24477,] 157 322 #>  [24478,] 158 322 #>  [24479,] 159 322 #>  [24480,] 160 322 #>  [24481,] 161 322 #>  [24482,] 162 322 #>  [24483,] 163 322 #>  [24484,] 164 322 #>  [24485,] 165 322 #>  [24486,] 166 322 #>  [24487,] 167 322 #>  [24488,] 168 322 #>  [24489,] 169 322 #>  [24490,] 170 322 #>  [24491,] 171 322 #>  [24492,] 172 322 #>  [24493,] 173 322 #>  [24494,] 174 322 #>  [24495,] 175 322 #>  [24496,] 176 322 #>  [24497,] 177 322 #>  [24498,] 178 322 #>  [24499,] 179 322 #>  [24500,] 180 322 #>  [24501,] 181 322 #>  [24502,] 182 322 #>  [24503,] 183 322 #>  [24504,] 184 322 #>  [24505,] 185 322 #>  [24506,] 186 322 #>  [24507,] 187 322 #>  [24508,] 188 322 #>  [24509,] 189 322 #>  [24510,] 190 322 #>  [24511,] 191 322 #>  [24512,] 192 322 #>  [24513,] 193 322 #>  [24514,] 194 322 #>  [24515,] 195 322 #>  [24516,] 196 322 #>  [24517,] 197 322 #>  [24518,] 198 322 #>  [24519,] 199 322 #>  [24520,] 200 322 #>  [24521,] 201 322 #>  [24522,] 202 322 #>  [24523,] 203 322 #>  [24524,] 204 322 #>  [24525,] 205 322 #>  [24526,] 206 322 #>  [24527,] 207 322 #>  [24528,] 208 322 #>  [24529,] 209 322 #>  [24530,] 210 322 #>  [24531,] 211 322 #>  [24532,] 212 322 #>  [24533,] 213 322 #>  [24534,] 214 322 #>  [24535,] 215 322 #>  [24536,] 216 322 #>  [24537,] 217 322 #>  [24538,] 218 322 #>  [24539,] 219 322 #>  [24540,] 220 322 #>  [24541,] 221 322 #>  [24542,] 222 322 #>  [24543,] 223 322 #>  [24544,] 224 322 #>  [24545,] 225 322 #>  [24546,] 226 322 #>  [24547,] 227 322 #>  [24548,] 228 322 #>  [24549,] 229 322 #>  [24550,] 230 322 #>  [24551,] 231 322 #>  [24552,] 232 322 #>  [24553,] 233 322 #>  [24554,] 234 322 #>  [24555,] 235 322 #>  [24556,] 236 322 #>  [24557,] 237 322 #>  [24558,] 238 322 #>  [24559,] 239 322 #>  [24560,] 240 322 #>  [24561,] 241 322 #>  [24562,] 242 322 #>  [24563,] 243 322 #>  [24564,] 244 322 #>  [24565,] 245 322 #>  [24566,] 246 322 #>  [24567,] 247 322 #>  [24568,] 248 322 #>  [24569,] 249 322 #>  [24570,] 250 322 #>  [24571,] 251 322 #>  [24572,] 252 322 #>  [24573,] 253 322 #>  [24574,] 254 322 #>  [24575,] 255 322 #>  [24576,] 256 322 #>  [24577,] 257 322 #>  [24578,] 258 322 #>  [24579,] 259 322 #>  [24580,] 260 322 #>  [24581,] 261 322 #>  [24582,] 262 322 #>  [24583,] 263 322 #>  [24584,] 264 322 #>  [24585,] 265 322 #>  [24586,] 266 322 #>  [24587,] 267 322 #>  [24588,] 268 322 #>  [24589,] 269 322 #>  [24590,] 270 322 #>  [24591,] 271 322 #>  [24592,] 272 322 #>  [24593,] 273 322 #>  [24594,] 274 322 #>  [24595,] 275 322 #>  [24596,] 276 322 #>  [24597,] 277 322 #>  [24598,] 278 322 #>  [24599,] 279 322 #>  [24600,] 280 322 #>  [24601,] 281 322 #>  [24602,] 282 322 #>  [24603,] 283 322 #>  [24604,] 284 322 #>  [24605,] 285 322 #>  [24606,] 286 322 #>  [24607,] 287 322 #>  [24608,] 288 322 #>  [24609,] 289 322 #>  [24610,] 290 322 #>  [24611,] 291 322 #>  [24612,] 292 322 #>  [24613,] 293 322 #>  [24614,] 294 322 #>  [24615,] 295 322 #>  [24616,] 296 322 #>  [24617,] 297 322 #>  [24618,] 298 322 #>  [24619,] 299 322 #>  [24620,] 300 322 #>  [24621,] 301 322 #>  [24622,] 302 322 #>  [24623,] 303 322 #>  [24624,] 304 322 #>  [24625,] 305 322 #>  [24626,] 306 322 #>  [24627,] 307 322 #>  [24628,] 308 322 #>  [24629,] 309 322 #>  [24630,] 310 322 #>  [24631,] 311 322 #>  [24632,] 312 322 #>  [24633,] 313 322 #>  [24634,] 314 322 #>  [24635,] 315 322 #>  [24636,] 316 322 #>  [24637,] 317 322 #>  [24638,] 318 322 #>  [24639,] 319 322 #>  [24640,] 320 322 #>  [24641,] 321 322 #>  [24642,] 322 322 #>  [24643,] 323 322 #>  [24644,] 324 322 #>  [24645,] 325 322 #>  [24646,] 326 322 #>  [24647,] 327 322 #>  [24648,] 328 322 #>  [24649,] 329 322 #>  [24650,] 330 322 #>  [24651,] 331 322 #>  [24652,] 332 322 #>  [24653,] 333 322 #>  [24654,] 334 322 #>  [24655,] 335 322 #>  [24656,] 336 322 #>  [24657,] 337 322 #>  [24658,] 338 322 #>  [24659,] 339 322 #>  [24660,] 340 322 #>  [24661,] 341 322 #>  [24662,] 342 322 #>  [24663,] 343 322 #>  [24664,] 344 322 #>  [24665,] 345 322 #>  [24666,] 346 322 #>  [24667,] 347 322 #>  [24668,] 348 322 #>  [24669,] 349 322 #>  [24670,] 350 322 #>  [24671,] 351 322 #>  [24672,] 352 322 #>  [24673,] 353 322 #>  [24674,] 354 322 #>  [24675,] 355 322 #>  [24676,] 356 322 #>  [24677,] 357 322 #>  [24678,] 358 322 #>  [24679,] 359 322 #>  [24680,] 360 322 #>  [24681,] 361 322 #>  [24682,] 362 322 #>  [24683,] 363 322 #>  [24684,] 364 322 #>  [24685,] 365 322 #>  [24686,] 366 322 #>  [24687,] 367 322 #>  [24688,] 368 322 #>  [24689,] 369 322 #>  [24690,] 370 322 #>  [24691,] 371 322 #>  [24692,] 372 322 #>  [24693,] 373 322 #>  [24694,] 374 322 #>  [24695,] 375 322 #>  [24696,] 376 322 #>  [24697,] 377 322 #>  [24698,] 378 322 #>  [24699,] 379 322 #>  [24700,] 380 322 #>  [24701,] 381 322 #>  [24702,] 382 322 #>  [24703,] 383 322 #>  [24704,] 384 322 #>  [24705,] 385 322 #>  [24706,] 386 322 #>  [24707,] 387 322 #>  [24708,] 388 322 #>  [24709,] 389 322 #>  [24710,] 390 322 #>  [24711,] 391 322 #>  [24712,] 392 322 #>  [24713,] 393 322 #>  [24714,] 394 322 #>  [24715,] 395 322 #>  [24716,] 396 322 #>  [24717,] 397 322 #>  [24718,] 398 322 #>  [24719,] 399 322 #>  [24720,] 400 322 #>  [24721,] 401 322 #>  [24722,] 402 322 #>  [24723,] 403 322 #>  [24724,] 404 322 #>  [24725,] 405 322 #>  [24726,] 406 322 #>  [24727,] 407 322 #>  [24728,] 408 322 #>  [24729,] 409 322 #>  [24730,] 410 322 #>  [24731,] 411 322 #>  [24732,] 412 322 #>  [24733,] 413 322 #>  [24734,] 414 322 #>  [24735,] 415 322 #>  [24736,] 416 322 #>  [24737,] 417 322 #>  [24738,] 418 322 #>  [24739,] 419 322 #>  [24740,] 420 322 #>  [24741,] 421 322 #>  [24742,] 422 322 #>  [24743,] 423 322 #>  [24744,] 424 322 #>  [24745,] 425 322 #>  [24746,] 426 322 #>  [24747,] 427 322 #>  [24748,] 428 322 #>  [24749,] 429 322 #>  [24750,] 430 322 #>  [24751,] 431 322 #>  [24752,] 432 322 #>  [24753,] 433 322 #>  [24754,] 434 322 #>  [24755,] 435 322 #>  [24756,] 436 322 #>  [24757,] 437 322 #>  [24758,] 438 322 #>  [24759,] 439 322 #>  [24760,] 440 322 #>  [24761,] 441 322 #>  [24762,] 442 322 #>  [24763,] 443 322 #>  [24764,] 444 322 #>  [24765,] 445 322 #>  [24766,] 446 322 #>  [24767,] 447 322 #>  [24768,] 448 322 #>  [24769,] 449 322 #>  [24770,] 450 322 #>  [24771,] 451 322 #>  [24772,] 452 322 #>  [24773,] 453 322 #>  [24774,] 454 322 #>  [24775,] 455 322 #>  [24776,] 456 322 #>  [24777,] 457 322 #>  [24778,] 458 322 #>  [24779,] 459 322 #>  [24780,] 460 322 #>  [24781,] 461 322 #>  [24782,] 462 322 #>  [24783,] 463 322 #>  [24784,] 464 322 #>  [24785,] 465 322 #>  [24786,] 466 322 #>  [24787,] 467 322 #>  [24788,] 468 322 #>  [24789,] 469 322 #>  [24790,] 470 322 #>  [24791,] 471 322 #>  [24792,] 472 322 #>  [24793,] 473 322 #>  [24794,] 474 322 #>  [24795,] 475 322 #>  [24796,] 476 322 #>  [24797,] 477 322 #>  [24798,] 478 322 #>  [24799,] 479 322 #>  [24800,] 480 322 #>  [24801,] 481 322 #>  [24802,] 482 322 #>  [24803,] 483 322 #>  [24804,] 484 322 #>  [24805,] 485 322 #>  [24806,] 486 322 #>  [24807,] 487 322 #>  [24808,] 488 322 #>  [24809,] 489 322 #>  [24810,] 490 322 #>  [24811,] 491 322 #>  [24812,] 492 322 #>  [24813,] 493 322 #>  [24814,] 494 322 #>  [24815,] 495 322 #>  [24816,] 496 322 #>  [24817,] 497 322 #>  [24818,] 498 322 #>  [24819,] 499 322 #>  [24820,] 500 322 #>  [24821,] 501 322 #>  [24822,] 502 322 #>  [24823,] 503 322 #>  [24824,] 504 322 #>  [24825,] 505 322 #>  [24826,] 506 322 #>  [24827,] 507 322 #>  [24828,] 508 322 #>  [24829,] 509 322 #>  [24830,] 510 322 #>  [24831,] 511 322 #>  [24832,] 512 322 #>  [24833,] 513 322 #>  [24834,] 514 322 #>  [24835,] 515 322 #>  [24836,] 516 322 #>  [24837,] 517 322 #>  [24838,] 518 322 #>  [24839,] 519 322 #>  [24840,] 520 322 #>  [24841,] 521 322 #>  [24842,] 522 322 #>  [24843,] 523 322 #>  [24844,] 524 322 #>  [24845,] 525 322 #>  [24846,] 526 322 #>  [24847,] 527 322 #>  [24848,] 528 322 #>  [24849,] 529 322 #>  [24850,] 530 322 #>  [24851,] 531 322 #>  [24852,] 532 322 #>  [24853,] 533 322 #>  [24854,] 534 322 #>  [24855,] 535 322 #>  [24856,] 536 322 #>  [24857,] 537 322 #>  [24858,] 538 322 #>  [24859,] 539 322 #>  [24860,] 540 322 #>  [24861,] 541 322 #>  [24862,] 542 322 #>  [24863,] 543 322 #>  [24864,] 544 322 #>  [24865,] 545 322 #>  [24866,] 546 322 #>  [24867,] 547 322 #>  [24868,] 548 322 #>  [24869,] 549 322 #>  [24870,] 550 322 #>  [24871,] 551 322 #>  [24872,] 552 322 #>  [24873,] 553 322 #>  [24874,] 554 322 #>  [24875,] 555 322 #>  [24876,] 556 322 #>  [24877,] 557 322 #>  [24878,] 558 322 #>  [24879,] 559 322 #>  [24880,] 560 322 #>  [24881,] 561 322 #>  [24882,] 562 322 #>  [24883,] 563 322 #>  [24884,] 564 322 #>  [24885,] 565 322 #>  [24886,] 566 322 #>  [24887,] 567 322 #>  [24888,] 568 322 #>  [24889,] 569 322 #>  [24890,] 570 322 #>  [24891,] 571 322 #>  [24892,] 572 322 #>  [24893,] 573 322 #>  [24894,] 574 322 #>  [24895,] 575 322 #>  [24896,] 576 322 #>  [24897,] 577 322 #>  [24898,] 578 322 #>  [24899,] 579 322 #>  [24900,] 580 322 #>  [24901,] 581 322 #>  [24902,] 582 322 #>  [24903,] 583 322 #>  [24904,] 584 322 #>  [24905,] 585 322 #>  [24906,] 586 322 #>  [24907,] 587 322 #>  [24908,] 588 322 #>  [24909,] 589 322 #>  [24910,] 590 322 #>  [24911,] 591 322 #>  [24912,] 592 322 #>  [24913,] 593 322 #>  [24914,] 594 322 #>  [24915,] 595 322 #>  [24916,] 596 322 #>  [24917,] 597 322 #>  [24918,] 598 322 #>  [24919,] 599 322 #>  [24920,] 600 322 #>  [24921,] 601 322 #>  [24922,] 602 322 #>  [24923,] 603 322 #>  [24924,] 604 322 #>  [24925,] 605 322 #>  [24926,] 606 322 #>  [24927,] 607 322 #>  [24928,] 608 322 #>  [24929,] 609 322 #>  [24930,] 610 322 #>  [24931,] 611 322 #>  [24932,] 612 322 #>  [24933,] 613 322 #>  [24934,] 614 322 #>  [24935,] 615 322 #>  [24936,] 616 322 #>  [24937,] 617 322 #>  [24938,] 618 322 #>  [24939,] 619 322 #>  [24940,] 620 322 #>  [24941,] 621 322 #>  [24942,] 622 322 #>  [24943,] 623 322 #>  [24944,] 624 322 #>  [24945,] 625 322 #>  [24946,] 626 322 #>  [24947,] 627 322 #>  [24948,] 628 322 #>  [24949,] 629 322 #>  [24950,] 630 322 #>  [24951,] 631 322 #>  [24952,] 632 322 #>  [24953,] 633 322 #>  [24954,] 634 322 #>  [24955,] 635 322 #>  [24956,] 636 322 #>  [24957,] 637 322 #>  [24958,] 638 322 #>  [24959,] 639 322 #>  [24960,] 640 322 #>  [24961,]   1 321 #>  [24962,]   2 321 #>  [24963,]   3 321 #>  [24964,]   4 321 #>  [24965,]   5 321 #>  [24966,]   6 321 #>  [24967,]   7 321 #>  [24968,]   8 321 #>  [24969,]   9 321 #>  [24970,]  10 321 #>  [24971,]  11 321 #>  [24972,]  12 321 #>  [24973,]  13 321 #>  [24974,]  14 321 #>  [24975,]  15 321 #>  [24976,]  16 321 #>  [24977,]  17 321 #>  [24978,]  18 321 #>  [24979,]  19 321 #>  [24980,]  20 321 #>  [24981,]  21 321 #>  [24982,]  22 321 #>  [24983,]  23 321 #>  [24984,]  24 321 #>  [24985,]  25 321 #>  [24986,]  26 321 #>  [24987,]  27 321 #>  [24988,]  28 321 #>  [24989,]  29 321 #>  [24990,]  30 321 #>  [24991,]  31 321 #>  [24992,]  32 321 #>  [24993,]  33 321 #>  [24994,]  34 321 #>  [24995,]  35 321 #>  [24996,]  36 321 #>  [24997,]  37 321 #>  [24998,]  38 321 #>  [24999,]  39 321 #>  [25000,]  40 321 #>  [25001,]  41 321 #>  [25002,]  42 321 #>  [25003,]  43 321 #>  [25004,]  44 321 #>  [25005,]  45 321 #>  [25006,]  46 321 #>  [25007,]  47 321 #>  [25008,]  48 321 #>  [25009,]  49 321 #>  [25010,]  50 321 #>  [25011,]  51 321 #>  [25012,]  52 321 #>  [25013,]  53 321 #>  [25014,]  54 321 #>  [25015,]  55 321 #>  [25016,]  56 321 #>  [25017,]  57 321 #>  [25018,]  58 321 #>  [25019,]  59 321 #>  [25020,]  60 321 #>  [25021,]  61 321 #>  [25022,]  62 321 #>  [25023,]  63 321 #>  [25024,]  64 321 #>  [25025,]  65 321 #>  [25026,]  66 321 #>  [25027,]  67 321 #>  [25028,]  68 321 #>  [25029,]  69 321 #>  [25030,]  70 321 #>  [25031,]  71 321 #>  [25032,]  72 321 #>  [25033,]  73 321 #>  [25034,]  74 321 #>  [25035,]  75 321 #>  [25036,]  76 321 #>  [25037,]  77 321 #>  [25038,]  78 321 #>  [25039,]  79 321 #>  [25040,]  80 321 #>  [25041,]  81 321 #>  [25042,]  82 321 #>  [25043,]  83 321 #>  [25044,]  84 321 #>  [25045,]  85 321 #>  [25046,]  86 321 #>  [25047,]  87 321 #>  [25048,]  88 321 #>  [25049,]  89 321 #>  [25050,]  90 321 #>  [25051,]  91 321 #>  [25052,]  92 321 #>  [25053,]  93 321 #>  [25054,]  94 321 #>  [25055,]  95 321 #>  [25056,]  96 321 #>  [25057,]  97 321 #>  [25058,]  98 321 #>  [25059,]  99 321 #>  [25060,] 100 321 #>  [25061,] 101 321 #>  [25062,] 102 321 #>  [25063,] 103 321 #>  [25064,] 104 321 #>  [25065,] 105 321 #>  [25066,] 106 321 #>  [25067,] 107 321 #>  [25068,] 108 321 #>  [25069,] 109 321 #>  [25070,] 110 321 #>  [25071,] 111 321 #>  [25072,] 112 321 #>  [25073,] 113 321 #>  [25074,] 114 321 #>  [25075,] 115 321 #>  [25076,] 116 321 #>  [25077,] 117 321 #>  [25078,] 118 321 #>  [25079,] 119 321 #>  [25080,] 120 321 #>  [25081,] 121 321 #>  [25082,] 122 321 #>  [25083,] 123 321 #>  [25084,] 124 321 #>  [25085,] 125 321 #>  [25086,] 126 321 #>  [25087,] 127 321 #>  [25088,] 128 321 #>  [25089,] 129 321 #>  [25090,] 130 321 #>  [25091,] 131 321 #>  [25092,] 132 321 #>  [25093,] 133 321 #>  [25094,] 134 321 #>  [25095,] 135 321 #>  [25096,] 136 321 #>  [25097,] 137 321 #>  [25098,] 138 321 #>  [25099,] 139 321 #>  [25100,] 140 321 #>  [25101,] 141 321 #>  [25102,] 142 321 #>  [25103,] 143 321 #>  [25104,] 144 321 #>  [25105,] 145 321 #>  [25106,] 146 321 #>  [25107,] 147 321 #>  [25108,] 148 321 #>  [25109,] 149 321 #>  [25110,] 150 321 #>  [25111,] 151 321 #>  [25112,] 152 321 #>  [25113,] 153 321 #>  [25114,] 154 321 #>  [25115,] 155 321 #>  [25116,] 156 321 #>  [25117,] 157 321 #>  [25118,] 158 321 #>  [25119,] 159 321 #>  [25120,] 160 321 #>  [25121,] 161 321 #>  [25122,] 162 321 #>  [25123,] 163 321 #>  [25124,] 164 321 #>  [25125,] 165 321 #>  [25126,] 166 321 #>  [25127,] 167 321 #>  [25128,] 168 321 #>  [25129,] 169 321 #>  [25130,] 170 321 #>  [25131,] 171 321 #>  [25132,] 172 321 #>  [25133,] 173 321 #>  [25134,] 174 321 #>  [25135,] 175 321 #>  [25136,] 176 321 #>  [25137,] 177 321 #>  [25138,] 178 321 #>  [25139,] 179 321 #>  [25140,] 180 321 #>  [25141,] 181 321 #>  [25142,] 182 321 #>  [25143,] 183 321 #>  [25144,] 184 321 #>  [25145,] 185 321 #>  [25146,] 186 321 #>  [25147,] 187 321 #>  [25148,] 188 321 #>  [25149,] 189 321 #>  [25150,] 190 321 #>  [25151,] 191 321 #>  [25152,] 192 321 #>  [25153,] 193 321 #>  [25154,] 194 321 #>  [25155,] 195 321 #>  [25156,] 196 321 #>  [25157,] 197 321 #>  [25158,] 198 321 #>  [25159,] 199 321 #>  [25160,] 200 321 #>  [25161,] 201 321 #>  [25162,] 202 321 #>  [25163,] 203 321 #>  [25164,] 204 321 #>  [25165,] 205 321 #>  [25166,] 206 321 #>  [25167,] 207 321 #>  [25168,] 208 321 #>  [25169,] 209 321 #>  [25170,] 210 321 #>  [25171,] 211 321 #>  [25172,] 212 321 #>  [25173,] 213 321 #>  [25174,] 214 321 #>  [25175,] 215 321 #>  [25176,] 216 321 #>  [25177,] 217 321 #>  [25178,] 218 321 #>  [25179,] 219 321 #>  [25180,] 220 321 #>  [25181,] 221 321 #>  [25182,] 222 321 #>  [25183,] 223 321 #>  [25184,] 224 321 #>  [25185,] 225 321 #>  [25186,] 226 321 #>  [25187,] 227 321 #>  [25188,] 228 321 #>  [25189,] 229 321 #>  [25190,] 230 321 #>  [25191,] 231 321 #>  [25192,] 232 321 #>  [25193,] 233 321 #>  [25194,] 234 321 #>  [25195,] 235 321 #>  [25196,] 236 321 #>  [25197,] 237 321 #>  [25198,] 238 321 #>  [25199,] 239 321 #>  [25200,] 240 321 #>  [25201,] 241 321 #>  [25202,] 242 321 #>  [25203,] 243 321 #>  [25204,] 244 321 #>  [25205,] 245 321 #>  [25206,] 246 321 #>  [25207,] 247 321 #>  [25208,] 248 321 #>  [25209,] 249 321 #>  [25210,] 250 321 #>  [25211,] 251 321 #>  [25212,] 252 321 #>  [25213,] 253 321 #>  [25214,] 254 321 #>  [25215,] 255 321 #>  [25216,] 256 321 #>  [25217,] 257 321 #>  [25218,] 258 321 #>  [25219,] 259 321 #>  [25220,] 260 321 #>  [25221,] 261 321 #>  [25222,] 262 321 #>  [25223,] 263 321 #>  [25224,] 264 321 #>  [25225,] 265 321 #>  [25226,] 266 321 #>  [25227,] 267 321 #>  [25228,] 268 321 #>  [25229,] 269 321 #>  [25230,] 270 321 #>  [25231,] 271 321 #>  [25232,] 272 321 #>  [25233,] 273 321 #>  [25234,] 274 321 #>  [25235,] 275 321 #>  [25236,] 276 321 #>  [25237,] 277 321 #>  [25238,] 278 321 #>  [25239,] 279 321 #>  [25240,] 280 321 #>  [25241,] 281 321 #>  [25242,] 282 321 #>  [25243,] 283 321 #>  [25244,] 284 321 #>  [25245,] 285 321 #>  [25246,] 286 321 #>  [25247,] 287 321 #>  [25248,] 288 321 #>  [25249,] 289 321 #>  [25250,] 290 321 #>  [25251,] 291 321 #>  [25252,] 292 321 #>  [25253,] 293 321 #>  [25254,] 294 321 #>  [25255,] 295 321 #>  [25256,] 296 321 #>  [25257,] 297 321 #>  [25258,] 298 321 #>  [25259,] 299 321 #>  [25260,] 300 321 #>  [25261,] 301 321 #>  [25262,] 302 321 #>  [25263,] 303 321 #>  [25264,] 304 321 #>  [25265,] 305 321 #>  [25266,] 306 321 #>  [25267,] 307 321 #>  [25268,] 308 321 #>  [25269,] 309 321 #>  [25270,] 310 321 #>  [25271,] 311 321 #>  [25272,] 312 321 #>  [25273,] 313 321 #>  [25274,] 314 321 #>  [25275,] 315 321 #>  [25276,] 316 321 #>  [25277,] 317 321 #>  [25278,] 318 321 #>  [25279,] 319 321 #>  [25280,] 320 321 #>  [25281,] 321 321 #>  [25282,] 322 321 #>  [25283,] 323 321 #>  [25284,] 324 321 #>  [25285,] 325 321 #>  [25286,] 326 321 #>  [25287,] 327 321 #>  [25288,] 328 321 #>  [25289,] 329 321 #>  [25290,] 330 321 #>  [25291,] 331 321 #>  [25292,] 332 321 #>  [25293,] 333 321 #>  [25294,] 334 321 #>  [25295,] 335 321 #>  [25296,] 336 321 #>  [25297,] 337 321 #>  [25298,] 338 321 #>  [25299,] 339 321 #>  [25300,] 340 321 #>  [25301,] 341 321 #>  [25302,] 342 321 #>  [25303,] 343 321 #>  [25304,] 344 321 #>  [25305,] 345 321 #>  [25306,] 346 321 #>  [25307,] 347 321 #>  [25308,] 348 321 #>  [25309,] 349 321 #>  [25310,] 350 321 #>  [25311,] 351 321 #>  [25312,] 352 321 #>  [25313,] 353 321 #>  [25314,] 354 321 #>  [25315,] 355 321 #>  [25316,] 356 321 #>  [25317,] 357 321 #>  [25318,] 358 321 #>  [25319,] 359 321 #>  [25320,] 360 321 #>  [25321,] 361 321 #>  [25322,] 362 321 #>  [25323,] 363 321 #>  [25324,] 364 321 #>  [25325,] 365 321 #>  [25326,] 366 321 #>  [25327,] 367 321 #>  [25328,] 368 321 #>  [25329,] 369 321 #>  [25330,] 370 321 #>  [25331,] 371 321 #>  [25332,] 372 321 #>  [25333,] 373 321 #>  [25334,] 374 321 #>  [25335,] 375 321 #>  [25336,] 376 321 #>  [25337,] 377 321 #>  [25338,] 378 321 #>  [25339,] 379 321 #>  [25340,] 380 321 #>  [25341,] 381 321 #>  [25342,] 382 321 #>  [25343,] 383 321 #>  [25344,] 384 321 #>  [25345,] 385 321 #>  [25346,] 386 321 #>  [25347,] 387 321 #>  [25348,] 388 321 #>  [25349,] 389 321 #>  [25350,] 390 321 #>  [25351,] 391 321 #>  [25352,] 392 321 #>  [25353,] 393 321 #>  [25354,] 394 321 #>  [25355,] 395 321 #>  [25356,] 396 321 #>  [25357,] 397 321 #>  [25358,] 398 321 #>  [25359,] 399 321 #>  [25360,] 400 321 #>  [25361,] 401 321 #>  [25362,] 402 321 #>  [25363,] 403 321 #>  [25364,] 404 321 #>  [25365,] 405 321 #>  [25366,] 406 321 #>  [25367,] 407 321 #>  [25368,] 408 321 #>  [25369,] 409 321 #>  [25370,] 410 321 #>  [25371,] 411 321 #>  [25372,] 412 321 #>  [25373,] 413 321 #>  [25374,] 414 321 #>  [25375,] 415 321 #>  [25376,] 416 321 #>  [25377,] 417 321 #>  [25378,] 418 321 #>  [25379,] 419 321 #>  [25380,] 420 321 #>  [25381,] 421 321 #>  [25382,] 422 321 #>  [25383,] 423 321 #>  [25384,] 424 321 #>  [25385,] 425 321 #>  [25386,] 426 321 #>  [25387,] 427 321 #>  [25388,] 428 321 #>  [25389,] 429 321 #>  [25390,] 430 321 #>  [25391,] 431 321 #>  [25392,] 432 321 #>  [25393,] 433 321 #>  [25394,] 434 321 #>  [25395,] 435 321 #>  [25396,] 436 321 #>  [25397,] 437 321 #>  [25398,] 438 321 #>  [25399,] 439 321 #>  [25400,] 440 321 #>  [25401,] 441 321 #>  [25402,] 442 321 #>  [25403,] 443 321 #>  [25404,] 444 321 #>  [25405,] 445 321 #>  [25406,] 446 321 #>  [25407,] 447 321 #>  [25408,] 448 321 #>  [25409,] 449 321 #>  [25410,] 450 321 #>  [25411,] 451 321 #>  [25412,] 452 321 #>  [25413,] 453 321 #>  [25414,] 454 321 #>  [25415,] 455 321 #>  [25416,] 456 321 #>  [25417,] 457 321 #>  [25418,] 458 321 #>  [25419,] 459 321 #>  [25420,] 460 321 #>  [25421,] 461 321 #>  [25422,] 462 321 #>  [25423,] 463 321 #>  [25424,] 464 321 #>  [25425,] 465 321 #>  [25426,] 466 321 #>  [25427,] 467 321 #>  [25428,] 468 321 #>  [25429,] 469 321 #>  [25430,] 470 321 #>  [25431,] 471 321 #>  [25432,] 472 321 #>  [25433,] 473 321 #>  [25434,] 474 321 #>  [25435,] 475 321 #>  [25436,] 476 321 #>  [25437,] 477 321 #>  [25438,] 478 321 #>  [25439,] 479 321 #>  [25440,] 480 321 #>  [25441,] 481 321 #>  [25442,] 482 321 #>  [25443,] 483 321 #>  [25444,] 484 321 #>  [25445,] 485 321 #>  [25446,] 486 321 #>  [25447,] 487 321 #>  [25448,] 488 321 #>  [25449,] 489 321 #>  [25450,] 490 321 #>  [25451,] 491 321 #>  [25452,] 492 321 #>  [25453,] 493 321 #>  [25454,] 494 321 #>  [25455,] 495 321 #>  [25456,] 496 321 #>  [25457,] 497 321 #>  [25458,] 498 321 #>  [25459,] 499 321 #>  [25460,] 500 321 #>  [25461,] 501 321 #>  [25462,] 502 321 #>  [25463,] 503 321 #>  [25464,] 504 321 #>  [25465,] 505 321 #>  [25466,] 506 321 #>  [25467,] 507 321 #>  [25468,] 508 321 #>  [25469,] 509 321 #>  [25470,] 510 321 #>  [25471,] 511 321 #>  [25472,] 512 321 #>  [25473,] 513 321 #>  [25474,] 514 321 #>  [25475,] 515 321 #>  [25476,] 516 321 #>  [25477,] 517 321 #>  [25478,] 518 321 #>  [25479,] 519 321 #>  [25480,] 520 321 #>  [25481,] 521 321 #>  [25482,] 522 321 #>  [25483,] 523 321 #>  [25484,] 524 321 #>  [25485,] 525 321 #>  [25486,] 526 321 #>  [25487,] 527 321 #>  [25488,] 528 321 #>  [25489,] 529 321 #>  [25490,] 530 321 #>  [25491,] 531 321 #>  [25492,] 532 321 #>  [25493,] 533 321 #>  [25494,] 534 321 #>  [25495,] 535 321 #>  [25496,] 536 321 #>  [25497,] 537 321 #>  [25498,] 538 321 #>  [25499,] 539 321 #>  [25500,] 540 321 #>  [25501,] 541 321 #>  [25502,] 542 321 #>  [25503,] 543 321 #>  [25504,] 544 321 #>  [25505,] 545 321 #>  [25506,] 546 321 #>  [25507,] 547 321 #>  [25508,] 548 321 #>  [25509,] 549 321 #>  [25510,] 550 321 #>  [25511,] 551 321 #>  [25512,] 552 321 #>  [25513,] 553 321 #>  [25514,] 554 321 #>  [25515,] 555 321 #>  [25516,] 556 321 #>  [25517,] 557 321 #>  [25518,] 558 321 #>  [25519,] 559 321 #>  [25520,] 560 321 #>  [25521,] 561 321 #>  [25522,] 562 321 #>  [25523,] 563 321 #>  [25524,] 564 321 #>  [25525,] 565 321 #>  [25526,] 566 321 #>  [25527,] 567 321 #>  [25528,] 568 321 #>  [25529,] 569 321 #>  [25530,] 570 321 #>  [25531,] 571 321 #>  [25532,] 572 321 #>  [25533,] 573 321 #>  [25534,] 574 321 #>  [25535,] 575 321 #>  [25536,] 576 321 #>  [25537,] 577 321 #>  [25538,] 578 321 #>  [25539,] 579 321 #>  [25540,] 580 321 #>  [25541,] 581 321 #>  [25542,] 582 321 #>  [25543,] 583 321 #>  [25544,] 584 321 #>  [25545,] 585 321 #>  [25546,] 586 321 #>  [25547,] 587 321 #>  [25548,] 588 321 #>  [25549,] 589 321 #>  [25550,] 590 321 #>  [25551,] 591 321 #>  [25552,] 592 321 #>  [25553,] 593 321 #>  [25554,] 594 321 #>  [25555,] 595 321 #>  [25556,] 596 321 #>  [25557,] 597 321 #>  [25558,] 598 321 #>  [25559,] 599 321 #>  [25560,] 600 321 #>  [25561,] 601 321 #>  [25562,] 602 321 #>  [25563,] 603 321 #>  [25564,] 604 321 #>  [25565,] 605 321 #>  [25566,] 606 321 #>  [25567,] 607 321 #>  [25568,] 608 321 #>  [25569,] 609 321 #>  [25570,] 610 321 #>  [25571,] 611 321 #>  [25572,] 612 321 #>  [25573,] 613 321 #>  [25574,] 614 321 #>  [25575,] 615 321 #>  [25576,] 616 321 #>  [25577,] 617 321 #>  [25578,] 618 321 #>  [25579,] 619 321 #>  [25580,] 620 321 #>  [25581,] 621 321 #>  [25582,] 622 321 #>  [25583,] 623 321 #>  [25584,] 624 321 #>  [25585,] 625 321 #>  [25586,] 626 321 #>  [25587,] 627 321 #>  [25588,] 628 321 #>  [25589,] 629 321 #>  [25590,] 630 321 #>  [25591,] 631 321 #>  [25592,] 632 321 #>  [25593,] 633 321 #>  [25594,] 634 321 #>  [25595,] 635 321 #>  [25596,] 636 321 #>  [25597,] 637 321 #>  [25598,] 638 321 #>  [25599,] 639 321 #>  [25600,] 640 321 #>  [25601,]   1 320 #>  [25602,]   2 320 #>  [25603,]   3 320 #>  [25604,]   4 320 #>  [25605,]   5 320 #>  [25606,]   6 320 #>  [25607,]   7 320 #>  [25608,]   8 320 #>  [25609,]   9 320 #>  [25610,]  10 320 #>  [25611,]  11 320 #>  [25612,]  12 320 #>  [25613,]  13 320 #>  [25614,]  14 320 #>  [25615,]  15 320 #>  [25616,]  16 320 #>  [25617,]  17 320 #>  [25618,]  18 320 #>  [25619,]  19 320 #>  [25620,]  20 320 #>  [25621,]  21 320 #>  [25622,]  22 320 #>  [25623,]  23 320 #>  [25624,]  24 320 #>  [25625,]  25 320 #>  [25626,]  26 320 #>  [25627,]  27 320 #>  [25628,]  28 320 #>  [25629,]  29 320 #>  [25630,]  30 320 #>  [25631,]  31 320 #>  [25632,]  32 320 #>  [25633,]  33 320 #>  [25634,]  34 320 #>  [25635,]  35 320 #>  [25636,]  36 320 #>  [25637,]  37 320 #>  [25638,]  38 320 #>  [25639,]  39 320 #>  [25640,]  40 320 #>  [25641,]  41 320 #>  [25642,]  42 320 #>  [25643,]  43 320 #>  [25644,]  44 320 #>  [25645,]  45 320 #>  [25646,]  46 320 #>  [25647,]  47 320 #>  [25648,]  48 320 #>  [25649,]  49 320 #>  [25650,]  50 320 #>  [25651,]  51 320 #>  [25652,]  52 320 #>  [25653,]  53 320 #>  [25654,]  54 320 #>  [25655,]  55 320 #>  [25656,]  56 320 #>  [25657,]  57 320 #>  [25658,]  58 320 #>  [25659,]  59 320 #>  [25660,]  60 320 #>  [25661,]  61 320 #>  [25662,]  62 320 #>  [25663,]  63 320 #>  [25664,]  64 320 #>  [25665,]  65 320 #>  [25666,]  66 320 #>  [25667,]  67 320 #>  [25668,]  68 320 #>  [25669,]  69 320 #>  [25670,]  70 320 #>  [25671,]  71 320 #>  [25672,]  72 320 #>  [25673,]  73 320 #>  [25674,]  74 320 #>  [25675,]  75 320 #>  [25676,]  76 320 #>  [25677,]  77 320 #>  [25678,]  78 320 #>  [25679,]  79 320 #>  [25680,]  80 320 #>  [25681,]  81 320 #>  [25682,]  82 320 #>  [25683,]  83 320 #>  [25684,]  84 320 #>  [25685,]  85 320 #>  [25686,]  86 320 #>  [25687,]  87 320 #>  [25688,]  88 320 #>  [25689,]  89 320 #>  [25690,]  90 320 #>  [25691,]  91 320 #>  [25692,]  92 320 #>  [25693,]  93 320 #>  [25694,]  94 320 #>  [25695,]  95 320 #>  [25696,]  96 320 #>  [25697,]  97 320 #>  [25698,]  98 320 #>  [25699,]  99 320 #>  [25700,] 100 320 #>  [25701,] 101 320 #>  [25702,] 102 320 #>  [25703,] 103 320 #>  [25704,] 104 320 #>  [25705,] 105 320 #>  [25706,] 106 320 #>  [25707,] 107 320 #>  [25708,] 108 320 #>  [25709,] 109 320 #>  [25710,] 110 320 #>  [25711,] 111 320 #>  [25712,] 112 320 #>  [25713,] 113 320 #>  [25714,] 114 320 #>  [25715,] 115 320 #>  [25716,] 116 320 #>  [25717,] 117 320 #>  [25718,] 118 320 #>  [25719,] 119 320 #>  [25720,] 120 320 #>  [25721,] 121 320 #>  [25722,] 122 320 #>  [25723,] 123 320 #>  [25724,] 124 320 #>  [25725,] 125 320 #>  [25726,] 126 320 #>  [25727,] 127 320 #>  [25728,] 128 320 #>  [25729,] 129 320 #>  [25730,] 130 320 #>  [25731,] 131 320 #>  [25732,] 132 320 #>  [25733,] 133 320 #>  [25734,] 134 320 #>  [25735,] 135 320 #>  [25736,] 136 320 #>  [25737,] 137 320 #>  [25738,] 138 320 #>  [25739,] 139 320 #>  [25740,] 140 320 #>  [25741,] 141 320 #>  [25742,] 142 320 #>  [25743,] 143 320 #>  [25744,] 144 320 #>  [25745,] 145 320 #>  [25746,] 146 320 #>  [25747,] 147 320 #>  [25748,] 148 320 #>  [25749,] 149 320 #>  [25750,] 150 320 #>  [25751,] 151 320 #>  [25752,] 152 320 #>  [25753,] 153 320 #>  [25754,] 154 320 #>  [25755,] 155 320 #>  [25756,] 156 320 #>  [25757,] 157 320 #>  [25758,] 158 320 #>  [25759,] 159 320 #>  [25760,] 160 320 #>  [25761,] 161 320 #>  [25762,] 162 320 #>  [25763,] 163 320 #>  [25764,] 164 320 #>  [25765,] 165 320 #>  [25766,] 166 320 #>  [25767,] 167 320 #>  [25768,] 168 320 #>  [25769,] 169 320 #>  [25770,] 170 320 #>  [25771,] 171 320 #>  [25772,] 172 320 #>  [25773,] 173 320 #>  [25774,] 174 320 #>  [25775,] 175 320 #>  [25776,] 176 320 #>  [25777,] 177 320 #>  [25778,] 178 320 #>  [25779,] 179 320 #>  [25780,] 180 320 #>  [25781,] 181 320 #>  [25782,] 182 320 #>  [25783,] 183 320 #>  [25784,] 184 320 #>  [25785,] 185 320 #>  [25786,] 186 320 #>  [25787,] 187 320 #>  [25788,] 188 320 #>  [25789,] 189 320 #>  [25790,] 190 320 #>  [25791,] 191 320 #>  [25792,] 192 320 #>  [25793,] 193 320 #>  [25794,] 194 320 #>  [25795,] 195 320 #>  [25796,] 196 320 #>  [25797,] 197 320 #>  [25798,] 198 320 #>  [25799,] 199 320 #>  [25800,] 200 320 #>  [25801,] 201 320 #>  [25802,] 202 320 #>  [25803,] 203 320 #>  [25804,] 204 320 #>  [25805,] 205 320 #>  [25806,] 206 320 #>  [25807,] 207 320 #>  [25808,] 208 320 #>  [25809,] 209 320 #>  [25810,] 210 320 #>  [25811,] 211 320 #>  [25812,] 212 320 #>  [25813,] 213 320 #>  [25814,] 214 320 #>  [25815,] 215 320 #>  [25816,] 216 320 #>  [25817,] 217 320 #>  [25818,] 218 320 #>  [25819,] 219 320 #>  [25820,] 220 320 #>  [25821,] 221 320 #>  [25822,] 222 320 #>  [25823,] 223 320 #>  [25824,] 224 320 #>  [25825,] 225 320 #>  [25826,] 226 320 #>  [25827,] 227 320 #>  [25828,] 228 320 #>  [25829,] 229 320 #>  [25830,] 230 320 #>  [25831,] 231 320 #>  [25832,] 232 320 #>  [25833,] 233 320 #>  [25834,] 234 320 #>  [25835,] 235 320 #>  [25836,] 236 320 #>  [25837,] 237 320 #>  [25838,] 238 320 #>  [25839,] 239 320 #>  [25840,] 240 320 #>  [25841,] 241 320 #>  [25842,] 242 320 #>  [25843,] 243 320 #>  [25844,] 244 320 #>  [25845,] 245 320 #>  [25846,] 246 320 #>  [25847,] 247 320 #>  [25848,] 248 320 #>  [25849,] 249 320 #>  [25850,] 250 320 #>  [25851,] 251 320 #>  [25852,] 252 320 #>  [25853,] 253 320 #>  [25854,] 254 320 #>  [25855,] 255 320 #>  [25856,] 256 320 #>  [25857,] 257 320 #>  [25858,] 258 320 #>  [25859,] 259 320 #>  [25860,] 260 320 #>  [25861,] 261 320 #>  [25862,] 262 320 #>  [25863,] 263 320 #>  [25864,] 264 320 #>  [25865,] 265 320 #>  [25866,] 266 320 #>  [25867,] 267 320 #>  [25868,] 268 320 #>  [25869,] 269 320 #>  [25870,] 270 320 #>  [25871,] 271 320 #>  [25872,] 272 320 #>  [25873,] 273 320 #>  [25874,] 274 320 #>  [25875,] 275 320 #>  [25876,] 276 320 #>  [25877,] 277 320 #>  [25878,] 278 320 #>  [25879,] 279 320 #>  [25880,] 280 320 #>  [25881,] 281 320 #>  [25882,] 282 320 #>  [25883,] 283 320 #>  [25884,] 284 320 #>  [25885,] 285 320 #>  [25886,] 286 320 #>  [25887,] 287 320 #>  [25888,] 288 320 #>  [25889,] 289 320 #>  [25890,] 290 320 #>  [25891,] 291 320 #>  [25892,] 292 320 #>  [25893,] 293 320 #>  [25894,] 294 320 #>  [25895,] 295 320 #>  [25896,] 296 320 #>  [25897,] 297 320 #>  [25898,] 298 320 #>  [25899,] 299 320 #>  [25900,] 300 320 #>  [25901,] 301 320 #>  [25902,] 302 320 #>  [25903,] 303 320 #>  [25904,] 304 320 #>  [25905,] 305 320 #>  [25906,] 306 320 #>  [25907,] 307 320 #>  [25908,] 308 320 #>  [25909,] 309 320 #>  [25910,] 310 320 #>  [25911,] 311 320 #>  [25912,] 312 320 #>  [25913,] 313 320 #>  [25914,] 314 320 #>  [25915,] 315 320 #>  [25916,] 316 320 #>  [25917,] 317 320 #>  [25918,] 318 320 #>  [25919,] 319 320 #>  [25920,] 320 320 #>  [25921,] 321 320 #>  [25922,] 322 320 #>  [25923,] 323 320 #>  [25924,] 324 320 #>  [25925,] 325 320 #>  [25926,] 326 320 #>  [25927,] 327 320 #>  [25928,] 328 320 #>  [25929,] 329 320 #>  [25930,] 330 320 #>  [25931,] 331 320 #>  [25932,] 332 320 #>  [25933,] 333 320 #>  [25934,] 334 320 #>  [25935,] 335 320 #>  [25936,] 336 320 #>  [25937,] 337 320 #>  [25938,] 338 320 #>  [25939,] 339 320 #>  [25940,] 340 320 #>  [25941,] 341 320 #>  [25942,] 342 320 #>  [25943,] 343 320 #>  [25944,] 344 320 #>  [25945,] 345 320 #>  [25946,] 346 320 #>  [25947,] 347 320 #>  [25948,] 348 320 #>  [25949,] 349 320 #>  [25950,] 350 320 #>  [25951,] 351 320 #>  [25952,] 352 320 #>  [25953,] 353 320 #>  [25954,] 354 320 #>  [25955,] 355 320 #>  [25956,] 356 320 #>  [25957,] 357 320 #>  [25958,] 358 320 #>  [25959,] 359 320 #>  [25960,] 360 320 #>  [25961,] 361 320 #>  [25962,] 362 320 #>  [25963,] 363 320 #>  [25964,] 364 320 #>  [25965,] 365 320 #>  [25966,] 366 320 #>  [25967,] 367 320 #>  [25968,] 368 320 #>  [25969,] 369 320 #>  [25970,] 370 320 #>  [25971,] 371 320 #>  [25972,] 372 320 #>  [25973,] 373 320 #>  [25974,] 374 320 #>  [25975,] 375 320 #>  [25976,] 376 320 #>  [25977,] 377 320 #>  [25978,] 378 320 #>  [25979,] 379 320 #>  [25980,] 380 320 #>  [25981,] 381 320 #>  [25982,] 382 320 #>  [25983,] 383 320 #>  [25984,] 384 320 #>  [25985,] 385 320 #>  [25986,] 386 320 #>  [25987,] 387 320 #>  [25988,] 388 320 #>  [25989,] 389 320 #>  [25990,] 390 320 #>  [25991,] 391 320 #>  [25992,] 392 320 #>  [25993,] 393 320 #>  [25994,] 394 320 #>  [25995,] 395 320 #>  [25996,] 396 320 #>  [25997,] 397 320 #>  [25998,] 398 320 #>  [25999,] 399 320 #>  [26000,] 400 320 #>  [26001,] 401 320 #>  [26002,] 402 320 #>  [26003,] 403 320 #>  [26004,] 404 320 #>  [26005,] 405 320 #>  [26006,] 406 320 #>  [26007,] 407 320 #>  [26008,] 408 320 #>  [26009,] 409 320 #>  [26010,] 410 320 #>  [26011,] 411 320 #>  [26012,] 412 320 #>  [26013,] 413 320 #>  [26014,] 414 320 #>  [26015,] 415 320 #>  [26016,] 416 320 #>  [26017,] 417 320 #>  [26018,] 418 320 #>  [26019,] 419 320 #>  [26020,] 420 320 #>  [26021,] 421 320 #>  [26022,] 422 320 #>  [26023,] 423 320 #>  [26024,] 424 320 #>  [26025,] 425 320 #>  [26026,] 426 320 #>  [26027,] 427 320 #>  [26028,] 428 320 #>  [26029,] 429 320 #>  [26030,] 430 320 #>  [26031,] 431 320 #>  [26032,] 432 320 #>  [26033,] 433 320 #>  [26034,] 434 320 #>  [26035,] 435 320 #>  [26036,] 436 320 #>  [26037,] 437 320 #>  [26038,] 438 320 #>  [26039,] 439 320 #>  [26040,] 440 320 #>  [26041,] 441 320 #>  [26042,] 442 320 #>  [26043,] 443 320 #>  [26044,] 444 320 #>  [26045,] 445 320 #>  [26046,] 446 320 #>  [26047,] 447 320 #>  [26048,] 448 320 #>  [26049,] 449 320 #>  [26050,] 450 320 #>  [26051,] 451 320 #>  [26052,] 452 320 #>  [26053,] 453 320 #>  [26054,] 454 320 #>  [26055,] 455 320 #>  [26056,] 456 320 #>  [26057,] 457 320 #>  [26058,] 458 320 #>  [26059,] 459 320 #>  [26060,] 460 320 #>  [26061,] 461 320 #>  [26062,] 462 320 #>  [26063,] 463 320 #>  [26064,] 464 320 #>  [26065,] 465 320 #>  [26066,] 466 320 #>  [26067,] 467 320 #>  [26068,] 468 320 #>  [26069,] 469 320 #>  [26070,] 470 320 #>  [26071,] 471 320 #>  [26072,] 472 320 #>  [26073,] 473 320 #>  [26074,] 474 320 #>  [26075,] 475 320 #>  [26076,] 476 320 #>  [26077,] 477 320 #>  [26078,] 478 320 #>  [26079,] 479 320 #>  [26080,] 480 320 #>  [26081,] 481 320 #>  [26082,] 482 320 #>  [26083,] 483 320 #>  [26084,] 484 320 #>  [26085,] 485 320 #>  [26086,] 486 320 #>  [26087,] 487 320 #>  [26088,] 488 320 #>  [26089,] 489 320 #>  [26090,] 490 320 #>  [26091,] 491 320 #>  [26092,] 492 320 #>  [26093,] 493 320 #>  [26094,] 494 320 #>  [26095,] 495 320 #>  [26096,] 496 320 #>  [26097,] 497 320 #>  [26098,] 498 320 #>  [26099,] 499 320 #>  [26100,] 500 320 #>  [26101,] 501 320 #>  [26102,] 502 320 #>  [26103,] 503 320 #>  [26104,] 504 320 #>  [26105,] 505 320 #>  [26106,] 506 320 #>  [26107,] 507 320 #>  [26108,] 508 320 #>  [26109,] 509 320 #>  [26110,] 510 320 #>  [26111,] 511 320 #>  [26112,] 512 320 #>  [26113,] 513 320 #>  [26114,] 514 320 #>  [26115,] 515 320 #>  [26116,] 516 320 #>  [26117,] 517 320 #>  [26118,] 518 320 #>  [26119,] 519 320 #>  [26120,] 520 320 #>  [26121,] 521 320 #>  [26122,] 522 320 #>  [26123,] 523 320 #>  [26124,] 524 320 #>  [26125,] 525 320 #>  [26126,] 526 320 #>  [26127,] 527 320 #>  [26128,] 528 320 #>  [26129,] 529 320 #>  [26130,] 530 320 #>  [26131,] 531 320 #>  [26132,] 532 320 #>  [26133,] 533 320 #>  [26134,] 534 320 #>  [26135,] 535 320 #>  [26136,] 536 320 #>  [26137,] 537 320 #>  [26138,] 538 320 #>  [26139,] 539 320 #>  [26140,] 540 320 #>  [26141,] 541 320 #>  [26142,] 542 320 #>  [26143,] 543 320 #>  [26144,] 544 320 #>  [26145,] 545 320 #>  [26146,] 546 320 #>  [26147,] 547 320 #>  [26148,] 548 320 #>  [26149,] 549 320 #>  [26150,] 550 320 #>  [26151,] 551 320 #>  [26152,] 552 320 #>  [26153,] 553 320 #>  [26154,] 554 320 #>  [26155,] 555 320 #>  [26156,] 556 320 #>  [26157,] 557 320 #>  [26158,] 558 320 #>  [26159,] 559 320 #>  [26160,] 560 320 #>  [26161,] 561 320 #>  [26162,] 562 320 #>  [26163,] 563 320 #>  [26164,] 564 320 #>  [26165,] 565 320 #>  [26166,] 566 320 #>  [26167,] 567 320 #>  [26168,] 568 320 #>  [26169,] 569 320 #>  [26170,] 570 320 #>  [26171,] 571 320 #>  [26172,] 572 320 #>  [26173,] 573 320 #>  [26174,] 574 320 #>  [26175,] 575 320 #>  [26176,] 576 320 #>  [26177,] 577 320 #>  [26178,] 578 320 #>  [26179,] 579 320 #>  [26180,] 580 320 #>  [26181,] 581 320 #>  [26182,] 582 320 #>  [26183,] 583 320 #>  [26184,] 584 320 #>  [26185,] 585 320 #>  [26186,] 586 320 #>  [26187,] 587 320 #>  [26188,] 588 320 #>  [26189,] 589 320 #>  [26190,] 590 320 #>  [26191,] 591 320 #>  [26192,] 592 320 #>  [26193,] 593 320 #>  [26194,] 594 320 #>  [26195,] 595 320 #>  [26196,] 596 320 #>  [26197,] 597 320 #>  [26198,] 598 320 #>  [26199,] 599 320 #>  [26200,] 600 320 #>  [26201,] 601 320 #>  [26202,] 602 320 #>  [26203,] 603 320 #>  [26204,] 604 320 #>  [26205,] 605 320 #>  [26206,] 606 320 #>  [26207,] 607 320 #>  [26208,] 608 320 #>  [26209,] 609 320 #>  [26210,] 610 320 #>  [26211,] 611 320 #>  [26212,] 612 320 #>  [26213,] 613 320 #>  [26214,] 614 320 #>  [26215,] 615 320 #>  [26216,] 616 320 #>  [26217,] 617 320 #>  [26218,] 618 320 #>  [26219,] 619 320 #>  [26220,] 620 320 #>  [26221,] 621 320 #>  [26222,] 622 320 #>  [26223,] 623 320 #>  [26224,] 624 320 #>  [26225,] 625 320 #>  [26226,] 626 320 #>  [26227,] 627 320 #>  [26228,] 628 320 #>  [26229,] 629 320 #>  [26230,] 630 320 #>  [26231,] 631 320 #>  [26232,] 632 320 #>  [26233,] 633 320 #>  [26234,] 634 320 #>  [26235,] 635 320 #>  [26236,] 636 320 #>  [26237,] 637 320 #>  [26238,] 638 320 #>  [26239,] 639 320 #>  [26240,] 640 320 #>  [26241,]   1 319 #>  [26242,]   2 319 #>  [26243,]   3 319 #>  [26244,]   4 319 #>  [26245,]   5 319 #>  [26246,]   6 319 #>  [26247,]   7 319 #>  [26248,]   8 319 #>  [26249,]   9 319 #>  [26250,]  10 319 #>  [26251,]  11 319 #>  [26252,]  12 319 #>  [26253,]  13 319 #>  [26254,]  14 319 #>  [26255,]  15 319 #>  [26256,]  16 319 #>  [26257,]  17 319 #>  [26258,]  18 319 #>  [26259,]  19 319 #>  [26260,]  20 319 #>  [26261,]  21 319 #>  [26262,]  22 319 #>  [26263,]  23 319 #>  [26264,]  24 319 #>  [26265,]  25 319 #>  [26266,]  26 319 #>  [26267,]  27 319 #>  [26268,]  28 319 #>  [26269,]  29 319 #>  [26270,]  30 319 #>  [26271,]  31 319 #>  [26272,]  32 319 #>  [26273,]  33 319 #>  [26274,]  34 319 #>  [26275,]  35 319 #>  [26276,]  36 319 #>  [26277,]  37 319 #>  [26278,]  38 319 #>  [26279,]  39 319 #>  [26280,]  40 319 #>  [26281,]  41 319 #>  [26282,]  42 319 #>  [26283,]  43 319 #>  [26284,]  44 319 #>  [26285,]  45 319 #>  [26286,]  46 319 #>  [26287,]  47 319 #>  [26288,]  48 319 #>  [26289,]  49 319 #>  [26290,]  50 319 #>  [26291,]  51 319 #>  [26292,]  52 319 #>  [26293,]  53 319 #>  [26294,]  54 319 #>  [26295,]  55 319 #>  [26296,]  56 319 #>  [26297,]  57 319 #>  [26298,]  58 319 #>  [26299,]  59 319 #>  [26300,]  60 319 #>  [26301,]  61 319 #>  [26302,]  62 319 #>  [26303,]  63 319 #>  [26304,]  64 319 #>  [26305,]  65 319 #>  [26306,]  66 319 #>  [26307,]  67 319 #>  [26308,]  68 319 #>  [26309,]  69 319 #>  [26310,]  70 319 #>  [26311,]  71 319 #>  [26312,]  72 319 #>  [26313,]  73 319 #>  [26314,]  74 319 #>  [26315,]  75 319 #>  [26316,]  76 319 #>  [26317,]  77 319 #>  [26318,]  78 319 #>  [26319,]  79 319 #>  [26320,]  80 319 #>  [26321,]  81 319 #>  [26322,]  82 319 #>  [26323,]  83 319 #>  [26324,]  84 319 #>  [26325,]  85 319 #>  [26326,]  86 319 #>  [26327,]  87 319 #>  [26328,]  88 319 #>  [26329,]  89 319 #>  [26330,]  90 319 #>  [26331,]  91 319 #>  [26332,]  92 319 #>  [26333,]  93 319 #>  [26334,]  94 319 #>  [26335,]  95 319 #>  [26336,]  96 319 #>  [26337,]  97 319 #>  [26338,]  98 319 #>  [26339,]  99 319 #>  [26340,] 100 319 #>  [26341,] 101 319 #>  [26342,] 102 319 #>  [26343,] 103 319 #>  [26344,] 104 319 #>  [26345,] 105 319 #>  [26346,] 106 319 #>  [26347,] 107 319 #>  [26348,] 108 319 #>  [26349,] 109 319 #>  [26350,] 110 319 #>  [26351,] 111 319 #>  [26352,] 112 319 #>  [26353,] 113 319 #>  [26354,] 114 319 #>  [26355,] 115 319 #>  [26356,] 116 319 #>  [26357,] 117 319 #>  [26358,] 118 319 #>  [26359,] 119 319 #>  [26360,] 120 319 #>  [26361,] 121 319 #>  [26362,] 122 319 #>  [26363,] 123 319 #>  [26364,] 124 319 #>  [26365,] 125 319 #>  [26366,] 126 319 #>  [26367,] 127 319 #>  [26368,] 128 319 #>  [26369,] 129 319 #>  [26370,] 130 319 #>  [26371,] 131 319 #>  [26372,] 132 319 #>  [26373,] 133 319 #>  [26374,] 134 319 #>  [26375,] 135 319 #>  [26376,] 136 319 #>  [26377,] 137 319 #>  [26378,] 138 319 #>  [26379,] 139 319 #>  [26380,] 140 319 #>  [26381,] 141 319 #>  [26382,] 142 319 #>  [26383,] 143 319 #>  [26384,] 144 319 #>  [26385,] 145 319 #>  [26386,] 146 319 #>  [26387,] 147 319 #>  [26388,] 148 319 #>  [26389,] 149 319 #>  [26390,] 150 319 #>  [26391,] 151 319 #>  [26392,] 152 319 #>  [26393,] 153 319 #>  [26394,] 154 319 #>  [26395,] 155 319 #>  [26396,] 156 319 #>  [26397,] 157 319 #>  [26398,] 158 319 #>  [26399,] 159 319 #>  [26400,] 160 319 #>  [26401,] 161 319 #>  [26402,] 162 319 #>  [26403,] 163 319 #>  [26404,] 164 319 #>  [26405,] 165 319 #>  [26406,] 166 319 #>  [26407,] 167 319 #>  [26408,] 168 319 #>  [26409,] 169 319 #>  [26410,] 170 319 #>  [26411,] 171 319 #>  [26412,] 172 319 #>  [26413,] 173 319 #>  [26414,] 174 319 #>  [26415,] 175 319 #>  [26416,] 176 319 #>  [26417,] 177 319 #>  [26418,] 178 319 #>  [26419,] 179 319 #>  [26420,] 180 319 #>  [26421,] 181 319 #>  [26422,] 182 319 #>  [26423,] 183 319 #>  [26424,] 184 319 #>  [26425,] 185 319 #>  [26426,] 186 319 #>  [26427,] 187 319 #>  [26428,] 188 319 #>  [26429,] 189 319 #>  [26430,] 190 319 #>  [26431,] 191 319 #>  [26432,] 192 319 #>  [26433,] 193 319 #>  [26434,] 194 319 #>  [26435,] 195 319 #>  [26436,] 196 319 #>  [26437,] 197 319 #>  [26438,] 198 319 #>  [26439,] 199 319 #>  [26440,] 200 319 #>  [26441,] 201 319 #>  [26442,] 202 319 #>  [26443,] 203 319 #>  [26444,] 204 319 #>  [26445,] 205 319 #>  [26446,] 206 319 #>  [26447,] 207 319 #>  [26448,] 208 319 #>  [26449,] 209 319 #>  [26450,] 210 319 #>  [26451,] 211 319 #>  [26452,] 212 319 #>  [26453,] 213 319 #>  [26454,] 214 319 #>  [26455,] 215 319 #>  [26456,] 216 319 #>  [26457,] 217 319 #>  [26458,] 218 319 #>  [26459,] 219 319 #>  [26460,] 220 319 #>  [26461,] 221 319 #>  [26462,] 222 319 #>  [26463,] 223 319 #>  [26464,] 224 319 #>  [26465,] 225 319 #>  [26466,] 226 319 #>  [26467,] 227 319 #>  [26468,] 228 319 #>  [26469,] 229 319 #>  [26470,] 230 319 #>  [26471,] 231 319 #>  [26472,] 232 319 #>  [26473,] 233 319 #>  [26474,] 234 319 #>  [26475,] 235 319 #>  [26476,] 236 319 #>  [26477,] 237 319 #>  [26478,] 238 319 #>  [26479,] 239 319 #>  [26480,] 240 319 #>  [26481,] 241 319 #>  [26482,] 242 319 #>  [26483,] 243 319 #>  [26484,] 244 319 #>  [26485,] 245 319 #>  [26486,] 246 319 #>  [26487,] 247 319 #>  [26488,] 248 319 #>  [26489,] 249 319 #>  [26490,] 250 319 #>  [26491,] 251 319 #>  [26492,] 252 319 #>  [26493,] 253 319 #>  [26494,] 254 319 #>  [26495,] 255 319 #>  [26496,] 256 319 #>  [26497,] 257 319 #>  [26498,] 258 319 #>  [26499,] 259 319 #>  [26500,] 260 319 #>  [26501,] 261 319 #>  [26502,] 262 319 #>  [26503,] 263 319 #>  [26504,] 264 319 #>  [26505,] 265 319 #>  [26506,] 266 319 #>  [26507,] 267 319 #>  [26508,] 268 319 #>  [26509,] 269 319 #>  [26510,] 270 319 #>  [26511,] 271 319 #>  [26512,] 272 319 #>  [26513,] 273 319 #>  [26514,] 274 319 #>  [26515,] 275 319 #>  [26516,] 276 319 #>  [26517,] 277 319 #>  [26518,] 278 319 #>  [26519,] 279 319 #>  [26520,] 280 319 #>  [26521,] 281 319 #>  [26522,] 282 319 #>  [26523,] 283 319 #>  [26524,] 284 319 #>  [26525,] 285 319 #>  [26526,] 286 319 #>  [26527,] 287 319 #>  [26528,] 288 319 #>  [26529,] 289 319 #>  [26530,] 290 319 #>  [26531,] 291 319 #>  [26532,] 292 319 #>  [26533,] 293 319 #>  [26534,] 294 319 #>  [26535,] 295 319 #>  [26536,] 296 319 #>  [26537,] 297 319 #>  [26538,] 298 319 #>  [26539,] 299 319 #>  [26540,] 300 319 #>  [26541,] 301 319 #>  [26542,] 302 319 #>  [26543,] 303 319 #>  [26544,] 304 319 #>  [26545,] 305 319 #>  [26546,] 306 319 #>  [26547,] 307 319 #>  [26548,] 308 319 #>  [26549,] 309 319 #>  [26550,] 310 319 #>  [26551,] 311 319 #>  [26552,] 312 319 #>  [26553,] 313 319 #>  [26554,] 314 319 #>  [26555,] 315 319 #>  [26556,] 316 319 #>  [26557,] 317 319 #>  [26558,] 318 319 #>  [26559,] 319 319 #>  [26560,] 320 319 #>  [26561,] 321 319 #>  [26562,] 322 319 #>  [26563,] 323 319 #>  [26564,] 324 319 #>  [26565,] 325 319 #>  [26566,] 326 319 #>  [26567,] 327 319 #>  [26568,] 328 319 #>  [26569,] 329 319 #>  [26570,] 330 319 #>  [26571,] 331 319 #>  [26572,] 332 319 #>  [26573,] 333 319 #>  [26574,] 334 319 #>  [26575,] 335 319 #>  [26576,] 336 319 #>  [26577,] 337 319 #>  [26578,] 338 319 #>  [26579,] 339 319 #>  [26580,] 340 319 #>  [26581,] 341 319 #>  [26582,] 342 319 #>  [26583,] 343 319 #>  [26584,] 344 319 #>  [26585,] 345 319 #>  [26586,] 346 319 #>  [26587,] 347 319 #>  [26588,] 348 319 #>  [26589,] 349 319 #>  [26590,] 350 319 #>  [26591,] 351 319 #>  [26592,] 352 319 #>  [26593,] 353 319 #>  [26594,] 354 319 #>  [26595,] 355 319 #>  [26596,] 356 319 #>  [26597,] 357 319 #>  [26598,] 358 319 #>  [26599,] 359 319 #>  [26600,] 360 319 #>  [26601,] 361 319 #>  [26602,] 362 319 #>  [26603,] 363 319 #>  [26604,] 364 319 #>  [26605,] 365 319 #>  [26606,] 366 319 #>  [26607,] 367 319 #>  [26608,] 368 319 #>  [26609,] 369 319 #>  [26610,] 370 319 #>  [26611,] 371 319 #>  [26612,] 372 319 #>  [26613,] 373 319 #>  [26614,] 374 319 #>  [26615,] 375 319 #>  [26616,] 376 319 #>  [26617,] 377 319 #>  [26618,] 378 319 #>  [26619,] 379 319 #>  [26620,] 380 319 #>  [26621,] 381 319 #>  [26622,] 382 319 #>  [26623,] 383 319 #>  [26624,] 384 319 #>  [26625,] 385 319 #>  [26626,] 386 319 #>  [26627,] 387 319 #>  [26628,] 388 319 #>  [26629,] 389 319 #>  [26630,] 390 319 #>  [26631,] 391 319 #>  [26632,] 392 319 #>  [26633,] 393 319 #>  [26634,] 394 319 #>  [26635,] 395 319 #>  [26636,] 396 319 #>  [26637,] 397 319 #>  [26638,] 398 319 #>  [26639,] 399 319 #>  [26640,] 400 319 #>  [26641,] 401 319 #>  [26642,] 402 319 #>  [26643,] 403 319 #>  [26644,] 404 319 #>  [26645,] 405 319 #>  [26646,] 406 319 #>  [26647,] 407 319 #>  [26648,] 408 319 #>  [26649,] 409 319 #>  [26650,] 410 319 #>  [26651,] 411 319 #>  [26652,] 412 319 #>  [26653,] 413 319 #>  [26654,] 414 319 #>  [26655,] 415 319 #>  [26656,] 416 319 #>  [26657,] 417 319 #>  [26658,] 418 319 #>  [26659,] 419 319 #>  [26660,] 420 319 #>  [26661,] 421 319 #>  [26662,] 422 319 #>  [26663,] 423 319 #>  [26664,] 424 319 #>  [26665,] 425 319 #>  [26666,] 426 319 #>  [26667,] 427 319 #>  [26668,] 428 319 #>  [26669,] 429 319 #>  [26670,] 430 319 #>  [26671,] 431 319 #>  [26672,] 432 319 #>  [26673,] 433 319 #>  [26674,] 434 319 #>  [26675,] 435 319 #>  [26676,] 436 319 #>  [26677,] 437 319 #>  [26678,] 438 319 #>  [26679,] 439 319 #>  [26680,] 440 319 #>  [26681,] 441 319 #>  [26682,] 442 319 #>  [26683,] 443 319 #>  [26684,] 444 319 #>  [26685,] 445 319 #>  [26686,] 446 319 #>  [26687,] 447 319 #>  [26688,] 448 319 #>  [26689,] 449 319 #>  [26690,] 450 319 #>  [26691,] 451 319 #>  [26692,] 452 319 #>  [26693,] 453 319 #>  [26694,] 454 319 #>  [26695,] 455 319 #>  [26696,] 456 319 #>  [26697,] 457 319 #>  [26698,] 458 319 #>  [26699,] 459 319 #>  [26700,] 460 319 #>  [26701,] 461 319 #>  [26702,] 462 319 #>  [26703,] 463 319 #>  [26704,] 464 319 #>  [26705,] 465 319 #>  [26706,] 466 319 #>  [26707,] 467 319 #>  [26708,] 468 319 #>  [26709,] 469 319 #>  [26710,] 470 319 #>  [26711,] 471 319 #>  [26712,] 472 319 #>  [26713,] 473 319 #>  [26714,] 474 319 #>  [26715,] 475 319 #>  [26716,] 476 319 #>  [26717,] 477 319 #>  [26718,] 478 319 #>  [26719,] 479 319 #>  [26720,] 480 319 #>  [26721,] 481 319 #>  [26722,] 482 319 #>  [26723,] 483 319 #>  [26724,] 484 319 #>  [26725,] 485 319 #>  [26726,] 486 319 #>  [26727,] 487 319 #>  [26728,] 488 319 #>  [26729,] 489 319 #>  [26730,] 490 319 #>  [26731,] 491 319 #>  [26732,] 492 319 #>  [26733,] 493 319 #>  [26734,] 494 319 #>  [26735,] 495 319 #>  [26736,] 496 319 #>  [26737,] 497 319 #>  [26738,] 498 319 #>  [26739,] 499 319 #>  [26740,] 500 319 #>  [26741,] 501 319 #>  [26742,] 502 319 #>  [26743,] 503 319 #>  [26744,] 504 319 #>  [26745,] 505 319 #>  [26746,] 506 319 #>  [26747,] 507 319 #>  [26748,] 508 319 #>  [26749,] 509 319 #>  [26750,] 510 319 #>  [26751,] 511 319 #>  [26752,] 512 319 #>  [26753,] 513 319 #>  [26754,] 514 319 #>  [26755,] 515 319 #>  [26756,] 516 319 #>  [26757,] 517 319 #>  [26758,] 518 319 #>  [26759,] 519 319 #>  [26760,] 520 319 #>  [26761,] 521 319 #>  [26762,] 522 319 #>  [26763,] 523 319 #>  [26764,] 524 319 #>  [26765,] 525 319 #>  [26766,] 526 319 #>  [26767,] 527 319 #>  [26768,] 528 319 #>  [26769,] 529 319 #>  [26770,] 530 319 #>  [26771,] 531 319 #>  [26772,] 532 319 #>  [26773,] 533 319 #>  [26774,] 534 319 #>  [26775,] 535 319 #>  [26776,] 536 319 #>  [26777,] 537 319 #>  [26778,] 538 319 #>  [26779,] 539 319 #>  [26780,] 540 319 #>  [26781,] 541 319 #>  [26782,] 542 319 #>  [26783,] 543 319 #>  [26784,] 544 319 #>  [26785,] 545 319 #>  [26786,] 546 319 #>  [26787,] 547 319 #>  [26788,] 548 319 #>  [26789,] 549 319 #>  [26790,] 550 319 #>  [26791,] 551 319 #>  [26792,] 552 319 #>  [26793,] 553 319 #>  [26794,] 554 319 #>  [26795,] 555 319 #>  [26796,] 556 319 #>  [26797,] 557 319 #>  [26798,] 558 319 #>  [26799,] 559 319 #>  [26800,] 560 319 #>  [26801,] 561 319 #>  [26802,] 562 319 #>  [26803,] 563 319 #>  [26804,] 564 319 #>  [26805,] 565 319 #>  [26806,] 566 319 #>  [26807,] 567 319 #>  [26808,] 568 319 #>  [26809,] 569 319 #>  [26810,] 570 319 #>  [26811,] 571 319 #>  [26812,] 572 319 #>  [26813,] 573 319 #>  [26814,] 574 319 #>  [26815,] 575 319 #>  [26816,] 576 319 #>  [26817,] 577 319 #>  [26818,] 578 319 #>  [26819,] 579 319 #>  [26820,] 580 319 #>  [26821,] 581 319 #>  [26822,] 582 319 #>  [26823,] 583 319 #>  [26824,] 584 319 #>  [26825,] 585 319 #>  [26826,] 586 319 #>  [26827,] 587 319 #>  [26828,] 588 319 #>  [26829,] 589 319 #>  [26830,] 590 319 #>  [26831,] 591 319 #>  [26832,] 592 319 #>  [26833,] 593 319 #>  [26834,] 594 319 #>  [26835,] 595 319 #>  [26836,] 596 319 #>  [26837,] 597 319 #>  [26838,] 598 319 #>  [26839,] 599 319 #>  [26840,] 600 319 #>  [26841,] 601 319 #>  [26842,] 602 319 #>  [26843,] 603 319 #>  [26844,] 604 319 #>  [26845,] 605 319 #>  [26846,] 606 319 #>  [26847,] 607 319 #>  [26848,] 608 319 #>  [26849,] 609 319 #>  [26850,] 610 319 #>  [26851,] 611 319 #>  [26852,] 612 319 #>  [26853,] 613 319 #>  [26854,] 614 319 #>  [26855,] 615 319 #>  [26856,] 616 319 #>  [26857,] 617 319 #>  [26858,] 618 319 #>  [26859,] 619 319 #>  [26860,] 620 319 #>  [26861,] 621 319 #>  [26862,] 622 319 #>  [26863,] 623 319 #>  [26864,] 624 319 #>  [26865,] 625 319 #>  [26866,] 626 319 #>  [26867,] 627 319 #>  [26868,] 628 319 #>  [26869,] 629 319 #>  [26870,] 630 319 #>  [26871,] 631 319 #>  [26872,] 632 319 #>  [26873,] 633 319 #>  [26874,] 634 319 #>  [26875,] 635 319 #>  [26876,] 636 319 #>  [26877,] 637 319 #>  [26878,] 638 319 #>  [26879,] 639 319 #>  [26880,] 640 319 #>  [26881,]   1 318 #>  [26882,]   2 318 #>  [26883,]   3 318 #>  [26884,]   4 318 #>  [26885,]   5 318 #>  [26886,]   6 318 #>  [26887,]   7 318 #>  [26888,]   8 318 #>  [26889,]   9 318 #>  [26890,]  10 318 #>  [26891,]  11 318 #>  [26892,]  12 318 #>  [26893,]  13 318 #>  [26894,]  14 318 #>  [26895,]  15 318 #>  [26896,]  16 318 #>  [26897,]  17 318 #>  [26898,]  18 318 #>  [26899,]  19 318 #>  [26900,]  20 318 #>  [26901,]  21 318 #>  [26902,]  22 318 #>  [26903,]  23 318 #>  [26904,]  24 318 #>  [26905,]  25 318 #>  [26906,]  26 318 #>  [26907,]  27 318 #>  [26908,]  28 318 #>  [26909,]  29 318 #>  [26910,]  30 318 #>  [26911,]  31 318 #>  [26912,]  32 318 #>  [26913,]  33 318 #>  [26914,]  34 318 #>  [26915,]  35 318 #>  [26916,]  36 318 #>  [26917,]  37 318 #>  [26918,]  38 318 #>  [26919,]  39 318 #>  [26920,]  40 318 #>  [26921,]  41 318 #>  [26922,]  42 318 #>  [26923,]  43 318 #>  [26924,]  44 318 #>  [26925,]  45 318 #>  [26926,]  46 318 #>  [26927,]  47 318 #>  [26928,]  48 318 #>  [26929,]  49 318 #>  [26930,]  50 318 #>  [26931,]  51 318 #>  [26932,]  52 318 #>  [26933,]  53 318 #>  [26934,]  54 318 #>  [26935,]  55 318 #>  [26936,]  56 318 #>  [26937,]  57 318 #>  [26938,]  58 318 #>  [26939,]  59 318 #>  [26940,]  60 318 #>  [26941,]  61 318 #>  [26942,]  62 318 #>  [26943,]  63 318 #>  [26944,]  64 318 #>  [26945,]  65 318 #>  [26946,]  66 318 #>  [26947,]  67 318 #>  [26948,]  68 318 #>  [26949,]  69 318 #>  [26950,]  70 318 #>  [26951,]  71 318 #>  [26952,]  72 318 #>  [26953,]  73 318 #>  [26954,]  74 318 #>  [26955,]  75 318 #>  [26956,]  76 318 #>  [26957,]  77 318 #>  [26958,]  78 318 #>  [26959,]  79 318 #>  [26960,]  80 318 #>  [26961,]  81 318 #>  [26962,]  82 318 #>  [26963,]  83 318 #>  [26964,]  84 318 #>  [26965,]  85 318 #>  [26966,]  86 318 #>  [26967,]  87 318 #>  [26968,]  88 318 #>  [26969,]  89 318 #>  [26970,]  90 318 #>  [26971,]  91 318 #>  [26972,]  92 318 #>  [26973,]  93 318 #>  [26974,]  94 318 #>  [26975,]  95 318 #>  [26976,]  96 318 #>  [26977,]  97 318 #>  [26978,]  98 318 #>  [26979,]  99 318 #>  [26980,] 100 318 #>  [26981,] 101 318 #>  [26982,] 102 318 #>  [26983,] 103 318 #>  [26984,] 104 318 #>  [26985,] 105 318 #>  [26986,] 106 318 #>  [26987,] 107 318 #>  [26988,] 108 318 #>  [26989,] 109 318 #>  [26990,] 110 318 #>  [26991,] 111 318 #>  [26992,] 112 318 #>  [26993,] 113 318 #>  [26994,] 114 318 #>  [26995,] 115 318 #>  [26996,] 116 318 #>  [26997,] 117 318 #>  [26998,] 118 318 #>  [26999,] 119 318 #>  [27000,] 120 318 #>  [27001,] 121 318 #>  [27002,] 122 318 #>  [27003,] 123 318 #>  [27004,] 124 318 #>  [27005,] 125 318 #>  [27006,] 126 318 #>  [27007,] 127 318 #>  [27008,] 128 318 #>  [27009,] 129 318 #>  [27010,] 130 318 #>  [27011,] 131 318 #>  [27012,] 132 318 #>  [27013,] 133 318 #>  [27014,] 134 318 #>  [27015,] 135 318 #>  [27016,] 136 318 #>  [27017,] 137 318 #>  [27018,] 138 318 #>  [27019,] 139 318 #>  [27020,] 140 318 #>  [27021,] 141 318 #>  [27022,] 142 318 #>  [27023,] 143 318 #>  [27024,] 144 318 #>  [27025,] 145 318 #>  [27026,] 146 318 #>  [27027,] 147 318 #>  [27028,] 148 318 #>  [27029,] 149 318 #>  [27030,] 150 318 #>  [27031,] 151 318 #>  [27032,] 152 318 #>  [27033,] 153 318 #>  [27034,] 154 318 #>  [27035,] 155 318 #>  [27036,] 156 318 #>  [27037,] 157 318 #>  [27038,] 158 318 #>  [27039,] 159 318 #>  [27040,] 160 318 #>  [27041,] 161 318 #>  [27042,] 162 318 #>  [27043,] 163 318 #>  [27044,] 164 318 #>  [27045,] 165 318 #>  [27046,] 166 318 #>  [27047,] 167 318 #>  [27048,] 168 318 #>  [27049,] 169 318 #>  [27050,] 170 318 #>  [27051,] 171 318 #>  [27052,] 172 318 #>  [27053,] 173 318 #>  [27054,] 174 318 #>  [27055,] 175 318 #>  [27056,] 176 318 #>  [27057,] 177 318 #>  [27058,] 178 318 #>  [27059,] 179 318 #>  [27060,] 180 318 #>  [27061,] 181 318 #>  [27062,] 182 318 #>  [27063,] 183 318 #>  [27064,] 184 318 #>  [27065,] 185 318 #>  [27066,] 186 318 #>  [27067,] 187 318 #>  [27068,] 188 318 #>  [27069,] 189 318 #>  [27070,] 190 318 #>  [27071,] 191 318 #>  [27072,] 192 318 #>  [27073,] 193 318 #>  [27074,] 194 318 #>  [27075,] 195 318 #>  [27076,] 196 318 #>  [27077,] 197 318 #>  [27078,] 198 318 #>  [27079,] 199 318 #>  [27080,] 200 318 #>  [27081,] 201 318 #>  [27082,] 202 318 #>  [27083,] 203 318 #>  [27084,] 204 318 #>  [27085,] 205 318 #>  [27086,] 206 318 #>  [27087,] 207 318 #>  [27088,] 208 318 #>  [27089,] 209 318 #>  [27090,] 210 318 #>  [27091,] 211 318 #>  [27092,] 212 318 #>  [27093,] 213 318 #>  [27094,] 214 318 #>  [27095,] 215 318 #>  [27096,] 216 318 #>  [27097,] 217 318 #>  [27098,] 218 318 #>  [27099,] 219 318 #>  [27100,] 220 318 #>  [27101,] 221 318 #>  [27102,] 222 318 #>  [27103,] 223 318 #>  [27104,] 224 318 #>  [27105,] 225 318 #>  [27106,] 226 318 #>  [27107,] 227 318 #>  [27108,] 228 318 #>  [27109,] 229 318 #>  [27110,] 230 318 #>  [27111,] 231 318 #>  [27112,] 232 318 #>  [27113,] 233 318 #>  [27114,] 234 318 #>  [27115,] 235 318 #>  [27116,] 236 318 #>  [27117,] 237 318 #>  [27118,] 238 318 #>  [27119,] 239 318 #>  [27120,] 240 318 #>  [27121,] 241 318 #>  [27122,] 242 318 #>  [27123,] 243 318 #>  [27124,] 244 318 #>  [27125,] 245 318 #>  [27126,] 246 318 #>  [27127,] 247 318 #>  [27128,] 248 318 #>  [27129,] 249 318 #>  [27130,] 250 318 #>  [27131,] 251 318 #>  [27132,] 252 318 #>  [27133,] 253 318 #>  [27134,] 254 318 #>  [27135,] 255 318 #>  [27136,] 256 318 #>  [27137,] 257 318 #>  [27138,] 258 318 #>  [27139,] 259 318 #>  [27140,] 260 318 #>  [27141,] 261 318 #>  [27142,] 262 318 #>  [27143,] 263 318 #>  [27144,] 264 318 #>  [27145,] 265 318 #>  [27146,] 266 318 #>  [27147,] 267 318 #>  [27148,] 268 318 #>  [27149,] 269 318 #>  [27150,] 270 318 #>  [27151,] 271 318 #>  [27152,] 272 318 #>  [27153,] 273 318 #>  [27154,] 274 318 #>  [27155,] 275 318 #>  [27156,] 276 318 #>  [27157,] 277 318 #>  [27158,] 278 318 #>  [27159,] 279 318 #>  [27160,] 280 318 #>  [27161,] 281 318 #>  [27162,] 282 318 #>  [27163,] 283 318 #>  [27164,] 284 318 #>  [27165,] 285 318 #>  [27166,] 286 318 #>  [27167,] 287 318 #>  [27168,] 288 318 #>  [27169,] 289 318 #>  [27170,] 290 318 #>  [27171,] 291 318 #>  [27172,] 292 318 #>  [27173,] 293 318 #>  [27174,] 294 318 #>  [27175,] 295 318 #>  [27176,] 296 318 #>  [27177,] 297 318 #>  [27178,] 298 318 #>  [27179,] 299 318 #>  [27180,] 300 318 #>  [27181,] 301 318 #>  [27182,] 302 318 #>  [27183,] 303 318 #>  [27184,] 304 318 #>  [27185,] 305 318 #>  [27186,] 306 318 #>  [27187,] 307 318 #>  [27188,] 308 318 #>  [27189,] 309 318 #>  [27190,] 310 318 #>  [27191,] 311 318 #>  [27192,] 312 318 #>  [27193,] 313 318 #>  [27194,] 314 318 #>  [27195,] 315 318 #>  [27196,] 316 318 #>  [27197,] 317 318 #>  [27198,] 318 318 #>  [27199,] 319 318 #>  [27200,] 320 318 #>  [27201,] 321 318 #>  [27202,] 322 318 #>  [27203,] 323 318 #>  [27204,] 324 318 #>  [27205,] 325 318 #>  [27206,] 326 318 #>  [27207,] 327 318 #>  [27208,] 328 318 #>  [27209,] 329 318 #>  [27210,] 330 318 #>  [27211,] 331 318 #>  [27212,] 332 318 #>  [27213,] 333 318 #>  [27214,] 334 318 #>  [27215,] 335 318 #>  [27216,] 336 318 #>  [27217,] 337 318 #>  [27218,] 338 318 #>  [27219,] 339 318 #>  [27220,] 340 318 #>  [27221,] 341 318 #>  [27222,] 342 318 #>  [27223,] 343 318 #>  [27224,] 344 318 #>  [27225,] 345 318 #>  [27226,] 346 318 #>  [27227,] 347 318 #>  [27228,] 348 318 #>  [27229,] 349 318 #>  [27230,] 350 318 #>  [27231,] 351 318 #>  [27232,] 352 318 #>  [27233,] 353 318 #>  [27234,] 354 318 #>  [27235,] 355 318 #>  [27236,] 356 318 #>  [27237,] 357 318 #>  [27238,] 358 318 #>  [27239,] 359 318 #>  [27240,] 360 318 #>  [27241,] 361 318 #>  [27242,] 362 318 #>  [27243,] 363 318 #>  [27244,] 364 318 #>  [27245,] 365 318 #>  [27246,] 366 318 #>  [27247,] 367 318 #>  [27248,] 368 318 #>  [27249,] 369 318 #>  [27250,] 370 318 #>  [27251,] 371 318 #>  [27252,] 372 318 #>  [27253,] 373 318 #>  [27254,] 374 318 #>  [27255,] 375 318 #>  [27256,] 376 318 #>  [27257,] 377 318 #>  [27258,] 378 318 #>  [27259,] 379 318 #>  [27260,] 380 318 #>  [27261,] 381 318 #>  [27262,] 382 318 #>  [27263,] 383 318 #>  [27264,] 384 318 #>  [27265,] 385 318 #>  [27266,] 386 318 #>  [27267,] 387 318 #>  [27268,] 388 318 #>  [27269,] 389 318 #>  [27270,] 390 318 #>  [27271,] 391 318 #>  [27272,] 392 318 #>  [27273,] 393 318 #>  [27274,] 394 318 #>  [27275,] 395 318 #>  [27276,] 396 318 #>  [27277,] 397 318 #>  [27278,] 398 318 #>  [27279,] 399 318 #>  [27280,] 400 318 #>  [27281,] 401 318 #>  [27282,] 402 318 #>  [27283,] 403 318 #>  [27284,] 404 318 #>  [27285,] 405 318 #>  [27286,] 406 318 #>  [27287,] 407 318 #>  [27288,] 408 318 #>  [27289,] 409 318 #>  [27290,] 410 318 #>  [27291,] 411 318 #>  [27292,] 412 318 #>  [27293,] 413 318 #>  [27294,] 414 318 #>  [27295,] 415 318 #>  [27296,] 416 318 #>  [27297,] 417 318 #>  [27298,] 418 318 #>  [27299,] 419 318 #>  [27300,] 420 318 #>  [27301,] 421 318 #>  [27302,] 422 318 #>  [27303,] 423 318 #>  [27304,] 424 318 #>  [27305,] 425 318 #>  [27306,] 426 318 #>  [27307,] 427 318 #>  [27308,] 428 318 #>  [27309,] 429 318 #>  [27310,] 430 318 #>  [27311,] 431 318 #>  [27312,] 432 318 #>  [27313,] 433 318 #>  [27314,] 434 318 #>  [27315,] 435 318 #>  [27316,] 436 318 #>  [27317,] 437 318 #>  [27318,] 438 318 #>  [27319,] 439 318 #>  [27320,] 440 318 #>  [27321,] 441 318 #>  [27322,] 442 318 #>  [27323,] 443 318 #>  [27324,] 444 318 #>  [27325,] 445 318 #>  [27326,] 446 318 #>  [27327,] 447 318 #>  [27328,] 448 318 #>  [27329,] 449 318 #>  [27330,] 450 318 #>  [27331,] 451 318 #>  [27332,] 452 318 #>  [27333,] 453 318 #>  [27334,] 454 318 #>  [27335,] 455 318 #>  [27336,] 456 318 #>  [27337,] 457 318 #>  [27338,] 458 318 #>  [27339,] 459 318 #>  [27340,] 460 318 #>  [27341,] 461 318 #>  [27342,] 462 318 #>  [27343,] 463 318 #>  [27344,] 464 318 #>  [27345,] 465 318 #>  [27346,] 466 318 #>  [27347,] 467 318 #>  [27348,] 468 318 #>  [27349,] 469 318 #>  [27350,] 470 318 #>  [27351,] 471 318 #>  [27352,] 472 318 #>  [27353,] 473 318 #>  [27354,] 474 318 #>  [27355,] 475 318 #>  [27356,] 476 318 #>  [27357,] 477 318 #>  [27358,] 478 318 #>  [27359,] 479 318 #>  [27360,] 480 318 #>  [27361,] 481 318 #>  [27362,] 482 318 #>  [27363,] 483 318 #>  [27364,] 484 318 #>  [27365,] 485 318 #>  [27366,] 486 318 #>  [27367,] 487 318 #>  [27368,] 488 318 #>  [27369,] 489 318 #>  [27370,] 490 318 #>  [27371,] 491 318 #>  [27372,] 492 318 #>  [27373,] 493 318 #>  [27374,] 494 318 #>  [27375,] 495 318 #>  [27376,] 496 318 #>  [27377,] 497 318 #>  [27378,] 498 318 #>  [27379,] 499 318 #>  [27380,] 500 318 #>  [27381,] 501 318 #>  [27382,] 502 318 #>  [27383,] 503 318 #>  [27384,] 504 318 #>  [27385,] 505 318 #>  [27386,] 506 318 #>  [27387,] 507 318 #>  [27388,] 508 318 #>  [27389,] 509 318 #>  [27390,] 510 318 #>  [27391,] 511 318 #>  [27392,] 512 318 #>  [27393,] 513 318 #>  [27394,] 514 318 #>  [27395,] 515 318 #>  [27396,] 516 318 #>  [27397,] 517 318 #>  [27398,] 518 318 #>  [27399,] 519 318 #>  [27400,] 520 318 #>  [27401,] 521 318 #>  [27402,] 522 318 #>  [27403,] 523 318 #>  [27404,] 524 318 #>  [27405,] 525 318 #>  [27406,] 526 318 #>  [27407,] 527 318 #>  [27408,] 528 318 #>  [27409,] 529 318 #>  [27410,] 530 318 #>  [27411,] 531 318 #>  [27412,] 532 318 #>  [27413,] 533 318 #>  [27414,] 534 318 #>  [27415,] 535 318 #>  [27416,] 536 318 #>  [27417,] 537 318 #>  [27418,] 538 318 #>  [27419,] 539 318 #>  [27420,] 540 318 #>  [27421,] 541 318 #>  [27422,] 542 318 #>  [27423,] 543 318 #>  [27424,] 544 318 #>  [27425,] 545 318 #>  [27426,] 546 318 #>  [27427,] 547 318 #>  [27428,] 548 318 #>  [27429,] 549 318 #>  [27430,] 550 318 #>  [27431,] 551 318 #>  [27432,] 552 318 #>  [27433,] 553 318 #>  [27434,] 554 318 #>  [27435,] 555 318 #>  [27436,] 556 318 #>  [27437,] 557 318 #>  [27438,] 558 318 #>  [27439,] 559 318 #>  [27440,] 560 318 #>  [27441,] 561 318 #>  [27442,] 562 318 #>  [27443,] 563 318 #>  [27444,] 564 318 #>  [27445,] 565 318 #>  [27446,] 566 318 #>  [27447,] 567 318 #>  [27448,] 568 318 #>  [27449,] 569 318 #>  [27450,] 570 318 #>  [27451,] 571 318 #>  [27452,] 572 318 #>  [27453,] 573 318 #>  [27454,] 574 318 #>  [27455,] 575 318 #>  [27456,] 576 318 #>  [27457,] 577 318 #>  [27458,] 578 318 #>  [27459,] 579 318 #>  [27460,] 580 318 #>  [27461,] 581 318 #>  [27462,] 582 318 #>  [27463,] 583 318 #>  [27464,] 584 318 #>  [27465,] 585 318 #>  [27466,] 586 318 #>  [27467,] 587 318 #>  [27468,] 588 318 #>  [27469,] 589 318 #>  [27470,] 590 318 #>  [27471,] 591 318 #>  [27472,] 592 318 #>  [27473,] 593 318 #>  [27474,] 594 318 #>  [27475,] 595 318 #>  [27476,] 596 318 #>  [27477,] 597 318 #>  [27478,] 598 318 #>  [27479,] 599 318 #>  [27480,] 600 318 #>  [27481,] 601 318 #>  [27482,] 602 318 #>  [27483,] 603 318 #>  [27484,] 604 318 #>  [27485,] 605 318 #>  [27486,] 606 318 #>  [27487,] 607 318 #>  [27488,] 608 318 #>  [27489,] 609 318 #>  [27490,] 610 318 #>  [27491,] 611 318 #>  [27492,] 612 318 #>  [27493,] 613 318 #>  [27494,] 614 318 #>  [27495,] 615 318 #>  [27496,] 616 318 #>  [27497,] 617 318 #>  [27498,] 618 318 #>  [27499,] 619 318 #>  [27500,] 620 318 #>  [27501,] 621 318 #>  [27502,] 622 318 #>  [27503,] 623 318 #>  [27504,] 624 318 #>  [27505,] 625 318 #>  [27506,] 626 318 #>  [27507,] 627 318 #>  [27508,] 628 318 #>  [27509,] 629 318 #>  [27510,] 630 318 #>  [27511,] 631 318 #>  [27512,] 632 318 #>  [27513,] 633 318 #>  [27514,] 634 318 #>  [27515,] 635 318 #>  [27516,] 636 318 #>  [27517,] 637 318 #>  [27518,] 638 318 #>  [27519,] 639 318 #>  [27520,] 640 318 #>  [27521,]   1 317 #>  [27522,]   2 317 #>  [27523,]   3 317 #>  [27524,]   4 317 #>  [27525,]   5 317 #>  [27526,]   6 317 #>  [27527,]   7 317 #>  [27528,]   8 317 #>  [27529,]   9 317 #>  [27530,]  10 317 #>  [27531,]  11 317 #>  [27532,]  12 317 #>  [27533,]  13 317 #>  [27534,]  14 317 #>  [27535,]  15 317 #>  [27536,]  16 317 #>  [27537,]  17 317 #>  [27538,]  18 317 #>  [27539,]  19 317 #>  [27540,]  20 317 #>  [27541,]  21 317 #>  [27542,]  22 317 #>  [27543,]  23 317 #>  [27544,]  24 317 #>  [27545,]  25 317 #>  [27546,]  26 317 #>  [27547,]  27 317 #>  [27548,]  28 317 #>  [27549,]  29 317 #>  [27550,]  30 317 #>  [27551,]  31 317 #>  [27552,]  32 317 #>  [27553,]  33 317 #>  [27554,]  34 317 #>  [27555,]  35 317 #>  [27556,]  36 317 #>  [27557,]  37 317 #>  [27558,]  38 317 #>  [27559,]  39 317 #>  [27560,]  40 317 #>  [27561,]  41 317 #>  [27562,]  42 317 #>  [27563,]  43 317 #>  [27564,]  44 317 #>  [27565,]  45 317 #>  [27566,]  46 317 #>  [27567,]  47 317 #>  [27568,]  48 317 #>  [27569,]  49 317 #>  [27570,]  50 317 #>  [27571,]  51 317 #>  [27572,]  52 317 #>  [27573,]  53 317 #>  [27574,]  54 317 #>  [27575,]  55 317 #>  [27576,]  56 317 #>  [27577,]  57 317 #>  [27578,]  58 317 #>  [27579,]  59 317 #>  [27580,]  60 317 #>  [27581,]  61 317 #>  [27582,]  62 317 #>  [27583,]  63 317 #>  [27584,]  64 317 #>  [27585,]  65 317 #>  [27586,]  66 317 #>  [27587,]  67 317 #>  [27588,]  68 317 #>  [27589,]  69 317 #>  [27590,]  70 317 #>  [27591,]  71 317 #>  [27592,]  72 317 #>  [27593,]  73 317 #>  [27594,]  74 317 #>  [27595,]  75 317 #>  [27596,]  76 317 #>  [27597,]  77 317 #>  [27598,]  78 317 #>  [27599,]  79 317 #>  [27600,]  80 317 #>  [27601,]  81 317 #>  [27602,]  82 317 #>  [27603,]  83 317 #>  [27604,]  84 317 #>  [27605,]  85 317 #>  [27606,]  86 317 #>  [27607,]  87 317 #>  [27608,]  88 317 #>  [27609,]  89 317 #>  [27610,]  90 317 #>  [27611,]  91 317 #>  [27612,]  92 317 #>  [27613,]  93 317 #>  [27614,]  94 317 #>  [27615,]  95 317 #>  [27616,]  96 317 #>  [27617,]  97 317 #>  [27618,]  98 317 #>  [27619,]  99 317 #>  [27620,] 100 317 #>  [27621,] 101 317 #>  [27622,] 102 317 #>  [27623,] 103 317 #>  [27624,] 104 317 #>  [27625,] 105 317 #>  [27626,] 106 317 #>  [27627,] 107 317 #>  [27628,] 108 317 #>  [27629,] 109 317 #>  [27630,] 110 317 #>  [27631,] 111 317 #>  [27632,] 112 317 #>  [27633,] 113 317 #>  [27634,] 114 317 #>  [27635,] 115 317 #>  [27636,] 116 317 #>  [27637,] 117 317 #>  [27638,] 118 317 #>  [27639,] 119 317 #>  [27640,] 120 317 #>  [27641,] 121 317 #>  [27642,] 122 317 #>  [27643,] 123 317 #>  [27644,] 124 317 #>  [27645,] 125 317 #>  [27646,] 126 317 #>  [27647,] 127 317 #>  [27648,] 128 317 #>  [27649,] 129 317 #>  [27650,] 130 317 #>  [27651,] 131 317 #>  [27652,] 132 317 #>  [27653,] 133 317 #>  [27654,] 134 317 #>  [27655,] 135 317 #>  [27656,] 136 317 #>  [27657,] 137 317 #>  [27658,] 138 317 #>  [27659,] 139 317 #>  [27660,] 140 317 #>  [27661,] 141 317 #>  [27662,] 142 317 #>  [27663,] 143 317 #>  [27664,] 144 317 #>  [27665,] 145 317 #>  [27666,] 146 317 #>  [27667,] 147 317 #>  [27668,] 148 317 #>  [27669,] 149 317 #>  [27670,] 150 317 #>  [27671,] 151 317 #>  [27672,] 152 317 #>  [27673,] 153 317 #>  [27674,] 154 317 #>  [27675,] 155 317 #>  [27676,] 156 317 #>  [27677,] 157 317 #>  [27678,] 158 317 #>  [27679,] 159 317 #>  [27680,] 160 317 #>  [27681,] 161 317 #>  [27682,] 162 317 #>  [27683,] 163 317 #>  [27684,] 164 317 #>  [27685,] 165 317 #>  [27686,] 166 317 #>  [27687,] 167 317 #>  [27688,] 168 317 #>  [27689,] 169 317 #>  [27690,] 170 317 #>  [27691,] 171 317 #>  [27692,] 172 317 #>  [27693,] 173 317 #>  [27694,] 174 317 #>  [27695,] 175 317 #>  [27696,] 176 317 #>  [27697,] 177 317 #>  [27698,] 178 317 #>  [27699,] 179 317 #>  [27700,] 180 317 #>  [27701,] 181 317 #>  [27702,] 182 317 #>  [27703,] 183 317 #>  [27704,] 184 317 #>  [27705,] 185 317 #>  [27706,] 186 317 #>  [27707,] 187 317 #>  [27708,] 188 317 #>  [27709,] 189 317 #>  [27710,] 190 317 #>  [27711,] 191 317 #>  [27712,] 192 317 #>  [27713,] 193 317 #>  [27714,] 194 317 #>  [27715,] 195 317 #>  [27716,] 196 317 #>  [27717,] 197 317 #>  [27718,] 198 317 #>  [27719,] 199 317 #>  [27720,] 200 317 #>  [27721,] 201 317 #>  [27722,] 202 317 #>  [27723,] 203 317 #>  [27724,] 204 317 #>  [27725,] 205 317 #>  [27726,] 206 317 #>  [27727,] 207 317 #>  [27728,] 208 317 #>  [27729,] 209 317 #>  [27730,] 210 317 #>  [27731,] 211 317 #>  [27732,] 212 317 #>  [27733,] 213 317 #>  [27734,] 214 317 #>  [27735,] 215 317 #>  [27736,] 216 317 #>  [27737,] 217 317 #>  [27738,] 218 317 #>  [27739,] 219 317 #>  [27740,] 220 317 #>  [27741,] 221 317 #>  [27742,] 222 317 #>  [27743,] 223 317 #>  [27744,] 224 317 #>  [27745,] 225 317 #>  [27746,] 226 317 #>  [27747,] 227 317 #>  [27748,] 228 317 #>  [27749,] 229 317 #>  [27750,] 230 317 #>  [27751,] 231 317 #>  [27752,] 232 317 #>  [27753,] 233 317 #>  [27754,] 234 317 #>  [27755,] 235 317 #>  [27756,] 236 317 #>  [27757,] 237 317 #>  [27758,] 238 317 #>  [27759,] 239 317 #>  [27760,] 240 317 #>  [27761,] 241 317 #>  [27762,] 242 317 #>  [27763,] 243 317 #>  [27764,] 244 317 #>  [27765,] 245 317 #>  [27766,] 246 317 #>  [27767,] 247 317 #>  [27768,] 248 317 #>  [27769,] 249 317 #>  [27770,] 250 317 #>  [27771,] 251 317 #>  [27772,] 252 317 #>  [27773,] 253 317 #>  [27774,] 254 317 #>  [27775,] 255 317 #>  [27776,] 256 317 #>  [27777,] 257 317 #>  [27778,] 258 317 #>  [27779,] 259 317 #>  [27780,] 260 317 #>  [27781,] 261 317 #>  [27782,] 262 317 #>  [27783,] 263 317 #>  [27784,] 264 317 #>  [27785,] 265 317 #>  [27786,] 266 317 #>  [27787,] 267 317 #>  [27788,] 268 317 #>  [27789,] 269 317 #>  [27790,] 270 317 #>  [27791,] 271 317 #>  [27792,] 272 317 #>  [27793,] 273 317 #>  [27794,] 274 317 #>  [27795,] 275 317 #>  [27796,] 276 317 #>  [27797,] 277 317 #>  [27798,] 278 317 #>  [27799,] 279 317 #>  [27800,] 280 317 #>  [27801,] 281 317 #>  [27802,] 282 317 #>  [27803,] 283 317 #>  [27804,] 284 317 #>  [27805,] 285 317 #>  [27806,] 286 317 #>  [27807,] 287 317 #>  [27808,] 288 317 #>  [27809,] 289 317 #>  [27810,] 290 317 #>  [27811,] 291 317 #>  [27812,] 292 317 #>  [27813,] 293 317 #>  [27814,] 294 317 #>  [27815,] 295 317 #>  [27816,] 296 317 #>  [27817,] 297 317 #>  [27818,] 298 317 #>  [27819,] 299 317 #>  [27820,] 300 317 #>  [27821,] 301 317 #>  [27822,] 302 317 #>  [27823,] 303 317 #>  [27824,] 304 317 #>  [27825,] 305 317 #>  [27826,] 306 317 #>  [27827,] 307 317 #>  [27828,] 308 317 #>  [27829,] 309 317 #>  [27830,] 310 317 #>  [27831,] 311 317 #>  [27832,] 312 317 #>  [27833,] 313 317 #>  [27834,] 314 317 #>  [27835,] 315 317 #>  [27836,] 316 317 #>  [27837,] 317 317 #>  [27838,] 318 317 #>  [27839,] 319 317 #>  [27840,] 320 317 #>  [27841,] 321 317 #>  [27842,] 322 317 #>  [27843,] 323 317 #>  [27844,] 324 317 #>  [27845,] 325 317 #>  [27846,] 326 317 #>  [27847,] 327 317 #>  [27848,] 328 317 #>  [27849,] 329 317 #>  [27850,] 330 317 #>  [27851,] 331 317 #>  [27852,] 332 317 #>  [27853,] 333 317 #>  [27854,] 334 317 #>  [27855,] 335 317 #>  [27856,] 336 317 #>  [27857,] 337 317 #>  [27858,] 338 317 #>  [27859,] 339 317 #>  [27860,] 340 317 #>  [27861,] 341 317 #>  [27862,] 342 317 #>  [27863,] 343 317 #>  [27864,] 344 317 #>  [27865,] 345 317 #>  [27866,] 346 317 #>  [27867,] 347 317 #>  [27868,] 348 317 #>  [27869,] 349 317 #>  [27870,] 350 317 #>  [27871,] 351 317 #>  [27872,] 352 317 #>  [27873,] 353 317 #>  [27874,] 354 317 #>  [27875,] 355 317 #>  [27876,] 356 317 #>  [27877,] 357 317 #>  [27878,] 358 317 #>  [27879,] 359 317 #>  [27880,] 360 317 #>  [27881,] 361 317 #>  [27882,] 362 317 #>  [27883,] 363 317 #>  [27884,] 364 317 #>  [27885,] 365 317 #>  [27886,] 366 317 #>  [27887,] 367 317 #>  [27888,] 368 317 #>  [27889,] 369 317 #>  [27890,] 370 317 #>  [27891,] 371 317 #>  [27892,] 372 317 #>  [27893,] 373 317 #>  [27894,] 374 317 #>  [27895,] 375 317 #>  [27896,] 376 317 #>  [27897,] 377 317 #>  [27898,] 378 317 #>  [27899,] 379 317 #>  [27900,] 380 317 #>  [27901,] 381 317 #>  [27902,] 382 317 #>  [27903,] 383 317 #>  [27904,] 384 317 #>  [27905,] 385 317 #>  [27906,] 386 317 #>  [27907,] 387 317 #>  [27908,] 388 317 #>  [27909,] 389 317 #>  [27910,] 390 317 #>  [27911,] 391 317 #>  [27912,] 392 317 #>  [27913,] 393 317 #>  [27914,] 394 317 #>  [27915,] 395 317 #>  [27916,] 396 317 #>  [27917,] 397 317 #>  [27918,] 398 317 #>  [27919,] 399 317 #>  [27920,] 400 317 #>  [27921,] 401 317 #>  [27922,] 402 317 #>  [27923,] 403 317 #>  [27924,] 404 317 #>  [27925,] 405 317 #>  [27926,] 406 317 #>  [27927,] 407 317 #>  [27928,] 408 317 #>  [27929,] 409 317 #>  [27930,] 410 317 #>  [27931,] 411 317 #>  [27932,] 412 317 #>  [27933,] 413 317 #>  [27934,] 414 317 #>  [27935,] 415 317 #>  [27936,] 416 317 #>  [27937,] 417 317 #>  [27938,] 418 317 #>  [27939,] 419 317 #>  [27940,] 420 317 #>  [27941,] 421 317 #>  [27942,] 422 317 #>  [27943,] 423 317 #>  [27944,] 424 317 #>  [27945,] 425 317 #>  [27946,] 426 317 #>  [27947,] 427 317 #>  [27948,] 428 317 #>  [27949,] 429 317 #>  [27950,] 430 317 #>  [27951,] 431 317 #>  [27952,] 432 317 #>  [27953,] 433 317 #>  [27954,] 434 317 #>  [27955,] 435 317 #>  [27956,] 436 317 #>  [27957,] 437 317 #>  [27958,] 438 317 #>  [27959,] 439 317 #>  [27960,] 440 317 #>  [27961,] 441 317 #>  [27962,] 442 317 #>  [27963,] 443 317 #>  [27964,] 444 317 #>  [27965,] 445 317 #>  [27966,] 446 317 #>  [27967,] 447 317 #>  [27968,] 448 317 #>  [27969,] 449 317 #>  [27970,] 450 317 #>  [27971,] 451 317 #>  [27972,] 452 317 #>  [27973,] 453 317 #>  [27974,] 454 317 #>  [27975,] 455 317 #>  [27976,] 456 317 #>  [27977,] 457 317 #>  [27978,] 458 317 #>  [27979,] 459 317 #>  [27980,] 460 317 #>  [27981,] 461 317 #>  [27982,] 462 317 #>  [27983,] 463 317 #>  [27984,] 464 317 #>  [27985,] 465 317 #>  [27986,] 466 317 #>  [27987,] 467 317 #>  [27988,] 468 317 #>  [27989,] 469 317 #>  [27990,] 470 317 #>  [27991,] 471 317 #>  [27992,] 472 317 #>  [27993,] 473 317 #>  [27994,] 474 317 #>  [27995,] 475 317 #>  [27996,] 476 317 #>  [27997,] 477 317 #>  [27998,] 478 317 #>  [27999,] 479 317 #>  [28000,] 480 317 #>  [28001,] 481 317 #>  [28002,] 482 317 #>  [28003,] 483 317 #>  [28004,] 484 317 #>  [28005,] 485 317 #>  [28006,] 486 317 #>  [28007,] 487 317 #>  [28008,] 488 317 #>  [28009,] 489 317 #>  [28010,] 490 317 #>  [28011,] 491 317 #>  [28012,] 492 317 #>  [28013,] 493 317 #>  [28014,] 494 317 #>  [28015,] 495 317 #>  [28016,] 496 317 #>  [28017,] 497 317 #>  [28018,] 498 317 #>  [28019,] 499 317 #>  [28020,] 500 317 #>  [28021,] 501 317 #>  [28022,] 502 317 #>  [28023,] 503 317 #>  [28024,] 504 317 #>  [28025,] 505 317 #>  [28026,] 506 317 #>  [28027,] 507 317 #>  [28028,] 508 317 #>  [28029,] 509 317 #>  [28030,] 510 317 #>  [28031,] 511 317 #>  [28032,] 512 317 #>  [28033,] 513 317 #>  [28034,] 514 317 #>  [28035,] 515 317 #>  [28036,] 516 317 #>  [28037,] 517 317 #>  [28038,] 518 317 #>  [28039,] 519 317 #>  [28040,] 520 317 #>  [28041,] 521 317 #>  [28042,] 522 317 #>  [28043,] 523 317 #>  [28044,] 524 317 #>  [28045,] 525 317 #>  [28046,] 526 317 #>  [28047,] 527 317 #>  [28048,] 528 317 #>  [28049,] 529 317 #>  [28050,] 530 317 #>  [28051,] 531 317 #>  [28052,] 532 317 #>  [28053,] 533 317 #>  [28054,] 534 317 #>  [28055,] 535 317 #>  [28056,] 536 317 #>  [28057,] 537 317 #>  [28058,] 538 317 #>  [28059,] 539 317 #>  [28060,] 540 317 #>  [28061,] 541 317 #>  [28062,] 542 317 #>  [28063,] 543 317 #>  [28064,] 544 317 #>  [28065,] 545 317 #>  [28066,] 546 317 #>  [28067,] 547 317 #>  [28068,] 548 317 #>  [28069,] 549 317 #>  [28070,] 550 317 #>  [28071,] 551 317 #>  [28072,] 552 317 #>  [28073,] 553 317 #>  [28074,] 554 317 #>  [28075,] 555 317 #>  [28076,] 556 317 #>  [28077,] 557 317 #>  [28078,] 558 317 #>  [28079,] 559 317 #>  [28080,] 560 317 #>  [28081,] 561 317 #>  [28082,] 562 317 #>  [28083,] 563 317 #>  [28084,] 564 317 #>  [28085,] 565 317 #>  [28086,] 566 317 #>  [28087,] 567 317 #>  [28088,] 568 317 #>  [28089,] 569 317 #>  [28090,] 570 317 #>  [28091,] 571 317 #>  [28092,] 572 317 #>  [28093,] 573 317 #>  [28094,] 574 317 #>  [28095,] 575 317 #>  [28096,] 576 317 #>  [28097,] 577 317 #>  [28098,] 578 317 #>  [28099,] 579 317 #>  [28100,] 580 317 #>  [28101,] 581 317 #>  [28102,] 582 317 #>  [28103,] 583 317 #>  [28104,] 584 317 #>  [28105,] 585 317 #>  [28106,] 586 317 #>  [28107,] 587 317 #>  [28108,] 588 317 #>  [28109,] 589 317 #>  [28110,] 590 317 #>  [28111,] 591 317 #>  [28112,] 592 317 #>  [28113,] 593 317 #>  [28114,] 594 317 #>  [28115,] 595 317 #>  [28116,] 596 317 #>  [28117,] 597 317 #>  [28118,] 598 317 #>  [28119,] 599 317 #>  [28120,] 600 317 #>  [28121,] 601 317 #>  [28122,] 602 317 #>  [28123,] 603 317 #>  [28124,] 604 317 #>  [28125,] 605 317 #>  [28126,] 606 317 #>  [28127,] 607 317 #>  [28128,] 608 317 #>  [28129,] 609 317 #>  [28130,] 610 317 #>  [28131,] 611 317 #>  [28132,] 612 317 #>  [28133,] 613 317 #>  [28134,] 614 317 #>  [28135,] 615 317 #>  [28136,] 616 317 #>  [28137,] 617 317 #>  [28138,] 618 317 #>  [28139,] 619 317 #>  [28140,] 620 317 #>  [28141,] 621 317 #>  [28142,] 622 317 #>  [28143,] 623 317 #>  [28144,] 624 317 #>  [28145,] 625 317 #>  [28146,] 626 317 #>  [28147,] 627 317 #>  [28148,] 628 317 #>  [28149,] 629 317 #>  [28150,] 630 317 #>  [28151,] 631 317 #>  [28152,] 632 317 #>  [28153,] 633 317 #>  [28154,] 634 317 #>  [28155,] 635 317 #>  [28156,] 636 317 #>  [28157,] 637 317 #>  [28158,] 638 317 #>  [28159,] 639 317 #>  [28160,] 640 317 #>  [28161,]   1 316 #>  [28162,]   2 316 #>  [28163,]   3 316 #>  [28164,]   4 316 #>  [28165,]   5 316 #>  [28166,]   6 316 #>  [28167,]   7 316 #>  [28168,]   8 316 #>  [28169,]   9 316 #>  [28170,]  10 316 #>  [28171,]  11 316 #>  [28172,]  12 316 #>  [28173,]  13 316 #>  [28174,]  14 316 #>  [28175,]  15 316 #>  [28176,]  16 316 #>  [28177,]  17 316 #>  [28178,]  18 316 #>  [28179,]  19 316 #>  [28180,]  20 316 #>  [28181,]  21 316 #>  [28182,]  22 316 #>  [28183,]  23 316 #>  [28184,]  24 316 #>  [28185,]  25 316 #>  [28186,]  26 316 #>  [28187,]  27 316 #>  [28188,]  28 316 #>  [28189,]  29 316 #>  [28190,]  30 316 #>  [28191,]  31 316 #>  [28192,]  32 316 #>  [28193,]  33 316 #>  [28194,]  34 316 #>  [28195,]  35 316 #>  [28196,]  36 316 #>  [28197,]  37 316 #>  [28198,]  38 316 #>  [28199,]  39 316 #>  [28200,]  40 316 #>  [28201,]  41 316 #>  [28202,]  42 316 #>  [28203,]  43 316 #>  [28204,]  44 316 #>  [28205,]  45 316 #>  [28206,]  46 316 #>  [28207,]  47 316 #>  [28208,]  48 316 #>  [28209,]  49 316 #>  [28210,]  50 316 #>  [28211,]  51 316 #>  [28212,]  52 316 #>  [28213,]  53 316 #>  [28214,]  54 316 #>  [28215,]  55 316 #>  [28216,]  56 316 #>  [28217,]  57 316 #>  [28218,]  58 316 #>  [28219,]  59 316 #>  [28220,]  60 316 #>  [28221,]  61 316 #>  [28222,]  62 316 #>  [28223,]  63 316 #>  [28224,]  64 316 #>  [28225,]  65 316 #>  [28226,]  66 316 #>  [28227,]  67 316 #>  [28228,]  68 316 #>  [28229,]  69 316 #>  [28230,]  70 316 #>  [28231,]  71 316 #>  [28232,]  72 316 #>  [28233,]  73 316 #>  [28234,]  74 316 #>  [28235,]  75 316 #>  [28236,]  76 316 #>  [28237,]  77 316 #>  [28238,]  78 316 #>  [28239,]  79 316 #>  [28240,]  80 316 #>  [28241,]  81 316 #>  [28242,]  82 316 #>  [28243,]  83 316 #>  [28244,]  84 316 #>  [28245,]  85 316 #>  [28246,]  86 316 #>  [28247,]  87 316 #>  [28248,]  88 316 #>  [28249,]  89 316 #>  [28250,]  90 316 #>  [28251,]  91 316 #>  [28252,]  92 316 #>  [28253,]  93 316 #>  [28254,]  94 316 #>  [28255,]  95 316 #>  [28256,]  96 316 #>  [28257,]  97 316 #>  [28258,]  98 316 #>  [28259,]  99 316 #>  [28260,] 100 316 #>  [28261,] 101 316 #>  [28262,] 102 316 #>  [28263,] 103 316 #>  [28264,] 104 316 #>  [28265,] 105 316 #>  [28266,] 106 316 #>  [28267,] 107 316 #>  [28268,] 108 316 #>  [28269,] 109 316 #>  [28270,] 110 316 #>  [28271,] 111 316 #>  [28272,] 112 316 #>  [28273,] 113 316 #>  [28274,] 114 316 #>  [28275,] 115 316 #>  [28276,] 116 316 #>  [28277,] 117 316 #>  [28278,] 118 316 #>  [28279,] 119 316 #>  [28280,] 120 316 #>  [28281,] 121 316 #>  [28282,] 122 316 #>  [28283,] 123 316 #>  [28284,] 124 316 #>  [28285,] 125 316 #>  [28286,] 126 316 #>  [28287,] 127 316 #>  [28288,] 128 316 #>  [28289,] 129 316 #>  [28290,] 130 316 #>  [28291,] 131 316 #>  [28292,] 132 316 #>  [28293,] 133 316 #>  [28294,] 134 316 #>  [28295,] 135 316 #>  [28296,] 136 316 #>  [28297,] 137 316 #>  [28298,] 138 316 #>  [28299,] 139 316 #>  [28300,] 140 316 #>  [28301,] 141 316 #>  [28302,] 142 316 #>  [28303,] 143 316 #>  [28304,] 144 316 #>  [28305,] 145 316 #>  [28306,] 146 316 #>  [28307,] 147 316 #>  [28308,] 148 316 #>  [28309,] 149 316 #>  [28310,] 150 316 #>  [28311,] 151 316 #>  [28312,] 152 316 #>  [28313,] 153 316 #>  [28314,] 154 316 #>  [28315,] 155 316 #>  [28316,] 156 316 #>  [28317,] 157 316 #>  [28318,] 158 316 #>  [28319,] 159 316 #>  [28320,] 160 316 #>  [28321,] 161 316 #>  [28322,] 162 316 #>  [28323,] 163 316 #>  [28324,] 164 316 #>  [28325,] 165 316 #>  [28326,] 166 316 #>  [28327,] 167 316 #>  [28328,] 168 316 #>  [28329,] 169 316 #>  [28330,] 170 316 #>  [28331,] 171 316 #>  [28332,] 172 316 #>  [28333,] 173 316 #>  [28334,] 174 316 #>  [28335,] 175 316 #>  [28336,] 176 316 #>  [28337,] 177 316 #>  [28338,] 178 316 #>  [28339,] 179 316 #>  [28340,] 180 316 #>  [28341,] 181 316 #>  [28342,] 182 316 #>  [28343,] 183 316 #>  [28344,] 184 316 #>  [28345,] 185 316 #>  [28346,] 186 316 #>  [28347,] 187 316 #>  [28348,] 188 316 #>  [28349,] 189 316 #>  [28350,] 190 316 #>  [28351,] 191 316 #>  [28352,] 192 316 #>  [28353,] 193 316 #>  [28354,] 194 316 #>  [28355,] 195 316 #>  [28356,] 196 316 #>  [28357,] 197 316 #>  [28358,] 198 316 #>  [28359,] 199 316 #>  [28360,] 200 316 #>  [28361,] 201 316 #>  [28362,] 202 316 #>  [28363,] 203 316 #>  [28364,] 204 316 #>  [28365,] 205 316 #>  [28366,] 206 316 #>  [28367,] 207 316 #>  [28368,] 208 316 #>  [28369,] 209 316 #>  [28370,] 210 316 #>  [28371,] 211 316 #>  [28372,] 212 316 #>  [28373,] 213 316 #>  [28374,] 214 316 #>  [28375,] 215 316 #>  [28376,] 216 316 #>  [28377,] 217 316 #>  [28378,] 218 316 #>  [28379,] 219 316 #>  [28380,] 220 316 #>  [28381,] 221 316 #>  [28382,] 222 316 #>  [28383,] 223 316 #>  [28384,] 224 316 #>  [28385,] 225 316 #>  [28386,] 226 316 #>  [28387,] 227 316 #>  [28388,] 228 316 #>  [28389,] 229 316 #>  [28390,] 230 316 #>  [28391,] 231 316 #>  [28392,] 232 316 #>  [28393,] 233 316 #>  [28394,] 234 316 #>  [28395,] 235 316 #>  [28396,] 236 316 #>  [28397,] 237 316 #>  [28398,] 238 316 #>  [28399,] 239 316 #>  [28400,] 240 316 #>  [28401,] 241 316 #>  [28402,] 242 316 #>  [28403,] 243 316 #>  [28404,] 244 316 #>  [28405,] 245 316 #>  [28406,] 246 316 #>  [28407,] 247 316 #>  [28408,] 248 316 #>  [28409,] 249 316 #>  [28410,] 250 316 #>  [28411,] 251 316 #>  [28412,] 252 316 #>  [28413,] 253 316 #>  [28414,] 254 316 #>  [28415,] 255 316 #>  [28416,] 256 316 #>  [28417,] 257 316 #>  [28418,] 258 316 #>  [28419,] 259 316 #>  [28420,] 260 316 #>  [28421,] 261 316 #>  [28422,] 262 316 #>  [28423,] 263 316 #>  [28424,] 264 316 #>  [28425,] 265 316 #>  [28426,] 266 316 #>  [28427,] 267 316 #>  [28428,] 268 316 #>  [28429,] 269 316 #>  [28430,] 270 316 #>  [28431,] 271 316 #>  [28432,] 272 316 #>  [28433,] 273 316 #>  [28434,] 274 316 #>  [28435,] 275 316 #>  [28436,] 276 316 #>  [28437,] 277 316 #>  [28438,] 278 316 #>  [28439,] 279 316 #>  [28440,] 280 316 #>  [28441,] 281 316 #>  [28442,] 282 316 #>  [28443,] 283 316 #>  [28444,] 284 316 #>  [28445,] 285 316 #>  [28446,] 286 316 #>  [28447,] 287 316 #>  [28448,] 288 316 #>  [28449,] 289 316 #>  [28450,] 290 316 #>  [28451,] 291 316 #>  [28452,] 292 316 #>  [28453,] 293 316 #>  [28454,] 294 316 #>  [28455,] 295 316 #>  [28456,] 296 316 #>  [28457,] 297 316 #>  [28458,] 298 316 #>  [28459,] 299 316 #>  [28460,] 300 316 #>  [28461,] 301 316 #>  [28462,] 302 316 #>  [28463,] 303 316 #>  [28464,] 304 316 #>  [28465,] 305 316 #>  [28466,] 306 316 #>  [28467,] 307 316 #>  [28468,] 308 316 #>  [28469,] 309 316 #>  [28470,] 310 316 #>  [28471,] 311 316 #>  [28472,] 312 316 #>  [28473,] 313 316 #>  [28474,] 314 316 #>  [28475,] 315 316 #>  [28476,] 316 316 #>  [28477,] 317 316 #>  [28478,] 318 316 #>  [28479,] 319 316 #>  [28480,] 320 316 #>  [28481,] 321 316 #>  [28482,] 322 316 #>  [28483,] 323 316 #>  [28484,] 324 316 #>  [28485,] 325 316 #>  [28486,] 326 316 #>  [28487,] 327 316 #>  [28488,] 328 316 #>  [28489,] 329 316 #>  [28490,] 330 316 #>  [28491,] 331 316 #>  [28492,] 332 316 #>  [28493,] 333 316 #>  [28494,] 334 316 #>  [28495,] 335 316 #>  [28496,] 336 316 #>  [28497,] 337 316 #>  [28498,] 338 316 #>  [28499,] 339 316 #>  [28500,] 340 316 #>  [28501,] 341 316 #>  [28502,] 342 316 #>  [28503,] 343 316 #>  [28504,] 344 316 #>  [28505,] 345 316 #>  [28506,] 346 316 #>  [28507,] 347 316 #>  [28508,] 348 316 #>  [28509,] 349 316 #>  [28510,] 350 316 #>  [28511,] 351 316 #>  [28512,] 352 316 #>  [28513,] 353 316 #>  [28514,] 354 316 #>  [28515,] 355 316 #>  [28516,] 356 316 #>  [28517,] 357 316 #>  [28518,] 358 316 #>  [28519,] 359 316 #>  [28520,] 360 316 #>  [28521,] 361 316 #>  [28522,] 362 316 #>  [28523,] 363 316 #>  [28524,] 364 316 #>  [28525,] 365 316 #>  [28526,] 366 316 #>  [28527,] 367 316 #>  [28528,] 368 316 #>  [28529,] 369 316 #>  [28530,] 370 316 #>  [28531,] 371 316 #>  [28532,] 372 316 #>  [28533,] 373 316 #>  [28534,] 374 316 #>  [28535,] 375 316 #>  [28536,] 376 316 #>  [28537,] 377 316 #>  [28538,] 378 316 #>  [28539,] 379 316 #>  [28540,] 380 316 #>  [28541,] 381 316 #>  [28542,] 382 316 #>  [28543,] 383 316 #>  [28544,] 384 316 #>  [28545,] 385 316 #>  [28546,] 386 316 #>  [28547,] 387 316 #>  [28548,] 388 316 #>  [28549,] 389 316 #>  [28550,] 390 316 #>  [28551,] 391 316 #>  [28552,] 392 316 #>  [28553,] 393 316 #>  [28554,] 394 316 #>  [28555,] 395 316 #>  [28556,] 396 316 #>  [28557,] 397 316 #>  [28558,] 398 316 #>  [28559,] 399 316 #>  [28560,] 400 316 #>  [28561,] 401 316 #>  [28562,] 402 316 #>  [28563,] 403 316 #>  [28564,] 404 316 #>  [28565,] 405 316 #>  [28566,] 406 316 #>  [28567,] 407 316 #>  [28568,] 408 316 #>  [28569,] 409 316 #>  [28570,] 410 316 #>  [28571,] 411 316 #>  [28572,] 412 316 #>  [28573,] 413 316 #>  [28574,] 414 316 #>  [28575,] 415 316 #>  [28576,] 416 316 #>  [28577,] 417 316 #>  [28578,] 418 316 #>  [28579,] 419 316 #>  [28580,] 420 316 #>  [28581,] 421 316 #>  [28582,] 422 316 #>  [28583,] 423 316 #>  [28584,] 424 316 #>  [28585,] 425 316 #>  [28586,] 426 316 #>  [28587,] 427 316 #>  [28588,] 428 316 #>  [28589,] 429 316 #>  [28590,] 430 316 #>  [28591,] 431 316 #>  [28592,] 432 316 #>  [28593,] 433 316 #>  [28594,] 434 316 #>  [28595,] 435 316 #>  [28596,] 436 316 #>  [28597,] 437 316 #>  [28598,] 438 316 #>  [28599,] 439 316 #>  [28600,] 440 316 #>  [28601,] 441 316 #>  [28602,] 442 316 #>  [28603,] 443 316 #>  [28604,] 444 316 #>  [28605,] 445 316 #>  [28606,] 446 316 #>  [28607,] 447 316 #>  [28608,] 448 316 #>  [28609,] 449 316 #>  [28610,] 450 316 #>  [28611,] 451 316 #>  [28612,] 452 316 #>  [28613,] 453 316 #>  [28614,] 454 316 #>  [28615,] 455 316 #>  [28616,] 456 316 #>  [28617,] 457 316 #>  [28618,] 458 316 #>  [28619,] 459 316 #>  [28620,] 460 316 #>  [28621,] 461 316 #>  [28622,] 462 316 #>  [28623,] 463 316 #>  [28624,] 464 316 #>  [28625,] 465 316 #>  [28626,] 466 316 #>  [28627,] 467 316 #>  [28628,] 468 316 #>  [28629,] 469 316 #>  [28630,] 470 316 #>  [28631,] 471 316 #>  [28632,] 472 316 #>  [28633,] 473 316 #>  [28634,] 474 316 #>  [28635,] 475 316 #>  [28636,] 476 316 #>  [28637,] 477 316 #>  [28638,] 478 316 #>  [28639,] 479 316 #>  [28640,] 480 316 #>  [28641,] 481 316 #>  [28642,] 482 316 #>  [28643,] 483 316 #>  [28644,] 484 316 #>  [28645,] 485 316 #>  [28646,] 486 316 #>  [28647,] 487 316 #>  [28648,] 488 316 #>  [28649,] 489 316 #>  [28650,] 490 316 #>  [28651,] 491 316 #>  [28652,] 492 316 #>  [28653,] 493 316 #>  [28654,] 494 316 #>  [28655,] 495 316 #>  [28656,] 496 316 #>  [28657,] 497 316 #>  [28658,] 498 316 #>  [28659,] 499 316 #>  [28660,] 500 316 #>  [28661,] 501 316 #>  [28662,] 502 316 #>  [28663,] 503 316 #>  [28664,] 504 316 #>  [28665,] 505 316 #>  [28666,] 506 316 #>  [28667,] 507 316 #>  [28668,] 508 316 #>  [28669,] 509 316 #>  [28670,] 510 316 #>  [28671,] 511 316 #>  [28672,] 512 316 #>  [28673,] 513 316 #>  [28674,] 514 316 #>  [28675,] 515 316 #>  [28676,] 516 316 #>  [28677,] 517 316 #>  [28678,] 518 316 #>  [28679,] 519 316 #>  [28680,] 520 316 #>  [28681,] 521 316 #>  [28682,] 522 316 #>  [28683,] 523 316 #>  [28684,] 524 316 #>  [28685,] 525 316 #>  [28686,] 526 316 #>  [28687,] 527 316 #>  [28688,] 528 316 #>  [28689,] 529 316 #>  [28690,] 530 316 #>  [28691,] 531 316 #>  [28692,] 532 316 #>  [28693,] 533 316 #>  [28694,] 534 316 #>  [28695,] 535 316 #>  [28696,] 536 316 #>  [28697,] 537 316 #>  [28698,] 538 316 #>  [28699,] 539 316 #>  [28700,] 540 316 #>  [28701,] 541 316 #>  [28702,] 542 316 #>  [28703,] 543 316 #>  [28704,] 544 316 #>  [28705,] 545 316 #>  [28706,] 546 316 #>  [28707,] 547 316 #>  [28708,] 548 316 #>  [28709,] 549 316 #>  [28710,] 550 316 #>  [28711,] 551 316 #>  [28712,] 552 316 #>  [28713,] 553 316 #>  [28714,] 554 316 #>  [28715,] 555 316 #>  [28716,] 556 316 #>  [28717,] 557 316 #>  [28718,] 558 316 #>  [28719,] 559 316 #>  [28720,] 560 316 #>  [28721,] 561 316 #>  [28722,] 562 316 #>  [28723,] 563 316 #>  [28724,] 564 316 #>  [28725,] 565 316 #>  [28726,] 566 316 #>  [28727,] 567 316 #>  [28728,] 568 316 #>  [28729,] 569 316 #>  [28730,] 570 316 #>  [28731,] 571 316 #>  [28732,] 572 316 #>  [28733,] 573 316 #>  [28734,] 574 316 #>  [28735,] 575 316 #>  [28736,] 576 316 #>  [28737,] 577 316 #>  [28738,] 578 316 #>  [28739,] 579 316 #>  [28740,] 580 316 #>  [28741,] 581 316 #>  [28742,] 582 316 #>  [28743,] 583 316 #>  [28744,] 584 316 #>  [28745,] 585 316 #>  [28746,] 586 316 #>  [28747,] 587 316 #>  [28748,] 588 316 #>  [28749,] 589 316 #>  [28750,] 590 316 #>  [28751,] 591 316 #>  [28752,] 592 316 #>  [28753,] 593 316 #>  [28754,] 594 316 #>  [28755,] 595 316 #>  [28756,] 596 316 #>  [28757,] 597 316 #>  [28758,] 598 316 #>  [28759,] 599 316 #>  [28760,] 600 316 #>  [28761,] 601 316 #>  [28762,] 602 316 #>  [28763,] 603 316 #>  [28764,] 604 316 #>  [28765,] 605 316 #>  [28766,] 606 316 #>  [28767,] 607 316 #>  [28768,] 608 316 #>  [28769,] 609 316 #>  [28770,] 610 316 #>  [28771,] 611 316 #>  [28772,] 612 316 #>  [28773,] 613 316 #>  [28774,] 614 316 #>  [28775,] 615 316 #>  [28776,] 616 316 #>  [28777,] 617 316 #>  [28778,] 618 316 #>  [28779,] 619 316 #>  [28780,] 620 316 #>  [28781,] 621 316 #>  [28782,] 622 316 #>  [28783,] 623 316 #>  [28784,] 624 316 #>  [28785,] 625 316 #>  [28786,] 626 316 #>  [28787,] 627 316 #>  [28788,] 628 316 #>  [28789,] 629 316 #>  [28790,] 630 316 #>  [28791,] 631 316 #>  [28792,] 632 316 #>  [28793,] 633 316 #>  [28794,] 634 316 #>  [28795,] 635 316 #>  [28796,] 636 316 #>  [28797,] 637 316 #>  [28798,] 638 316 #>  [28799,] 639 316 #>  [28800,] 640 316 #>  [28801,]   1 315 #>  [28802,]   2 315 #>  [28803,]   3 315 #>  [28804,]   4 315 #>  [28805,]   5 315 #>  [28806,]   6 315 #>  [28807,]   7 315 #>  [28808,]   8 315 #>  [28809,]   9 315 #>  [28810,]  10 315 #>  [28811,]  11 315 #>  [28812,]  12 315 #>  [28813,]  13 315 #>  [28814,]  14 315 #>  [28815,]  15 315 #>  [28816,]  16 315 #>  [28817,]  17 315 #>  [28818,]  18 315 #>  [28819,]  19 315 #>  [28820,]  20 315 #>  [28821,]  21 315 #>  [28822,]  22 315 #>  [28823,]  23 315 #>  [28824,]  24 315 #>  [28825,]  25 315 #>  [28826,]  26 315 #>  [28827,]  27 315 #>  [28828,]  28 315 #>  [28829,]  29 315 #>  [28830,]  30 315 #>  [28831,]  31 315 #>  [28832,]  32 315 #>  [28833,]  33 315 #>  [28834,]  34 315 #>  [28835,]  35 315 #>  [28836,]  36 315 #>  [28837,]  37 315 #>  [28838,]  38 315 #>  [28839,]  39 315 #>  [28840,]  40 315 #>  [28841,]  41 315 #>  [28842,]  42 315 #>  [28843,]  43 315 #>  [28844,]  44 315 #>  [28845,]  45 315 #>  [28846,]  46 315 #>  [28847,]  47 315 #>  [28848,]  48 315 #>  [28849,]  49 315 #>  [28850,]  50 315 #>  [28851,]  51 315 #>  [28852,]  52 315 #>  [28853,]  53 315 #>  [28854,]  54 315 #>  [28855,]  55 315 #>  [28856,]  56 315 #>  [28857,]  57 315 #>  [28858,]  58 315 #>  [28859,]  59 315 #>  [28860,]  60 315 #>  [28861,]  61 315 #>  [28862,]  62 315 #>  [28863,]  63 315 #>  [28864,]  64 315 #>  [28865,]  65 315 #>  [28866,]  66 315 #>  [28867,]  67 315 #>  [28868,]  68 315 #>  [28869,]  69 315 #>  [28870,]  70 315 #>  [28871,]  71 315 #>  [28872,]  72 315 #>  [28873,]  73 315 #>  [28874,]  74 315 #>  [28875,]  75 315 #>  [28876,]  76 315 #>  [28877,]  77 315 #>  [28878,]  78 315 #>  [28879,]  79 315 #>  [28880,]  80 315 #>  [28881,]  81 315 #>  [28882,]  82 315 #>  [28883,]  83 315 #>  [28884,]  84 315 #>  [28885,]  85 315 #>  [28886,]  86 315 #>  [28887,]  87 315 #>  [28888,]  88 315 #>  [28889,]  89 315 #>  [28890,]  90 315 #>  [28891,]  91 315 #>  [28892,]  92 315 #>  [28893,]  93 315 #>  [28894,]  94 315 #>  [28895,]  95 315 #>  [28896,]  96 315 #>  [28897,]  97 315 #>  [28898,]  98 315 #>  [28899,]  99 315 #>  [28900,] 100 315 #>  [28901,] 101 315 #>  [28902,] 102 315 #>  [28903,] 103 315 #>  [28904,] 104 315 #>  [28905,] 105 315 #>  [28906,] 106 315 #>  [28907,] 107 315 #>  [28908,] 108 315 #>  [28909,] 109 315 #>  [28910,] 110 315 #>  [28911,] 111 315 #>  [28912,] 112 315 #>  [28913,] 113 315 #>  [28914,] 114 315 #>  [28915,] 115 315 #>  [28916,] 116 315 #>  [28917,] 117 315 #>  [28918,] 118 315 #>  [28919,] 119 315 #>  [28920,] 120 315 #>  [28921,] 121 315 #>  [28922,] 122 315 #>  [28923,] 123 315 #>  [28924,] 124 315 #>  [28925,] 125 315 #>  [28926,] 126 315 #>  [28927,] 127 315 #>  [28928,] 128 315 #>  [28929,] 129 315 #>  [28930,] 130 315 #>  [28931,] 131 315 #>  [28932,] 132 315 #>  [28933,] 133 315 #>  [28934,] 134 315 #>  [28935,] 135 315 #>  [28936,] 136 315 #>  [28937,] 137 315 #>  [28938,] 138 315 #>  [28939,] 139 315 #>  [28940,] 140 315 #>  [28941,] 141 315 #>  [28942,] 142 315 #>  [28943,] 143 315 #>  [28944,] 144 315 #>  [28945,] 145 315 #>  [28946,] 146 315 #>  [28947,] 147 315 #>  [28948,] 148 315 #>  [28949,] 149 315 #>  [28950,] 150 315 #>  [28951,] 151 315 #>  [28952,] 152 315 #>  [28953,] 153 315 #>  [28954,] 154 315 #>  [28955,] 155 315 #>  [28956,] 156 315 #>  [28957,] 157 315 #>  [28958,] 158 315 #>  [28959,] 159 315 #>  [28960,] 160 315 #>  [28961,] 161 315 #>  [28962,] 162 315 #>  [28963,] 163 315 #>  [28964,] 164 315 #>  [28965,] 165 315 #>  [28966,] 166 315 #>  [28967,] 167 315 #>  [28968,] 168 315 #>  [28969,] 169 315 #>  [28970,] 170 315 #>  [28971,] 171 315 #>  [28972,] 172 315 #>  [28973,] 173 315 #>  [28974,] 174 315 #>  [28975,] 175 315 #>  [28976,] 176 315 #>  [28977,] 177 315 #>  [28978,] 178 315 #>  [28979,] 179 315 #>  [28980,] 180 315 #>  [28981,] 181 315 #>  [28982,] 182 315 #>  [28983,] 183 315 #>  [28984,] 184 315 #>  [28985,] 185 315 #>  [28986,] 186 315 #>  [28987,] 187 315 #>  [28988,] 188 315 #>  [28989,] 189 315 #>  [28990,] 190 315 #>  [28991,] 191 315 #>  [28992,] 192 315 #>  [28993,] 193 315 #>  [28994,] 194 315 #>  [28995,] 195 315 #>  [28996,] 196 315 #>  [28997,] 197 315 #>  [28998,] 198 315 #>  [28999,] 199 315 #>  [29000,] 200 315 #>  [29001,] 201 315 #>  [29002,] 202 315 #>  [29003,] 203 315 #>  [29004,] 204 315 #>  [29005,] 205 315 #>  [29006,] 206 315 #>  [29007,] 207 315 #>  [29008,] 208 315 #>  [29009,] 209 315 #>  [29010,] 210 315 #>  [29011,] 211 315 #>  [29012,] 212 315 #>  [29013,] 213 315 #>  [29014,] 214 315 #>  [29015,] 215 315 #>  [29016,] 216 315 #>  [29017,] 217 315 #>  [29018,] 218 315 #>  [29019,] 219 315 #>  [29020,] 220 315 #>  [29021,] 221 315 #>  [29022,] 222 315 #>  [29023,] 223 315 #>  [29024,] 224 315 #>  [29025,] 225 315 #>  [29026,] 226 315 #>  [29027,] 227 315 #>  [29028,] 228 315 #>  [29029,] 229 315 #>  [29030,] 230 315 #>  [29031,] 231 315 #>  [29032,] 232 315 #>  [29033,] 233 315 #>  [29034,] 234 315 #>  [29035,] 235 315 #>  [29036,] 236 315 #>  [29037,] 237 315 #>  [29038,] 238 315 #>  [29039,] 239 315 #>  [29040,] 240 315 #>  [29041,] 241 315 #>  [29042,] 242 315 #>  [29043,] 243 315 #>  [29044,] 244 315 #>  [29045,] 245 315 #>  [29046,] 246 315 #>  [29047,] 247 315 #>  [29048,] 248 315 #>  [29049,] 249 315 #>  [29050,] 250 315 #>  [29051,] 251 315 #>  [29052,] 252 315 #>  [29053,] 253 315 #>  [29054,] 254 315 #>  [29055,] 255 315 #>  [29056,] 256 315 #>  [29057,] 257 315 #>  [29058,] 258 315 #>  [29059,] 259 315 #>  [29060,] 260 315 #>  [29061,] 261 315 #>  [29062,] 262 315 #>  [29063,] 263 315 #>  [29064,] 264 315 #>  [29065,] 265 315 #>  [29066,] 266 315 #>  [29067,] 267 315 #>  [29068,] 268 315 #>  [29069,] 269 315 #>  [29070,] 270 315 #>  [29071,] 271 315 #>  [29072,] 272 315 #>  [29073,] 273 315 #>  [29074,] 274 315 #>  [29075,] 275 315 #>  [29076,] 276 315 #>  [29077,] 277 315 #>  [29078,] 278 315 #>  [29079,] 279 315 #>  [29080,] 280 315 #>  [29081,] 281 315 #>  [29082,] 282 315 #>  [29083,] 283 315 #>  [29084,] 284 315 #>  [29085,] 285 315 #>  [29086,] 286 315 #>  [29087,] 287 315 #>  [29088,] 288 315 #>  [29089,] 289 315 #>  [29090,] 290 315 #>  [29091,] 291 315 #>  [29092,] 292 315 #>  [29093,] 293 315 #>  [29094,] 294 315 #>  [29095,] 295 315 #>  [29096,] 296 315 #>  [29097,] 297 315 #>  [29098,] 298 315 #>  [29099,] 299 315 #>  [29100,] 300 315 #>  [29101,] 301 315 #>  [29102,] 302 315 #>  [29103,] 303 315 #>  [29104,] 304 315 #>  [29105,] 305 315 #>  [29106,] 306 315 #>  [29107,] 307 315 #>  [29108,] 308 315 #>  [29109,] 309 315 #>  [29110,] 310 315 #>  [29111,] 311 315 #>  [29112,] 312 315 #>  [29113,] 313 315 #>  [29114,] 314 315 #>  [29115,] 315 315 #>  [29116,] 316 315 #>  [29117,] 317 315 #>  [29118,] 318 315 #>  [29119,] 319 315 #>  [29120,] 320 315 #>  [29121,] 321 315 #>  [29122,] 322 315 #>  [29123,] 323 315 #>  [29124,] 324 315 #>  [29125,] 325 315 #>  [29126,] 326 315 #>  [29127,] 327 315 #>  [29128,] 328 315 #>  [29129,] 329 315 #>  [29130,] 330 315 #>  [29131,] 331 315 #>  [29132,] 332 315 #>  [29133,] 333 315 #>  [29134,] 334 315 #>  [29135,] 335 315 #>  [29136,] 336 315 #>  [29137,] 337 315 #>  [29138,] 338 315 #>  [29139,] 339 315 #>  [29140,] 340 315 #>  [29141,] 341 315 #>  [29142,] 342 315 #>  [29143,] 343 315 #>  [29144,] 344 315 #>  [29145,] 345 315 #>  [29146,] 346 315 #>  [29147,] 347 315 #>  [29148,] 348 315 #>  [29149,] 349 315 #>  [29150,] 350 315 #>  [29151,] 351 315 #>  [29152,] 352 315 #>  [29153,] 353 315 #>  [29154,] 354 315 #>  [29155,] 355 315 #>  [29156,] 356 315 #>  [29157,] 357 315 #>  [29158,] 358 315 #>  [29159,] 359 315 #>  [29160,] 360 315 #>  [29161,] 361 315 #>  [29162,] 362 315 #>  [29163,] 363 315 #>  [29164,] 364 315 #>  [29165,] 365 315 #>  [29166,] 366 315 #>  [29167,] 367 315 #>  [29168,] 368 315 #>  [29169,] 369 315 #>  [29170,] 370 315 #>  [29171,] 371 315 #>  [29172,] 372 315 #>  [29173,] 373 315 #>  [29174,] 374 315 #>  [29175,] 375 315 #>  [29176,] 376 315 #>  [29177,] 377 315 #>  [29178,] 378 315 #>  [29179,] 379 315 #>  [29180,] 380 315 #>  [29181,] 381 315 #>  [29182,] 382 315 #>  [29183,] 383 315 #>  [29184,] 384 315 #>  [29185,] 385 315 #>  [29186,] 386 315 #>  [29187,] 387 315 #>  [29188,] 388 315 #>  [29189,] 389 315 #>  [29190,] 390 315 #>  [29191,] 391 315 #>  [29192,] 392 315 #>  [29193,] 393 315 #>  [29194,] 394 315 #>  [29195,] 395 315 #>  [29196,] 396 315 #>  [29197,] 397 315 #>  [29198,] 398 315 #>  [29199,] 399 315 #>  [29200,] 400 315 #>  [29201,] 401 315 #>  [29202,] 402 315 #>  [29203,] 403 315 #>  [29204,] 404 315 #>  [29205,] 405 315 #>  [29206,] 406 315 #>  [29207,] 407 315 #>  [29208,] 408 315 #>  [29209,] 409 315 #>  [29210,] 410 315 #>  [29211,] 411 315 #>  [29212,] 412 315 #>  [29213,] 413 315 #>  [29214,] 414 315 #>  [29215,] 415 315 #>  [29216,] 416 315 #>  [29217,] 417 315 #>  [29218,] 418 315 #>  [29219,] 419 315 #>  [29220,] 420 315 #>  [29221,] 421 315 #>  [29222,] 422 315 #>  [29223,] 423 315 #>  [29224,] 424 315 #>  [29225,] 425 315 #>  [29226,] 426 315 #>  [29227,] 427 315 #>  [29228,] 428 315 #>  [29229,] 429 315 #>  [29230,] 430 315 #>  [29231,] 431 315 #>  [29232,] 432 315 #>  [29233,] 433 315 #>  [29234,] 434 315 #>  [29235,] 435 315 #>  [29236,] 436 315 #>  [29237,] 437 315 #>  [29238,] 438 315 #>  [29239,] 439 315 #>  [29240,] 440 315 #>  [29241,] 441 315 #>  [29242,] 442 315 #>  [29243,] 443 315 #>  [29244,] 444 315 #>  [29245,] 445 315 #>  [29246,] 446 315 #>  [29247,] 447 315 #>  [29248,] 448 315 #>  [29249,] 449 315 #>  [29250,] 450 315 #>  [29251,] 451 315 #>  [29252,] 452 315 #>  [29253,] 453 315 #>  [29254,] 454 315 #>  [29255,] 455 315 #>  [29256,] 456 315 #>  [29257,] 457 315 #>  [29258,] 458 315 #>  [29259,] 459 315 #>  [29260,] 460 315 #>  [29261,] 461 315 #>  [29262,] 462 315 #>  [29263,] 463 315 #>  [29264,] 464 315 #>  [29265,] 465 315 #>  [29266,] 466 315 #>  [29267,] 467 315 #>  [29268,] 468 315 #>  [29269,] 469 315 #>  [29270,] 470 315 #>  [29271,] 471 315 #>  [29272,] 472 315 #>  [29273,] 473 315 #>  [29274,] 474 315 #>  [29275,] 475 315 #>  [29276,] 476 315 #>  [29277,] 477 315 #>  [29278,] 478 315 #>  [29279,] 479 315 #>  [29280,] 480 315 #>  [29281,] 481 315 #>  [29282,] 482 315 #>  [29283,] 483 315 #>  [29284,] 484 315 #>  [29285,] 485 315 #>  [29286,] 486 315 #>  [29287,] 487 315 #>  [29288,] 488 315 #>  [29289,] 489 315 #>  [29290,] 490 315 #>  [29291,] 491 315 #>  [29292,] 492 315 #>  [29293,] 493 315 #>  [29294,] 494 315 #>  [29295,] 495 315 #>  [29296,] 496 315 #>  [29297,] 497 315 #>  [29298,] 498 315 #>  [29299,] 499 315 #>  [29300,] 500 315 #>  [29301,] 501 315 #>  [29302,] 502 315 #>  [29303,] 503 315 #>  [29304,] 504 315 #>  [29305,] 505 315 #>  [29306,] 506 315 #>  [29307,] 507 315 #>  [29308,] 508 315 #>  [29309,] 509 315 #>  [29310,] 510 315 #>  [29311,] 511 315 #>  [29312,] 512 315 #>  [29313,] 513 315 #>  [29314,] 514 315 #>  [29315,] 515 315 #>  [29316,] 516 315 #>  [29317,] 517 315 #>  [29318,] 518 315 #>  [29319,] 519 315 #>  [29320,] 520 315 #>  [29321,] 521 315 #>  [29322,] 522 315 #>  [29323,] 523 315 #>  [29324,] 524 315 #>  [29325,] 525 315 #>  [29326,] 526 315 #>  [29327,] 527 315 #>  [29328,] 528 315 #>  [29329,] 529 315 #>  [29330,] 530 315 #>  [29331,] 531 315 #>  [29332,] 532 315 #>  [29333,] 533 315 #>  [29334,] 534 315 #>  [29335,] 535 315 #>  [29336,] 536 315 #>  [29337,] 537 315 #>  [29338,] 538 315 #>  [29339,] 539 315 #>  [29340,] 540 315 #>  [29341,] 541 315 #>  [29342,] 542 315 #>  [29343,] 543 315 #>  [29344,] 544 315 #>  [29345,] 545 315 #>  [29346,] 546 315 #>  [29347,] 547 315 #>  [29348,] 548 315 #>  [29349,] 549 315 #>  [29350,] 550 315 #>  [29351,] 551 315 #>  [29352,] 552 315 #>  [29353,] 553 315 #>  [29354,] 554 315 #>  [29355,] 555 315 #>  [29356,] 556 315 #>  [29357,] 557 315 #>  [29358,] 558 315 #>  [29359,] 559 315 #>  [29360,] 560 315 #>  [29361,] 561 315 #>  [29362,] 562 315 #>  [29363,] 563 315 #>  [29364,] 564 315 #>  [29365,] 565 315 #>  [29366,] 566 315 #>  [29367,] 567 315 #>  [29368,] 568 315 #>  [29369,] 569 315 #>  [29370,] 570 315 #>  [29371,] 571 315 #>  [29372,] 572 315 #>  [29373,] 573 315 #>  [29374,] 574 315 #>  [29375,] 575 315 #>  [29376,] 576 315 #>  [29377,] 577 315 #>  [29378,] 578 315 #>  [29379,] 579 315 #>  [29380,] 580 315 #>  [29381,] 581 315 #>  [29382,] 582 315 #>  [29383,] 583 315 #>  [29384,] 584 315 #>  [29385,] 585 315 #>  [29386,] 586 315 #>  [29387,] 587 315 #>  [29388,] 588 315 #>  [29389,] 589 315 #>  [29390,] 590 315 #>  [29391,] 591 315 #>  [29392,] 592 315 #>  [29393,] 593 315 #>  [29394,] 594 315 #>  [29395,] 595 315 #>  [29396,] 596 315 #>  [29397,] 597 315 #>  [29398,] 598 315 #>  [29399,] 599 315 #>  [29400,] 600 315 #>  [29401,] 601 315 #>  [29402,] 602 315 #>  [29403,] 603 315 #>  [29404,] 604 315 #>  [29405,] 605 315 #>  [29406,] 606 315 #>  [29407,] 607 315 #>  [29408,] 608 315 #>  [29409,] 609 315 #>  [29410,] 610 315 #>  [29411,] 611 315 #>  [29412,] 612 315 #>  [29413,] 613 315 #>  [29414,] 614 315 #>  [29415,] 615 315 #>  [29416,] 616 315 #>  [29417,] 617 315 #>  [29418,] 618 315 #>  [29419,] 619 315 #>  [29420,] 620 315 #>  [29421,] 621 315 #>  [29422,] 622 315 #>  [29423,] 623 315 #>  [29424,] 624 315 #>  [29425,] 625 315 #>  [29426,] 626 315 #>  [29427,] 627 315 #>  [29428,] 628 315 #>  [29429,] 629 315 #>  [29430,] 630 315 #>  [29431,] 631 315 #>  [29432,] 632 315 #>  [29433,] 633 315 #>  [29434,] 634 315 #>  [29435,] 635 315 #>  [29436,] 636 315 #>  [29437,] 637 315 #>  [29438,] 638 315 #>  [29439,] 639 315 #>  [29440,] 640 315 #>  [29441,]   1 314 #>  [29442,]   2 314 #>  [29443,]   3 314 #>  [29444,]   4 314 #>  [29445,]   5 314 #>  [29446,]   6 314 #>  [29447,]   7 314 #>  [29448,]   8 314 #>  [29449,]   9 314 #>  [29450,]  10 314 #>  [29451,]  11 314 #>  [29452,]  12 314 #>  [29453,]  13 314 #>  [29454,]  14 314 #>  [29455,]  15 314 #>  [29456,]  16 314 #>  [29457,]  17 314 #>  [29458,]  18 314 #>  [29459,]  19 314 #>  [29460,]  20 314 #>  [29461,]  21 314 #>  [29462,]  22 314 #>  [29463,]  23 314 #>  [29464,]  24 314 #>  [29465,]  25 314 #>  [29466,]  26 314 #>  [29467,]  27 314 #>  [29468,]  28 314 #>  [29469,]  29 314 #>  [29470,]  30 314 #>  [29471,]  31 314 #>  [29472,]  32 314 #>  [29473,]  33 314 #>  [29474,]  34 314 #>  [29475,]  35 314 #>  [29476,]  36 314 #>  [29477,]  37 314 #>  [29478,]  38 314 #>  [29479,]  39 314 #>  [29480,]  40 314 #>  [29481,]  41 314 #>  [29482,]  42 314 #>  [29483,]  43 314 #>  [29484,]  44 314 #>  [29485,]  45 314 #>  [29486,]  46 314 #>  [29487,]  47 314 #>  [29488,]  48 314 #>  [29489,]  49 314 #>  [29490,]  50 314 #>  [29491,]  51 314 #>  [29492,]  52 314 #>  [29493,]  53 314 #>  [29494,]  54 314 #>  [29495,]  55 314 #>  [29496,]  56 314 #>  [29497,]  57 314 #>  [29498,]  58 314 #>  [29499,]  59 314 #>  [29500,]  60 314 #>  [29501,]  61 314 #>  [29502,]  62 314 #>  [29503,]  63 314 #>  [29504,]  64 314 #>  [29505,]  65 314 #>  [29506,]  66 314 #>  [29507,]  67 314 #>  [29508,]  68 314 #>  [29509,]  69 314 #>  [29510,]  70 314 #>  [29511,]  71 314 #>  [29512,]  72 314 #>  [29513,]  73 314 #>  [29514,]  74 314 #>  [29515,]  75 314 #>  [29516,]  76 314 #>  [29517,]  77 314 #>  [29518,]  78 314 #>  [29519,]  79 314 #>  [29520,]  80 314 #>  [29521,]  81 314 #>  [29522,]  82 314 #>  [29523,]  83 314 #>  [29524,]  84 314 #>  [29525,]  85 314 #>  [29526,]  86 314 #>  [29527,]  87 314 #>  [29528,]  88 314 #>  [29529,]  89 314 #>  [29530,]  90 314 #>  [29531,]  91 314 #>  [29532,]  92 314 #>  [29533,]  93 314 #>  [29534,]  94 314 #>  [29535,]  95 314 #>  [29536,]  96 314 #>  [29537,]  97 314 #>  [29538,]  98 314 #>  [29539,]  99 314 #>  [29540,] 100 314 #>  [29541,] 101 314 #>  [29542,] 102 314 #>  [29543,] 103 314 #>  [29544,] 104 314 #>  [29545,] 105 314 #>  [29546,] 106 314 #>  [29547,] 107 314 #>  [29548,] 108 314 #>  [29549,] 109 314 #>  [29550,] 110 314 #>  [29551,] 111 314 #>  [29552,] 112 314 #>  [29553,] 113 314 #>  [29554,] 114 314 #>  [29555,] 115 314 #>  [29556,] 116 314 #>  [29557,] 117 314 #>  [29558,] 118 314 #>  [29559,] 119 314 #>  [29560,] 120 314 #>  [29561,] 121 314 #>  [29562,] 122 314 #>  [29563,] 123 314 #>  [29564,] 124 314 #>  [29565,] 125 314 #>  [29566,] 126 314 #>  [29567,] 127 314 #>  [29568,] 128 314 #>  [29569,] 129 314 #>  [29570,] 130 314 #>  [29571,] 131 314 #>  [29572,] 132 314 #>  [29573,] 133 314 #>  [29574,] 134 314 #>  [29575,] 135 314 #>  [29576,] 136 314 #>  [29577,] 137 314 #>  [29578,] 138 314 #>  [29579,] 139 314 #>  [29580,] 140 314 #>  [29581,] 141 314 #>  [29582,] 142 314 #>  [29583,] 143 314 #>  [29584,] 144 314 #>  [29585,] 145 314 #>  [29586,] 146 314 #>  [29587,] 147 314 #>  [29588,] 148 314 #>  [29589,] 149 314 #>  [29590,] 150 314 #>  [29591,] 151 314 #>  [29592,] 152 314 #>  [29593,] 153 314 #>  [29594,] 154 314 #>  [29595,] 155 314 #>  [29596,] 156 314 #>  [29597,] 157 314 #>  [29598,] 158 314 #>  [29599,] 159 314 #>  [29600,] 160 314 #>  [29601,] 161 314 #>  [29602,] 162 314 #>  [29603,] 163 314 #>  [29604,] 164 314 #>  [29605,] 165 314 #>  [29606,] 166 314 #>  [29607,] 167 314 #>  [29608,] 168 314 #>  [29609,] 169 314 #>  [29610,] 170 314 #>  [29611,] 171 314 #>  [29612,] 172 314 #>  [29613,] 173 314 #>  [29614,] 174 314 #>  [29615,] 175 314 #>  [29616,] 176 314 #>  [29617,] 177 314 #>  [29618,] 178 314 #>  [29619,] 179 314 #>  [29620,] 180 314 #>  [29621,] 181 314 #>  [29622,] 182 314 #>  [29623,] 183 314 #>  [29624,] 184 314 #>  [29625,] 185 314 #>  [29626,] 186 314 #>  [29627,] 187 314 #>  [29628,] 188 314 #>  [29629,] 189 314 #>  [29630,] 190 314 #>  [29631,] 191 314 #>  [29632,] 192 314 #>  [29633,] 193 314 #>  [29634,] 194 314 #>  [29635,] 195 314 #>  [29636,] 196 314 #>  [29637,] 197 314 #>  [29638,] 198 314 #>  [29639,] 199 314 #>  [29640,] 200 314 #>  [29641,] 201 314 #>  [29642,] 202 314 #>  [29643,] 203 314 #>  [29644,] 204 314 #>  [29645,] 205 314 #>  [29646,] 206 314 #>  [29647,] 207 314 #>  [29648,] 208 314 #>  [29649,] 209 314 #>  [29650,] 210 314 #>  [29651,] 211 314 #>  [29652,] 212 314 #>  [29653,] 213 314 #>  [29654,] 214 314 #>  [29655,] 215 314 #>  [29656,] 216 314 #>  [29657,] 217 314 #>  [29658,] 218 314 #>  [29659,] 219 314 #>  [29660,] 220 314 #>  [29661,] 221 314 #>  [29662,] 222 314 #>  [29663,] 223 314 #>  [29664,] 224 314 #>  [29665,] 225 314 #>  [29666,] 226 314 #>  [29667,] 227 314 #>  [29668,] 228 314 #>  [29669,] 229 314 #>  [29670,] 230 314 #>  [29671,] 231 314 #>  [29672,] 232 314 #>  [29673,] 233 314 #>  [29674,] 234 314 #>  [29675,] 235 314 #>  [29676,] 236 314 #>  [29677,] 237 314 #>  [29678,] 238 314 #>  [29679,] 239 314 #>  [29680,] 240 314 #>  [29681,] 241 314 #>  [29682,] 242 314 #>  [29683,] 243 314 #>  [29684,] 244 314 #>  [29685,] 245 314 #>  [29686,] 246 314 #>  [29687,] 247 314 #>  [29688,] 248 314 #>  [29689,] 249 314 #>  [29690,] 250 314 #>  [29691,] 251 314 #>  [29692,] 252 314 #>  [29693,] 253 314 #>  [29694,] 254 314 #>  [29695,] 255 314 #>  [29696,] 256 314 #>  [29697,] 257 314 #>  [29698,] 258 314 #>  [29699,] 259 314 #>  [29700,] 260 314 #>  [29701,] 261 314 #>  [29702,] 262 314 #>  [29703,] 263 314 #>  [29704,] 264 314 #>  [29705,] 265 314 #>  [29706,] 266 314 #>  [29707,] 267 314 #>  [29708,] 268 314 #>  [29709,] 269 314 #>  [29710,] 270 314 #>  [29711,] 271 314 #>  [29712,] 272 314 #>  [29713,] 273 314 #>  [29714,] 274 314 #>  [29715,] 275 314 #>  [29716,] 276 314 #>  [29717,] 277 314 #>  [29718,] 278 314 #>  [29719,] 279 314 #>  [29720,] 280 314 #>  [29721,] 281 314 #>  [29722,] 282 314 #>  [29723,] 283 314 #>  [29724,] 284 314 #>  [29725,] 285 314 #>  [29726,] 286 314 #>  [29727,] 287 314 #>  [29728,] 288 314 #>  [29729,] 289 314 #>  [29730,] 290 314 #>  [29731,] 291 314 #>  [29732,] 292 314 #>  [29733,] 293 314 #>  [29734,] 294 314 #>  [29735,] 295 314 #>  [29736,] 296 314 #>  [29737,] 297 314 #>  [29738,] 298 314 #>  [29739,] 299 314 #>  [29740,] 300 314 #>  [29741,] 301 314 #>  [29742,] 302 314 #>  [29743,] 303 314 #>  [29744,] 304 314 #>  [29745,] 305 314 #>  [29746,] 306 314 #>  [29747,] 307 314 #>  [29748,] 308 314 #>  [29749,] 309 314 #>  [29750,] 310 314 #>  [29751,] 311 314 #>  [29752,] 312 314 #>  [29753,] 313 314 #>  [29754,] 314 314 #>  [29755,] 315 314 #>  [29756,] 316 314 #>  [29757,] 317 314 #>  [29758,] 318 314 #>  [29759,] 319 314 #>  [29760,] 320 314 #>  [29761,] 321 314 #>  [29762,] 322 314 #>  [29763,] 323 314 #>  [29764,] 324 314 #>  [29765,] 325 314 #>  [29766,] 326 314 #>  [29767,] 327 314 #>  [29768,] 328 314 #>  [29769,] 329 314 #>  [29770,] 330 314 #>  [29771,] 331 314 #>  [29772,] 332 314 #>  [29773,] 333 314 #>  [29774,] 334 314 #>  [29775,] 335 314 #>  [29776,] 336 314 #>  [29777,] 337 314 #>  [29778,] 338 314 #>  [29779,] 339 314 #>  [29780,] 340 314 #>  [29781,] 341 314 #>  [29782,] 342 314 #>  [29783,] 343 314 #>  [29784,] 344 314 #>  [29785,] 345 314 #>  [29786,] 346 314 #>  [29787,] 347 314 #>  [29788,] 348 314 #>  [29789,] 349 314 #>  [29790,] 350 314 #>  [29791,] 351 314 #>  [29792,] 352 314 #>  [29793,] 353 314 #>  [29794,] 354 314 #>  [29795,] 355 314 #>  [29796,] 356 314 #>  [29797,] 357 314 #>  [29798,] 358 314 #>  [29799,] 359 314 #>  [29800,] 360 314 #>  [29801,] 361 314 #>  [29802,] 362 314 #>  [29803,] 363 314 #>  [29804,] 364 314 #>  [29805,] 365 314 #>  [29806,] 366 314 #>  [29807,] 367 314 #>  [29808,] 368 314 #>  [29809,] 369 314 #>  [29810,] 370 314 #>  [29811,] 371 314 #>  [29812,] 372 314 #>  [29813,] 373 314 #>  [29814,] 374 314 #>  [29815,] 375 314 #>  [29816,] 376 314 #>  [29817,] 377 314 #>  [29818,] 378 314 #>  [29819,] 379 314 #>  [29820,] 380 314 #>  [29821,] 381 314 #>  [29822,] 382 314 #>  [29823,] 383 314 #>  [29824,] 384 314 #>  [29825,] 385 314 #>  [29826,] 386 314 #>  [29827,] 387 314 #>  [29828,] 388 314 #>  [29829,] 389 314 #>  [29830,] 390 314 #>  [29831,] 391 314 #>  [29832,] 392 314 #>  [29833,] 393 314 #>  [29834,] 394 314 #>  [29835,] 395 314 #>  [29836,] 396 314 #>  [29837,] 397 314 #>  [29838,] 398 314 #>  [29839,] 399 314 #>  [29840,] 400 314 #>  [29841,] 401 314 #>  [29842,] 402 314 #>  [29843,] 403 314 #>  [29844,] 404 314 #>  [29845,] 405 314 #>  [29846,] 406 314 #>  [29847,] 407 314 #>  [29848,] 408 314 #>  [29849,] 409 314 #>  [29850,] 410 314 #>  [29851,] 411 314 #>  [29852,] 412 314 #>  [29853,] 413 314 #>  [29854,] 414 314 #>  [29855,] 415 314 #>  [29856,] 416 314 #>  [29857,] 417 314 #>  [29858,] 418 314 #>  [29859,] 419 314 #>  [29860,] 420 314 #>  [29861,] 421 314 #>  [29862,] 422 314 #>  [29863,] 423 314 #>  [29864,] 424 314 #>  [29865,] 425 314 #>  [29866,] 426 314 #>  [29867,] 427 314 #>  [29868,] 428 314 #>  [29869,] 429 314 #>  [29870,] 430 314 #>  [29871,] 431 314 #>  [29872,] 432 314 #>  [29873,] 433 314 #>  [29874,] 434 314 #>  [29875,] 435 314 #>  [29876,] 436 314 #>  [29877,] 437 314 #>  [29878,] 438 314 #>  [29879,] 439 314 #>  [29880,] 440 314 #>  [29881,] 441 314 #>  [29882,] 442 314 #>  [29883,] 443 314 #>  [29884,] 444 314 #>  [29885,] 445 314 #>  [29886,] 446 314 #>  [29887,] 447 314 #>  [29888,] 448 314 #>  [29889,] 449 314 #>  [29890,] 450 314 #>  [29891,] 451 314 #>  [29892,] 452 314 #>  [29893,] 453 314 #>  [29894,] 454 314 #>  [29895,] 455 314 #>  [29896,] 456 314 #>  [29897,] 457 314 #>  [29898,] 458 314 #>  [29899,] 459 314 #>  [29900,] 460 314 #>  [29901,] 461 314 #>  [29902,] 462 314 #>  [29903,] 463 314 #>  [29904,] 464 314 #>  [29905,] 465 314 #>  [29906,] 466 314 #>  [29907,] 467 314 #>  [29908,] 468 314 #>  [29909,] 469 314 #>  [29910,] 470 314 #>  [29911,] 471 314 #>  [29912,] 472 314 #>  [29913,] 473 314 #>  [29914,] 474 314 #>  [29915,] 475 314 #>  [29916,] 476 314 #>  [29917,] 477 314 #>  [29918,] 478 314 #>  [29919,] 479 314 #>  [29920,] 480 314 #>  [29921,] 481 314 #>  [29922,] 482 314 #>  [29923,] 483 314 #>  [29924,] 484 314 #>  [29925,] 485 314 #>  [29926,] 486 314 #>  [29927,] 487 314 #>  [29928,] 488 314 #>  [29929,] 489 314 #>  [29930,] 490 314 #>  [29931,] 491 314 #>  [29932,] 492 314 #>  [29933,] 493 314 #>  [29934,] 494 314 #>  [29935,] 495 314 #>  [29936,] 496 314 #>  [29937,] 497 314 #>  [29938,] 498 314 #>  [29939,] 499 314 #>  [29940,] 500 314 #>  [29941,] 501 314 #>  [29942,] 502 314 #>  [29943,] 503 314 #>  [29944,] 504 314 #>  [29945,] 505 314 #>  [29946,] 506 314 #>  [29947,] 507 314 #>  [29948,] 508 314 #>  [29949,] 509 314 #>  [29950,] 510 314 #>  [29951,] 511 314 #>  [29952,] 512 314 #>  [29953,] 513 314 #>  [29954,] 514 314 #>  [29955,] 515 314 #>  [29956,] 516 314 #>  [29957,] 517 314 #>  [29958,] 518 314 #>  [29959,] 519 314 #>  [29960,] 520 314 #>  [29961,] 521 314 #>  [29962,] 522 314 #>  [29963,] 523 314 #>  [29964,] 524 314 #>  [29965,] 525 314 #>  [29966,] 526 314 #>  [29967,] 527 314 #>  [29968,] 528 314 #>  [29969,] 529 314 #>  [29970,] 530 314 #>  [29971,] 531 314 #>  [29972,] 532 314 #>  [29973,] 533 314 #>  [29974,] 534 314 #>  [29975,] 535 314 #>  [29976,] 536 314 #>  [29977,] 537 314 #>  [29978,] 538 314 #>  [29979,] 539 314 #>  [29980,] 540 314 #>  [29981,] 541 314 #>  [29982,] 542 314 #>  [29983,] 543 314 #>  [29984,] 544 314 #>  [29985,] 545 314 #>  [29986,] 546 314 #>  [29987,] 547 314 #>  [29988,] 548 314 #>  [29989,] 549 314 #>  [29990,] 550 314 #>  [29991,] 551 314 #>  [29992,] 552 314 #>  [29993,] 553 314 #>  [29994,] 554 314 #>  [29995,] 555 314 #>  [29996,] 556 314 #>  [29997,] 557 314 #>  [29998,] 558 314 #>  [29999,] 559 314 #>  [30000,] 560 314 #>  [30001,] 561 314 #>  [30002,] 562 314 #>  [30003,] 563 314 #>  [30004,] 564 314 #>  [30005,] 565 314 #>  [30006,] 566 314 #>  [30007,] 567 314 #>  [30008,] 568 314 #>  [30009,] 569 314 #>  [30010,] 570 314 #>  [30011,] 571 314 #>  [30012,] 572 314 #>  [30013,] 573 314 #>  [30014,] 574 314 #>  [30015,] 575 314 #>  [30016,] 576 314 #>  [30017,] 577 314 #>  [30018,] 578 314 #>  [30019,] 579 314 #>  [30020,] 580 314 #>  [30021,] 581 314 #>  [30022,] 582 314 #>  [30023,] 583 314 #>  [30024,] 584 314 #>  [30025,] 585 314 #>  [30026,] 586 314 #>  [30027,] 587 314 #>  [30028,] 588 314 #>  [30029,] 589 314 #>  [30030,] 590 314 #>  [30031,] 591 314 #>  [30032,] 592 314 #>  [30033,] 593 314 #>  [30034,] 594 314 #>  [30035,] 595 314 #>  [30036,] 596 314 #>  [30037,] 597 314 #>  [30038,] 598 314 #>  [30039,] 599 314 #>  [30040,] 600 314 #>  [30041,] 601 314 #>  [30042,] 602 314 #>  [30043,] 603 314 #>  [30044,] 604 314 #>  [30045,] 605 314 #>  [30046,] 606 314 #>  [30047,] 607 314 #>  [30048,] 608 314 #>  [30049,] 609 314 #>  [30050,] 610 314 #>  [30051,] 611 314 #>  [30052,] 612 314 #>  [30053,] 613 314 #>  [30054,] 614 314 #>  [30055,] 615 314 #>  [30056,] 616 314 #>  [30057,] 617 314 #>  [30058,] 618 314 #>  [30059,] 619 314 #>  [30060,] 620 314 #>  [30061,] 621 314 #>  [30062,] 622 314 #>  [30063,] 623 314 #>  [30064,] 624 314 #>  [30065,] 625 314 #>  [30066,] 626 314 #>  [30067,] 627 314 #>  [30068,] 628 314 #>  [30069,] 629 314 #>  [30070,] 630 314 #>  [30071,] 631 314 #>  [30072,] 632 314 #>  [30073,] 633 314 #>  [30074,] 634 314 #>  [30075,] 635 314 #>  [30076,] 636 314 #>  [30077,] 637 314 #>  [30078,] 638 314 #>  [30079,] 639 314 #>  [30080,] 640 314 #>  [30081,]   1 313 #>  [30082,]   2 313 #>  [30083,]   3 313 #>  [30084,]   4 313 #>  [30085,]   5 313 #>  [30086,]   6 313 #>  [30087,]   7 313 #>  [30088,]   8 313 #>  [30089,]   9 313 #>  [30090,]  10 313 #>  [30091,]  11 313 #>  [30092,]  12 313 #>  [30093,]  13 313 #>  [30094,]  14 313 #>  [30095,]  15 313 #>  [30096,]  16 313 #>  [30097,]  17 313 #>  [30098,]  18 313 #>  [30099,]  19 313 #>  [30100,]  20 313 #>  [30101,]  21 313 #>  [30102,]  22 313 #>  [30103,]  23 313 #>  [30104,]  24 313 #>  [30105,]  25 313 #>  [30106,]  26 313 #>  [30107,]  27 313 #>  [30108,]  28 313 #>  [30109,]  29 313 #>  [30110,]  30 313 #>  [30111,]  31 313 #>  [30112,]  32 313 #>  [30113,]  33 313 #>  [30114,]  34 313 #>  [30115,]  35 313 #>  [30116,]  36 313 #>  [30117,]  37 313 #>  [30118,]  38 313 #>  [30119,]  39 313 #>  [30120,]  40 313 #>  [30121,]  41 313 #>  [30122,]  42 313 #>  [30123,]  43 313 #>  [30124,]  44 313 #>  [30125,]  45 313 #>  [30126,]  46 313 #>  [30127,]  47 313 #>  [30128,]  48 313 #>  [30129,]  49 313 #>  [30130,]  50 313 #>  [30131,]  51 313 #>  [30132,]  52 313 #>  [30133,]  53 313 #>  [30134,]  54 313 #>  [30135,]  55 313 #>  [30136,]  56 313 #>  [30137,]  57 313 #>  [30138,]  58 313 #>  [30139,]  59 313 #>  [30140,]  60 313 #>  [30141,]  61 313 #>  [30142,]  62 313 #>  [30143,]  63 313 #>  [30144,]  64 313 #>  [30145,]  65 313 #>  [30146,]  66 313 #>  [30147,]  67 313 #>  [30148,]  68 313 #>  [30149,]  69 313 #>  [30150,]  70 313 #>  [30151,]  71 313 #>  [30152,]  72 313 #>  [30153,]  73 313 #>  [30154,]  74 313 #>  [30155,]  75 313 #>  [30156,]  76 313 #>  [30157,]  77 313 #>  [30158,]  78 313 #>  [30159,]  79 313 #>  [30160,]  80 313 #>  [30161,]  81 313 #>  [30162,]  82 313 #>  [30163,]  83 313 #>  [30164,]  84 313 #>  [30165,]  85 313 #>  [30166,]  86 313 #>  [30167,]  87 313 #>  [30168,]  88 313 #>  [30169,]  89 313 #>  [30170,]  90 313 #>  [30171,]  91 313 #>  [30172,]  92 313 #>  [30173,]  93 313 #>  [30174,]  94 313 #>  [30175,]  95 313 #>  [30176,]  96 313 #>  [30177,]  97 313 #>  [30178,]  98 313 #>  [30179,]  99 313 #>  [30180,] 100 313 #>  [30181,] 101 313 #>  [30182,] 102 313 #>  [30183,] 103 313 #>  [30184,] 104 313 #>  [30185,] 105 313 #>  [30186,] 106 313 #>  [30187,] 107 313 #>  [30188,] 108 313 #>  [30189,] 109 313 #>  [30190,] 110 313 #>  [30191,] 111 313 #>  [30192,] 112 313 #>  [30193,] 113 313 #>  [30194,] 114 313 #>  [30195,] 115 313 #>  [30196,] 116 313 #>  [30197,] 117 313 #>  [30198,] 118 313 #>  [30199,] 119 313 #>  [30200,] 120 313 #>  [30201,] 121 313 #>  [30202,] 122 313 #>  [30203,] 123 313 #>  [30204,] 124 313 #>  [30205,] 125 313 #>  [30206,] 126 313 #>  [30207,] 127 313 #>  [30208,] 128 313 #>  [30209,] 129 313 #>  [30210,] 130 313 #>  [30211,] 131 313 #>  [30212,] 132 313 #>  [30213,] 133 313 #>  [30214,] 134 313 #>  [30215,] 135 313 #>  [30216,] 136 313 #>  [30217,] 137 313 #>  [30218,] 138 313 #>  [30219,] 139 313 #>  [30220,] 140 313 #>  [30221,] 141 313 #>  [30222,] 142 313 #>  [30223,] 143 313 #>  [30224,] 144 313 #>  [30225,] 145 313 #>  [30226,] 146 313 #>  [30227,] 147 313 #>  [30228,] 148 313 #>  [30229,] 149 313 #>  [30230,] 150 313 #>  [30231,] 151 313 #>  [30232,] 152 313 #>  [30233,] 153 313 #>  [30234,] 154 313 #>  [30235,] 155 313 #>  [30236,] 156 313 #>  [30237,] 157 313 #>  [30238,] 158 313 #>  [30239,] 159 313 #>  [30240,] 160 313 #>  [30241,] 161 313 #>  [30242,] 162 313 #>  [30243,] 163 313 #>  [30244,] 164 313 #>  [30245,] 165 313 #>  [30246,] 166 313 #>  [30247,] 167 313 #>  [30248,] 168 313 #>  [30249,] 169 313 #>  [30250,] 170 313 #>  [30251,] 171 313 #>  [30252,] 172 313 #>  [30253,] 173 313 #>  [30254,] 174 313 #>  [30255,] 175 313 #>  [30256,] 176 313 #>  [30257,] 177 313 #>  [30258,] 178 313 #>  [30259,] 179 313 #>  [30260,] 180 313 #>  [30261,] 181 313 #>  [30262,] 182 313 #>  [30263,] 183 313 #>  [30264,] 184 313 #>  [30265,] 185 313 #>  [30266,] 186 313 #>  [30267,] 187 313 #>  [30268,] 188 313 #>  [30269,] 189 313 #>  [30270,] 190 313 #>  [30271,] 191 313 #>  [30272,] 192 313 #>  [30273,] 193 313 #>  [30274,] 194 313 #>  [30275,] 195 313 #>  [30276,] 196 313 #>  [30277,] 197 313 #>  [30278,] 198 313 #>  [30279,] 199 313 #>  [30280,] 200 313 #>  [30281,] 201 313 #>  [30282,] 202 313 #>  [30283,] 203 313 #>  [30284,] 204 313 #>  [30285,] 205 313 #>  [30286,] 206 313 #>  [30287,] 207 313 #>  [30288,] 208 313 #>  [30289,] 209 313 #>  [30290,] 210 313 #>  [30291,] 211 313 #>  [30292,] 212 313 #>  [30293,] 213 313 #>  [30294,] 214 313 #>  [30295,] 215 313 #>  [30296,] 216 313 #>  [30297,] 217 313 #>  [30298,] 218 313 #>  [30299,] 219 313 #>  [30300,] 220 313 #>  [30301,] 221 313 #>  [30302,] 222 313 #>  [30303,] 223 313 #>  [30304,] 224 313 #>  [30305,] 225 313 #>  [30306,] 226 313 #>  [30307,] 227 313 #>  [30308,] 228 313 #>  [30309,] 229 313 #>  [30310,] 230 313 #>  [30311,] 231 313 #>  [30312,] 232 313 #>  [30313,] 233 313 #>  [30314,] 234 313 #>  [30315,] 235 313 #>  [30316,] 236 313 #>  [30317,] 237 313 #>  [30318,] 238 313 #>  [30319,] 239 313 #>  [30320,] 240 313 #>  [30321,] 241 313 #>  [30322,] 242 313 #>  [30323,] 243 313 #>  [30324,] 244 313 #>  [30325,] 245 313 #>  [30326,] 246 313 #>  [30327,] 247 313 #>  [30328,] 248 313 #>  [30329,] 249 313 #>  [30330,] 250 313 #>  [30331,] 251 313 #>  [30332,] 252 313 #>  [30333,] 253 313 #>  [30334,] 254 313 #>  [30335,] 255 313 #>  [30336,] 256 313 #>  [30337,] 257 313 #>  [30338,] 258 313 #>  [30339,] 259 313 #>  [30340,] 260 313 #>  [30341,] 261 313 #>  [30342,] 262 313 #>  [30343,] 263 313 #>  [30344,] 264 313 #>  [30345,] 265 313 #>  [30346,] 266 313 #>  [30347,] 267 313 #>  [30348,] 268 313 #>  [30349,] 269 313 #>  [30350,] 270 313 #>  [30351,] 271 313 #>  [30352,] 272 313 #>  [30353,] 273 313 #>  [30354,] 274 313 #>  [30355,] 275 313 #>  [30356,] 276 313 #>  [30357,] 277 313 #>  [30358,] 278 313 #>  [30359,] 279 313 #>  [30360,] 280 313 #>  [30361,] 281 313 #>  [30362,] 282 313 #>  [30363,] 283 313 #>  [30364,] 284 313 #>  [30365,] 285 313 #>  [30366,] 286 313 #>  [30367,] 287 313 #>  [30368,] 288 313 #>  [30369,] 289 313 #>  [30370,] 290 313 #>  [30371,] 291 313 #>  [30372,] 292 313 #>  [30373,] 293 313 #>  [30374,] 294 313 #>  [30375,] 295 313 #>  [30376,] 296 313 #>  [30377,] 297 313 #>  [30378,] 298 313 #>  [30379,] 299 313 #>  [30380,] 300 313 #>  [30381,] 301 313 #>  [30382,] 302 313 #>  [30383,] 303 313 #>  [30384,] 304 313 #>  [30385,] 305 313 #>  [30386,] 306 313 #>  [30387,] 307 313 #>  [30388,] 308 313 #>  [30389,] 309 313 #>  [30390,] 310 313 #>  [30391,] 311 313 #>  [30392,] 312 313 #>  [30393,] 313 313 #>  [30394,] 314 313 #>  [30395,] 315 313 #>  [30396,] 316 313 #>  [30397,] 317 313 #>  [30398,] 318 313 #>  [30399,] 319 313 #>  [30400,] 320 313 #>  [30401,] 321 313 #>  [30402,] 322 313 #>  [30403,] 323 313 #>  [30404,] 324 313 #>  [30405,] 325 313 #>  [30406,] 326 313 #>  [30407,] 327 313 #>  [30408,] 328 313 #>  [30409,] 329 313 #>  [30410,] 330 313 #>  [30411,] 331 313 #>  [30412,] 332 313 #>  [30413,] 333 313 #>  [30414,] 334 313 #>  [30415,] 335 313 #>  [30416,] 336 313 #>  [30417,] 337 313 #>  [30418,] 338 313 #>  [30419,] 339 313 #>  [30420,] 340 313 #>  [30421,] 341 313 #>  [30422,] 342 313 #>  [30423,] 343 313 #>  [30424,] 344 313 #>  [30425,] 345 313 #>  [30426,] 346 313 #>  [30427,] 347 313 #>  [30428,] 348 313 #>  [30429,] 349 313 #>  [30430,] 350 313 #>  [30431,] 351 313 #>  [30432,] 352 313 #>  [30433,] 353 313 #>  [30434,] 354 313 #>  [30435,] 355 313 #>  [30436,] 356 313 #>  [30437,] 357 313 #>  [30438,] 358 313 #>  [30439,] 359 313 #>  [30440,] 360 313 #>  [30441,] 361 313 #>  [30442,] 362 313 #>  [30443,] 363 313 #>  [30444,] 364 313 #>  [30445,] 365 313 #>  [30446,] 366 313 #>  [30447,] 367 313 #>  [30448,] 368 313 #>  [30449,] 369 313 #>  [30450,] 370 313 #>  [30451,] 371 313 #>  [30452,] 372 313 #>  [30453,] 373 313 #>  [30454,] 374 313 #>  [30455,] 375 313 #>  [30456,] 376 313 #>  [30457,] 377 313 #>  [30458,] 378 313 #>  [30459,] 379 313 #>  [30460,] 380 313 #>  [30461,] 381 313 #>  [30462,] 382 313 #>  [30463,] 383 313 #>  [30464,] 384 313 #>  [30465,] 385 313 #>  [30466,] 386 313 #>  [30467,] 387 313 #>  [30468,] 388 313 #>  [30469,] 389 313 #>  [30470,] 390 313 #>  [30471,] 391 313 #>  [30472,] 392 313 #>  [30473,] 393 313 #>  [30474,] 394 313 #>  [30475,] 395 313 #>  [30476,] 396 313 #>  [30477,] 397 313 #>  [30478,] 398 313 #>  [30479,] 399 313 #>  [30480,] 400 313 #>  [30481,] 401 313 #>  [30482,] 402 313 #>  [30483,] 403 313 #>  [30484,] 404 313 #>  [30485,] 405 313 #>  [30486,] 406 313 #>  [30487,] 407 313 #>  [30488,] 408 313 #>  [30489,] 409 313 #>  [30490,] 410 313 #>  [30491,] 411 313 #>  [30492,] 412 313 #>  [30493,] 413 313 #>  [30494,] 414 313 #>  [30495,] 415 313 #>  [30496,] 416 313 #>  [30497,] 417 313 #>  [30498,] 418 313 #>  [30499,] 419 313 #>  [30500,] 420 313 #>  [30501,] 421 313 #>  [30502,] 422 313 #>  [30503,] 423 313 #>  [30504,] 424 313 #>  [30505,] 425 313 #>  [30506,] 426 313 #>  [30507,] 427 313 #>  [30508,] 428 313 #>  [30509,] 429 313 #>  [30510,] 430 313 #>  [30511,] 431 313 #>  [30512,] 432 313 #>  [30513,] 433 313 #>  [30514,] 434 313 #>  [30515,] 435 313 #>  [30516,] 436 313 #>  [30517,] 437 313 #>  [30518,] 438 313 #>  [30519,] 439 313 #>  [30520,] 440 313 #>  [30521,] 441 313 #>  [30522,] 442 313 #>  [30523,] 443 313 #>  [30524,] 444 313 #>  [30525,] 445 313 #>  [30526,] 446 313 #>  [30527,] 447 313 #>  [30528,] 448 313 #>  [30529,] 449 313 #>  [30530,] 450 313 #>  [30531,] 451 313 #>  [30532,] 452 313 #>  [30533,] 453 313 #>  [30534,] 454 313 #>  [30535,] 455 313 #>  [30536,] 456 313 #>  [30537,] 457 313 #>  [30538,] 458 313 #>  [30539,] 459 313 #>  [30540,] 460 313 #>  [30541,] 461 313 #>  [30542,] 462 313 #>  [30543,] 463 313 #>  [30544,] 464 313 #>  [30545,] 465 313 #>  [30546,] 466 313 #>  [30547,] 467 313 #>  [30548,] 468 313 #>  [30549,] 469 313 #>  [30550,] 470 313 #>  [30551,] 471 313 #>  [30552,] 472 313 #>  [30553,] 473 313 #>  [30554,] 474 313 #>  [30555,] 475 313 #>  [30556,] 476 313 #>  [30557,] 477 313 #>  [30558,] 478 313 #>  [30559,] 479 313 #>  [30560,] 480 313 #>  [30561,] 481 313 #>  [30562,] 482 313 #>  [30563,] 483 313 #>  [30564,] 484 313 #>  [30565,] 485 313 #>  [30566,] 486 313 #>  [30567,] 487 313 #>  [30568,] 488 313 #>  [30569,] 489 313 #>  [30570,] 490 313 #>  [30571,] 491 313 #>  [30572,] 492 313 #>  [30573,] 493 313 #>  [30574,] 494 313 #>  [30575,] 495 313 #>  [30576,] 496 313 #>  [30577,] 497 313 #>  [30578,] 498 313 #>  [30579,] 499 313 #>  [30580,] 500 313 #>  [30581,] 501 313 #>  [30582,] 502 313 #>  [30583,] 503 313 #>  [30584,] 504 313 #>  [30585,] 505 313 #>  [30586,] 506 313 #>  [30587,] 507 313 #>  [30588,] 508 313 #>  [30589,] 509 313 #>  [30590,] 510 313 #>  [30591,] 511 313 #>  [30592,] 512 313 #>  [30593,] 513 313 #>  [30594,] 514 313 #>  [30595,] 515 313 #>  [30596,] 516 313 #>  [30597,] 517 313 #>  [30598,] 518 313 #>  [30599,] 519 313 #>  [30600,] 520 313 #>  [30601,] 521 313 #>  [30602,] 522 313 #>  [30603,] 523 313 #>  [30604,] 524 313 #>  [30605,] 525 313 #>  [30606,] 526 313 #>  [30607,] 527 313 #>  [30608,] 528 313 #>  [30609,] 529 313 #>  [30610,] 530 313 #>  [30611,] 531 313 #>  [30612,] 532 313 #>  [30613,] 533 313 #>  [30614,] 534 313 #>  [30615,] 535 313 #>  [30616,] 536 313 #>  [30617,] 537 313 #>  [30618,] 538 313 #>  [30619,] 539 313 #>  [30620,] 540 313 #>  [30621,] 541 313 #>  [30622,] 542 313 #>  [30623,] 543 313 #>  [30624,] 544 313 #>  [30625,] 545 313 #>  [30626,] 546 313 #>  [30627,] 547 313 #>  [30628,] 548 313 #>  [30629,] 549 313 #>  [30630,] 550 313 #>  [30631,] 551 313 #>  [30632,] 552 313 #>  [30633,] 553 313 #>  [30634,] 554 313 #>  [30635,] 555 313 #>  [30636,] 556 313 #>  [30637,] 557 313 #>  [30638,] 558 313 #>  [30639,] 559 313 #>  [30640,] 560 313 #>  [30641,] 561 313 #>  [30642,] 562 313 #>  [30643,] 563 313 #>  [30644,] 564 313 #>  [30645,] 565 313 #>  [30646,] 566 313 #>  [30647,] 567 313 #>  [30648,] 568 313 #>  [30649,] 569 313 #>  [30650,] 570 313 #>  [30651,] 571 313 #>  [30652,] 572 313 #>  [30653,] 573 313 #>  [30654,] 574 313 #>  [30655,] 575 313 #>  [30656,] 576 313 #>  [30657,] 577 313 #>  [30658,] 578 313 #>  [30659,] 579 313 #>  [30660,] 580 313 #>  [30661,] 581 313 #>  [30662,] 582 313 #>  [30663,] 583 313 #>  [30664,] 584 313 #>  [30665,] 585 313 #>  [30666,] 586 313 #>  [30667,] 587 313 #>  [30668,] 588 313 #>  [30669,] 589 313 #>  [30670,] 590 313 #>  [30671,] 591 313 #>  [30672,] 592 313 #>  [30673,] 593 313 #>  [30674,] 594 313 #>  [30675,] 595 313 #>  [30676,] 596 313 #>  [30677,] 597 313 #>  [30678,] 598 313 #>  [30679,] 599 313 #>  [30680,] 600 313 #>  [30681,] 601 313 #>  [30682,] 602 313 #>  [30683,] 603 313 #>  [30684,] 604 313 #>  [30685,] 605 313 #>  [30686,] 606 313 #>  [30687,] 607 313 #>  [30688,] 608 313 #>  [30689,] 609 313 #>  [30690,] 610 313 #>  [30691,] 611 313 #>  [30692,] 612 313 #>  [30693,] 613 313 #>  [30694,] 614 313 #>  [30695,] 615 313 #>  [30696,] 616 313 #>  [30697,] 617 313 #>  [30698,] 618 313 #>  [30699,] 619 313 #>  [30700,] 620 313 #>  [30701,] 621 313 #>  [30702,] 622 313 #>  [30703,] 623 313 #>  [30704,] 624 313 #>  [30705,] 625 313 #>  [30706,] 626 313 #>  [30707,] 627 313 #>  [30708,] 628 313 #>  [30709,] 629 313 #>  [30710,] 630 313 #>  [30711,] 631 313 #>  [30712,] 632 313 #>  [30713,] 633 313 #>  [30714,] 634 313 #>  [30715,] 635 313 #>  [30716,] 636 313 #>  [30717,] 637 313 #>  [30718,] 638 313 #>  [30719,] 639 313 #>  [30720,] 640 313 #>  [30721,]   1 312 #>  [30722,]   2 312 #>  [30723,]   3 312 #>  [30724,]   4 312 #>  [30725,]   5 312 #>  [30726,]   6 312 #>  [30727,]   7 312 #>  [30728,]   8 312 #>  [30729,]   9 312 #>  [30730,]  10 312 #>  [30731,]  11 312 #>  [30732,]  12 312 #>  [30733,]  13 312 #>  [30734,]  14 312 #>  [30735,]  15 312 #>  [30736,]  16 312 #>  [30737,]  17 312 #>  [30738,]  18 312 #>  [30739,]  19 312 #>  [30740,]  20 312 #>  [30741,]  21 312 #>  [30742,]  22 312 #>  [30743,]  23 312 #>  [30744,]  24 312 #>  [30745,]  25 312 #>  [30746,]  26 312 #>  [30747,]  27 312 #>  [30748,]  28 312 #>  [30749,]  29 312 #>  [30750,]  30 312 #>  [30751,]  31 312 #>  [30752,]  32 312 #>  [30753,]  33 312 #>  [30754,]  34 312 #>  [30755,]  35 312 #>  [30756,]  36 312 #>  [30757,]  37 312 #>  [30758,]  38 312 #>  [30759,]  39 312 #>  [30760,]  40 312 #>  [30761,]  41 312 #>  [30762,]  42 312 #>  [30763,]  43 312 #>  [30764,]  44 312 #>  [30765,]  45 312 #>  [30766,]  46 312 #>  [30767,]  47 312 #>  [30768,]  48 312 #>  [30769,]  49 312 #>  [30770,]  50 312 #>  [30771,]  51 312 #>  [30772,]  52 312 #>  [30773,]  53 312 #>  [30774,]  54 312 #>  [30775,]  55 312 #>  [30776,]  56 312 #>  [30777,]  57 312 #>  [30778,]  58 312 #>  [30779,]  59 312 #>  [30780,]  60 312 #>  [30781,]  61 312 #>  [30782,]  62 312 #>  [30783,]  63 312 #>  [30784,]  64 312 #>  [30785,]  65 312 #>  [30786,]  66 312 #>  [30787,]  67 312 #>  [30788,]  68 312 #>  [30789,]  69 312 #>  [30790,]  70 312 #>  [30791,]  71 312 #>  [30792,]  72 312 #>  [30793,]  73 312 #>  [30794,]  74 312 #>  [30795,]  75 312 #>  [30796,]  76 312 #>  [30797,]  77 312 #>  [30798,]  78 312 #>  [30799,]  79 312 #>  [30800,]  80 312 #>  [30801,]  81 312 #>  [30802,]  82 312 #>  [30803,]  83 312 #>  [30804,]  84 312 #>  [30805,]  85 312 #>  [30806,]  86 312 #>  [30807,]  87 312 #>  [30808,]  88 312 #>  [30809,]  89 312 #>  [30810,]  90 312 #>  [30811,]  91 312 #>  [30812,]  92 312 #>  [30813,]  93 312 #>  [30814,]  94 312 #>  [30815,]  95 312 #>  [30816,]  96 312 #>  [30817,]  97 312 #>  [30818,]  98 312 #>  [30819,]  99 312 #>  [30820,] 100 312 #>  [30821,] 101 312 #>  [30822,] 102 312 #>  [30823,] 103 312 #>  [30824,] 104 312 #>  [30825,] 105 312 #>  [30826,] 106 312 #>  [30827,] 107 312 #>  [30828,] 108 312 #>  [30829,] 109 312 #>  [30830,] 110 312 #>  [30831,] 111 312 #>  [30832,] 112 312 #>  [30833,] 113 312 #>  [30834,] 114 312 #>  [30835,] 115 312 #>  [30836,] 116 312 #>  [30837,] 117 312 #>  [30838,] 118 312 #>  [30839,] 119 312 #>  [30840,] 120 312 #>  [30841,] 121 312 #>  [30842,] 122 312 #>  [30843,] 123 312 #>  [30844,] 124 312 #>  [30845,] 125 312 #>  [30846,] 126 312 #>  [30847,] 127 312 #>  [30848,] 128 312 #>  [30849,] 129 312 #>  [30850,] 130 312 #>  [30851,] 131 312 #>  [30852,] 132 312 #>  [30853,] 133 312 #>  [30854,] 134 312 #>  [30855,] 135 312 #>  [30856,] 136 312 #>  [30857,] 137 312 #>  [30858,] 138 312 #>  [30859,] 139 312 #>  [30860,] 140 312 #>  [30861,] 141 312 #>  [30862,] 142 312 #>  [30863,] 143 312 #>  [30864,] 144 312 #>  [30865,] 145 312 #>  [30866,] 146 312 #>  [30867,] 147 312 #>  [30868,] 148 312 #>  [30869,] 149 312 #>  [30870,] 150 312 #>  [30871,] 151 312 #>  [30872,] 152 312 #>  [30873,] 153 312 #>  [30874,] 154 312 #>  [30875,] 155 312 #>  [30876,] 156 312 #>  [30877,] 157 312 #>  [30878,] 158 312 #>  [30879,] 159 312 #>  [30880,] 160 312 #>  [30881,] 161 312 #>  [30882,] 162 312 #>  [30883,] 163 312 #>  [30884,] 164 312 #>  [30885,] 165 312 #>  [30886,] 166 312 #>  [30887,] 167 312 #>  [30888,] 168 312 #>  [30889,] 169 312 #>  [30890,] 170 312 #>  [30891,] 171 312 #>  [30892,] 172 312 #>  [30893,] 173 312 #>  [30894,] 174 312 #>  [30895,] 175 312 #>  [30896,] 176 312 #>  [30897,] 177 312 #>  [30898,] 178 312 #>  [30899,] 179 312 #>  [30900,] 180 312 #>  [30901,] 181 312 #>  [30902,] 182 312 #>  [30903,] 183 312 #>  [30904,] 184 312 #>  [30905,] 185 312 #>  [30906,] 186 312 #>  [30907,] 187 312 #>  [30908,] 188 312 #>  [30909,] 189 312 #>  [30910,] 190 312 #>  [30911,] 191 312 #>  [30912,] 192 312 #>  [30913,] 193 312 #>  [30914,] 194 312 #>  [30915,] 195 312 #>  [30916,] 196 312 #>  [30917,] 197 312 #>  [30918,] 198 312 #>  [30919,] 199 312 #>  [30920,] 200 312 #>  [30921,] 201 312 #>  [30922,] 202 312 #>  [30923,] 203 312 #>  [30924,] 204 312 #>  [30925,] 205 312 #>  [30926,] 206 312 #>  [30927,] 207 312 #>  [30928,] 208 312 #>  [30929,] 209 312 #>  [30930,] 210 312 #>  [30931,] 211 312 #>  [30932,] 212 312 #>  [30933,] 213 312 #>  [30934,] 214 312 #>  [30935,] 215 312 #>  [30936,] 216 312 #>  [30937,] 217 312 #>  [30938,] 218 312 #>  [30939,] 219 312 #>  [30940,] 220 312 #>  [30941,] 221 312 #>  [30942,] 222 312 #>  [30943,] 223 312 #>  [30944,] 224 312 #>  [30945,] 225 312 #>  [30946,] 226 312 #>  [30947,] 227 312 #>  [30948,] 228 312 #>  [30949,] 229 312 #>  [30950,] 230 312 #>  [30951,] 231 312 #>  [30952,] 232 312 #>  [30953,] 233 312 #>  [30954,] 234 312 #>  [30955,] 235 312 #>  [30956,] 236 312 #>  [30957,] 237 312 #>  [30958,] 238 312 #>  [30959,] 239 312 #>  [30960,] 240 312 #>  [30961,] 241 312 #>  [30962,] 242 312 #>  [30963,] 243 312 #>  [30964,] 244 312 #>  [30965,] 245 312 #>  [30966,] 246 312 #>  [30967,] 247 312 #>  [30968,] 248 312 #>  [30969,] 249 312 #>  [30970,] 250 312 #>  [30971,] 251 312 #>  [30972,] 252 312 #>  [30973,] 253 312 #>  [30974,] 254 312 #>  [30975,] 255 312 #>  [30976,] 256 312 #>  [30977,] 257 312 #>  [30978,] 258 312 #>  [30979,] 259 312 #>  [30980,] 260 312 #>  [30981,] 261 312 #>  [30982,] 262 312 #>  [30983,] 263 312 #>  [30984,] 264 312 #>  [30985,] 265 312 #>  [30986,] 266 312 #>  [30987,] 267 312 #>  [30988,] 268 312 #>  [30989,] 269 312 #>  [30990,] 270 312 #>  [30991,] 271 312 #>  [30992,] 272 312 #>  [30993,] 273 312 #>  [30994,] 274 312 #>  [30995,] 275 312 #>  [30996,] 276 312 #>  [30997,] 277 312 #>  [30998,] 278 312 #>  [30999,] 279 312 #>  [31000,] 280 312 #>  [31001,] 281 312 #>  [31002,] 282 312 #>  [31003,] 283 312 #>  [31004,] 284 312 #>  [31005,] 285 312 #>  [31006,] 286 312 #>  [31007,] 287 312 #>  [31008,] 288 312 #>  [31009,] 289 312 #>  [31010,] 290 312 #>  [31011,] 291 312 #>  [31012,] 292 312 #>  [31013,] 293 312 #>  [31014,] 294 312 #>  [31015,] 295 312 #>  [31016,] 296 312 #>  [31017,] 297 312 #>  [31018,] 298 312 #>  [31019,] 299 312 #>  [31020,] 300 312 #>  [31021,] 301 312 #>  [31022,] 302 312 #>  [31023,] 303 312 #>  [31024,] 304 312 #>  [31025,] 305 312 #>  [31026,] 306 312 #>  [31027,] 307 312 #>  [31028,] 308 312 #>  [31029,] 309 312 #>  [31030,] 310 312 #>  [31031,] 311 312 #>  [31032,] 312 312 #>  [31033,] 313 312 #>  [31034,] 314 312 #>  [31035,] 315 312 #>  [31036,] 316 312 #>  [31037,] 317 312 #>  [31038,] 318 312 #>  [31039,] 319 312 #>  [31040,] 320 312 #>  [31041,] 321 312 #>  [31042,] 322 312 #>  [31043,] 323 312 #>  [31044,] 324 312 #>  [31045,] 325 312 #>  [31046,] 326 312 #>  [31047,] 327 312 #>  [31048,] 328 312 #>  [31049,] 329 312 #>  [31050,] 330 312 #>  [31051,] 331 312 #>  [31052,] 332 312 #>  [31053,] 333 312 #>  [31054,] 334 312 #>  [31055,] 335 312 #>  [31056,] 336 312 #>  [31057,] 337 312 #>  [31058,] 338 312 #>  [31059,] 339 312 #>  [31060,] 340 312 #>  [31061,] 341 312 #>  [31062,] 342 312 #>  [31063,] 343 312 #>  [31064,] 344 312 #>  [31065,] 345 312 #>  [31066,] 346 312 #>  [31067,] 347 312 #>  [31068,] 348 312 #>  [31069,] 349 312 #>  [31070,] 350 312 #>  [31071,] 351 312 #>  [31072,] 352 312 #>  [31073,] 353 312 #>  [31074,] 354 312 #>  [31075,] 355 312 #>  [31076,] 356 312 #>  [31077,] 357 312 #>  [31078,] 358 312 #>  [31079,] 359 312 #>  [31080,] 360 312 #>  [31081,] 361 312 #>  [31082,] 362 312 #>  [31083,] 363 312 #>  [31084,] 364 312 #>  [31085,] 365 312 #>  [31086,] 366 312 #>  [31087,] 367 312 #>  [31088,] 368 312 #>  [31089,] 369 312 #>  [31090,] 370 312 #>  [31091,] 371 312 #>  [31092,] 372 312 #>  [31093,] 373 312 #>  [31094,] 374 312 #>  [31095,] 375 312 #>  [31096,] 376 312 #>  [31097,] 377 312 #>  [31098,] 378 312 #>  [31099,] 379 312 #>  [31100,] 380 312 #>  [31101,] 381 312 #>  [31102,] 382 312 #>  [31103,] 383 312 #>  [31104,] 384 312 #>  [31105,] 385 312 #>  [31106,] 386 312 #>  [31107,] 387 312 #>  [31108,] 388 312 #>  [31109,] 389 312 #>  [31110,] 390 312 #>  [31111,] 391 312 #>  [31112,] 392 312 #>  [31113,] 393 312 #>  [31114,] 394 312 #>  [31115,] 395 312 #>  [31116,] 396 312 #>  [31117,] 397 312 #>  [31118,] 398 312 #>  [31119,] 399 312 #>  [31120,] 400 312 #>  [31121,] 401 312 #>  [31122,] 402 312 #>  [31123,] 403 312 #>  [31124,] 404 312 #>  [31125,] 405 312 #>  [31126,] 406 312 #>  [31127,] 407 312 #>  [31128,] 408 312 #>  [31129,] 409 312 #>  [31130,] 410 312 #>  [31131,] 411 312 #>  [31132,] 412 312 #>  [31133,] 413 312 #>  [31134,] 414 312 #>  [31135,] 415 312 #>  [31136,] 416 312 #>  [31137,] 417 312 #>  [31138,] 418 312 #>  [31139,] 419 312 #>  [31140,] 420 312 #>  [31141,] 421 312 #>  [31142,] 422 312 #>  [31143,] 423 312 #>  [31144,] 424 312 #>  [31145,] 425 312 #>  [31146,] 426 312 #>  [31147,] 427 312 #>  [31148,] 428 312 #>  [31149,] 429 312 #>  [31150,] 430 312 #>  [31151,] 431 312 #>  [31152,] 432 312 #>  [31153,] 433 312 #>  [31154,] 434 312 #>  [31155,] 435 312 #>  [31156,] 436 312 #>  [31157,] 437 312 #>  [31158,] 438 312 #>  [31159,] 439 312 #>  [31160,] 440 312 #>  [31161,] 441 312 #>  [31162,] 442 312 #>  [31163,] 443 312 #>  [31164,] 444 312 #>  [31165,] 445 312 #>  [31166,] 446 312 #>  [31167,] 447 312 #>  [31168,] 448 312 #>  [31169,] 449 312 #>  [31170,] 450 312 #>  [31171,] 451 312 #>  [31172,] 452 312 #>  [31173,] 453 312 #>  [31174,] 454 312 #>  [31175,] 455 312 #>  [31176,] 456 312 #>  [31177,] 457 312 #>  [31178,] 458 312 #>  [31179,] 459 312 #>  [31180,] 460 312 #>  [31181,] 461 312 #>  [31182,] 462 312 #>  [31183,] 463 312 #>  [31184,] 464 312 #>  [31185,] 465 312 #>  [31186,] 466 312 #>  [31187,] 467 312 #>  [31188,] 468 312 #>  [31189,] 469 312 #>  [31190,] 470 312 #>  [31191,] 471 312 #>  [31192,] 472 312 #>  [31193,] 473 312 #>  [31194,] 474 312 #>  [31195,] 475 312 #>  [31196,] 476 312 #>  [31197,] 477 312 #>  [31198,] 478 312 #>  [31199,] 479 312 #>  [31200,] 480 312 #>  [31201,] 481 312 #>  [31202,] 482 312 #>  [31203,] 483 312 #>  [31204,] 484 312 #>  [31205,] 485 312 #>  [31206,] 486 312 #>  [31207,] 487 312 #>  [31208,] 488 312 #>  [31209,] 489 312 #>  [31210,] 490 312 #>  [31211,] 491 312 #>  [31212,] 492 312 #>  [31213,] 493 312 #>  [31214,] 494 312 #>  [31215,] 495 312 #>  [31216,] 496 312 #>  [31217,] 497 312 #>  [31218,] 498 312 #>  [31219,] 499 312 #>  [31220,] 500 312 #>  [31221,] 501 312 #>  [31222,] 502 312 #>  [31223,] 503 312 #>  [31224,] 504 312 #>  [31225,] 505 312 #>  [31226,] 506 312 #>  [31227,] 507 312 #>  [31228,] 508 312 #>  [31229,] 509 312 #>  [31230,] 510 312 #>  [31231,] 511 312 #>  [31232,] 512 312 #>  [31233,] 513 312 #>  [31234,] 514 312 #>  [31235,] 515 312 #>  [31236,] 516 312 #>  [31237,] 517 312 #>  [31238,] 518 312 #>  [31239,] 519 312 #>  [31240,] 520 312 #>  [31241,] 521 312 #>  [31242,] 522 312 #>  [31243,] 523 312 #>  [31244,] 524 312 #>  [31245,] 525 312 #>  [31246,] 526 312 #>  [31247,] 527 312 #>  [31248,] 528 312 #>  [31249,] 529 312 #>  [31250,] 530 312 #>  [31251,] 531 312 #>  [31252,] 532 312 #>  [31253,] 533 312 #>  [31254,] 534 312 #>  [31255,] 535 312 #>  [31256,] 536 312 #>  [31257,] 537 312 #>  [31258,] 538 312 #>  [31259,] 539 312 #>  [31260,] 540 312 #>  [31261,] 541 312 #>  [31262,] 542 312 #>  [31263,] 543 312 #>  [31264,] 544 312 #>  [31265,] 545 312 #>  [31266,] 546 312 #>  [31267,] 547 312 #>  [31268,] 548 312 #>  [31269,] 549 312 #>  [31270,] 550 312 #>  [31271,] 551 312 #>  [31272,] 552 312 #>  [31273,] 553 312 #>  [31274,] 554 312 #>  [31275,] 555 312 #>  [31276,] 556 312 #>  [31277,] 557 312 #>  [31278,] 558 312 #>  [31279,] 559 312 #>  [31280,] 560 312 #>  [31281,] 561 312 #>  [31282,] 562 312 #>  [31283,] 563 312 #>  [31284,] 564 312 #>  [31285,] 565 312 #>  [31286,] 566 312 #>  [31287,] 567 312 #>  [31288,] 568 312 #>  [31289,] 569 312 #>  [31290,] 570 312 #>  [31291,] 571 312 #>  [31292,] 572 312 #>  [31293,] 573 312 #>  [31294,] 574 312 #>  [31295,] 575 312 #>  [31296,] 576 312 #>  [31297,] 577 312 #>  [31298,] 578 312 #>  [31299,] 579 312 #>  [31300,] 580 312 #>  [31301,] 581 312 #>  [31302,] 582 312 #>  [31303,] 583 312 #>  [31304,] 584 312 #>  [31305,] 585 312 #>  [31306,] 586 312 #>  [31307,] 587 312 #>  [31308,] 588 312 #>  [31309,] 589 312 #>  [31310,] 590 312 #>  [31311,] 591 312 #>  [31312,] 592 312 #>  [31313,] 593 312 #>  [31314,] 594 312 #>  [31315,] 595 312 #>  [31316,] 596 312 #>  [31317,] 597 312 #>  [31318,] 598 312 #>  [31319,] 599 312 #>  [31320,] 600 312 #>  [31321,] 601 312 #>  [31322,] 602 312 #>  [31323,] 603 312 #>  [31324,] 604 312 #>  [31325,] 605 312 #>  [31326,] 606 312 #>  [31327,] 607 312 #>  [31328,] 608 312 #>  [31329,] 609 312 #>  [31330,] 610 312 #>  [31331,] 611 312 #>  [31332,] 612 312 #>  [31333,] 613 312 #>  [31334,] 614 312 #>  [31335,] 615 312 #>  [31336,] 616 312 #>  [31337,] 617 312 #>  [31338,] 618 312 #>  [31339,] 619 312 #>  [31340,] 620 312 #>  [31341,] 621 312 #>  [31342,] 622 312 #>  [31343,] 623 312 #>  [31344,] 624 312 #>  [31345,] 625 312 #>  [31346,] 626 312 #>  [31347,] 627 312 #>  [31348,] 628 312 #>  [31349,] 629 312 #>  [31350,] 630 312 #>  [31351,] 631 312 #>  [31352,] 632 312 #>  [31353,] 633 312 #>  [31354,] 634 312 #>  [31355,] 635 312 #>  [31356,] 636 312 #>  [31357,] 637 312 #>  [31358,] 638 312 #>  [31359,] 639 312 #>  [31360,] 640 312 #>  [31361,]   1 311 #>  [31362,]   2 311 #>  [31363,]   3 311 #>  [31364,]   4 311 #>  [31365,]   5 311 #>  [31366,]   6 311 #>  [31367,]   7 311 #>  [31368,]   8 311 #>  [31369,]   9 311 #>  [31370,]  10 311 #>  [31371,]  11 311 #>  [31372,]  12 311 #>  [31373,]  13 311 #>  [31374,]  14 311 #>  [31375,]  15 311 #>  [31376,]  16 311 #>  [31377,]  17 311 #>  [31378,]  18 311 #>  [31379,]  19 311 #>  [31380,]  20 311 #>  [31381,]  21 311 #>  [31382,]  22 311 #>  [31383,]  23 311 #>  [31384,]  24 311 #>  [31385,]  25 311 #>  [31386,]  26 311 #>  [31387,]  27 311 #>  [31388,]  28 311 #>  [31389,]  29 311 #>  [31390,]  30 311 #>  [31391,]  31 311 #>  [31392,]  32 311 #>  [31393,]  33 311 #>  [31394,]  34 311 #>  [31395,]  35 311 #>  [31396,]  36 311 #>  [31397,]  37 311 #>  [31398,]  38 311 #>  [31399,]  39 311 #>  [31400,]  40 311 #>  [31401,]  41 311 #>  [31402,]  42 311 #>  [31403,]  43 311 #>  [31404,]  44 311 #>  [31405,]  45 311 #>  [31406,]  46 311 #>  [31407,]  47 311 #>  [31408,]  48 311 #>  [31409,]  49 311 #>  [31410,]  50 311 #>  [31411,]  51 311 #>  [31412,]  52 311 #>  [31413,]  53 311 #>  [31414,]  54 311 #>  [31415,]  55 311 #>  [31416,]  56 311 #>  [31417,]  57 311 #>  [31418,]  58 311 #>  [31419,]  59 311 #>  [31420,]  60 311 #>  [31421,]  61 311 #>  [31422,]  62 311 #>  [31423,]  63 311 #>  [31424,]  64 311 #>  [31425,]  65 311 #>  [31426,]  66 311 #>  [31427,]  67 311 #>  [31428,]  68 311 #>  [31429,]  69 311 #>  [31430,]  70 311 #>  [31431,]  71 311 #>  [31432,]  72 311 #>  [31433,]  73 311 #>  [31434,]  74 311 #>  [31435,]  75 311 #>  [31436,]  76 311 #>  [31437,]  77 311 #>  [31438,]  78 311 #>  [31439,]  79 311 #>  [31440,]  80 311 #>  [31441,]  81 311 #>  [31442,]  82 311 #>  [31443,]  83 311 #>  [31444,]  84 311 #>  [31445,]  85 311 #>  [31446,]  86 311 #>  [31447,]  87 311 #>  [31448,]  88 311 #>  [31449,]  89 311 #>  [31450,]  90 311 #>  [31451,]  91 311 #>  [31452,]  92 311 #>  [31453,]  93 311 #>  [31454,]  94 311 #>  [31455,]  95 311 #>  [31456,]  96 311 #>  [31457,]  97 311 #>  [31458,]  98 311 #>  [31459,]  99 311 #>  [31460,] 100 311 #>  [31461,] 101 311 #>  [31462,] 102 311 #>  [31463,] 103 311 #>  [31464,] 104 311 #>  [31465,] 105 311 #>  [31466,] 106 311 #>  [31467,] 107 311 #>  [31468,] 108 311 #>  [31469,] 109 311 #>  [31470,] 110 311 #>  [31471,] 111 311 #>  [31472,] 112 311 #>  [31473,] 113 311 #>  [31474,] 114 311 #>  [31475,] 115 311 #>  [31476,] 116 311 #>  [31477,] 117 311 #>  [31478,] 118 311 #>  [31479,] 119 311 #>  [31480,] 120 311 #>  [31481,] 121 311 #>  [31482,] 122 311 #>  [31483,] 123 311 #>  [31484,] 124 311 #>  [31485,] 125 311 #>  [31486,] 126 311 #>  [31487,] 127 311 #>  [31488,] 128 311 #>  [31489,] 129 311 #>  [31490,] 130 311 #>  [31491,] 131 311 #>  [31492,] 132 311 #>  [31493,] 133 311 #>  [31494,] 134 311 #>  [31495,] 135 311 #>  [31496,] 136 311 #>  [31497,] 137 311 #>  [31498,] 138 311 #>  [31499,] 139 311 #>  [31500,] 140 311 #>  [31501,] 141 311 #>  [31502,] 142 311 #>  [31503,] 143 311 #>  [31504,] 144 311 #>  [31505,] 145 311 #>  [31506,] 146 311 #>  [31507,] 147 311 #>  [31508,] 148 311 #>  [31509,] 149 311 #>  [31510,] 150 311 #>  [31511,] 151 311 #>  [31512,] 152 311 #>  [31513,] 153 311 #>  [31514,] 154 311 #>  [31515,] 155 311 #>  [31516,] 156 311 #>  [31517,] 157 311 #>  [31518,] 158 311 #>  [31519,] 159 311 #>  [31520,] 160 311 #>  [31521,] 161 311 #>  [31522,] 162 311 #>  [31523,] 163 311 #>  [31524,] 164 311 #>  [31525,] 165 311 #>  [31526,] 166 311 #>  [31527,] 167 311 #>  [31528,] 168 311 #>  [31529,] 169 311 #>  [31530,] 170 311 #>  [31531,] 171 311 #>  [31532,] 172 311 #>  [31533,] 173 311 #>  [31534,] 174 311 #>  [31535,] 175 311 #>  [31536,] 176 311 #>  [31537,] 177 311 #>  [31538,] 178 311 #>  [31539,] 179 311 #>  [31540,] 180 311 #>  [31541,] 181 311 #>  [31542,] 182 311 #>  [31543,] 183 311 #>  [31544,] 184 311 #>  [31545,] 185 311 #>  [31546,] 186 311 #>  [31547,] 187 311 #>  [31548,] 188 311 #>  [31549,] 189 311 #>  [31550,] 190 311 #>  [31551,] 191 311 #>  [31552,] 192 311 #>  [31553,] 193 311 #>  [31554,] 194 311 #>  [31555,] 195 311 #>  [31556,] 196 311 #>  [31557,] 197 311 #>  [31558,] 198 311 #>  [31559,] 199 311 #>  [31560,] 200 311 #>  [31561,] 201 311 #>  [31562,] 202 311 #>  [31563,] 203 311 #>  [31564,] 204 311 #>  [31565,] 205 311 #>  [31566,] 206 311 #>  [31567,] 207 311 #>  [31568,] 208 311 #>  [31569,] 209 311 #>  [31570,] 210 311 #>  [31571,] 211 311 #>  [31572,] 212 311 #>  [31573,] 213 311 #>  [31574,] 214 311 #>  [31575,] 215 311 #>  [31576,] 216 311 #>  [31577,] 217 311 #>  [31578,] 218 311 #>  [31579,] 219 311 #>  [31580,] 220 311 #>  [31581,] 221 311 #>  [31582,] 222 311 #>  [31583,] 223 311 #>  [31584,] 224 311 #>  [31585,] 225 311 #>  [31586,] 226 311 #>  [31587,] 227 311 #>  [31588,] 228 311 #>  [31589,] 229 311 #>  [31590,] 230 311 #>  [31591,] 231 311 #>  [31592,] 232 311 #>  [31593,] 233 311 #>  [31594,] 234 311 #>  [31595,] 235 311 #>  [31596,] 236 311 #>  [31597,] 237 311 #>  [31598,] 238 311 #>  [31599,] 239 311 #>  [31600,] 240 311 #>  [31601,] 241 311 #>  [31602,] 242 311 #>  [31603,] 243 311 #>  [31604,] 244 311 #>  [31605,] 245 311 #>  [31606,] 246 311 #>  [31607,] 247 311 #>  [31608,] 248 311 #>  [31609,] 249 311 #>  [31610,] 250 311 #>  [31611,] 251 311 #>  [31612,] 252 311 #>  [31613,] 253 311 #>  [31614,] 254 311 #>  [31615,] 255 311 #>  [31616,] 256 311 #>  [31617,] 257 311 #>  [31618,] 258 311 #>  [31619,] 259 311 #>  [31620,] 260 311 #>  [31621,] 261 311 #>  [31622,] 262 311 #>  [31623,] 263 311 #>  [31624,] 264 311 #>  [31625,] 265 311 #>  [31626,] 266 311 #>  [31627,] 267 311 #>  [31628,] 268 311 #>  [31629,] 269 311 #>  [31630,] 270 311 #>  [31631,] 271 311 #>  [31632,] 272 311 #>  [31633,] 273 311 #>  [31634,] 274 311 #>  [31635,] 275 311 #>  [31636,] 276 311 #>  [31637,] 277 311 #>  [31638,] 278 311 #>  [31639,] 279 311 #>  [31640,] 280 311 #>  [31641,] 281 311 #>  [31642,] 282 311 #>  [31643,] 283 311 #>  [31644,] 284 311 #>  [31645,] 285 311 #>  [31646,] 286 311 #>  [31647,] 287 311 #>  [31648,] 288 311 #>  [31649,] 289 311 #>  [31650,] 290 311 #>  [31651,] 291 311 #>  [31652,] 292 311 #>  [31653,] 293 311 #>  [31654,] 294 311 #>  [31655,] 295 311 #>  [31656,] 296 311 #>  [31657,] 297 311 #>  [31658,] 298 311 #>  [31659,] 299 311 #>  [31660,] 300 311 #>  [31661,] 301 311 #>  [31662,] 302 311 #>  [31663,] 303 311 #>  [31664,] 304 311 #>  [31665,] 305 311 #>  [31666,] 306 311 #>  [31667,] 307 311 #>  [31668,] 308 311 #>  [31669,] 309 311 #>  [31670,] 310 311 #>  [31671,] 311 311 #>  [31672,] 312 311 #>  [31673,] 313 311 #>  [31674,] 314 311 #>  [31675,] 315 311 #>  [31676,] 316 311 #>  [31677,] 317 311 #>  [31678,] 318 311 #>  [31679,] 319 311 #>  [31680,] 320 311 #>  [31681,] 321 311 #>  [31682,] 322 311 #>  [31683,] 323 311 #>  [31684,] 324 311 #>  [31685,] 325 311 #>  [31686,] 326 311 #>  [31687,] 327 311 #>  [31688,] 328 311 #>  [31689,] 329 311 #>  [31690,] 330 311 #>  [31691,] 331 311 #>  [31692,] 332 311 #>  [31693,] 333 311 #>  [31694,] 334 311 #>  [31695,] 335 311 #>  [31696,] 336 311 #>  [31697,] 337 311 #>  [31698,] 338 311 #>  [31699,] 339 311 #>  [31700,] 340 311 #>  [31701,] 341 311 #>  [31702,] 342 311 #>  [31703,] 343 311 #>  [31704,] 344 311 #>  [31705,] 345 311 #>  [31706,] 346 311 #>  [31707,] 347 311 #>  [31708,] 348 311 #>  [31709,] 349 311 #>  [31710,] 350 311 #>  [31711,] 351 311 #>  [31712,] 352 311 #>  [31713,] 353 311 #>  [31714,] 354 311 #>  [31715,] 355 311 #>  [31716,] 356 311 #>  [31717,] 357 311 #>  [31718,] 358 311 #>  [31719,] 359 311 #>  [31720,] 360 311 #>  [31721,] 361 311 #>  [31722,] 362 311 #>  [31723,] 363 311 #>  [31724,] 364 311 #>  [31725,] 365 311 #>  [31726,] 366 311 #>  [31727,] 367 311 #>  [31728,] 368 311 #>  [31729,] 369 311 #>  [31730,] 370 311 #>  [31731,] 371 311 #>  [31732,] 372 311 #>  [31733,] 373 311 #>  [31734,] 374 311 #>  [31735,] 375 311 #>  [31736,] 376 311 #>  [31737,] 377 311 #>  [31738,] 378 311 #>  [31739,] 379 311 #>  [31740,] 380 311 #>  [31741,] 381 311 #>  [31742,] 382 311 #>  [31743,] 383 311 #>  [31744,] 384 311 #>  [31745,] 385 311 #>  [31746,] 386 311 #>  [31747,] 387 311 #>  [31748,] 388 311 #>  [31749,] 389 311 #>  [31750,] 390 311 #>  [31751,] 391 311 #>  [31752,] 392 311 #>  [31753,] 393 311 #>  [31754,] 394 311 #>  [31755,] 395 311 #>  [31756,] 396 311 #>  [31757,] 397 311 #>  [31758,] 398 311 #>  [31759,] 399 311 #>  [31760,] 400 311 #>  [31761,] 401 311 #>  [31762,] 402 311 #>  [31763,] 403 311 #>  [31764,] 404 311 #>  [31765,] 405 311 #>  [31766,] 406 311 #>  [31767,] 407 311 #>  [31768,] 408 311 #>  [31769,] 409 311 #>  [31770,] 410 311 #>  [31771,] 411 311 #>  [31772,] 412 311 #>  [31773,] 413 311 #>  [31774,] 414 311 #>  [31775,] 415 311 #>  [31776,] 416 311 #>  [31777,] 417 311 #>  [31778,] 418 311 #>  [31779,] 419 311 #>  [31780,] 420 311 #>  [31781,] 421 311 #>  [31782,] 422 311 #>  [31783,] 423 311 #>  [31784,] 424 311 #>  [31785,] 425 311 #>  [31786,] 426 311 #>  [31787,] 427 311 #>  [31788,] 428 311 #>  [31789,] 429 311 #>  [31790,] 430 311 #>  [31791,] 431 311 #>  [31792,] 432 311 #>  [31793,] 433 311 #>  [31794,] 434 311 #>  [31795,] 435 311 #>  [31796,] 436 311 #>  [31797,] 437 311 #>  [31798,] 438 311 #>  [31799,] 439 311 #>  [31800,] 440 311 #>  [31801,] 441 311 #>  [31802,] 442 311 #>  [31803,] 443 311 #>  [31804,] 444 311 #>  [31805,] 445 311 #>  [31806,] 446 311 #>  [31807,] 447 311 #>  [31808,] 448 311 #>  [31809,] 449 311 #>  [31810,] 450 311 #>  [31811,] 451 311 #>  [31812,] 452 311 #>  [31813,] 453 311 #>  [31814,] 454 311 #>  [31815,] 455 311 #>  [31816,] 456 311 #>  [31817,] 457 311 #>  [31818,] 458 311 #>  [31819,] 459 311 #>  [31820,] 460 311 #>  [31821,] 461 311 #>  [31822,] 462 311 #>  [31823,] 463 311 #>  [31824,] 464 311 #>  [31825,] 465 311 #>  [31826,] 466 311 #>  [31827,] 467 311 #>  [31828,] 468 311 #>  [31829,] 469 311 #>  [31830,] 470 311 #>  [31831,] 471 311 #>  [31832,] 472 311 #>  [31833,] 473 311 #>  [31834,] 474 311 #>  [31835,] 475 311 #>  [31836,] 476 311 #>  [31837,] 477 311 #>  [31838,] 478 311 #>  [31839,] 479 311 #>  [31840,] 480 311 #>  [31841,] 481 311 #>  [31842,] 482 311 #>  [31843,] 483 311 #>  [31844,] 484 311 #>  [31845,] 485 311 #>  [31846,] 486 311 #>  [31847,] 487 311 #>  [31848,] 488 311 #>  [31849,] 489 311 #>  [31850,] 490 311 #>  [31851,] 491 311 #>  [31852,] 492 311 #>  [31853,] 493 311 #>  [31854,] 494 311 #>  [31855,] 495 311 #>  [31856,] 496 311 #>  [31857,] 497 311 #>  [31858,] 498 311 #>  [31859,] 499 311 #>  [31860,] 500 311 #>  [31861,] 501 311 #>  [31862,] 502 311 #>  [31863,] 503 311 #>  [31864,] 504 311 #>  [31865,] 505 311 #>  [31866,] 506 311 #>  [31867,] 507 311 #>  [31868,] 508 311 #>  [31869,] 509 311 #>  [31870,] 510 311 #>  [31871,] 511 311 #>  [31872,] 512 311 #>  [31873,] 513 311 #>  [31874,] 514 311 #>  [31875,] 515 311 #>  [31876,] 516 311 #>  [31877,] 517 311 #>  [31878,] 518 311 #>  [31879,] 519 311 #>  [31880,] 520 311 #>  [31881,] 521 311 #>  [31882,] 522 311 #>  [31883,] 523 311 #>  [31884,] 524 311 #>  [31885,] 525 311 #>  [31886,] 526 311 #>  [31887,] 527 311 #>  [31888,] 528 311 #>  [31889,] 529 311 #>  [31890,] 530 311 #>  [31891,] 531 311 #>  [31892,] 532 311 #>  [31893,] 533 311 #>  [31894,] 534 311 #>  [31895,] 535 311 #>  [31896,] 536 311 #>  [31897,] 537 311 #>  [31898,] 538 311 #>  [31899,] 539 311 #>  [31900,] 540 311 #>  [31901,] 541 311 #>  [31902,] 542 311 #>  [31903,] 543 311 #>  [31904,] 544 311 #>  [31905,] 545 311 #>  [31906,] 546 311 #>  [31907,] 547 311 #>  [31908,] 548 311 #>  [31909,] 549 311 #>  [31910,] 550 311 #>  [31911,] 551 311 #>  [31912,] 552 311 #>  [31913,] 553 311 #>  [31914,] 554 311 #>  [31915,] 555 311 #>  [31916,] 556 311 #>  [31917,] 557 311 #>  [31918,] 558 311 #>  [31919,] 559 311 #>  [31920,] 560 311 #>  [31921,] 561 311 #>  [31922,] 562 311 #>  [31923,] 563 311 #>  [31924,] 564 311 #>  [31925,] 565 311 #>  [31926,] 566 311 #>  [31927,] 567 311 #>  [31928,] 568 311 #>  [31929,] 569 311 #>  [31930,] 570 311 #>  [31931,] 571 311 #>  [31932,] 572 311 #>  [31933,] 573 311 #>  [31934,] 574 311 #>  [31935,] 575 311 #>  [31936,] 576 311 #>  [31937,] 577 311 #>  [31938,] 578 311 #>  [31939,] 579 311 #>  [31940,] 580 311 #>  [31941,] 581 311 #>  [31942,] 582 311 #>  [31943,] 583 311 #>  [31944,] 584 311 #>  [31945,] 585 311 #>  [31946,] 586 311 #>  [31947,] 587 311 #>  [31948,] 588 311 #>  [31949,] 589 311 #>  [31950,] 590 311 #>  [31951,] 591 311 #>  [31952,] 592 311 #>  [31953,] 593 311 #>  [31954,] 594 311 #>  [31955,] 595 311 #>  [31956,] 596 311 #>  [31957,] 597 311 #>  [31958,] 598 311 #>  [31959,] 599 311 #>  [31960,] 600 311 #>  [31961,] 601 311 #>  [31962,] 602 311 #>  [31963,] 603 311 #>  [31964,] 604 311 #>  [31965,] 605 311 #>  [31966,] 606 311 #>  [31967,] 607 311 #>  [31968,] 608 311 #>  [31969,] 609 311 #>  [31970,] 610 311 #>  [31971,] 611 311 #>  [31972,] 612 311 #>  [31973,] 613 311 #>  [31974,] 614 311 #>  [31975,] 615 311 #>  [31976,] 616 311 #>  [31977,] 617 311 #>  [31978,] 618 311 #>  [31979,] 619 311 #>  [31980,] 620 311 #>  [31981,] 621 311 #>  [31982,] 622 311 #>  [31983,] 623 311 #>  [31984,] 624 311 #>  [31985,] 625 311 #>  [31986,] 626 311 #>  [31987,] 627 311 #>  [31988,] 628 311 #>  [31989,] 629 311 #>  [31990,] 630 311 #>  [31991,] 631 311 #>  [31992,] 632 311 #>  [31993,] 633 311 #>  [31994,] 634 311 #>  [31995,] 635 311 #>  [31996,] 636 311 #>  [31997,] 637 311 #>  [31998,] 638 311 #>  [31999,] 639 311 #>  [32000,] 640 311 #>  [32001,]   1 310 #>  [32002,]   2 310 #>  [32003,]   3 310 #>  [32004,]   4 310 #>  [32005,]   5 310 #>  [32006,]   6 310 #>  [32007,]   7 310 #>  [32008,]   8 310 #>  [32009,]   9 310 #>  [32010,]  10 310 #>  [32011,]  11 310 #>  [32012,]  12 310 #>  [32013,]  13 310 #>  [32014,]  14 310 #>  [32015,]  15 310 #>  [32016,]  16 310 #>  [32017,]  17 310 #>  [32018,]  18 310 #>  [32019,]  19 310 #>  [32020,]  20 310 #>  [32021,]  21 310 #>  [32022,]  22 310 #>  [32023,]  23 310 #>  [32024,]  24 310 #>  [32025,]  25 310 #>  [32026,]  26 310 #>  [32027,]  27 310 #>  [32028,]  28 310 #>  [32029,]  29 310 #>  [32030,]  30 310 #>  [32031,]  31 310 #>  [32032,]  32 310 #>  [32033,]  33 310 #>  [32034,]  34 310 #>  [32035,]  35 310 #>  [32036,]  36 310 #>  [32037,]  37 310 #>  [32038,]  38 310 #>  [32039,]  39 310 #>  [32040,]  40 310 #>  [32041,]  41 310 #>  [32042,]  42 310 #>  [32043,]  43 310 #>  [32044,]  44 310 #>  [32045,]  45 310 #>  [32046,]  46 310 #>  [32047,]  47 310 #>  [32048,]  48 310 #>  [32049,]  49 310 #>  [32050,]  50 310 #>  [32051,]  51 310 #>  [32052,]  52 310 #>  [32053,]  53 310 #>  [32054,]  54 310 #>  [32055,]  55 310 #>  [32056,]  56 310 #>  [32057,]  57 310 #>  [32058,]  58 310 #>  [32059,]  59 310 #>  [32060,]  60 310 #>  [32061,]  61 310 #>  [32062,]  62 310 #>  [32063,]  63 310 #>  [32064,]  64 310 #>  [32065,]  65 310 #>  [32066,]  66 310 #>  [32067,]  67 310 #>  [32068,]  68 310 #>  [32069,]  69 310 #>  [32070,]  70 310 #>  [32071,]  71 310 #>  [32072,]  72 310 #>  [32073,]  73 310 #>  [32074,]  74 310 #>  [32075,]  75 310 #>  [32076,]  76 310 #>  [32077,]  77 310 #>  [32078,]  78 310 #>  [32079,]  79 310 #>  [32080,]  80 310 #>  [32081,]  81 310 #>  [32082,]  82 310 #>  [32083,]  83 310 #>  [32084,]  84 310 #>  [32085,]  85 310 #>  [32086,]  86 310 #>  [32087,]  87 310 #>  [32088,]  88 310 #>  [32089,]  89 310 #>  [32090,]  90 310 #>  [32091,]  91 310 #>  [32092,]  92 310 #>  [32093,]  93 310 #>  [32094,]  94 310 #>  [32095,]  95 310 #>  [32096,]  96 310 #>  [32097,]  97 310 #>  [32098,]  98 310 #>  [32099,]  99 310 #>  [32100,] 100 310 #>  [32101,] 101 310 #>  [32102,] 102 310 #>  [32103,] 103 310 #>  [32104,] 104 310 #>  [32105,] 105 310 #>  [32106,] 106 310 #>  [32107,] 107 310 #>  [32108,] 108 310 #>  [32109,] 109 310 #>  [32110,] 110 310 #>  [32111,] 111 310 #>  [32112,] 112 310 #>  [32113,] 113 310 #>  [32114,] 114 310 #>  [32115,] 115 310 #>  [32116,] 116 310 #>  [32117,] 117 310 #>  [32118,] 118 310 #>  [32119,] 119 310 #>  [32120,] 120 310 #>  [32121,] 121 310 #>  [32122,] 122 310 #>  [32123,] 123 310 #>  [32124,] 124 310 #>  [32125,] 125 310 #>  [32126,] 126 310 #>  [32127,] 127 310 #>  [32128,] 128 310 #>  [32129,] 129 310 #>  [32130,] 130 310 #>  [32131,] 131 310 #>  [32132,] 132 310 #>  [32133,] 133 310 #>  [32134,] 134 310 #>  [32135,] 135 310 #>  [32136,] 136 310 #>  [32137,] 137 310 #>  [32138,] 138 310 #>  [32139,] 139 310 #>  [32140,] 140 310 #>  [32141,] 141 310 #>  [32142,] 142 310 #>  [32143,] 143 310 #>  [32144,] 144 310 #>  [32145,] 145 310 #>  [32146,] 146 310 #>  [32147,] 147 310 #>  [32148,] 148 310 #>  [32149,] 149 310 #>  [32150,] 150 310 #>  [32151,] 151 310 #>  [32152,] 152 310 #>  [32153,] 153 310 #>  [32154,] 154 310 #>  [32155,] 155 310 #>  [32156,] 156 310 #>  [32157,] 157 310 #>  [32158,] 158 310 #>  [32159,] 159 310 #>  [32160,] 160 310 #>  [32161,] 161 310 #>  [32162,] 162 310 #>  [32163,] 163 310 #>  [32164,] 164 310 #>  [32165,] 165 310 #>  [32166,] 166 310 #>  [32167,] 167 310 #>  [32168,] 168 310 #>  [32169,] 169 310 #>  [32170,] 170 310 #>  [32171,] 171 310 #>  [32172,] 172 310 #>  [32173,] 173 310 #>  [32174,] 174 310 #>  [32175,] 175 310 #>  [32176,] 176 310 #>  [32177,] 177 310 #>  [32178,] 178 310 #>  [32179,] 179 310 #>  [32180,] 180 310 #>  [32181,] 181 310 #>  [32182,] 182 310 #>  [32183,] 183 310 #>  [32184,] 184 310 #>  [32185,] 185 310 #>  [32186,] 186 310 #>  [32187,] 187 310 #>  [32188,] 188 310 #>  [32189,] 189 310 #>  [32190,] 190 310 #>  [32191,] 191 310 #>  [32192,] 192 310 #>  [32193,] 193 310 #>  [32194,] 194 310 #>  [32195,] 195 310 #>  [32196,] 196 310 #>  [32197,] 197 310 #>  [32198,] 198 310 #>  [32199,] 199 310 #>  [32200,] 200 310 #>  [32201,] 201 310 #>  [32202,] 202 310 #>  [32203,] 203 310 #>  [32204,] 204 310 #>  [32205,] 205 310 #>  [32206,] 206 310 #>  [32207,] 207 310 #>  [32208,] 208 310 #>  [32209,] 209 310 #>  [32210,] 210 310 #>  [32211,] 211 310 #>  [32212,] 212 310 #>  [32213,] 213 310 #>  [32214,] 214 310 #>  [32215,] 215 310 #>  [32216,] 216 310 #>  [32217,] 217 310 #>  [32218,] 218 310 #>  [32219,] 219 310 #>  [32220,] 220 310 #>  [32221,] 221 310 #>  [32222,] 222 310 #>  [32223,] 223 310 #>  [32224,] 224 310 #>  [32225,] 225 310 #>  [32226,] 226 310 #>  [32227,] 227 310 #>  [32228,] 228 310 #>  [32229,] 229 310 #>  [32230,] 230 310 #>  [32231,] 231 310 #>  [32232,] 232 310 #>  [32233,] 233 310 #>  [32234,] 234 310 #>  [32235,] 235 310 #>  [32236,] 236 310 #>  [32237,] 237 310 #>  [32238,] 238 310 #>  [32239,] 239 310 #>  [32240,] 240 310 #>  [32241,] 241 310 #>  [32242,] 242 310 #>  [32243,] 243 310 #>  [32244,] 244 310 #>  [32245,] 245 310 #>  [32246,] 246 310 #>  [32247,] 247 310 #>  [32248,] 248 310 #>  [32249,] 249 310 #>  [32250,] 250 310 #>  [32251,] 251 310 #>  [32252,] 252 310 #>  [32253,] 253 310 #>  [32254,] 254 310 #>  [32255,] 255 310 #>  [32256,] 256 310 #>  [32257,] 257 310 #>  [32258,] 258 310 #>  [32259,] 259 310 #>  [32260,] 260 310 #>  [32261,] 261 310 #>  [32262,] 262 310 #>  [32263,] 263 310 #>  [32264,] 264 310 #>  [32265,] 265 310 #>  [32266,] 266 310 #>  [32267,] 267 310 #>  [32268,] 268 310 #>  [32269,] 269 310 #>  [32270,] 270 310 #>  [32271,] 271 310 #>  [32272,] 272 310 #>  [32273,] 273 310 #>  [32274,] 274 310 #>  [32275,] 275 310 #>  [32276,] 276 310 #>  [32277,] 277 310 #>  [32278,] 278 310 #>  [32279,] 279 310 #>  [32280,] 280 310 #>  [32281,] 281 310 #>  [32282,] 282 310 #>  [32283,] 283 310 #>  [32284,] 284 310 #>  [32285,] 285 310 #>  [32286,] 286 310 #>  [32287,] 287 310 #>  [32288,] 288 310 #>  [32289,] 289 310 #>  [32290,] 290 310 #>  [32291,] 291 310 #>  [32292,] 292 310 #>  [32293,] 293 310 #>  [32294,] 294 310 #>  [32295,] 295 310 #>  [32296,] 296 310 #>  [32297,] 297 310 #>  [32298,] 298 310 #>  [32299,] 299 310 #>  [32300,] 300 310 #>  [32301,] 301 310 #>  [32302,] 302 310 #>  [32303,] 303 310 #>  [32304,] 304 310 #>  [32305,] 305 310 #>  [32306,] 306 310 #>  [32307,] 307 310 #>  [32308,] 308 310 #>  [32309,] 309 310 #>  [32310,] 310 310 #>  [32311,] 311 310 #>  [32312,] 312 310 #>  [32313,] 313 310 #>  [32314,] 314 310 #>  [32315,] 315 310 #>  [32316,] 316 310 #>  [32317,] 317 310 #>  [32318,] 318 310 #>  [32319,] 319 310 #>  [32320,] 320 310 #>  [32321,] 321 310 #>  [32322,] 322 310 #>  [32323,] 323 310 #>  [32324,] 324 310 #>  [32325,] 325 310 #>  [32326,] 326 310 #>  [32327,] 327 310 #>  [32328,] 328 310 #>  [32329,] 329 310 #>  [32330,] 330 310 #>  [32331,] 331 310 #>  [32332,] 332 310 #>  [32333,] 333 310 #>  [32334,] 334 310 #>  [32335,] 335 310 #>  [32336,] 336 310 #>  [32337,] 337 310 #>  [32338,] 338 310 #>  [32339,] 339 310 #>  [32340,] 340 310 #>  [32341,] 341 310 #>  [32342,] 342 310 #>  [32343,] 343 310 #>  [32344,] 344 310 #>  [32345,] 345 310 #>  [32346,] 346 310 #>  [32347,] 347 310 #>  [32348,] 348 310 #>  [32349,] 349 310 #>  [32350,] 350 310 #>  [32351,] 351 310 #>  [32352,] 352 310 #>  [32353,] 353 310 #>  [32354,] 354 310 #>  [32355,] 355 310 #>  [32356,] 356 310 #>  [32357,] 357 310 #>  [32358,] 358 310 #>  [32359,] 359 310 #>  [32360,] 360 310 #>  [32361,] 361 310 #>  [32362,] 362 310 #>  [32363,] 363 310 #>  [32364,] 364 310 #>  [32365,] 365 310 #>  [32366,] 366 310 #>  [32367,] 367 310 #>  [32368,] 368 310 #>  [32369,] 369 310 #>  [32370,] 370 310 #>  [32371,] 371 310 #>  [32372,] 372 310 #>  [32373,] 373 310 #>  [32374,] 374 310 #>  [32375,] 375 310 #>  [32376,] 376 310 #>  [32377,] 377 310 #>  [32378,] 378 310 #>  [32379,] 379 310 #>  [32380,] 380 310 #>  [32381,] 381 310 #>  [32382,] 382 310 #>  [32383,] 383 310 #>  [32384,] 384 310 #>  [32385,] 385 310 #>  [32386,] 386 310 #>  [32387,] 387 310 #>  [32388,] 388 310 #>  [32389,] 389 310 #>  [32390,] 390 310 #>  [32391,] 391 310 #>  [32392,] 392 310 #>  [32393,] 393 310 #>  [32394,] 394 310 #>  [32395,] 395 310 #>  [32396,] 396 310 #>  [32397,] 397 310 #>  [32398,] 398 310 #>  [32399,] 399 310 #>  [32400,] 400 310 #>  [32401,] 401 310 #>  [32402,] 402 310 #>  [32403,] 403 310 #>  [32404,] 404 310 #>  [32405,] 405 310 #>  [32406,] 406 310 #>  [32407,] 407 310 #>  [32408,] 408 310 #>  [32409,] 409 310 #>  [32410,] 410 310 #>  [32411,] 411 310 #>  [32412,] 412 310 #>  [32413,] 413 310 #>  [32414,] 414 310 #>  [32415,] 415 310 #>  [32416,] 416 310 #>  [32417,] 417 310 #>  [32418,] 418 310 #>  [32419,] 419 310 #>  [32420,] 420 310 #>  [32421,] 421 310 #>  [32422,] 422 310 #>  [32423,] 423 310 #>  [32424,] 424 310 #>  [32425,] 425 310 #>  [32426,] 426 310 #>  [32427,] 427 310 #>  [32428,] 428 310 #>  [32429,] 429 310 #>  [32430,] 430 310 #>  [32431,] 431 310 #>  [32432,] 432 310 #>  [32433,] 433 310 #>  [32434,] 434 310 #>  [32435,] 435 310 #>  [32436,] 436 310 #>  [32437,] 437 310 #>  [32438,] 438 310 #>  [32439,] 439 310 #>  [32440,] 440 310 #>  [32441,] 441 310 #>  [32442,] 442 310 #>  [32443,] 443 310 #>  [32444,] 444 310 #>  [32445,] 445 310 #>  [32446,] 446 310 #>  [32447,] 447 310 #>  [32448,] 448 310 #>  [32449,] 449 310 #>  [32450,] 450 310 #>  [32451,] 451 310 #>  [32452,] 452 310 #>  [32453,] 453 310 #>  [32454,] 454 310 #>  [32455,] 455 310 #>  [32456,] 456 310 #>  [32457,] 457 310 #>  [32458,] 458 310 #>  [32459,] 459 310 #>  [32460,] 460 310 #>  [32461,] 461 310 #>  [32462,] 462 310 #>  [32463,] 463 310 #>  [32464,] 464 310 #>  [32465,] 465 310 #>  [32466,] 466 310 #>  [32467,] 467 310 #>  [32468,] 468 310 #>  [32469,] 469 310 #>  [32470,] 470 310 #>  [32471,] 471 310 #>  [32472,] 472 310 #>  [32473,] 473 310 #>  [32474,] 474 310 #>  [32475,] 475 310 #>  [32476,] 476 310 #>  [32477,] 477 310 #>  [32478,] 478 310 #>  [32479,] 479 310 #>  [32480,] 480 310 #>  [32481,] 481 310 #>  [32482,] 482 310 #>  [32483,] 483 310 #>  [32484,] 484 310 #>  [32485,] 485 310 #>  [32486,] 486 310 #>  [32487,] 487 310 #>  [32488,] 488 310 #>  [32489,] 489 310 #>  [32490,] 490 310 #>  [32491,] 491 310 #>  [32492,] 492 310 #>  [32493,] 493 310 #>  [32494,] 494 310 #>  [32495,] 495 310 #>  [32496,] 496 310 #>  [32497,] 497 310 #>  [32498,] 498 310 #>  [32499,] 499 310 #>  [32500,] 500 310 #>  [32501,] 501 310 #>  [32502,] 502 310 #>  [32503,] 503 310 #>  [32504,] 504 310 #>  [32505,] 505 310 #>  [32506,] 506 310 #>  [32507,] 507 310 #>  [32508,] 508 310 #>  [32509,] 509 310 #>  [32510,] 510 310 #>  [32511,] 511 310 #>  [32512,] 512 310 #>  [32513,] 513 310 #>  [32514,] 514 310 #>  [32515,] 515 310 #>  [32516,] 516 310 #>  [32517,] 517 310 #>  [32518,] 518 310 #>  [32519,] 519 310 #>  [32520,] 520 310 #>  [32521,] 521 310 #>  [32522,] 522 310 #>  [32523,] 523 310 #>  [32524,] 524 310 #>  [32525,] 525 310 #>  [32526,] 526 310 #>  [32527,] 527 310 #>  [32528,] 528 310 #>  [32529,] 529 310 #>  [32530,] 530 310 #>  [32531,] 531 310 #>  [32532,] 532 310 #>  [32533,] 533 310 #>  [32534,] 534 310 #>  [32535,] 535 310 #>  [32536,] 536 310 #>  [32537,] 537 310 #>  [32538,] 538 310 #>  [32539,] 539 310 #>  [32540,] 540 310 #>  [32541,] 541 310 #>  [32542,] 542 310 #>  [32543,] 543 310 #>  [32544,] 544 310 #>  [32545,] 545 310 #>  [32546,] 546 310 #>  [32547,] 547 310 #>  [32548,] 548 310 #>  [32549,] 549 310 #>  [32550,] 550 310 #>  [32551,] 551 310 #>  [32552,] 552 310 #>  [32553,] 553 310 #>  [32554,] 554 310 #>  [32555,] 555 310 #>  [32556,] 556 310 #>  [32557,] 557 310 #>  [32558,] 558 310 #>  [32559,] 559 310 #>  [32560,] 560 310 #>  [32561,] 561 310 #>  [32562,] 562 310 #>  [32563,] 563 310 #>  [32564,] 564 310 #>  [32565,] 565 310 #>  [32566,] 566 310 #>  [32567,] 567 310 #>  [32568,] 568 310 #>  [32569,] 569 310 #>  [32570,] 570 310 #>  [32571,] 571 310 #>  [32572,] 572 310 #>  [32573,] 573 310 #>  [32574,] 574 310 #>  [32575,] 575 310 #>  [32576,] 576 310 #>  [32577,] 577 310 #>  [32578,] 578 310 #>  [32579,] 579 310 #>  [32580,] 580 310 #>  [32581,] 581 310 #>  [32582,] 582 310 #>  [32583,] 583 310 #>  [32584,] 584 310 #>  [32585,] 585 310 #>  [32586,] 586 310 #>  [32587,] 587 310 #>  [32588,] 588 310 #>  [32589,] 589 310 #>  [32590,] 590 310 #>  [32591,] 591 310 #>  [32592,] 592 310 #>  [32593,] 593 310 #>  [32594,] 594 310 #>  [32595,] 595 310 #>  [32596,] 596 310 #>  [32597,] 597 310 #>  [32598,] 598 310 #>  [32599,] 599 310 #>  [32600,] 600 310 #>  [32601,] 601 310 #>  [32602,] 602 310 #>  [32603,] 603 310 #>  [32604,] 604 310 #>  [32605,] 605 310 #>  [32606,] 606 310 #>  [32607,] 607 310 #>  [32608,] 608 310 #>  [32609,] 609 310 #>  [32610,] 610 310 #>  [32611,] 611 310 #>  [32612,] 612 310 #>  [32613,] 613 310 #>  [32614,] 614 310 #>  [32615,] 615 310 #>  [32616,] 616 310 #>  [32617,] 617 310 #>  [32618,] 618 310 #>  [32619,] 619 310 #>  [32620,] 620 310 #>  [32621,] 621 310 #>  [32622,] 622 310 #>  [32623,] 623 310 #>  [32624,] 624 310 #>  [32625,] 625 310 #>  [32626,] 626 310 #>  [32627,] 627 310 #>  [32628,] 628 310 #>  [32629,] 629 310 #>  [32630,] 630 310 #>  [32631,] 631 310 #>  [32632,] 632 310 #>  [32633,] 633 310 #>  [32634,] 634 310 #>  [32635,] 635 310 #>  [32636,] 636 310 #>  [32637,] 637 310 #>  [32638,] 638 310 #>  [32639,] 639 310 #>  [32640,] 640 310 #>  [32641,]   1 309 #>  [32642,]   2 309 #>  [32643,]   3 309 #>  [32644,]   4 309 #>  [32645,]   5 309 #>  [32646,]   6 309 #>  [32647,]   7 309 #>  [32648,]   8 309 #>  [32649,]   9 309 #>  [32650,]  10 309 #>  [32651,]  11 309 #>  [32652,]  12 309 #>  [32653,]  13 309 #>  [32654,]  14 309 #>  [32655,]  15 309 #>  [32656,]  16 309 #>  [32657,]  17 309 #>  [32658,]  18 309 #>  [32659,]  19 309 #>  [32660,]  20 309 #>  [32661,]  21 309 #>  [32662,]  22 309 #>  [32663,]  23 309 #>  [32664,]  24 309 #>  [32665,]  25 309 #>  [32666,]  26 309 #>  [32667,]  27 309 #>  [32668,]  28 309 #>  [32669,]  29 309 #>  [32670,]  30 309 #>  [32671,]  31 309 #>  [32672,]  32 309 #>  [32673,]  33 309 #>  [32674,]  34 309 #>  [32675,]  35 309 #>  [32676,]  36 309 #>  [32677,]  37 309 #>  [32678,]  38 309 #>  [32679,]  39 309 #>  [32680,]  40 309 #>  [32681,]  41 309 #>  [32682,]  42 309 #>  [32683,]  43 309 #>  [32684,]  44 309 #>  [32685,]  45 309 #>  [32686,]  46 309 #>  [32687,]  47 309 #>  [32688,]  48 309 #>  [32689,]  49 309 #>  [32690,]  50 309 #>  [32691,]  51 309 #>  [32692,]  52 309 #>  [32693,]  53 309 #>  [32694,]  54 309 #>  [32695,]  55 309 #>  [32696,]  56 309 #>  [32697,]  57 309 #>  [32698,]  58 309 #>  [32699,]  59 309 #>  [32700,]  60 309 #>  [32701,]  61 309 #>  [32702,]  62 309 #>  [32703,]  63 309 #>  [32704,]  64 309 #>  [32705,]  65 309 #>  [32706,]  66 309 #>  [32707,]  67 309 #>  [32708,]  68 309 #>  [32709,]  69 309 #>  [32710,]  70 309 #>  [32711,]  71 309 #>  [32712,]  72 309 #>  [32713,]  73 309 #>  [32714,]  74 309 #>  [32715,]  75 309 #>  [32716,]  76 309 #>  [32717,]  77 309 #>  [32718,]  78 309 #>  [32719,]  79 309 #>  [32720,]  80 309 #>  [32721,]  81 309 #>  [32722,]  82 309 #>  [32723,]  83 309 #>  [32724,]  84 309 #>  [32725,]  85 309 #>  [32726,]  86 309 #>  [32727,]  87 309 #>  [32728,]  88 309 #>  [32729,]  89 309 #>  [32730,]  90 309 #>  [32731,]  91 309 #>  [32732,]  92 309 #>  [32733,]  93 309 #>  [32734,]  94 309 #>  [32735,]  95 309 #>  [32736,]  96 309 #>  [32737,]  97 309 #>  [32738,]  98 309 #>  [32739,]  99 309 #>  [32740,] 100 309 #>  [32741,] 101 309 #>  [32742,] 102 309 #>  [32743,] 103 309 #>  [32744,] 104 309 #>  [32745,] 105 309 #>  [32746,] 106 309 #>  [32747,] 107 309 #>  [32748,] 108 309 #>  [32749,] 109 309 #>  [32750,] 110 309 #>  [32751,] 111 309 #>  [32752,] 112 309 #>  [32753,] 113 309 #>  [32754,] 114 309 #>  [32755,] 115 309 #>  [32756,] 116 309 #>  [32757,] 117 309 #>  [32758,] 118 309 #>  [32759,] 119 309 #>  [32760,] 120 309 #>  [32761,] 121 309 #>  [32762,] 122 309 #>  [32763,] 123 309 #>  [32764,] 124 309 #>  [32765,] 125 309 #>  [32766,] 126 309 #>  [32767,] 127 309 #>  [32768,] 128 309 #>  [32769,] 129 309 #>  [32770,] 130 309 #>  [32771,] 131 309 #>  [32772,] 132 309 #>  [32773,] 133 309 #>  [32774,] 134 309 #>  [32775,] 135 309 #>  [32776,] 136 309 #>  [32777,] 137 309 #>  [32778,] 138 309 #>  [32779,] 139 309 #>  [32780,] 140 309 #>  [32781,] 141 309 #>  [32782,] 142 309 #>  [32783,] 143 309 #>  [32784,] 144 309 #>  [32785,] 145 309 #>  [32786,] 146 309 #>  [32787,] 147 309 #>  [32788,] 148 309 #>  [32789,] 149 309 #>  [32790,] 150 309 #>  [32791,] 151 309 #>  [32792,] 152 309 #>  [32793,] 153 309 #>  [32794,] 154 309 #>  [32795,] 155 309 #>  [32796,] 156 309 #>  [32797,] 157 309 #>  [32798,] 158 309 #>  [32799,] 159 309 #>  [32800,] 160 309 #>  [32801,] 161 309 #>  [32802,] 162 309 #>  [32803,] 163 309 #>  [32804,] 164 309 #>  [32805,] 165 309 #>  [32806,] 166 309 #>  [32807,] 167 309 #>  [32808,] 168 309 #>  [32809,] 169 309 #>  [32810,] 170 309 #>  [32811,] 171 309 #>  [32812,] 172 309 #>  [32813,] 173 309 #>  [32814,] 174 309 #>  [32815,] 175 309 #>  [32816,] 176 309 #>  [32817,] 177 309 #>  [32818,] 178 309 #>  [32819,] 179 309 #>  [32820,] 180 309 #>  [32821,] 181 309 #>  [32822,] 182 309 #>  [32823,] 183 309 #>  [32824,] 184 309 #>  [32825,] 185 309 #>  [32826,] 186 309 #>  [32827,] 187 309 #>  [32828,] 188 309 #>  [32829,] 189 309 #>  [32830,] 190 309 #>  [32831,] 191 309 #>  [32832,] 192 309 #>  [32833,] 193 309 #>  [32834,] 194 309 #>  [32835,] 195 309 #>  [32836,] 196 309 #>  [32837,] 197 309 #>  [32838,] 198 309 #>  [32839,] 199 309 #>  [32840,] 200 309 #>  [32841,] 201 309 #>  [32842,] 202 309 #>  [32843,] 203 309 #>  [32844,] 204 309 #>  [32845,] 205 309 #>  [32846,] 206 309 #>  [32847,] 207 309 #>  [32848,] 208 309 #>  [32849,] 209 309 #>  [32850,] 210 309 #>  [32851,] 211 309 #>  [32852,] 212 309 #>  [32853,] 213 309 #>  [32854,] 214 309 #>  [32855,] 215 309 #>  [32856,] 216 309 #>  [32857,] 217 309 #>  [32858,] 218 309 #>  [32859,] 219 309 #>  [32860,] 220 309 #>  [32861,] 221 309 #>  [32862,] 222 309 #>  [32863,] 223 309 #>  [32864,] 224 309 #>  [32865,] 225 309 #>  [32866,] 226 309 #>  [32867,] 227 309 #>  [32868,] 228 309 #>  [32869,] 229 309 #>  [32870,] 230 309 #>  [32871,] 231 309 #>  [32872,] 232 309 #>  [32873,] 233 309 #>  [32874,] 234 309 #>  [32875,] 235 309 #>  [32876,] 236 309 #>  [32877,] 237 309 #>  [32878,] 238 309 #>  [32879,] 239 309 #>  [32880,] 240 309 #>  [32881,] 241 309 #>  [32882,] 242 309 #>  [32883,] 243 309 #>  [32884,] 244 309 #>  [32885,] 245 309 #>  [32886,] 246 309 #>  [32887,] 247 309 #>  [32888,] 248 309 #>  [32889,] 249 309 #>  [32890,] 250 309 #>  [32891,] 251 309 #>  [32892,] 252 309 #>  [32893,] 253 309 #>  [32894,] 254 309 #>  [32895,] 255 309 #>  [32896,] 256 309 #>  [32897,] 257 309 #>  [32898,] 258 309 #>  [32899,] 259 309 #>  [32900,] 260 309 #>  [32901,] 261 309 #>  [32902,] 262 309 #>  [32903,] 263 309 #>  [32904,] 264 309 #>  [32905,] 265 309 #>  [32906,] 266 309 #>  [32907,] 267 309 #>  [32908,] 268 309 #>  [32909,] 269 309 #>  [32910,] 270 309 #>  [32911,] 271 309 #>  [32912,] 272 309 #>  [32913,] 273 309 #>  [32914,] 274 309 #>  [32915,] 275 309 #>  [32916,] 276 309 #>  [32917,] 277 309 #>  [32918,] 278 309 #>  [32919,] 279 309 #>  [32920,] 280 309 #>  [32921,] 281 309 #>  [32922,] 282 309 #>  [32923,] 283 309 #>  [32924,] 284 309 #>  [32925,] 285 309 #>  [32926,] 286 309 #>  [32927,] 287 309 #>  [32928,] 288 309 #>  [32929,] 289 309 #>  [32930,] 290 309 #>  [32931,] 291 309 #>  [32932,] 292 309 #>  [32933,] 293 309 #>  [32934,] 294 309 #>  [32935,] 295 309 #>  [32936,] 296 309 #>  [32937,] 297 309 #>  [32938,] 298 309 #>  [32939,] 299 309 #>  [32940,] 300 309 #>  [32941,] 301 309 #>  [32942,] 302 309 #>  [32943,] 303 309 #>  [32944,] 304 309 #>  [32945,] 305 309 #>  [32946,] 306 309 #>  [32947,] 307 309 #>  [32948,] 308 309 #>  [32949,] 309 309 #>  [32950,] 310 309 #>  [32951,] 311 309 #>  [32952,] 312 309 #>  [32953,] 313 309 #>  [32954,] 314 309 #>  [32955,] 315 309 #>  [32956,] 316 309 #>  [32957,] 317 309 #>  [32958,] 318 309 #>  [32959,] 319 309 #>  [32960,] 320 309 #>  [32961,] 321 309 #>  [32962,] 322 309 #>  [32963,] 323 309 #>  [32964,] 324 309 #>  [32965,] 325 309 #>  [32966,] 326 309 #>  [32967,] 327 309 #>  [32968,] 328 309 #>  [32969,] 329 309 #>  [32970,] 330 309 #>  [32971,] 331 309 #>  [32972,] 332 309 #>  [32973,] 333 309 #>  [32974,] 334 309 #>  [32975,] 335 309 #>  [32976,] 336 309 #>  [32977,] 337 309 #>  [32978,] 338 309 #>  [32979,] 339 309 #>  [32980,] 340 309 #>  [32981,] 341 309 #>  [32982,] 342 309 #>  [32983,] 343 309 #>  [32984,] 344 309 #>  [32985,] 345 309 #>  [32986,] 346 309 #>  [32987,] 347 309 #>  [32988,] 348 309 #>  [32989,] 349 309 #>  [32990,] 350 309 #>  [32991,] 351 309 #>  [32992,] 352 309 #>  [32993,] 353 309 #>  [32994,] 354 309 #>  [32995,] 355 309 #>  [32996,] 356 309 #>  [32997,] 357 309 #>  [32998,] 358 309 #>  [32999,] 359 309 #>  [33000,] 360 309 #>  [33001,] 361 309 #>  [33002,] 362 309 #>  [33003,] 363 309 #>  [33004,] 364 309 #>  [33005,] 365 309 #>  [33006,] 366 309 #>  [33007,] 367 309 #>  [33008,] 368 309 #>  [33009,] 369 309 #>  [33010,] 370 309 #>  [33011,] 371 309 #>  [33012,] 372 309 #>  [33013,] 373 309 #>  [33014,] 374 309 #>  [33015,] 375 309 #>  [33016,] 376 309 #>  [33017,] 377 309 #>  [33018,] 378 309 #>  [33019,] 379 309 #>  [33020,] 380 309 #>  [33021,] 381 309 #>  [33022,] 382 309 #>  [33023,] 383 309 #>  [33024,] 384 309 #>  [33025,] 385 309 #>  [33026,] 386 309 #>  [33027,] 387 309 #>  [33028,] 388 309 #>  [33029,] 389 309 #>  [33030,] 390 309 #>  [33031,] 391 309 #>  [33032,] 392 309 #>  [33033,] 393 309 #>  [33034,] 394 309 #>  [33035,] 395 309 #>  [33036,] 396 309 #>  [33037,] 397 309 #>  [33038,] 398 309 #>  [33039,] 399 309 #>  [33040,] 400 309 #>  [33041,] 401 309 #>  [33042,] 402 309 #>  [33043,] 403 309 #>  [33044,] 404 309 #>  [33045,] 405 309 #>  [33046,] 406 309 #>  [33047,] 407 309 #>  [33048,] 408 309 #>  [33049,] 409 309 #>  [33050,] 410 309 #>  [33051,] 411 309 #>  [33052,] 412 309 #>  [33053,] 413 309 #>  [33054,] 414 309 #>  [33055,] 415 309 #>  [33056,] 416 309 #>  [33057,] 417 309 #>  [33058,] 418 309 #>  [33059,] 419 309 #>  [33060,] 420 309 #>  [33061,] 421 309 #>  [33062,] 422 309 #>  [33063,] 423 309 #>  [33064,] 424 309 #>  [33065,] 425 309 #>  [33066,] 426 309 #>  [33067,] 427 309 #>  [33068,] 428 309 #>  [33069,] 429 309 #>  [33070,] 430 309 #>  [33071,] 431 309 #>  [33072,] 432 309 #>  [33073,] 433 309 #>  [33074,] 434 309 #>  [33075,] 435 309 #>  [33076,] 436 309 #>  [33077,] 437 309 #>  [33078,] 438 309 #>  [33079,] 439 309 #>  [33080,] 440 309 #>  [33081,] 441 309 #>  [33082,] 442 309 #>  [33083,] 443 309 #>  [33084,] 444 309 #>  [33085,] 445 309 #>  [33086,] 446 309 #>  [33087,] 447 309 #>  [33088,] 448 309 #>  [33089,] 449 309 #>  [33090,] 450 309 #>  [33091,] 451 309 #>  [33092,] 452 309 #>  [33093,] 453 309 #>  [33094,] 454 309 #>  [33095,] 455 309 #>  [33096,] 456 309 #>  [33097,] 457 309 #>  [33098,] 458 309 #>  [33099,] 459 309 #>  [33100,] 460 309 #>  [33101,] 461 309 #>  [33102,] 462 309 #>  [33103,] 463 309 #>  [33104,] 464 309 #>  [33105,] 465 309 #>  [33106,] 466 309 #>  [33107,] 467 309 #>  [33108,] 468 309 #>  [33109,] 469 309 #>  [33110,] 470 309 #>  [33111,] 471 309 #>  [33112,] 472 309 #>  [33113,] 473 309 #>  [33114,] 474 309 #>  [33115,] 475 309 #>  [33116,] 476 309 #>  [33117,] 477 309 #>  [33118,] 478 309 #>  [33119,] 479 309 #>  [33120,] 480 309 #>  [33121,] 481 309 #>  [33122,] 482 309 #>  [33123,] 483 309 #>  [33124,] 484 309 #>  [33125,] 485 309 #>  [33126,] 486 309 #>  [33127,] 487 309 #>  [33128,] 488 309 #>  [33129,] 489 309 #>  [33130,] 490 309 #>  [33131,] 491 309 #>  [33132,] 492 309 #>  [33133,] 493 309 #>  [33134,] 494 309 #>  [33135,] 495 309 #>  [33136,] 496 309 #>  [33137,] 497 309 #>  [33138,] 498 309 #>  [33139,] 499 309 #>  [33140,] 500 309 #>  [33141,] 501 309 #>  [33142,] 502 309 #>  [33143,] 503 309 #>  [33144,] 504 309 #>  [33145,] 505 309 #>  [33146,] 506 309 #>  [33147,] 507 309 #>  [33148,] 508 309 #>  [33149,] 509 309 #>  [33150,] 510 309 #>  [33151,] 511 309 #>  [33152,] 512 309 #>  [33153,] 513 309 #>  [33154,] 514 309 #>  [33155,] 515 309 #>  [33156,] 516 309 #>  [33157,] 517 309 #>  [33158,] 518 309 #>  [33159,] 519 309 #>  [33160,] 520 309 #>  [33161,] 521 309 #>  [33162,] 522 309 #>  [33163,] 523 309 #>  [33164,] 524 309 #>  [33165,] 525 309 #>  [33166,] 526 309 #>  [33167,] 527 309 #>  [33168,] 528 309 #>  [33169,] 529 309 #>  [33170,] 530 309 #>  [33171,] 531 309 #>  [33172,] 532 309 #>  [33173,] 533 309 #>  [33174,] 534 309 #>  [33175,] 535 309 #>  [33176,] 536 309 #>  [33177,] 537 309 #>  [33178,] 538 309 #>  [33179,] 539 309 #>  [33180,] 540 309 #>  [33181,] 541 309 #>  [33182,] 542 309 #>  [33183,] 543 309 #>  [33184,] 544 309 #>  [33185,] 545 309 #>  [33186,] 546 309 #>  [33187,] 547 309 #>  [33188,] 548 309 #>  [33189,] 549 309 #>  [33190,] 550 309 #>  [33191,] 551 309 #>  [33192,] 552 309 #>  [33193,] 553 309 #>  [33194,] 554 309 #>  [33195,] 555 309 #>  [33196,] 556 309 #>  [33197,] 557 309 #>  [33198,] 558 309 #>  [33199,] 559 309 #>  [33200,] 560 309 #>  [33201,] 561 309 #>  [33202,] 562 309 #>  [33203,] 563 309 #>  [33204,] 564 309 #>  [33205,] 565 309 #>  [33206,] 566 309 #>  [33207,] 567 309 #>  [33208,] 568 309 #>  [33209,] 569 309 #>  [33210,] 570 309 #>  [33211,] 571 309 #>  [33212,] 572 309 #>  [33213,] 573 309 #>  [33214,] 574 309 #>  [33215,] 575 309 #>  [33216,] 576 309 #>  [33217,] 577 309 #>  [33218,] 578 309 #>  [33219,] 579 309 #>  [33220,] 580 309 #>  [33221,] 581 309 #>  [33222,] 582 309 #>  [33223,] 583 309 #>  [33224,] 584 309 #>  [33225,] 585 309 #>  [33226,] 586 309 #>  [33227,] 587 309 #>  [33228,] 588 309 #>  [33229,] 589 309 #>  [33230,] 590 309 #>  [33231,] 591 309 #>  [33232,] 592 309 #>  [33233,] 593 309 #>  [33234,] 594 309 #>  [33235,] 595 309 #>  [33236,] 596 309 #>  [33237,] 597 309 #>  [33238,] 598 309 #>  [33239,] 599 309 #>  [33240,] 600 309 #>  [33241,] 601 309 #>  [33242,] 602 309 #>  [33243,] 603 309 #>  [33244,] 604 309 #>  [33245,] 605 309 #>  [33246,] 606 309 #>  [33247,] 607 309 #>  [33248,] 608 309 #>  [33249,] 609 309 #>  [33250,] 610 309 #>  [33251,] 611 309 #>  [33252,] 612 309 #>  [33253,] 613 309 #>  [33254,] 614 309 #>  [33255,] 615 309 #>  [33256,] 616 309 #>  [33257,] 617 309 #>  [33258,] 618 309 #>  [33259,] 619 309 #>  [33260,] 620 309 #>  [33261,] 621 309 #>  [33262,] 622 309 #>  [33263,] 623 309 #>  [33264,] 624 309 #>  [33265,] 625 309 #>  [33266,] 626 309 #>  [33267,] 627 309 #>  [33268,] 628 309 #>  [33269,] 629 309 #>  [33270,] 630 309 #>  [33271,] 631 309 #>  [33272,] 632 309 #>  [33273,] 633 309 #>  [33274,] 634 309 #>  [33275,] 635 309 #>  [33276,] 636 309 #>  [33277,] 637 309 #>  [33278,] 638 309 #>  [33279,] 639 309 #>  [33280,] 640 309 #>  [33281,]   1 308 #>  [33282,]   2 308 #>  [33283,]   3 308 #>  [33284,]   4 308 #>  [33285,]   5 308 #>  [33286,]   6 308 #>  [33287,]   7 308 #>  [33288,]   8 308 #>  [33289,]   9 308 #>  [33290,]  10 308 #>  [33291,]  11 308 #>  [33292,]  12 308 #>  [33293,]  13 308 #>  [33294,]  14 308 #>  [33295,]  15 308 #>  [33296,]  16 308 #>  [33297,]  17 308 #>  [33298,]  18 308 #>  [33299,]  19 308 #>  [33300,]  20 308 #>  [33301,]  21 308 #>  [33302,]  22 308 #>  [33303,]  23 308 #>  [33304,]  24 308 #>  [33305,]  25 308 #>  [33306,]  26 308 #>  [33307,]  27 308 #>  [33308,]  28 308 #>  [33309,]  29 308 #>  [33310,]  30 308 #>  [33311,]  31 308 #>  [33312,]  32 308 #>  [33313,]  33 308 #>  [33314,]  34 308 #>  [33315,]  35 308 #>  [33316,]  36 308 #>  [33317,]  37 308 #>  [33318,]  38 308 #>  [33319,]  39 308 #>  [33320,]  40 308 #>  [33321,]  41 308 #>  [33322,]  42 308 #>  [33323,]  43 308 #>  [33324,]  44 308 #>  [33325,]  45 308 #>  [33326,]  46 308 #>  [33327,]  47 308 #>  [33328,]  48 308 #>  [33329,]  49 308 #>  [33330,]  50 308 #>  [33331,]  51 308 #>  [33332,]  52 308 #>  [33333,]  53 308 #>  [33334,]  54 308 #>  [33335,]  55 308 #>  [33336,]  56 308 #>  [33337,]  57 308 #>  [33338,]  58 308 #>  [33339,]  59 308 #>  [33340,]  60 308 #>  [33341,]  61 308 #>  [33342,]  62 308 #>  [33343,]  63 308 #>  [33344,]  64 308 #>  [33345,]  65 308 #>  [33346,]  66 308 #>  [33347,]  67 308 #>  [33348,]  68 308 #>  [33349,]  69 308 #>  [33350,]  70 308 #>  [33351,]  71 308 #>  [33352,]  72 308 #>  [33353,]  73 308 #>  [33354,]  74 308 #>  [33355,]  75 308 #>  [33356,]  76 308 #>  [33357,]  77 308 #>  [33358,]  78 308 #>  [33359,]  79 308 #>  [33360,]  80 308 #>  [33361,]  81 308 #>  [33362,]  82 308 #>  [33363,]  83 308 #>  [33364,]  84 308 #>  [33365,]  85 308 #>  [33366,]  86 308 #>  [33367,]  87 308 #>  [33368,]  88 308 #>  [33369,]  89 308 #>  [33370,]  90 308 #>  [33371,]  91 308 #>  [33372,]  92 308 #>  [33373,]  93 308 #>  [33374,]  94 308 #>  [33375,]  95 308 #>  [33376,]  96 308 #>  [33377,]  97 308 #>  [33378,]  98 308 #>  [33379,]  99 308 #>  [33380,] 100 308 #>  [33381,] 101 308 #>  [33382,] 102 308 #>  [33383,] 103 308 #>  [33384,] 104 308 #>  [33385,] 105 308 #>  [33386,] 106 308 #>  [33387,] 107 308 #>  [33388,] 108 308 #>  [33389,] 109 308 #>  [33390,] 110 308 #>  [33391,] 111 308 #>  [33392,] 112 308 #>  [33393,] 113 308 #>  [33394,] 114 308 #>  [33395,] 115 308 #>  [33396,] 116 308 #>  [33397,] 117 308 #>  [33398,] 118 308 #>  [33399,] 119 308 #>  [33400,] 120 308 #>  [33401,] 121 308 #>  [33402,] 122 308 #>  [33403,] 123 308 #>  [33404,] 124 308 #>  [33405,] 125 308 #>  [33406,] 126 308 #>  [33407,] 127 308 #>  [33408,] 128 308 #>  [33409,] 129 308 #>  [33410,] 130 308 #>  [33411,] 131 308 #>  [33412,] 132 308 #>  [33413,] 133 308 #>  [33414,] 134 308 #>  [33415,] 135 308 #>  [33416,] 136 308 #>  [33417,] 137 308 #>  [33418,] 138 308 #>  [33419,] 139 308 #>  [33420,] 140 308 #>  [33421,] 141 308 #>  [33422,] 142 308 #>  [33423,] 143 308 #>  [33424,] 144 308 #>  [33425,] 145 308 #>  [33426,] 146 308 #>  [33427,] 147 308 #>  [33428,] 148 308 #>  [33429,] 149 308 #>  [33430,] 150 308 #>  [33431,] 151 308 #>  [33432,] 152 308 #>  [33433,] 153 308 #>  [33434,] 154 308 #>  [33435,] 155 308 #>  [33436,] 156 308 #>  [33437,] 157 308 #>  [33438,] 158 308 #>  [33439,] 159 308 #>  [33440,] 160 308 #>  [33441,] 161 308 #>  [33442,] 162 308 #>  [33443,] 163 308 #>  [33444,] 164 308 #>  [33445,] 165 308 #>  [33446,] 166 308 #>  [33447,] 167 308 #>  [33448,] 168 308 #>  [33449,] 169 308 #>  [33450,] 170 308 #>  [33451,] 171 308 #>  [33452,] 172 308 #>  [33453,] 173 308 #>  [33454,] 174 308 #>  [33455,] 175 308 #>  [33456,] 176 308 #>  [33457,] 177 308 #>  [33458,] 178 308 #>  [33459,] 179 308 #>  [33460,] 180 308 #>  [33461,] 181 308 #>  [33462,] 182 308 #>  [33463,] 183 308 #>  [33464,] 184 308 #>  [33465,] 185 308 #>  [33466,] 186 308 #>  [33467,] 187 308 #>  [33468,] 188 308 #>  [33469,] 189 308 #>  [33470,] 190 308 #>  [33471,] 191 308 #>  [33472,] 192 308 #>  [33473,] 193 308 #>  [33474,] 194 308 #>  [33475,] 195 308 #>  [33476,] 196 308 #>  [33477,] 197 308 #>  [33478,] 198 308 #>  [33479,] 199 308 #>  [33480,] 200 308 #>  [33481,] 201 308 #>  [33482,] 202 308 #>  [33483,] 203 308 #>  [33484,] 204 308 #>  [33485,] 205 308 #>  [33486,] 206 308 #>  [33487,] 207 308 #>  [33488,] 208 308 #>  [33489,] 209 308 #>  [33490,] 210 308 #>  [33491,] 211 308 #>  [33492,] 212 308 #>  [33493,] 213 308 #>  [33494,] 214 308 #>  [33495,] 215 308 #>  [33496,] 216 308 #>  [33497,] 217 308 #>  [33498,] 218 308 #>  [33499,] 219 308 #>  [33500,] 220 308 #>  [33501,] 221 308 #>  [33502,] 222 308 #>  [33503,] 223 308 #>  [33504,] 224 308 #>  [33505,] 225 308 #>  [33506,] 226 308 #>  [33507,] 227 308 #>  [33508,] 228 308 #>  [33509,] 229 308 #>  [33510,] 230 308 #>  [33511,] 231 308 #>  [33512,] 232 308 #>  [33513,] 233 308 #>  [33514,] 234 308 #>  [33515,] 235 308 #>  [33516,] 236 308 #>  [33517,] 237 308 #>  [33518,] 238 308 #>  [33519,] 239 308 #>  [33520,] 240 308 #>  [33521,] 241 308 #>  [33522,] 242 308 #>  [33523,] 243 308 #>  [33524,] 244 308 #>  [33525,] 245 308 #>  [33526,] 246 308 #>  [33527,] 247 308 #>  [33528,] 248 308 #>  [33529,] 249 308 #>  [33530,] 250 308 #>  [33531,] 251 308 #>  [33532,] 252 308 #>  [33533,] 253 308 #>  [33534,] 254 308 #>  [33535,] 255 308 #>  [33536,] 256 308 #>  [33537,] 257 308 #>  [33538,] 258 308 #>  [33539,] 259 308 #>  [33540,] 260 308 #>  [33541,] 261 308 #>  [33542,] 262 308 #>  [33543,] 263 308 #>  [33544,] 264 308 #>  [33545,] 265 308 #>  [33546,] 266 308 #>  [33547,] 267 308 #>  [33548,] 268 308 #>  [33549,] 269 308 #>  [33550,] 270 308 #>  [33551,] 271 308 #>  [33552,] 272 308 #>  [33553,] 273 308 #>  [33554,] 274 308 #>  [33555,] 275 308 #>  [33556,] 276 308 #>  [33557,] 277 308 #>  [33558,] 278 308 #>  [33559,] 279 308 #>  [33560,] 280 308 #>  [33561,] 281 308 #>  [33562,] 282 308 #>  [33563,] 283 308 #>  [33564,] 284 308 #>  [33565,] 285 308 #>  [33566,] 286 308 #>  [33567,] 287 308 #>  [33568,] 288 308 #>  [33569,] 289 308 #>  [33570,] 290 308 #>  [33571,] 291 308 #>  [33572,] 292 308 #>  [33573,] 293 308 #>  [33574,] 294 308 #>  [33575,] 295 308 #>  [33576,] 296 308 #>  [33577,] 297 308 #>  [33578,] 298 308 #>  [33579,] 299 308 #>  [33580,] 300 308 #>  [33581,] 301 308 #>  [33582,] 302 308 #>  [33583,] 303 308 #>  [33584,] 304 308 #>  [33585,] 305 308 #>  [33586,] 306 308 #>  [33587,] 307 308 #>  [33588,] 308 308 #>  [33589,] 309 308 #>  [33590,] 310 308 #>  [33591,] 311 308 #>  [33592,] 312 308 #>  [33593,] 313 308 #>  [33594,] 314 308 #>  [33595,] 315 308 #>  [33596,] 316 308 #>  [33597,] 317 308 #>  [33598,] 318 308 #>  [33599,] 319 308 #>  [33600,] 320 308 #>  [33601,] 321 308 #>  [33602,] 322 308 #>  [33603,] 323 308 #>  [33604,] 324 308 #>  [33605,] 325 308 #>  [33606,] 326 308 #>  [33607,] 327 308 #>  [33608,] 328 308 #>  [33609,] 329 308 #>  [33610,] 330 308 #>  [33611,] 331 308 #>  [33612,] 332 308 #>  [33613,] 333 308 #>  [33614,] 334 308 #>  [33615,] 335 308 #>  [33616,] 336 308 #>  [33617,] 337 308 #>  [33618,] 338 308 #>  [33619,] 339 308 #>  [33620,] 340 308 #>  [33621,] 341 308 #>  [33622,] 342 308 #>  [33623,] 343 308 #>  [33624,] 344 308 #>  [33625,] 345 308 #>  [33626,] 346 308 #>  [33627,] 347 308 #>  [33628,] 348 308 #>  [33629,] 349 308 #>  [33630,] 350 308 #>  [33631,] 351 308 #>  [33632,] 352 308 #>  [33633,] 353 308 #>  [33634,] 354 308 #>  [33635,] 355 308 #>  [33636,] 356 308 #>  [33637,] 357 308 #>  [33638,] 358 308 #>  [33639,] 359 308 #>  [33640,] 360 308 #>  [33641,] 361 308 #>  [33642,] 362 308 #>  [33643,] 363 308 #>  [33644,] 364 308 #>  [33645,] 365 308 #>  [33646,] 366 308 #>  [33647,] 367 308 #>  [33648,] 368 308 #>  [33649,] 369 308 #>  [33650,] 370 308 #>  [33651,] 371 308 #>  [33652,] 372 308 #>  [33653,] 373 308 #>  [33654,] 374 308 #>  [33655,] 375 308 #>  [33656,] 376 308 #>  [33657,] 377 308 #>  [33658,] 378 308 #>  [33659,] 379 308 #>  [33660,] 380 308 #>  [33661,] 381 308 #>  [33662,] 382 308 #>  [33663,] 383 308 #>  [33664,] 384 308 #>  [33665,] 385 308 #>  [33666,] 386 308 #>  [33667,] 387 308 #>  [33668,] 388 308 #>  [33669,] 389 308 #>  [33670,] 390 308 #>  [33671,] 391 308 #>  [33672,] 392 308 #>  [33673,] 393 308 #>  [33674,] 394 308 #>  [33675,] 395 308 #>  [33676,] 396 308 #>  [33677,] 397 308 #>  [33678,] 398 308 #>  [33679,] 399 308 #>  [33680,] 400 308 #>  [33681,] 401 308 #>  [33682,] 402 308 #>  [33683,] 403 308 #>  [33684,] 404 308 #>  [33685,] 405 308 #>  [33686,] 406 308 #>  [33687,] 407 308 #>  [33688,] 408 308 #>  [33689,] 409 308 #>  [33690,] 410 308 #>  [33691,] 411 308 #>  [33692,] 412 308 #>  [33693,] 413 308 #>  [33694,] 414 308 #>  [33695,] 415 308 #>  [33696,] 416 308 #>  [33697,] 417 308 #>  [33698,] 418 308 #>  [33699,] 419 308 #>  [33700,] 420 308 #>  [33701,] 421 308 #>  [33702,] 422 308 #>  [33703,] 423 308 #>  [33704,] 424 308 #>  [33705,] 425 308 #>  [33706,] 426 308 #>  [33707,] 427 308 #>  [33708,] 428 308 #>  [33709,] 429 308 #>  [33710,] 430 308 #>  [33711,] 431 308 #>  [33712,] 432 308 #>  [33713,] 433 308 #>  [33714,] 434 308 #>  [33715,] 435 308 #>  [33716,] 436 308 #>  [33717,] 437 308 #>  [33718,] 438 308 #>  [33719,] 439 308 #>  [33720,] 440 308 #>  [33721,] 441 308 #>  [33722,] 442 308 #>  [33723,] 443 308 #>  [33724,] 444 308 #>  [33725,] 445 308 #>  [33726,] 446 308 #>  [33727,] 447 308 #>  [33728,] 448 308 #>  [33729,] 449 308 #>  [33730,] 450 308 #>  [33731,] 451 308 #>  [33732,] 452 308 #>  [33733,] 453 308 #>  [33734,] 454 308 #>  [33735,] 455 308 #>  [33736,] 456 308 #>  [33737,] 457 308 #>  [33738,] 458 308 #>  [33739,] 459 308 #>  [33740,] 460 308 #>  [33741,] 461 308 #>  [33742,] 462 308 #>  [33743,] 463 308 #>  [33744,] 464 308 #>  [33745,] 465 308 #>  [33746,] 466 308 #>  [33747,] 467 308 #>  [33748,] 468 308 #>  [33749,] 469 308 #>  [33750,] 470 308 #>  [33751,] 471 308 #>  [33752,] 472 308 #>  [33753,] 473 308 #>  [33754,] 474 308 #>  [33755,] 475 308 #>  [33756,] 476 308 #>  [33757,] 477 308 #>  [33758,] 478 308 #>  [33759,] 479 308 #>  [33760,] 480 308 #>  [33761,] 481 308 #>  [33762,] 482 308 #>  [33763,] 483 308 #>  [33764,] 484 308 #>  [33765,] 485 308 #>  [33766,] 486 308 #>  [33767,] 487 308 #>  [33768,] 488 308 #>  [33769,] 489 308 #>  [33770,] 490 308 #>  [33771,] 491 308 #>  [33772,] 492 308 #>  [33773,] 493 308 #>  [33774,] 494 308 #>  [33775,] 495 308 #>  [33776,] 496 308 #>  [33777,] 497 308 #>  [33778,] 498 308 #>  [33779,] 499 308 #>  [33780,] 500 308 #>  [33781,] 501 308 #>  [33782,] 502 308 #>  [33783,] 503 308 #>  [33784,] 504 308 #>  [33785,] 505 308 #>  [33786,] 506 308 #>  [33787,] 507 308 #>  [33788,] 508 308 #>  [33789,] 509 308 #>  [33790,] 510 308 #>  [33791,] 511 308 #>  [33792,] 512 308 #>  [33793,] 513 308 #>  [33794,] 514 308 #>  [33795,] 515 308 #>  [33796,] 516 308 #>  [33797,] 517 308 #>  [33798,] 518 308 #>  [33799,] 519 308 #>  [33800,] 520 308 #>  [33801,] 521 308 #>  [33802,] 522 308 #>  [33803,] 523 308 #>  [33804,] 524 308 #>  [33805,] 525 308 #>  [33806,] 526 308 #>  [33807,] 527 308 #>  [33808,] 528 308 #>  [33809,] 529 308 #>  [33810,] 530 308 #>  [33811,] 531 308 #>  [33812,] 532 308 #>  [33813,] 533 308 #>  [33814,] 534 308 #>  [33815,] 535 308 #>  [33816,] 536 308 #>  [33817,] 537 308 #>  [33818,] 538 308 #>  [33819,] 539 308 #>  [33820,] 540 308 #>  [33821,] 541 308 #>  [33822,] 542 308 #>  [33823,] 543 308 #>  [33824,] 544 308 #>  [33825,] 545 308 #>  [33826,] 546 308 #>  [33827,] 547 308 #>  [33828,] 548 308 #>  [33829,] 549 308 #>  [33830,] 550 308 #>  [33831,] 551 308 #>  [33832,] 552 308 #>  [33833,] 553 308 #>  [33834,] 554 308 #>  [33835,] 555 308 #>  [33836,] 556 308 #>  [33837,] 557 308 #>  [33838,] 558 308 #>  [33839,] 559 308 #>  [33840,] 560 308 #>  [33841,] 561 308 #>  [33842,] 562 308 #>  [33843,] 563 308 #>  [33844,] 564 308 #>  [33845,] 565 308 #>  [33846,] 566 308 #>  [33847,] 567 308 #>  [33848,] 568 308 #>  [33849,] 569 308 #>  [33850,] 570 308 #>  [33851,] 571 308 #>  [33852,] 572 308 #>  [33853,] 573 308 #>  [33854,] 574 308 #>  [33855,] 575 308 #>  [33856,] 576 308 #>  [33857,] 577 308 #>  [33858,] 578 308 #>  [33859,] 579 308 #>  [33860,] 580 308 #>  [33861,] 581 308 #>  [33862,] 582 308 #>  [33863,] 583 308 #>  [33864,] 584 308 #>  [33865,] 585 308 #>  [33866,] 586 308 #>  [33867,] 587 308 #>  [33868,] 588 308 #>  [33869,] 589 308 #>  [33870,] 590 308 #>  [33871,] 591 308 #>  [33872,] 592 308 #>  [33873,] 593 308 #>  [33874,] 594 308 #>  [33875,] 595 308 #>  [33876,] 596 308 #>  [33877,] 597 308 #>  [33878,] 598 308 #>  [33879,] 599 308 #>  [33880,] 600 308 #>  [33881,] 601 308 #>  [33882,] 602 308 #>  [33883,] 603 308 #>  [33884,] 604 308 #>  [33885,] 605 308 #>  [33886,] 606 308 #>  [33887,] 607 308 #>  [33888,] 608 308 #>  [33889,] 609 308 #>  [33890,] 610 308 #>  [33891,] 611 308 #>  [33892,] 612 308 #>  [33893,] 613 308 #>  [33894,] 614 308 #>  [33895,] 615 308 #>  [33896,] 616 308 #>  [33897,] 617 308 #>  [33898,] 618 308 #>  [33899,] 619 308 #>  [33900,] 620 308 #>  [33901,] 621 308 #>  [33902,] 622 308 #>  [33903,] 623 308 #>  [33904,] 624 308 #>  [33905,] 625 308 #>  [33906,] 626 308 #>  [33907,] 627 308 #>  [33908,] 628 308 #>  [33909,] 629 308 #>  [33910,] 630 308 #>  [33911,] 631 308 #>  [33912,] 632 308 #>  [33913,] 633 308 #>  [33914,] 634 308 #>  [33915,] 635 308 #>  [33916,] 636 308 #>  [33917,] 637 308 #>  [33918,] 638 308 #>  [33919,] 639 308 #>  [33920,] 640 308 #>  [33921,]   1 307 #>  [33922,]   2 307 #>  [33923,]   3 307 #>  [33924,]   4 307 #>  [33925,]   5 307 #>  [33926,]   6 307 #>  [33927,]   7 307 #>  [33928,]   8 307 #>  [33929,]   9 307 #>  [33930,]  10 307 #>  [33931,]  11 307 #>  [33932,]  12 307 #>  [33933,]  13 307 #>  [33934,]  14 307 #>  [33935,]  15 307 #>  [33936,]  16 307 #>  [33937,]  17 307 #>  [33938,]  18 307 #>  [33939,]  19 307 #>  [33940,]  20 307 #>  [33941,]  21 307 #>  [33942,]  22 307 #>  [33943,]  23 307 #>  [33944,]  24 307 #>  [33945,]  25 307 #>  [33946,]  26 307 #>  [33947,]  27 307 #>  [33948,]  28 307 #>  [33949,]  29 307 #>  [33950,]  30 307 #>  [33951,]  31 307 #>  [33952,]  32 307 #>  [33953,]  33 307 #>  [33954,]  34 307 #>  [33955,]  35 307 #>  [33956,]  36 307 #>  [33957,]  37 307 #>  [33958,]  38 307 #>  [33959,]  39 307 #>  [33960,]  40 307 #>  [33961,]  41 307 #>  [33962,]  42 307 #>  [33963,]  43 307 #>  [33964,]  44 307 #>  [33965,]  45 307 #>  [33966,]  46 307 #>  [33967,]  47 307 #>  [33968,]  48 307 #>  [33969,]  49 307 #>  [33970,]  50 307 #>  [33971,]  51 307 #>  [33972,]  52 307 #>  [33973,]  53 307 #>  [33974,]  54 307 #>  [33975,]  55 307 #>  [33976,]  56 307 #>  [33977,]  57 307 #>  [33978,]  58 307 #>  [33979,]  59 307 #>  [33980,]  60 307 #>  [33981,]  61 307 #>  [33982,]  62 307 #>  [33983,]  63 307 #>  [33984,]  64 307 #>  [33985,]  65 307 #>  [33986,]  66 307 #>  [33987,]  67 307 #>  [33988,]  68 307 #>  [33989,]  69 307 #>  [33990,]  70 307 #>  [33991,]  71 307 #>  [33992,]  72 307 #>  [33993,]  73 307 #>  [33994,]  74 307 #>  [33995,]  75 307 #>  [33996,]  76 307 #>  [33997,]  77 307 #>  [33998,]  78 307 #>  [33999,]  79 307 #>  [34000,]  80 307 #>  [34001,]  81 307 #>  [34002,]  82 307 #>  [34003,]  83 307 #>  [34004,]  84 307 #>  [34005,]  85 307 #>  [34006,]  86 307 #>  [34007,]  87 307 #>  [34008,]  88 307 #>  [34009,]  89 307 #>  [34010,]  90 307 #>  [34011,]  91 307 #>  [34012,]  92 307 #>  [34013,]  93 307 #>  [34014,]  94 307 #>  [34015,]  95 307 #>  [34016,]  96 307 #>  [34017,]  97 307 #>  [34018,]  98 307 #>  [34019,]  99 307 #>  [34020,] 100 307 #>  [34021,] 101 307 #>  [34022,] 102 307 #>  [34023,] 103 307 #>  [34024,] 104 307 #>  [34025,] 105 307 #>  [34026,] 106 307 #>  [34027,] 107 307 #>  [34028,] 108 307 #>  [34029,] 109 307 #>  [34030,] 110 307 #>  [34031,] 111 307 #>  [34032,] 112 307 #>  [34033,] 113 307 #>  [34034,] 114 307 #>  [34035,] 115 307 #>  [34036,] 116 307 #>  [34037,] 117 307 #>  [34038,] 118 307 #>  [34039,] 119 307 #>  [34040,] 120 307 #>  [34041,] 121 307 #>  [34042,] 122 307 #>  [34043,] 123 307 #>  [34044,] 124 307 #>  [34045,] 125 307 #>  [34046,] 126 307 #>  [34047,] 127 307 #>  [34048,] 128 307 #>  [34049,] 129 307 #>  [34050,] 130 307 #>  [34051,] 131 307 #>  [34052,] 132 307 #>  [34053,] 133 307 #>  [34054,] 134 307 #>  [34055,] 135 307 #>  [34056,] 136 307 #>  [34057,] 137 307 #>  [34058,] 138 307 #>  [34059,] 139 307 #>  [34060,] 140 307 #>  [34061,] 141 307 #>  [34062,] 142 307 #>  [34063,] 143 307 #>  [34064,] 144 307 #>  [34065,] 145 307 #>  [34066,] 146 307 #>  [34067,] 147 307 #>  [34068,] 148 307 #>  [34069,] 149 307 #>  [34070,] 150 307 #>  [34071,] 151 307 #>  [34072,] 152 307 #>  [34073,] 153 307 #>  [34074,] 154 307 #>  [34075,] 155 307 #>  [34076,] 156 307 #>  [34077,] 157 307 #>  [34078,] 158 307 #>  [34079,] 159 307 #>  [34080,] 160 307 #>  [34081,] 161 307 #>  [34082,] 162 307 #>  [34083,] 163 307 #>  [34084,] 164 307 #>  [34085,] 165 307 #>  [34086,] 166 307 #>  [34087,] 167 307 #>  [34088,] 168 307 #>  [34089,] 169 307 #>  [34090,] 170 307 #>  [34091,] 171 307 #>  [34092,] 172 307 #>  [34093,] 173 307 #>  [34094,] 174 307 #>  [34095,] 175 307 #>  [34096,] 176 307 #>  [34097,] 177 307 #>  [34098,] 178 307 #>  [34099,] 179 307 #>  [34100,] 180 307 #>  [34101,] 181 307 #>  [34102,] 182 307 #>  [34103,] 183 307 #>  [34104,] 184 307 #>  [34105,] 185 307 #>  [34106,] 186 307 #>  [34107,] 187 307 #>  [34108,] 188 307 #>  [34109,] 189 307 #>  [34110,] 190 307 #>  [34111,] 191 307 #>  [34112,] 192 307 #>  [34113,] 193 307 #>  [34114,] 194 307 #>  [34115,] 195 307 #>  [34116,] 196 307 #>  [34117,] 197 307 #>  [34118,] 198 307 #>  [34119,] 199 307 #>  [34120,] 200 307 #>  [34121,] 201 307 #>  [34122,] 202 307 #>  [34123,] 203 307 #>  [34124,] 204 307 #>  [34125,] 205 307 #>  [34126,] 206 307 #>  [34127,] 207 307 #>  [34128,] 208 307 #>  [34129,] 209 307 #>  [34130,] 210 307 #>  [34131,] 211 307 #>  [34132,] 212 307 #>  [34133,] 213 307 #>  [34134,] 214 307 #>  [34135,] 215 307 #>  [34136,] 216 307 #>  [34137,] 217 307 #>  [34138,] 218 307 #>  [34139,] 219 307 #>  [34140,] 220 307 #>  [34141,] 221 307 #>  [34142,] 222 307 #>  [34143,] 223 307 #>  [34144,] 224 307 #>  [34145,] 225 307 #>  [34146,] 226 307 #>  [34147,] 227 307 #>  [34148,] 228 307 #>  [34149,] 229 307 #>  [34150,] 230 307 #>  [34151,] 231 307 #>  [34152,] 232 307 #>  [34153,] 233 307 #>  [34154,] 234 307 #>  [34155,] 235 307 #>  [34156,] 236 307 #>  [34157,] 237 307 #>  [34158,] 238 307 #>  [34159,] 239 307 #>  [34160,] 240 307 #>  [34161,] 241 307 #>  [34162,] 242 307 #>  [34163,] 243 307 #>  [34164,] 244 307 #>  [34165,] 245 307 #>  [34166,] 246 307 #>  [34167,] 247 307 #>  [34168,] 248 307 #>  [34169,] 249 307 #>  [34170,] 250 307 #>  [34171,] 251 307 #>  [34172,] 252 307 #>  [34173,] 253 307 #>  [34174,] 254 307 #>  [34175,] 255 307 #>  [34176,] 256 307 #>  [34177,] 257 307 #>  [34178,] 258 307 #>  [34179,] 259 307 #>  [34180,] 260 307 #>  [34181,] 261 307 #>  [34182,] 262 307 #>  [34183,] 263 307 #>  [34184,] 264 307 #>  [34185,] 265 307 #>  [34186,] 266 307 #>  [34187,] 267 307 #>  [34188,] 268 307 #>  [34189,] 269 307 #>  [34190,] 270 307 #>  [34191,] 271 307 #>  [34192,] 272 307 #>  [34193,] 273 307 #>  [34194,] 274 307 #>  [34195,] 275 307 #>  [34196,] 276 307 #>  [34197,] 277 307 #>  [34198,] 278 307 #>  [34199,] 279 307 #>  [34200,] 280 307 #>  [34201,] 281 307 #>  [34202,] 282 307 #>  [34203,] 283 307 #>  [34204,] 284 307 #>  [34205,] 285 307 #>  [34206,] 286 307 #>  [34207,] 287 307 #>  [34208,] 288 307 #>  [34209,] 289 307 #>  [34210,] 290 307 #>  [34211,] 291 307 #>  [34212,] 292 307 #>  [34213,] 293 307 #>  [34214,] 294 307 #>  [34215,] 295 307 #>  [34216,] 296 307 #>  [34217,] 297 307 #>  [34218,] 298 307 #>  [34219,] 299 307 #>  [34220,] 300 307 #>  [34221,] 301 307 #>  [34222,] 302 307 #>  [34223,] 303 307 #>  [34224,] 304 307 #>  [34225,] 305 307 #>  [34226,] 306 307 #>  [34227,] 307 307 #>  [34228,] 308 307 #>  [34229,] 309 307 #>  [34230,] 310 307 #>  [34231,] 311 307 #>  [34232,] 312 307 #>  [34233,] 313 307 #>  [34234,] 314 307 #>  [34235,] 315 307 #>  [34236,] 316 307 #>  [34237,] 317 307 #>  [34238,] 318 307 #>  [34239,] 319 307 #>  [34240,] 320 307 #>  [34241,] 321 307 #>  [34242,] 322 307 #>  [34243,] 323 307 #>  [34244,] 324 307 #>  [34245,] 325 307 #>  [34246,] 326 307 #>  [34247,] 327 307 #>  [34248,] 328 307 #>  [34249,] 329 307 #>  [34250,] 330 307 #>  [34251,] 331 307 #>  [34252,] 332 307 #>  [34253,] 333 307 #>  [34254,] 334 307 #>  [34255,] 335 307 #>  [34256,] 336 307 #>  [34257,] 337 307 #>  [34258,] 338 307 #>  [34259,] 339 307 #>  [34260,] 340 307 #>  [34261,] 341 307 #>  [34262,] 342 307 #>  [34263,] 343 307 #>  [34264,] 344 307 #>  [34265,] 345 307 #>  [34266,] 346 307 #>  [34267,] 347 307 #>  [34268,] 348 307 #>  [34269,] 349 307 #>  [34270,] 350 307 #>  [34271,] 351 307 #>  [34272,] 352 307 #>  [34273,] 353 307 #>  [34274,] 354 307 #>  [34275,] 355 307 #>  [34276,] 356 307 #>  [34277,] 357 307 #>  [34278,] 358 307 #>  [34279,] 359 307 #>  [34280,] 360 307 #>  [34281,] 361 307 #>  [34282,] 362 307 #>  [34283,] 363 307 #>  [34284,] 364 307 #>  [34285,] 365 307 #>  [34286,] 366 307 #>  [34287,] 367 307 #>  [34288,] 368 307 #>  [34289,] 369 307 #>  [34290,] 370 307 #>  [34291,] 371 307 #>  [34292,] 372 307 #>  [34293,] 373 307 #>  [34294,] 374 307 #>  [34295,] 375 307 #>  [34296,] 376 307 #>  [34297,] 377 307 #>  [34298,] 378 307 #>  [34299,] 379 307 #>  [34300,] 380 307 #>  [34301,] 381 307 #>  [34302,] 382 307 #>  [34303,] 383 307 #>  [34304,] 384 307 #>  [34305,] 385 307 #>  [34306,] 386 307 #>  [34307,] 387 307 #>  [34308,] 388 307 #>  [34309,] 389 307 #>  [34310,] 390 307 #>  [34311,] 391 307 #>  [34312,] 392 307 #>  [34313,] 393 307 #>  [34314,] 394 307 #>  [34315,] 395 307 #>  [34316,] 396 307 #>  [34317,] 397 307 #>  [34318,] 398 307 #>  [34319,] 399 307 #>  [34320,] 400 307 #>  [34321,] 401 307 #>  [34322,] 402 307 #>  [34323,] 403 307 #>  [34324,] 404 307 #>  [34325,] 405 307 #>  [34326,] 406 307 #>  [34327,] 407 307 #>  [34328,] 408 307 #>  [34329,] 409 307 #>  [34330,] 410 307 #>  [34331,] 411 307 #>  [34332,] 412 307 #>  [34333,] 413 307 #>  [34334,] 414 307 #>  [34335,] 415 307 #>  [34336,] 416 307 #>  [34337,] 417 307 #>  [34338,] 418 307 #>  [34339,] 419 307 #>  [34340,] 420 307 #>  [34341,] 421 307 #>  [34342,] 422 307 #>  [34343,] 423 307 #>  [34344,] 424 307 #>  [34345,] 425 307 #>  [34346,] 426 307 #>  [34347,] 427 307 #>  [34348,] 428 307 #>  [34349,] 429 307 #>  [34350,] 430 307 #>  [34351,] 431 307 #>  [34352,] 432 307 #>  [34353,] 433 307 #>  [34354,] 434 307 #>  [34355,] 435 307 #>  [34356,] 436 307 #>  [34357,] 437 307 #>  [34358,] 438 307 #>  [34359,] 439 307 #>  [34360,] 440 307 #>  [34361,] 441 307 #>  [34362,] 442 307 #>  [34363,] 443 307 #>  [34364,] 444 307 #>  [34365,] 445 307 #>  [34366,] 446 307 #>  [34367,] 447 307 #>  [34368,] 448 307 #>  [34369,] 449 307 #>  [34370,] 450 307 #>  [34371,] 451 307 #>  [34372,] 452 307 #>  [34373,] 453 307 #>  [34374,] 454 307 #>  [34375,] 455 307 #>  [34376,] 456 307 #>  [34377,] 457 307 #>  [34378,] 458 307 #>  [34379,] 459 307 #>  [34380,] 460 307 #>  [34381,] 461 307 #>  [34382,] 462 307 #>  [34383,] 463 307 #>  [34384,] 464 307 #>  [34385,] 465 307 #>  [34386,] 466 307 #>  [34387,] 467 307 #>  [34388,] 468 307 #>  [34389,] 469 307 #>  [34390,] 470 307 #>  [34391,] 471 307 #>  [34392,] 472 307 #>  [34393,] 473 307 #>  [34394,] 474 307 #>  [34395,] 475 307 #>  [34396,] 476 307 #>  [34397,] 477 307 #>  [34398,] 478 307 #>  [34399,] 479 307 #>  [34400,] 480 307 #>  [34401,] 481 307 #>  [34402,] 482 307 #>  [34403,] 483 307 #>  [34404,] 484 307 #>  [34405,] 485 307 #>  [34406,] 486 307 #>  [34407,] 487 307 #>  [34408,] 488 307 #>  [34409,] 489 307 #>  [34410,] 490 307 #>  [34411,] 491 307 #>  [34412,] 492 307 #>  [34413,] 493 307 #>  [34414,] 494 307 #>  [34415,] 495 307 #>  [34416,] 496 307 #>  [34417,] 497 307 #>  [34418,] 498 307 #>  [34419,] 499 307 #>  [34420,] 500 307 #>  [34421,] 501 307 #>  [34422,] 502 307 #>  [34423,] 503 307 #>  [34424,] 504 307 #>  [34425,] 505 307 #>  [34426,] 506 307 #>  [34427,] 507 307 #>  [34428,] 508 307 #>  [34429,] 509 307 #>  [34430,] 510 307 #>  [34431,] 511 307 #>  [34432,] 512 307 #>  [34433,] 513 307 #>  [34434,] 514 307 #>  [34435,] 515 307 #>  [34436,] 516 307 #>  [34437,] 517 307 #>  [34438,] 518 307 #>  [34439,] 519 307 #>  [34440,] 520 307 #>  [34441,] 521 307 #>  [34442,] 522 307 #>  [34443,] 523 307 #>  [34444,] 524 307 #>  [34445,] 525 307 #>  [34446,] 526 307 #>  [34447,] 527 307 #>  [34448,] 528 307 #>  [34449,] 529 307 #>  [34450,] 530 307 #>  [34451,] 531 307 #>  [34452,] 532 307 #>  [34453,] 533 307 #>  [34454,] 534 307 #>  [34455,] 535 307 #>  [34456,] 536 307 #>  [34457,] 537 307 #>  [34458,] 538 307 #>  [34459,] 539 307 #>  [34460,] 540 307 #>  [34461,] 541 307 #>  [34462,] 542 307 #>  [34463,] 543 307 #>  [34464,] 544 307 #>  [34465,] 545 307 #>  [34466,] 546 307 #>  [34467,] 547 307 #>  [34468,] 548 307 #>  [34469,] 549 307 #>  [34470,] 550 307 #>  [34471,] 551 307 #>  [34472,] 552 307 #>  [34473,] 553 307 #>  [34474,] 554 307 #>  [34475,] 555 307 #>  [34476,] 556 307 #>  [34477,] 557 307 #>  [34478,] 558 307 #>  [34479,] 559 307 #>  [34480,] 560 307 #>  [34481,] 561 307 #>  [34482,] 562 307 #>  [34483,] 563 307 #>  [34484,] 564 307 #>  [34485,] 565 307 #>  [34486,] 566 307 #>  [34487,] 567 307 #>  [34488,] 568 307 #>  [34489,] 569 307 #>  [34490,] 570 307 #>  [34491,] 571 307 #>  [34492,] 572 307 #>  [34493,] 573 307 #>  [34494,] 574 307 #>  [34495,] 575 307 #>  [34496,] 576 307 #>  [34497,] 577 307 #>  [34498,] 578 307 #>  [34499,] 579 307 #>  [34500,] 580 307 #>  [34501,] 581 307 #>  [34502,] 582 307 #>  [34503,] 583 307 #>  [34504,] 584 307 #>  [34505,] 585 307 #>  [34506,] 586 307 #>  [34507,] 587 307 #>  [34508,] 588 307 #>  [34509,] 589 307 #>  [34510,] 590 307 #>  [34511,] 591 307 #>  [34512,] 592 307 #>  [34513,] 593 307 #>  [34514,] 594 307 #>  [34515,] 595 307 #>  [34516,] 596 307 #>  [34517,] 597 307 #>  [34518,] 598 307 #>  [34519,] 599 307 #>  [34520,] 600 307 #>  [34521,] 601 307 #>  [34522,] 602 307 #>  [34523,] 603 307 #>  [34524,] 604 307 #>  [34525,] 605 307 #>  [34526,] 606 307 #>  [34527,] 607 307 #>  [34528,] 608 307 #>  [34529,] 609 307 #>  [34530,] 610 307 #>  [34531,] 611 307 #>  [34532,] 612 307 #>  [34533,] 613 307 #>  [34534,] 614 307 #>  [34535,] 615 307 #>  [34536,] 616 307 #>  [34537,] 617 307 #>  [34538,] 618 307 #>  [34539,] 619 307 #>  [34540,] 620 307 #>  [34541,] 621 307 #>  [34542,] 622 307 #>  [34543,] 623 307 #>  [34544,] 624 307 #>  [34545,] 625 307 #>  [34546,] 626 307 #>  [34547,] 627 307 #>  [34548,] 628 307 #>  [34549,] 629 307 #>  [34550,] 630 307 #>  [34551,] 631 307 #>  [34552,] 632 307 #>  [34553,] 633 307 #>  [34554,] 634 307 #>  [34555,] 635 307 #>  [34556,] 636 307 #>  [34557,] 637 307 #>  [34558,] 638 307 #>  [34559,] 639 307 #>  [34560,] 640 307 #>  [34561,]   1 306 #>  [34562,]   2 306 #>  [34563,]   3 306 #>  [34564,]   4 306 #>  [34565,]   5 306 #>  [34566,]   6 306 #>  [34567,]   7 306 #>  [34568,]   8 306 #>  [34569,]   9 306 #>  [34570,]  10 306 #>  [34571,]  11 306 #>  [34572,]  12 306 #>  [34573,]  13 306 #>  [34574,]  14 306 #>  [34575,]  15 306 #>  [34576,]  16 306 #>  [34577,]  17 306 #>  [34578,]  18 306 #>  [34579,]  19 306 #>  [34580,]  20 306 #>  [34581,]  21 306 #>  [34582,]  22 306 #>  [34583,]  23 306 #>  [34584,]  24 306 #>  [34585,]  25 306 #>  [34586,]  26 306 #>  [34587,]  27 306 #>  [34588,]  28 306 #>  [34589,]  29 306 #>  [34590,]  30 306 #>  [34591,]  31 306 #>  [34592,]  32 306 #>  [34593,]  33 306 #>  [34594,]  34 306 #>  [34595,]  35 306 #>  [34596,]  36 306 #>  [34597,]  37 306 #>  [34598,]  38 306 #>  [34599,]  39 306 #>  [34600,]  40 306 #>  [34601,]  41 306 #>  [34602,]  42 306 #>  [34603,]  43 306 #>  [34604,]  44 306 #>  [34605,]  45 306 #>  [34606,]  46 306 #>  [34607,]  47 306 #>  [34608,]  48 306 #>  [34609,]  49 306 #>  [34610,]  50 306 #>  [34611,]  51 306 #>  [34612,]  52 306 #>  [34613,]  53 306 #>  [34614,]  54 306 #>  [34615,]  55 306 #>  [34616,]  56 306 #>  [34617,]  57 306 #>  [34618,]  58 306 #>  [34619,]  59 306 #>  [34620,]  60 306 #>  [34621,]  61 306 #>  [34622,]  62 306 #>  [34623,]  63 306 #>  [34624,]  64 306 #>  [34625,]  65 306 #>  [34626,]  66 306 #>  [34627,]  67 306 #>  [34628,]  68 306 #>  [34629,]  69 306 #>  [34630,]  70 306 #>  [34631,]  71 306 #>  [34632,]  72 306 #>  [34633,]  73 306 #>  [34634,]  74 306 #>  [34635,]  75 306 #>  [34636,]  76 306 #>  [34637,]  77 306 #>  [34638,]  78 306 #>  [34639,]  79 306 #>  [34640,]  80 306 #>  [34641,]  81 306 #>  [34642,]  82 306 #>  [34643,]  83 306 #>  [34644,]  84 306 #>  [34645,]  85 306 #>  [34646,]  86 306 #>  [34647,]  87 306 #>  [34648,]  88 306 #>  [34649,]  89 306 #>  [34650,]  90 306 #>  [34651,]  91 306 #>  [34652,]  92 306 #>  [34653,]  93 306 #>  [34654,]  94 306 #>  [34655,]  95 306 #>  [34656,]  96 306 #>  [34657,]  97 306 #>  [34658,]  98 306 #>  [34659,]  99 306 #>  [34660,] 100 306 #>  [34661,] 101 306 #>  [34662,] 102 306 #>  [34663,] 103 306 #>  [34664,] 104 306 #>  [34665,] 105 306 #>  [34666,] 106 306 #>  [34667,] 107 306 #>  [34668,] 108 306 #>  [34669,] 109 306 #>  [34670,] 110 306 #>  [34671,] 111 306 #>  [34672,] 112 306 #>  [34673,] 113 306 #>  [34674,] 114 306 #>  [34675,] 115 306 #>  [34676,] 116 306 #>  [34677,] 117 306 #>  [34678,] 118 306 #>  [34679,] 119 306 #>  [34680,] 120 306 #>  [34681,] 121 306 #>  [34682,] 122 306 #>  [34683,] 123 306 #>  [34684,] 124 306 #>  [34685,] 125 306 #>  [34686,] 126 306 #>  [34687,] 127 306 #>  [34688,] 128 306 #>  [34689,] 129 306 #>  [34690,] 130 306 #>  [34691,] 131 306 #>  [34692,] 132 306 #>  [34693,] 133 306 #>  [34694,] 134 306 #>  [34695,] 135 306 #>  [34696,] 136 306 #>  [34697,] 137 306 #>  [34698,] 138 306 #>  [34699,] 139 306 #>  [34700,] 140 306 #>  [34701,] 141 306 #>  [34702,] 142 306 #>  [34703,] 143 306 #>  [34704,] 144 306 #>  [34705,] 145 306 #>  [34706,] 146 306 #>  [34707,] 147 306 #>  [34708,] 148 306 #>  [34709,] 149 306 #>  [34710,] 150 306 #>  [34711,] 151 306 #>  [34712,] 152 306 #>  [34713,] 153 306 #>  [34714,] 154 306 #>  [34715,] 155 306 #>  [34716,] 156 306 #>  [34717,] 157 306 #>  [34718,] 158 306 #>  [34719,] 159 306 #>  [34720,] 160 306 #>  [34721,] 161 306 #>  [34722,] 162 306 #>  [34723,] 163 306 #>  [34724,] 164 306 #>  [34725,] 165 306 #>  [34726,] 166 306 #>  [34727,] 167 306 #>  [34728,] 168 306 #>  [34729,] 169 306 #>  [34730,] 170 306 #>  [34731,] 171 306 #>  [34732,] 172 306 #>  [34733,] 173 306 #>  [34734,] 174 306 #>  [34735,] 175 306 #>  [34736,] 176 306 #>  [34737,] 177 306 #>  [34738,] 178 306 #>  [34739,] 179 306 #>  [34740,] 180 306 #>  [34741,] 181 306 #>  [34742,] 182 306 #>  [34743,] 183 306 #>  [34744,] 184 306 #>  [34745,] 185 306 #>  [34746,] 186 306 #>  [34747,] 187 306 #>  [34748,] 188 306 #>  [34749,] 189 306 #>  [34750,] 190 306 #>  [34751,] 191 306 #>  [34752,] 192 306 #>  [34753,] 193 306 #>  [34754,] 194 306 #>  [34755,] 195 306 #>  [34756,] 196 306 #>  [34757,] 197 306 #>  [34758,] 198 306 #>  [34759,] 199 306 #>  [34760,] 200 306 #>  [34761,] 201 306 #>  [34762,] 202 306 #>  [34763,] 203 306 #>  [34764,] 204 306 #>  [34765,] 205 306 #>  [34766,] 206 306 #>  [34767,] 207 306 #>  [34768,] 208 306 #>  [34769,] 209 306 #>  [34770,] 210 306 #>  [34771,] 211 306 #>  [34772,] 212 306 #>  [34773,] 213 306 #>  [34774,] 214 306 #>  [34775,] 215 306 #>  [34776,] 216 306 #>  [34777,] 217 306 #>  [34778,] 218 306 #>  [34779,] 219 306 #>  [34780,] 220 306 #>  [34781,] 221 306 #>  [34782,] 222 306 #>  [34783,] 223 306 #>  [34784,] 224 306 #>  [34785,] 225 306 #>  [34786,] 226 306 #>  [34787,] 227 306 #>  [34788,] 228 306 #>  [34789,] 229 306 #>  [34790,] 230 306 #>  [34791,] 231 306 #>  [34792,] 232 306 #>  [34793,] 233 306 #>  [34794,] 234 306 #>  [34795,] 235 306 #>  [34796,] 236 306 #>  [34797,] 237 306 #>  [34798,] 238 306 #>  [34799,] 239 306 #>  [34800,] 240 306 #>  [34801,] 241 306 #>  [34802,] 242 306 #>  [34803,] 243 306 #>  [34804,] 244 306 #>  [34805,] 245 306 #>  [34806,] 246 306 #>  [34807,] 247 306 #>  [34808,] 248 306 #>  [34809,] 249 306 #>  [34810,] 250 306 #>  [34811,] 251 306 #>  [34812,] 252 306 #>  [34813,] 253 306 #>  [34814,] 254 306 #>  [34815,] 255 306 #>  [34816,] 256 306 #>  [34817,] 257 306 #>  [34818,] 258 306 #>  [34819,] 259 306 #>  [34820,] 260 306 #>  [34821,] 261 306 #>  [34822,] 262 306 #>  [34823,] 263 306 #>  [34824,] 264 306 #>  [34825,] 265 306 #>  [34826,] 266 306 #>  [34827,] 267 306 #>  [34828,] 268 306 #>  [34829,] 269 306 #>  [34830,] 270 306 #>  [34831,] 271 306 #>  [34832,] 272 306 #>  [34833,] 273 306 #>  [34834,] 274 306 #>  [34835,] 275 306 #>  [34836,] 276 306 #>  [34837,] 277 306 #>  [34838,] 278 306 #>  [34839,] 279 306 #>  [34840,] 280 306 #>  [34841,] 281 306 #>  [34842,] 282 306 #>  [34843,] 283 306 #>  [34844,] 284 306 #>  [34845,] 285 306 #>  [34846,] 286 306 #>  [34847,] 287 306 #>  [34848,] 288 306 #>  [34849,] 289 306 #>  [34850,] 290 306 #>  [34851,] 291 306 #>  [34852,] 292 306 #>  [34853,] 293 306 #>  [34854,] 294 306 #>  [34855,] 295 306 #>  [34856,] 296 306 #>  [34857,] 297 306 #>  [34858,] 298 306 #>  [34859,] 299 306 #>  [34860,] 300 306 #>  [34861,] 301 306 #>  [34862,] 302 306 #>  [34863,] 303 306 #>  [34864,] 304 306 #>  [34865,] 305 306 #>  [34866,] 306 306 #>  [34867,] 307 306 #>  [34868,] 308 306 #>  [34869,] 309 306 #>  [34870,] 310 306 #>  [34871,] 311 306 #>  [34872,] 312 306 #>  [34873,] 313 306 #>  [34874,] 314 306 #>  [34875,] 315 306 #>  [34876,] 316 306 #>  [34877,] 317 306 #>  [34878,] 318 306 #>  [34879,] 319 306 #>  [34880,] 320 306 #>  [34881,] 321 306 #>  [34882,] 322 306 #>  [34883,] 323 306 #>  [34884,] 324 306 #>  [34885,] 325 306 #>  [34886,] 326 306 #>  [34887,] 327 306 #>  [34888,] 328 306 #>  [34889,] 329 306 #>  [34890,] 330 306 #>  [34891,] 331 306 #>  [34892,] 332 306 #>  [34893,] 333 306 #>  [34894,] 334 306 #>  [34895,] 335 306 #>  [34896,] 336 306 #>  [34897,] 337 306 #>  [34898,] 338 306 #>  [34899,] 339 306 #>  [34900,] 340 306 #>  [34901,] 341 306 #>  [34902,] 342 306 #>  [34903,] 343 306 #>  [34904,] 344 306 #>  [34905,] 345 306 #>  [34906,] 346 306 #>  [34907,] 347 306 #>  [34908,] 348 306 #>  [34909,] 349 306 #>  [34910,] 350 306 #>  [34911,] 351 306 #>  [34912,] 352 306 #>  [34913,] 353 306 #>  [34914,] 354 306 #>  [34915,] 355 306 #>  [34916,] 356 306 #>  [34917,] 357 306 #>  [34918,] 358 306 #>  [34919,] 359 306 #>  [34920,] 360 306 #>  [34921,] 361 306 #>  [34922,] 362 306 #>  [34923,] 363 306 #>  [34924,] 364 306 #>  [34925,] 365 306 #>  [34926,] 366 306 #>  [34927,] 367 306 #>  [34928,] 368 306 #>  [34929,] 369 306 #>  [34930,] 370 306 #>  [34931,] 371 306 #>  [34932,] 372 306 #>  [34933,] 373 306 #>  [34934,] 374 306 #>  [34935,] 375 306 #>  [34936,] 376 306 #>  [34937,] 377 306 #>  [34938,] 378 306 #>  [34939,] 379 306 #>  [34940,] 380 306 #>  [34941,] 381 306 #>  [34942,] 382 306 #>  [34943,] 383 306 #>  [34944,] 384 306 #>  [34945,] 385 306 #>  [34946,] 386 306 #>  [34947,] 387 306 #>  [34948,] 388 306 #>  [34949,] 389 306 #>  [34950,] 390 306 #>  [34951,] 391 306 #>  [34952,] 392 306 #>  [34953,] 393 306 #>  [34954,] 394 306 #>  [34955,] 395 306 #>  [34956,] 396 306 #>  [34957,] 397 306 #>  [34958,] 398 306 #>  [34959,] 399 306 #>  [34960,] 400 306 #>  [34961,] 401 306 #>  [34962,] 402 306 #>  [34963,] 403 306 #>  [34964,] 404 306 #>  [34965,] 405 306 #>  [34966,] 406 306 #>  [34967,] 407 306 #>  [34968,] 408 306 #>  [34969,] 409 306 #>  [34970,] 410 306 #>  [34971,] 411 306 #>  [34972,] 412 306 #>  [34973,] 413 306 #>  [34974,] 414 306 #>  [34975,] 415 306 #>  [34976,] 416 306 #>  [34977,] 417 306 #>  [34978,] 418 306 #>  [34979,] 419 306 #>  [34980,] 420 306 #>  [34981,] 421 306 #>  [34982,] 422 306 #>  [34983,] 423 306 #>  [34984,] 424 306 #>  [34985,] 425 306 #>  [34986,] 426 306 #>  [34987,] 427 306 #>  [34988,] 428 306 #>  [34989,] 429 306 #>  [34990,] 430 306 #>  [34991,] 431 306 #>  [34992,] 432 306 #>  [34993,] 433 306 #>  [34994,] 434 306 #>  [34995,] 435 306 #>  [34996,] 436 306 #>  [34997,] 437 306 #>  [34998,] 438 306 #>  [34999,] 439 306 #>  [35000,] 440 306 #>  [35001,] 441 306 #>  [35002,] 442 306 #>  [35003,] 443 306 #>  [35004,] 444 306 #>  [35005,] 445 306 #>  [35006,] 446 306 #>  [35007,] 447 306 #>  [35008,] 448 306 #>  [35009,] 449 306 #>  [35010,] 450 306 #>  [35011,] 451 306 #>  [35012,] 452 306 #>  [35013,] 453 306 #>  [35014,] 454 306 #>  [35015,] 455 306 #>  [35016,] 456 306 #>  [35017,] 457 306 #>  [35018,] 458 306 #>  [35019,] 459 306 #>  [35020,] 460 306 #>  [35021,] 461 306 #>  [35022,] 462 306 #>  [35023,] 463 306 #>  [35024,] 464 306 #>  [35025,] 465 306 #>  [35026,] 466 306 #>  [35027,] 467 306 #>  [35028,] 468 306 #>  [35029,] 469 306 #>  [35030,] 470 306 #>  [35031,] 471 306 #>  [35032,] 472 306 #>  [35033,] 473 306 #>  [35034,] 474 306 #>  [35035,] 475 306 #>  [35036,] 476 306 #>  [35037,] 477 306 #>  [35038,] 478 306 #>  [35039,] 479 306 #>  [35040,] 480 306 #>  [35041,] 481 306 #>  [35042,] 482 306 #>  [35043,] 483 306 #>  [35044,] 484 306 #>  [35045,] 485 306 #>  [35046,] 486 306 #>  [35047,] 487 306 #>  [35048,] 488 306 #>  [35049,] 489 306 #>  [35050,] 490 306 #>  [35051,] 491 306 #>  [35052,] 492 306 #>  [35053,] 493 306 #>  [35054,] 494 306 #>  [35055,] 495 306 #>  [35056,] 496 306 #>  [35057,] 497 306 #>  [35058,] 498 306 #>  [35059,] 499 306 #>  [35060,] 500 306 #>  [35061,] 501 306 #>  [35062,] 502 306 #>  [35063,] 503 306 #>  [35064,] 504 306 #>  [35065,] 505 306 #>  [35066,] 506 306 #>  [35067,] 507 306 #>  [35068,] 508 306 #>  [35069,] 509 306 #>  [35070,] 510 306 #>  [35071,] 511 306 #>  [35072,] 512 306 #>  [35073,] 513 306 #>  [35074,] 514 306 #>  [35075,] 515 306 #>  [35076,] 516 306 #>  [35077,] 517 306 #>  [35078,] 518 306 #>  [35079,] 519 306 #>  [35080,] 520 306 #>  [35081,] 521 306 #>  [35082,] 522 306 #>  [35083,] 523 306 #>  [35084,] 524 306 #>  [35085,] 525 306 #>  [35086,] 526 306 #>  [35087,] 527 306 #>  [35088,] 528 306 #>  [35089,] 529 306 #>  [35090,] 530 306 #>  [35091,] 531 306 #>  [35092,] 532 306 #>  [35093,] 533 306 #>  [35094,] 534 306 #>  [35095,] 535 306 #>  [35096,] 536 306 #>  [35097,] 537 306 #>  [35098,] 538 306 #>  [35099,] 539 306 #>  [35100,] 540 306 #>  [35101,] 541 306 #>  [35102,] 542 306 #>  [35103,] 543 306 #>  [35104,] 544 306 #>  [35105,] 545 306 #>  [35106,] 546 306 #>  [35107,] 547 306 #>  [35108,] 548 306 #>  [35109,] 549 306 #>  [35110,] 550 306 #>  [35111,] 551 306 #>  [35112,] 552 306 #>  [35113,] 553 306 #>  [35114,] 554 306 #>  [35115,] 555 306 #>  [35116,] 556 306 #>  [35117,] 557 306 #>  [35118,] 558 306 #>  [35119,] 559 306 #>  [35120,] 560 306 #>  [35121,] 561 306 #>  [35122,] 562 306 #>  [35123,] 563 306 #>  [35124,] 564 306 #>  [35125,] 565 306 #>  [35126,] 566 306 #>  [35127,] 567 306 #>  [35128,] 568 306 #>  [35129,] 569 306 #>  [35130,] 570 306 #>  [35131,] 571 306 #>  [35132,] 572 306 #>  [35133,] 573 306 #>  [35134,] 574 306 #>  [35135,] 575 306 #>  [35136,] 576 306 #>  [35137,] 577 306 #>  [35138,] 578 306 #>  [35139,] 579 306 #>  [35140,] 580 306 #>  [35141,] 581 306 #>  [35142,] 582 306 #>  [35143,] 583 306 #>  [35144,] 584 306 #>  [35145,] 585 306 #>  [35146,] 586 306 #>  [35147,] 587 306 #>  [35148,] 588 306 #>  [35149,] 589 306 #>  [35150,] 590 306 #>  [35151,] 591 306 #>  [35152,] 592 306 #>  [35153,] 593 306 #>  [35154,] 594 306 #>  [35155,] 595 306 #>  [35156,] 596 306 #>  [35157,] 597 306 #>  [35158,] 598 306 #>  [35159,] 599 306 #>  [35160,] 600 306 #>  [35161,] 601 306 #>  [35162,] 602 306 #>  [35163,] 603 306 #>  [35164,] 604 306 #>  [35165,] 605 306 #>  [35166,] 606 306 #>  [35167,] 607 306 #>  [35168,] 608 306 #>  [35169,] 609 306 #>  [35170,] 610 306 #>  [35171,] 611 306 #>  [35172,] 612 306 #>  [35173,] 613 306 #>  [35174,] 614 306 #>  [35175,] 615 306 #>  [35176,] 616 306 #>  [35177,] 617 306 #>  [35178,] 618 306 #>  [35179,] 619 306 #>  [35180,] 620 306 #>  [35181,] 621 306 #>  [35182,] 622 306 #>  [35183,] 623 306 #>  [35184,] 624 306 #>  [35185,] 625 306 #>  [35186,] 626 306 #>  [35187,] 627 306 #>  [35188,] 628 306 #>  [35189,] 629 306 #>  [35190,] 630 306 #>  [35191,] 631 306 #>  [35192,] 632 306 #>  [35193,] 633 306 #>  [35194,] 634 306 #>  [35195,] 635 306 #>  [35196,] 636 306 #>  [35197,] 637 306 #>  [35198,] 638 306 #>  [35199,] 639 306 #>  [35200,] 640 306 #>  [35201,]   1 305 #>  [35202,]   2 305 #>  [35203,]   3 305 #>  [35204,]   4 305 #>  [35205,]   5 305 #>  [35206,]   6 305 #>  [35207,]   7 305 #>  [35208,]   8 305 #>  [35209,]   9 305 #>  [35210,]  10 305 #>  [35211,]  11 305 #>  [35212,]  12 305 #>  [35213,]  13 305 #>  [35214,]  14 305 #>  [35215,]  15 305 #>  [35216,]  16 305 #>  [35217,]  17 305 #>  [35218,]  18 305 #>  [35219,]  19 305 #>  [35220,]  20 305 #>  [35221,]  21 305 #>  [35222,]  22 305 #>  [35223,]  23 305 #>  [35224,]  24 305 #>  [35225,]  25 305 #>  [35226,]  26 305 #>  [35227,]  27 305 #>  [35228,]  28 305 #>  [35229,]  29 305 #>  [35230,]  30 305 #>  [35231,]  31 305 #>  [35232,]  32 305 #>  [35233,]  33 305 #>  [35234,]  34 305 #>  [35235,]  35 305 #>  [35236,]  36 305 #>  [35237,]  37 305 #>  [35238,]  38 305 #>  [35239,]  39 305 #>  [35240,]  40 305 #>  [35241,]  41 305 #>  [35242,]  42 305 #>  [35243,]  43 305 #>  [35244,]  44 305 #>  [35245,]  45 305 #>  [35246,]  46 305 #>  [35247,]  47 305 #>  [35248,]  48 305 #>  [35249,]  49 305 #>  [35250,]  50 305 #>  [35251,]  51 305 #>  [35252,]  52 305 #>  [35253,]  53 305 #>  [35254,]  54 305 #>  [35255,]  55 305 #>  [35256,]  56 305 #>  [35257,]  57 305 #>  [35258,]  58 305 #>  [35259,]  59 305 #>  [35260,]  60 305 #>  [35261,]  61 305 #>  [35262,]  62 305 #>  [35263,]  63 305 #>  [35264,]  64 305 #>  [35265,]  65 305 #>  [35266,]  66 305 #>  [35267,]  67 305 #>  [35268,]  68 305 #>  [35269,]  69 305 #>  [35270,]  70 305 #>  [35271,]  71 305 #>  [35272,]  72 305 #>  [35273,]  73 305 #>  [35274,]  74 305 #>  [35275,]  75 305 #>  [35276,]  76 305 #>  [35277,]  77 305 #>  [35278,]  78 305 #>  [35279,]  79 305 #>  [35280,]  80 305 #>  [35281,]  81 305 #>  [35282,]  82 305 #>  [35283,]  83 305 #>  [35284,]  84 305 #>  [35285,]  85 305 #>  [35286,]  86 305 #>  [35287,]  87 305 #>  [35288,]  88 305 #>  [35289,]  89 305 #>  [35290,]  90 305 #>  [35291,]  91 305 #>  [35292,]  92 305 #>  [35293,]  93 305 #>  [35294,]  94 305 #>  [35295,]  95 305 #>  [35296,]  96 305 #>  [35297,]  97 305 #>  [35298,]  98 305 #>  [35299,]  99 305 #>  [35300,] 100 305 #>  [35301,] 101 305 #>  [35302,] 102 305 #>  [35303,] 103 305 #>  [35304,] 104 305 #>  [35305,] 105 305 #>  [35306,] 106 305 #>  [35307,] 107 305 #>  [35308,] 108 305 #>  [35309,] 109 305 #>  [35310,] 110 305 #>  [35311,] 111 305 #>  [35312,] 112 305 #>  [35313,] 113 305 #>  [35314,] 114 305 #>  [35315,] 115 305 #>  [35316,] 116 305 #>  [35317,] 117 305 #>  [35318,] 118 305 #>  [35319,] 119 305 #>  [35320,] 120 305 #>  [35321,] 121 305 #>  [35322,] 122 305 #>  [35323,] 123 305 #>  [35324,] 124 305 #>  [35325,] 125 305 #>  [35326,] 126 305 #>  [35327,] 127 305 #>  [35328,] 128 305 #>  [35329,] 129 305 #>  [35330,] 130 305 #>  [35331,] 131 305 #>  [35332,] 132 305 #>  [35333,] 133 305 #>  [35334,] 134 305 #>  [35335,] 135 305 #>  [35336,] 136 305 #>  [35337,] 137 305 #>  [35338,] 138 305 #>  [35339,] 139 305 #>  [35340,] 140 305 #>  [35341,] 141 305 #>  [35342,] 142 305 #>  [35343,] 143 305 #>  [35344,] 144 305 #>  [35345,] 145 305 #>  [35346,] 146 305 #>  [35347,] 147 305 #>  [35348,] 148 305 #>  [35349,] 149 305 #>  [35350,] 150 305 #>  [35351,] 151 305 #>  [35352,] 152 305 #>  [35353,] 153 305 #>  [35354,] 154 305 #>  [35355,] 155 305 #>  [35356,] 156 305 #>  [35357,] 157 305 #>  [35358,] 158 305 #>  [35359,] 159 305 #>  [35360,] 160 305 #>  [35361,] 161 305 #>  [35362,] 162 305 #>  [35363,] 163 305 #>  [35364,] 164 305 #>  [35365,] 165 305 #>  [35366,] 166 305 #>  [35367,] 167 305 #>  [35368,] 168 305 #>  [35369,] 169 305 #>  [35370,] 170 305 #>  [35371,] 171 305 #>  [35372,] 172 305 #>  [35373,] 173 305 #>  [35374,] 174 305 #>  [35375,] 175 305 #>  [35376,] 176 305 #>  [35377,] 177 305 #>  [35378,] 178 305 #>  [35379,] 179 305 #>  [35380,] 180 305 #>  [35381,] 181 305 #>  [35382,] 182 305 #>  [35383,] 183 305 #>  [35384,] 184 305 #>  [35385,] 185 305 #>  [35386,] 186 305 #>  [35387,] 187 305 #>  [35388,] 188 305 #>  [35389,] 189 305 #>  [35390,] 190 305 #>  [35391,] 191 305 #>  [35392,] 192 305 #>  [35393,] 193 305 #>  [35394,] 194 305 #>  [35395,] 195 305 #>  [35396,] 196 305 #>  [35397,] 197 305 #>  [35398,] 198 305 #>  [35399,] 199 305 #>  [35400,] 200 305 #>  [35401,] 201 305 #>  [35402,] 202 305 #>  [35403,] 203 305 #>  [35404,] 204 305 #>  [35405,] 205 305 #>  [35406,] 206 305 #>  [35407,] 207 305 #>  [35408,] 208 305 #>  [35409,] 209 305 #>  [35410,] 210 305 #>  [35411,] 211 305 #>  [35412,] 212 305 #>  [35413,] 213 305 #>  [35414,] 214 305 #>  [35415,] 215 305 #>  [35416,] 216 305 #>  [35417,] 217 305 #>  [35418,] 218 305 #>  [35419,] 219 305 #>  [35420,] 220 305 #>  [35421,] 221 305 #>  [35422,] 222 305 #>  [35423,] 223 305 #>  [35424,] 224 305 #>  [35425,] 225 305 #>  [35426,] 226 305 #>  [35427,] 227 305 #>  [35428,] 228 305 #>  [35429,] 229 305 #>  [35430,] 230 305 #>  [35431,] 231 305 #>  [35432,] 232 305 #>  [35433,] 233 305 #>  [35434,] 234 305 #>  [35435,] 235 305 #>  [35436,] 236 305 #>  [35437,] 237 305 #>  [35438,] 238 305 #>  [35439,] 239 305 #>  [35440,] 240 305 #>  [35441,] 241 305 #>  [35442,] 242 305 #>  [35443,] 243 305 #>  [35444,] 244 305 #>  [35445,] 245 305 #>  [35446,] 246 305 #>  [35447,] 247 305 #>  [35448,] 248 305 #>  [35449,] 249 305 #>  [35450,] 250 305 #>  [35451,] 251 305 #>  [35452,] 252 305 #>  [35453,] 253 305 #>  [35454,] 254 305 #>  [35455,] 255 305 #>  [35456,] 256 305 #>  [35457,] 257 305 #>  [35458,] 258 305 #>  [35459,] 259 305 #>  [35460,] 260 305 #>  [35461,] 261 305 #>  [35462,] 262 305 #>  [35463,] 263 305 #>  [35464,] 264 305 #>  [35465,] 265 305 #>  [35466,] 266 305 #>  [35467,] 267 305 #>  [35468,] 268 305 #>  [35469,] 269 305 #>  [35470,] 270 305 #>  [35471,] 271 305 #>  [35472,] 272 305 #>  [35473,] 273 305 #>  [35474,] 274 305 #>  [35475,] 275 305 #>  [35476,] 276 305 #>  [35477,] 277 305 #>  [35478,] 278 305 #>  [35479,] 279 305 #>  [35480,] 280 305 #>  [35481,] 281 305 #>  [35482,] 282 305 #>  [35483,] 283 305 #>  [35484,] 284 305 #>  [35485,] 285 305 #>  [35486,] 286 305 #>  [35487,] 287 305 #>  [35488,] 288 305 #>  [35489,] 289 305 #>  [35490,] 290 305 #>  [35491,] 291 305 #>  [35492,] 292 305 #>  [35493,] 293 305 #>  [35494,] 294 305 #>  [35495,] 295 305 #>  [35496,] 296 305 #>  [35497,] 297 305 #>  [35498,] 298 305 #>  [35499,] 299 305 #>  [35500,] 300 305 #>  [35501,] 301 305 #>  [35502,] 302 305 #>  [35503,] 303 305 #>  [35504,] 304 305 #>  [35505,] 305 305 #>  [35506,] 306 305 #>  [35507,] 307 305 #>  [35508,] 308 305 #>  [35509,] 309 305 #>  [35510,] 310 305 #>  [35511,] 311 305 #>  [35512,] 312 305 #>  [35513,] 313 305 #>  [35514,] 314 305 #>  [35515,] 315 305 #>  [35516,] 316 305 #>  [35517,] 317 305 #>  [35518,] 318 305 #>  [35519,] 319 305 #>  [35520,] 320 305 #>  [35521,] 321 305 #>  [35522,] 322 305 #>  [35523,] 323 305 #>  [35524,] 324 305 #>  [35525,] 325 305 #>  [35526,] 326 305 #>  [35527,] 327 305 #>  [35528,] 328 305 #>  [35529,] 329 305 #>  [35530,] 330 305 #>  [35531,] 331 305 #>  [35532,] 332 305 #>  [35533,] 333 305 #>  [35534,] 334 305 #>  [35535,] 335 305 #>  [35536,] 336 305 #>  [35537,] 337 305 #>  [35538,] 338 305 #>  [35539,] 339 305 #>  [35540,] 340 305 #>  [35541,] 341 305 #>  [35542,] 342 305 #>  [35543,] 343 305 #>  [35544,] 344 305 #>  [35545,] 345 305 #>  [35546,] 346 305 #>  [35547,] 347 305 #>  [35548,] 348 305 #>  [35549,] 349 305 #>  [35550,] 350 305 #>  [35551,] 351 305 #>  [35552,] 352 305 #>  [35553,] 353 305 #>  [35554,] 354 305 #>  [35555,] 355 305 #>  [35556,] 356 305 #>  [35557,] 357 305 #>  [35558,] 358 305 #>  [35559,] 359 305 #>  [35560,] 360 305 #>  [35561,] 361 305 #>  [35562,] 362 305 #>  [35563,] 363 305 #>  [35564,] 364 305 #>  [35565,] 365 305 #>  [35566,] 366 305 #>  [35567,] 367 305 #>  [35568,] 368 305 #>  [35569,] 369 305 #>  [35570,] 370 305 #>  [35571,] 371 305 #>  [35572,] 372 305 #>  [35573,] 373 305 #>  [35574,] 374 305 #>  [35575,] 375 305 #>  [35576,] 376 305 #>  [35577,] 377 305 #>  [35578,] 378 305 #>  [35579,] 379 305 #>  [35580,] 380 305 #>  [35581,] 381 305 #>  [35582,] 382 305 #>  [35583,] 383 305 #>  [35584,] 384 305 #>  [35585,] 385 305 #>  [35586,] 386 305 #>  [35587,] 387 305 #>  [35588,] 388 305 #>  [35589,] 389 305 #>  [35590,] 390 305 #>  [35591,] 391 305 #>  [35592,] 392 305 #>  [35593,] 393 305 #>  [35594,] 394 305 #>  [35595,] 395 305 #>  [35596,] 396 305 #>  [35597,] 397 305 #>  [35598,] 398 305 #>  [35599,] 399 305 #>  [35600,] 400 305 #>  [35601,] 401 305 #>  [35602,] 402 305 #>  [35603,] 403 305 #>  [35604,] 404 305 #>  [35605,] 405 305 #>  [35606,] 406 305 #>  [35607,] 407 305 #>  [35608,] 408 305 #>  [35609,] 409 305 #>  [35610,] 410 305 #>  [35611,] 411 305 #>  [35612,] 412 305 #>  [35613,] 413 305 #>  [35614,] 414 305 #>  [35615,] 415 305 #>  [35616,] 416 305 #>  [35617,] 417 305 #>  [35618,] 418 305 #>  [35619,] 419 305 #>  [35620,] 420 305 #>  [35621,] 421 305 #>  [35622,] 422 305 #>  [35623,] 423 305 #>  [35624,] 424 305 #>  [35625,] 425 305 #>  [35626,] 426 305 #>  [35627,] 427 305 #>  [35628,] 428 305 #>  [35629,] 429 305 #>  [35630,] 430 305 #>  [35631,] 431 305 #>  [35632,] 432 305 #>  [35633,] 433 305 #>  [35634,] 434 305 #>  [35635,] 435 305 #>  [35636,] 436 305 #>  [35637,] 437 305 #>  [35638,] 438 305 #>  [35639,] 439 305 #>  [35640,] 440 305 #>  [35641,] 441 305 #>  [35642,] 442 305 #>  [35643,] 443 305 #>  [35644,] 444 305 #>  [35645,] 445 305 #>  [35646,] 446 305 #>  [35647,] 447 305 #>  [35648,] 448 305 #>  [35649,] 449 305 #>  [35650,] 450 305 #>  [35651,] 451 305 #>  [35652,] 452 305 #>  [35653,] 453 305 #>  [35654,] 454 305 #>  [35655,] 455 305 #>  [35656,] 456 305 #>  [35657,] 457 305 #>  [35658,] 458 305 #>  [35659,] 459 305 #>  [35660,] 460 305 #>  [35661,] 461 305 #>  [35662,] 462 305 #>  [35663,] 463 305 #>  [35664,] 464 305 #>  [35665,] 465 305 #>  [35666,] 466 305 #>  [35667,] 467 305 #>  [35668,] 468 305 #>  [35669,] 469 305 #>  [35670,] 470 305 #>  [35671,] 471 305 #>  [35672,] 472 305 #>  [35673,] 473 305 #>  [35674,] 474 305 #>  [35675,] 475 305 #>  [35676,] 476 305 #>  [35677,] 477 305 #>  [35678,] 478 305 #>  [35679,] 479 305 #>  [35680,] 480 305 #>  [35681,] 481 305 #>  [35682,] 482 305 #>  [35683,] 483 305 #>  [35684,] 484 305 #>  [35685,] 485 305 #>  [35686,] 486 305 #>  [35687,] 487 305 #>  [35688,] 488 305 #>  [35689,] 489 305 #>  [35690,] 490 305 #>  [35691,] 491 305 #>  [35692,] 492 305 #>  [35693,] 493 305 #>  [35694,] 494 305 #>  [35695,] 495 305 #>  [35696,] 496 305 #>  [35697,] 497 305 #>  [35698,] 498 305 #>  [35699,] 499 305 #>  [35700,] 500 305 #>  [35701,] 501 305 #>  [35702,] 502 305 #>  [35703,] 503 305 #>  [35704,] 504 305 #>  [35705,] 505 305 #>  [35706,] 506 305 #>  [35707,] 507 305 #>  [35708,] 508 305 #>  [35709,] 509 305 #>  [35710,] 510 305 #>  [35711,] 511 305 #>  [35712,] 512 305 #>  [35713,] 513 305 #>  [35714,] 514 305 #>  [35715,] 515 305 #>  [35716,] 516 305 #>  [35717,] 517 305 #>  [35718,] 518 305 #>  [35719,] 519 305 #>  [35720,] 520 305 #>  [35721,] 521 305 #>  [35722,] 522 305 #>  [35723,] 523 305 #>  [35724,] 524 305 #>  [35725,] 525 305 #>  [35726,] 526 305 #>  [35727,] 527 305 #>  [35728,] 528 305 #>  [35729,] 529 305 #>  [35730,] 530 305 #>  [35731,] 531 305 #>  [35732,] 532 305 #>  [35733,] 533 305 #>  [35734,] 534 305 #>  [35735,] 535 305 #>  [35736,] 536 305 #>  [35737,] 537 305 #>  [35738,] 538 305 #>  [35739,] 539 305 #>  [35740,] 540 305 #>  [35741,] 541 305 #>  [35742,] 542 305 #>  [35743,] 543 305 #>  [35744,] 544 305 #>  [35745,] 545 305 #>  [35746,] 546 305 #>  [35747,] 547 305 #>  [35748,] 548 305 #>  [35749,] 549 305 #>  [35750,] 550 305 #>  [35751,] 551 305 #>  [35752,] 552 305 #>  [35753,] 553 305 #>  [35754,] 554 305 #>  [35755,] 555 305 #>  [35756,] 556 305 #>  [35757,] 557 305 #>  [35758,] 558 305 #>  [35759,] 559 305 #>  [35760,] 560 305 #>  [35761,] 561 305 #>  [35762,] 562 305 #>  [35763,] 563 305 #>  [35764,] 564 305 #>  [35765,] 565 305 #>  [35766,] 566 305 #>  [35767,] 567 305 #>  [35768,] 568 305 #>  [35769,] 569 305 #>  [35770,] 570 305 #>  [35771,] 571 305 #>  [35772,] 572 305 #>  [35773,] 573 305 #>  [35774,] 574 305 #>  [35775,] 575 305 #>  [35776,] 576 305 #>  [35777,] 577 305 #>  [35778,] 578 305 #>  [35779,] 579 305 #>  [35780,] 580 305 #>  [35781,] 581 305 #>  [35782,] 582 305 #>  [35783,] 583 305 #>  [35784,] 584 305 #>  [35785,] 585 305 #>  [35786,] 586 305 #>  [35787,] 587 305 #>  [35788,] 588 305 #>  [35789,] 589 305 #>  [35790,] 590 305 #>  [35791,] 591 305 #>  [35792,] 592 305 #>  [35793,] 593 305 #>  [35794,] 594 305 #>  [35795,] 595 305 #>  [35796,] 596 305 #>  [35797,] 597 305 #>  [35798,] 598 305 #>  [35799,] 599 305 #>  [35800,] 600 305 #>  [35801,] 601 305 #>  [35802,] 602 305 #>  [35803,] 603 305 #>  [35804,] 604 305 #>  [35805,] 605 305 #>  [35806,] 606 305 #>  [35807,] 607 305 #>  [35808,] 608 305 #>  [35809,] 609 305 #>  [35810,] 610 305 #>  [35811,] 611 305 #>  [35812,] 612 305 #>  [35813,] 613 305 #>  [35814,] 614 305 #>  [35815,] 615 305 #>  [35816,] 616 305 #>  [35817,] 617 305 #>  [35818,] 618 305 #>  [35819,] 619 305 #>  [35820,] 620 305 #>  [35821,] 621 305 #>  [35822,] 622 305 #>  [35823,] 623 305 #>  [35824,] 624 305 #>  [35825,] 625 305 #>  [35826,] 626 305 #>  [35827,] 627 305 #>  [35828,] 628 305 #>  [35829,] 629 305 #>  [35830,] 630 305 #>  [35831,] 631 305 #>  [35832,] 632 305 #>  [35833,] 633 305 #>  [35834,] 634 305 #>  [35835,] 635 305 #>  [35836,] 636 305 #>  [35837,] 637 305 #>  [35838,] 638 305 #>  [35839,] 639 305 #>  [35840,] 640 305 #>  [35841,]   1 304 #>  [35842,]   2 304 #>  [35843,]   3 304 #>  [35844,]   4 304 #>  [35845,]   5 304 #>  [35846,]   6 304 #>  [35847,]   7 304 #>  [35848,]   8 304 #>  [35849,]   9 304 #>  [35850,]  10 304 #>  [35851,]  11 304 #>  [35852,]  12 304 #>  [35853,]  13 304 #>  [35854,]  14 304 #>  [35855,]  15 304 #>  [35856,]  16 304 #>  [35857,]  17 304 #>  [35858,]  18 304 #>  [35859,]  19 304 #>  [35860,]  20 304 #>  [35861,]  21 304 #>  [35862,]  22 304 #>  [35863,]  23 304 #>  [35864,]  24 304 #>  [35865,]  25 304 #>  [35866,]  26 304 #>  [35867,]  27 304 #>  [35868,]  28 304 #>  [35869,]  29 304 #>  [35870,]  30 304 #>  [35871,]  31 304 #>  [35872,]  32 304 #>  [35873,]  33 304 #>  [35874,]  34 304 #>  [35875,]  35 304 #>  [35876,]  36 304 #>  [35877,]  37 304 #>  [35878,]  38 304 #>  [35879,]  39 304 #>  [35880,]  40 304 #>  [35881,]  41 304 #>  [35882,]  42 304 #>  [35883,]  43 304 #>  [35884,]  44 304 #>  [35885,]  45 304 #>  [35886,]  46 304 #>  [35887,]  47 304 #>  [35888,]  48 304 #>  [35889,]  49 304 #>  [35890,]  50 304 #>  [35891,]  51 304 #>  [35892,]  52 304 #>  [35893,]  53 304 #>  [35894,]  54 304 #>  [35895,]  55 304 #>  [35896,]  56 304 #>  [35897,]  57 304 #>  [35898,]  58 304 #>  [35899,]  59 304 #>  [35900,]  60 304 #>  [35901,]  61 304 #>  [35902,]  62 304 #>  [35903,]  63 304 #>  [35904,]  64 304 #>  [35905,]  65 304 #>  [35906,]  66 304 #>  [35907,]  67 304 #>  [35908,]  68 304 #>  [35909,]  69 304 #>  [35910,]  70 304 #>  [35911,]  71 304 #>  [35912,]  72 304 #>  [35913,]  73 304 #>  [35914,]  74 304 #>  [35915,]  75 304 #>  [35916,]  76 304 #>  [35917,]  77 304 #>  [35918,]  78 304 #>  [35919,]  79 304 #>  [35920,]  80 304 #>  [35921,]  81 304 #>  [35922,]  82 304 #>  [35923,]  83 304 #>  [35924,]  84 304 #>  [35925,]  85 304 #>  [35926,]  86 304 #>  [35927,]  87 304 #>  [35928,]  88 304 #>  [35929,]  89 304 #>  [35930,]  90 304 #>  [35931,]  91 304 #>  [35932,]  92 304 #>  [35933,]  93 304 #>  [35934,]  94 304 #>  [35935,]  95 304 #>  [35936,]  96 304 #>  [35937,]  97 304 #>  [35938,]  98 304 #>  [35939,]  99 304 #>  [35940,] 100 304 #>  [35941,] 101 304 #>  [35942,] 102 304 #>  [35943,] 103 304 #>  [35944,] 104 304 #>  [35945,] 105 304 #>  [35946,] 106 304 #>  [35947,] 107 304 #>  [35948,] 108 304 #>  [35949,] 109 304 #>  [35950,] 110 304 #>  [35951,] 111 304 #>  [35952,] 112 304 #>  [35953,] 113 304 #>  [35954,] 114 304 #>  [35955,] 115 304 #>  [35956,] 116 304 #>  [35957,] 117 304 #>  [35958,] 118 304 #>  [35959,] 119 304 #>  [35960,] 120 304 #>  [35961,] 121 304 #>  [35962,] 122 304 #>  [35963,] 123 304 #>  [35964,] 124 304 #>  [35965,] 125 304 #>  [35966,] 126 304 #>  [35967,] 127 304 #>  [35968,] 128 304 #>  [35969,] 129 304 #>  [35970,] 130 304 #>  [35971,] 131 304 #>  [35972,] 132 304 #>  [35973,] 133 304 #>  [35974,] 134 304 #>  [35975,] 135 304 #>  [35976,] 136 304 #>  [35977,] 137 304 #>  [35978,] 138 304 #>  [35979,] 139 304 #>  [35980,] 140 304 #>  [35981,] 141 304 #>  [35982,] 142 304 #>  [35983,] 143 304 #>  [35984,] 144 304 #>  [35985,] 145 304 #>  [35986,] 146 304 #>  [35987,] 147 304 #>  [35988,] 148 304 #>  [35989,] 149 304 #>  [35990,] 150 304 #>  [35991,] 151 304 #>  [35992,] 152 304 #>  [35993,] 153 304 #>  [35994,] 154 304 #>  [35995,] 155 304 #>  [35996,] 156 304 #>  [35997,] 157 304 #>  [35998,] 158 304 #>  [35999,] 159 304 #>  [36000,] 160 304 #>  [36001,] 161 304 #>  [36002,] 162 304 #>  [36003,] 163 304 #>  [36004,] 164 304 #>  [36005,] 165 304 #>  [36006,] 166 304 #>  [36007,] 167 304 #>  [36008,] 168 304 #>  [36009,] 169 304 #>  [36010,] 170 304 #>  [36011,] 171 304 #>  [36012,] 172 304 #>  [36013,] 173 304 #>  [36014,] 174 304 #>  [36015,] 175 304 #>  [36016,] 176 304 #>  [36017,] 177 304 #>  [36018,] 178 304 #>  [36019,] 179 304 #>  [36020,] 180 304 #>  [36021,] 181 304 #>  [36022,] 182 304 #>  [36023,] 183 304 #>  [36024,] 184 304 #>  [36025,] 185 304 #>  [36026,] 186 304 #>  [36027,] 187 304 #>  [36028,] 188 304 #>  [36029,] 189 304 #>  [36030,] 190 304 #>  [36031,] 191 304 #>  [36032,] 192 304 #>  [36033,] 193 304 #>  [36034,] 194 304 #>  [36035,] 195 304 #>  [36036,] 196 304 #>  [36037,] 197 304 #>  [36038,] 198 304 #>  [36039,] 199 304 #>  [36040,] 200 304 #>  [36041,] 201 304 #>  [36042,] 202 304 #>  [36043,] 203 304 #>  [36044,] 204 304 #>  [36045,] 205 304 #>  [36046,] 206 304 #>  [36047,] 207 304 #>  [36048,] 208 304 #>  [36049,] 209 304 #>  [36050,] 210 304 #>  [36051,] 211 304 #>  [36052,] 212 304 #>  [36053,] 213 304 #>  [36054,] 214 304 #>  [36055,] 215 304 #>  [36056,] 216 304 #>  [36057,] 217 304 #>  [36058,] 218 304 #>  [36059,] 219 304 #>  [36060,] 220 304 #>  [36061,] 221 304 #>  [36062,] 222 304 #>  [36063,] 223 304 #>  [36064,] 224 304 #>  [36065,] 225 304 #>  [36066,] 226 304 #>  [36067,] 227 304 #>  [36068,] 228 304 #>  [36069,] 229 304 #>  [36070,] 230 304 #>  [36071,] 231 304 #>  [36072,] 232 304 #>  [36073,] 233 304 #>  [36074,] 234 304 #>  [36075,] 235 304 #>  [36076,] 236 304 #>  [36077,] 237 304 #>  [36078,] 238 304 #>  [36079,] 239 304 #>  [36080,] 240 304 #>  [36081,] 241 304 #>  [36082,] 242 304 #>  [36083,] 243 304 #>  [36084,] 244 304 #>  [36085,] 245 304 #>  [36086,] 246 304 #>  [36087,] 247 304 #>  [36088,] 248 304 #>  [36089,] 249 304 #>  [36090,] 250 304 #>  [36091,] 251 304 #>  [36092,] 252 304 #>  [36093,] 253 304 #>  [36094,] 254 304 #>  [36095,] 255 304 #>  [36096,] 256 304 #>  [36097,] 257 304 #>  [36098,] 258 304 #>  [36099,] 259 304 #>  [36100,] 260 304 #>  [36101,] 261 304 #>  [36102,] 262 304 #>  [36103,] 263 304 #>  [36104,] 264 304 #>  [36105,] 265 304 #>  [36106,] 266 304 #>  [36107,] 267 304 #>  [36108,] 268 304 #>  [36109,] 269 304 #>  [36110,] 270 304 #>  [36111,] 271 304 #>  [36112,] 272 304 #>  [36113,] 273 304 #>  [36114,] 274 304 #>  [36115,] 275 304 #>  [36116,] 276 304 #>  [36117,] 277 304 #>  [36118,] 278 304 #>  [36119,] 279 304 #>  [36120,] 280 304 #>  [36121,] 281 304 #>  [36122,] 282 304 #>  [36123,] 283 304 #>  [36124,] 284 304 #>  [36125,] 285 304 #>  [36126,] 286 304 #>  [36127,] 287 304 #>  [36128,] 288 304 #>  [36129,] 289 304 #>  [36130,] 290 304 #>  [36131,] 291 304 #>  [36132,] 292 304 #>  [36133,] 293 304 #>  [36134,] 294 304 #>  [36135,] 295 304 #>  [36136,] 296 304 #>  [36137,] 297 304 #>  [36138,] 298 304 #>  [36139,] 299 304 #>  [36140,] 300 304 #>  [36141,] 301 304 #>  [36142,] 302 304 #>  [36143,] 303 304 #>  [36144,] 304 304 #>  [36145,] 305 304 #>  [36146,] 306 304 #>  [36147,] 307 304 #>  [36148,] 308 304 #>  [36149,] 309 304 #>  [36150,] 310 304 #>  [36151,] 311 304 #>  [36152,] 312 304 #>  [36153,] 313 304 #>  [36154,] 314 304 #>  [36155,] 315 304 #>  [36156,] 316 304 #>  [36157,] 317 304 #>  [36158,] 318 304 #>  [36159,] 319 304 #>  [36160,] 320 304 #>  [36161,] 321 304 #>  [36162,] 322 304 #>  [36163,] 323 304 #>  [36164,] 324 304 #>  [36165,] 325 304 #>  [36166,] 326 304 #>  [36167,] 327 304 #>  [36168,] 328 304 #>  [36169,] 329 304 #>  [36170,] 330 304 #>  [36171,] 331 304 #>  [36172,] 332 304 #>  [36173,] 333 304 #>  [36174,] 334 304 #>  [36175,] 335 304 #>  [36176,] 336 304 #>  [36177,] 337 304 #>  [36178,] 338 304 #>  [36179,] 339 304 #>  [36180,] 340 304 #>  [36181,] 341 304 #>  [36182,] 342 304 #>  [36183,] 343 304 #>  [36184,] 344 304 #>  [36185,] 345 304 #>  [36186,] 346 304 #>  [36187,] 347 304 #>  [36188,] 348 304 #>  [36189,] 349 304 #>  [36190,] 350 304 #>  [36191,] 351 304 #>  [36192,] 352 304 #>  [36193,] 353 304 #>  [36194,] 354 304 #>  [36195,] 355 304 #>  [36196,] 356 304 #>  [36197,] 357 304 #>  [36198,] 358 304 #>  [36199,] 359 304 #>  [36200,] 360 304 #>  [36201,] 361 304 #>  [36202,] 362 304 #>  [36203,] 363 304 #>  [36204,] 364 304 #>  [36205,] 365 304 #>  [36206,] 366 304 #>  [36207,] 367 304 #>  [36208,] 368 304 #>  [36209,] 369 304 #>  [36210,] 370 304 #>  [36211,] 371 304 #>  [36212,] 372 304 #>  [36213,] 373 304 #>  [36214,] 374 304 #>  [36215,] 375 304 #>  [36216,] 376 304 #>  [36217,] 377 304 #>  [36218,] 378 304 #>  [36219,] 379 304 #>  [36220,] 380 304 #>  [36221,] 381 304 #>  [36222,] 382 304 #>  [36223,] 383 304 #>  [36224,] 384 304 #>  [36225,] 385 304 #>  [36226,] 386 304 #>  [36227,] 387 304 #>  [36228,] 388 304 #>  [36229,] 389 304 #>  [36230,] 390 304 #>  [36231,] 391 304 #>  [36232,] 392 304 #>  [36233,] 393 304 #>  [36234,] 394 304 #>  [36235,] 395 304 #>  [36236,] 396 304 #>  [36237,] 397 304 #>  [36238,] 398 304 #>  [36239,] 399 304 #>  [36240,] 400 304 #>  [36241,] 401 304 #>  [36242,] 402 304 #>  [36243,] 403 304 #>  [36244,] 404 304 #>  [36245,] 405 304 #>  [36246,] 406 304 #>  [36247,] 407 304 #>  [36248,] 408 304 #>  [36249,] 409 304 #>  [36250,] 410 304 #>  [36251,] 411 304 #>  [36252,] 412 304 #>  [36253,] 413 304 #>  [36254,] 414 304 #>  [36255,] 415 304 #>  [36256,] 416 304 #>  [36257,] 417 304 #>  [36258,] 418 304 #>  [36259,] 419 304 #>  [36260,] 420 304 #>  [36261,] 421 304 #>  [36262,] 422 304 #>  [36263,] 423 304 #>  [36264,] 424 304 #>  [36265,] 425 304 #>  [36266,] 426 304 #>  [36267,] 427 304 #>  [36268,] 428 304 #>  [36269,] 429 304 #>  [36270,] 430 304 #>  [36271,] 431 304 #>  [36272,] 432 304 #>  [36273,] 433 304 #>  [36274,] 434 304 #>  [36275,] 435 304 #>  [36276,] 436 304 #>  [36277,] 437 304 #>  [36278,] 438 304 #>  [36279,] 439 304 #>  [36280,] 440 304 #>  [36281,] 441 304 #>  [36282,] 442 304 #>  [36283,] 443 304 #>  [36284,] 444 304 #>  [36285,] 445 304 #>  [36286,] 446 304 #>  [36287,] 447 304 #>  [36288,] 448 304 #>  [36289,] 449 304 #>  [36290,] 450 304 #>  [36291,] 451 304 #>  [36292,] 452 304 #>  [36293,] 453 304 #>  [36294,] 454 304 #>  [36295,] 455 304 #>  [36296,] 456 304 #>  [36297,] 457 304 #>  [36298,] 458 304 #>  [36299,] 459 304 #>  [36300,] 460 304 #>  [36301,] 461 304 #>  [36302,] 462 304 #>  [36303,] 463 304 #>  [36304,] 464 304 #>  [36305,] 465 304 #>  [36306,] 466 304 #>  [36307,] 467 304 #>  [36308,] 468 304 #>  [36309,] 469 304 #>  [36310,] 470 304 #>  [36311,] 471 304 #>  [36312,] 472 304 #>  [36313,] 473 304 #>  [36314,] 474 304 #>  [36315,] 475 304 #>  [36316,] 476 304 #>  [36317,] 477 304 #>  [36318,] 478 304 #>  [36319,] 479 304 #>  [36320,] 480 304 #>  [36321,] 481 304 #>  [36322,] 482 304 #>  [36323,] 483 304 #>  [36324,] 484 304 #>  [36325,] 485 304 #>  [36326,] 486 304 #>  [36327,] 487 304 #>  [36328,] 488 304 #>  [36329,] 489 304 #>  [36330,] 490 304 #>  [36331,] 491 304 #>  [36332,] 492 304 #>  [36333,] 493 304 #>  [36334,] 494 304 #>  [36335,] 495 304 #>  [36336,] 496 304 #>  [36337,] 497 304 #>  [36338,] 498 304 #>  [36339,] 499 304 #>  [36340,] 500 304 #>  [36341,] 501 304 #>  [36342,] 502 304 #>  [36343,] 503 304 #>  [36344,] 504 304 #>  [36345,] 505 304 #>  [36346,] 506 304 #>  [36347,] 507 304 #>  [36348,] 508 304 #>  [36349,] 509 304 #>  [36350,] 510 304 #>  [36351,] 511 304 #>  [36352,] 512 304 #>  [36353,] 513 304 #>  [36354,] 514 304 #>  [36355,] 515 304 #>  [36356,] 516 304 #>  [36357,] 517 304 #>  [36358,] 518 304 #>  [36359,] 519 304 #>  [36360,] 520 304 #>  [36361,] 521 304 #>  [36362,] 522 304 #>  [36363,] 523 304 #>  [36364,] 524 304 #>  [36365,] 525 304 #>  [36366,] 526 304 #>  [36367,] 527 304 #>  [36368,] 528 304 #>  [36369,] 529 304 #>  [36370,] 530 304 #>  [36371,] 531 304 #>  [36372,] 532 304 #>  [36373,] 533 304 #>  [36374,] 534 304 #>  [36375,] 535 304 #>  [36376,] 536 304 #>  [36377,] 537 304 #>  [36378,] 538 304 #>  [36379,] 539 304 #>  [36380,] 540 304 #>  [36381,] 541 304 #>  [36382,] 542 304 #>  [36383,] 543 304 #>  [36384,] 544 304 #>  [36385,] 545 304 #>  [36386,] 546 304 #>  [36387,] 547 304 #>  [36388,] 548 304 #>  [36389,] 549 304 #>  [36390,] 550 304 #>  [36391,] 551 304 #>  [36392,] 552 304 #>  [36393,] 553 304 #>  [36394,] 554 304 #>  [36395,] 555 304 #>  [36396,] 556 304 #>  [36397,] 557 304 #>  [36398,] 558 304 #>  [36399,] 559 304 #>  [36400,] 560 304 #>  [36401,] 561 304 #>  [36402,] 562 304 #>  [36403,] 563 304 #>  [36404,] 564 304 #>  [36405,] 565 304 #>  [36406,] 566 304 #>  [36407,] 567 304 #>  [36408,] 568 304 #>  [36409,] 569 304 #>  [36410,] 570 304 #>  [36411,] 571 304 #>  [36412,] 572 304 #>  [36413,] 573 304 #>  [36414,] 574 304 #>  [36415,] 575 304 #>  [36416,] 576 304 #>  [36417,] 577 304 #>  [36418,] 578 304 #>  [36419,] 579 304 #>  [36420,] 580 304 #>  [36421,] 581 304 #>  [36422,] 582 304 #>  [36423,] 583 304 #>  [36424,] 584 304 #>  [36425,] 585 304 #>  [36426,] 586 304 #>  [36427,] 587 304 #>  [36428,] 588 304 #>  [36429,] 589 304 #>  [36430,] 590 304 #>  [36431,] 591 304 #>  [36432,] 592 304 #>  [36433,] 593 304 #>  [36434,] 594 304 #>  [36435,] 595 304 #>  [36436,] 596 304 #>  [36437,] 597 304 #>  [36438,] 598 304 #>  [36439,] 599 304 #>  [36440,] 600 304 #>  [36441,] 601 304 #>  [36442,] 602 304 #>  [36443,] 603 304 #>  [36444,] 604 304 #>  [36445,] 605 304 #>  [36446,] 606 304 #>  [36447,] 607 304 #>  [36448,] 608 304 #>  [36449,] 609 304 #>  [36450,] 610 304 #>  [36451,] 611 304 #>  [36452,] 612 304 #>  [36453,] 613 304 #>  [36454,] 614 304 #>  [36455,] 615 304 #>  [36456,] 616 304 #>  [36457,] 617 304 #>  [36458,] 618 304 #>  [36459,] 619 304 #>  [36460,] 620 304 #>  [36461,] 621 304 #>  [36462,] 622 304 #>  [36463,] 623 304 #>  [36464,] 624 304 #>  [36465,] 625 304 #>  [36466,] 626 304 #>  [36467,] 627 304 #>  [36468,] 628 304 #>  [36469,] 629 304 #>  [36470,] 630 304 #>  [36471,] 631 304 #>  [36472,] 632 304 #>  [36473,] 633 304 #>  [36474,] 634 304 #>  [36475,] 635 304 #>  [36476,] 636 304 #>  [36477,] 637 304 #>  [36478,] 638 304 #>  [36479,] 639 304 #>  [36480,] 640 304 #>  [36481,]   1 303 #>  [36482,]   2 303 #>  [36483,]   3 303 #>  [36484,]   4 303 #>  [36485,]   5 303 #>  [36486,]   6 303 #>  [36487,]   7 303 #>  [36488,]   8 303 #>  [36489,]   9 303 #>  [36490,]  10 303 #>  [36491,]  11 303 #>  [36492,]  12 303 #>  [36493,]  13 303 #>  [36494,]  14 303 #>  [36495,]  15 303 #>  [36496,]  16 303 #>  [36497,]  17 303 #>  [36498,]  18 303 #>  [36499,]  19 303 #>  [36500,]  20 303 #>  [36501,]  21 303 #>  [36502,]  22 303 #>  [36503,]  23 303 #>  [36504,]  24 303 #>  [36505,]  25 303 #>  [36506,]  26 303 #>  [36507,]  27 303 #>  [36508,]  28 303 #>  [36509,]  29 303 #>  [36510,]  30 303 #>  [36511,]  31 303 #>  [36512,]  32 303 #>  [36513,]  33 303 #>  [36514,]  34 303 #>  [36515,]  35 303 #>  [36516,]  36 303 #>  [36517,]  37 303 #>  [36518,]  38 303 #>  [36519,]  39 303 #>  [36520,]  40 303 #>  [36521,]  41 303 #>  [36522,]  42 303 #>  [36523,]  43 303 #>  [36524,]  44 303 #>  [36525,]  45 303 #>  [36526,]  46 303 #>  [36527,]  47 303 #>  [36528,]  48 303 #>  [36529,]  49 303 #>  [36530,]  50 303 #>  [36531,]  51 303 #>  [36532,]  52 303 #>  [36533,]  53 303 #>  [36534,]  54 303 #>  [36535,]  55 303 #>  [36536,]  56 303 #>  [36537,]  57 303 #>  [36538,]  58 303 #>  [36539,]  59 303 #>  [36540,]  60 303 #>  [36541,]  61 303 #>  [36542,]  62 303 #>  [36543,]  63 303 #>  [36544,]  64 303 #>  [36545,]  65 303 #>  [36546,]  66 303 #>  [36547,]  67 303 #>  [36548,]  68 303 #>  [36549,]  69 303 #>  [36550,]  70 303 #>  [36551,]  71 303 #>  [36552,]  72 303 #>  [36553,]  73 303 #>  [36554,]  74 303 #>  [36555,]  75 303 #>  [36556,]  76 303 #>  [36557,]  77 303 #>  [36558,]  78 303 #>  [36559,]  79 303 #>  [36560,]  80 303 #>  [36561,]  81 303 #>  [36562,]  82 303 #>  [36563,]  83 303 #>  [36564,]  84 303 #>  [36565,]  85 303 #>  [36566,]  86 303 #>  [36567,]  87 303 #>  [36568,]  88 303 #>  [36569,]  89 303 #>  [36570,]  90 303 #>  [36571,]  91 303 #>  [36572,]  92 303 #>  [36573,]  93 303 #>  [36574,]  94 303 #>  [36575,]  95 303 #>  [36576,]  96 303 #>  [36577,]  97 303 #>  [36578,]  98 303 #>  [36579,]  99 303 #>  [36580,] 100 303 #>  [36581,] 101 303 #>  [36582,] 102 303 #>  [36583,] 103 303 #>  [36584,] 104 303 #>  [36585,] 105 303 #>  [36586,] 106 303 #>  [36587,] 107 303 #>  [36588,] 108 303 #>  [36589,] 109 303 #>  [36590,] 110 303 #>  [36591,] 111 303 #>  [36592,] 112 303 #>  [36593,] 113 303 #>  [36594,] 114 303 #>  [36595,] 115 303 #>  [36596,] 116 303 #>  [36597,] 117 303 #>  [36598,] 118 303 #>  [36599,] 119 303 #>  [36600,] 120 303 #>  [36601,] 121 303 #>  [36602,] 122 303 #>  [36603,] 123 303 #>  [36604,] 124 303 #>  [36605,] 125 303 #>  [36606,] 126 303 #>  [36607,] 127 303 #>  [36608,] 128 303 #>  [36609,] 129 303 #>  [36610,] 130 303 #>  [36611,] 131 303 #>  [36612,] 132 303 #>  [36613,] 133 303 #>  [36614,] 134 303 #>  [36615,] 135 303 #>  [36616,] 136 303 #>  [36617,] 137 303 #>  [36618,] 138 303 #>  [36619,] 139 303 #>  [36620,] 140 303 #>  [36621,] 141 303 #>  [36622,] 142 303 #>  [36623,] 143 303 #>  [36624,] 144 303 #>  [36625,] 145 303 #>  [36626,] 146 303 #>  [36627,] 147 303 #>  [36628,] 148 303 #>  [36629,] 149 303 #>  [36630,] 150 303 #>  [36631,] 151 303 #>  [36632,] 152 303 #>  [36633,] 153 303 #>  [36634,] 154 303 #>  [36635,] 155 303 #>  [36636,] 156 303 #>  [36637,] 157 303 #>  [36638,] 158 303 #>  [36639,] 159 303 #>  [36640,] 160 303 #>  [36641,] 161 303 #>  [36642,] 162 303 #>  [36643,] 163 303 #>  [36644,] 164 303 #>  [36645,] 165 303 #>  [36646,] 166 303 #>  [36647,] 167 303 #>  [36648,] 168 303 #>  [36649,] 169 303 #>  [36650,] 170 303 #>  [36651,] 171 303 #>  [36652,] 172 303 #>  [36653,] 173 303 #>  [36654,] 174 303 #>  [36655,] 175 303 #>  [36656,] 176 303 #>  [36657,] 177 303 #>  [36658,] 178 303 #>  [36659,] 179 303 #>  [36660,] 180 303 #>  [36661,] 181 303 #>  [36662,] 182 303 #>  [36663,] 183 303 #>  [36664,] 184 303 #>  [36665,] 185 303 #>  [36666,] 186 303 #>  [36667,] 187 303 #>  [36668,] 188 303 #>  [36669,] 189 303 #>  [36670,] 190 303 #>  [36671,] 191 303 #>  [36672,] 192 303 #>  [36673,] 193 303 #>  [36674,] 194 303 #>  [36675,] 195 303 #>  [36676,] 196 303 #>  [36677,] 197 303 #>  [36678,] 198 303 #>  [36679,] 199 303 #>  [36680,] 200 303 #>  [36681,] 201 303 #>  [36682,] 202 303 #>  [36683,] 203 303 #>  [36684,] 204 303 #>  [36685,] 205 303 #>  [36686,] 206 303 #>  [36687,] 207 303 #>  [36688,] 208 303 #>  [36689,] 209 303 #>  [36690,] 210 303 #>  [36691,] 211 303 #>  [36692,] 212 303 #>  [36693,] 213 303 #>  [36694,] 214 303 #>  [36695,] 215 303 #>  [36696,] 216 303 #>  [36697,] 217 303 #>  [36698,] 218 303 #>  [36699,] 219 303 #>  [36700,] 220 303 #>  [36701,] 221 303 #>  [36702,] 222 303 #>  [36703,] 223 303 #>  [36704,] 224 303 #>  [36705,] 225 303 #>  [36706,] 226 303 #>  [36707,] 227 303 #>  [36708,] 228 303 #>  [36709,] 229 303 #>  [36710,] 230 303 #>  [36711,] 231 303 #>  [36712,] 232 303 #>  [36713,] 233 303 #>  [36714,] 234 303 #>  [36715,] 235 303 #>  [36716,] 236 303 #>  [36717,] 237 303 #>  [36718,] 238 303 #>  [36719,] 239 303 #>  [36720,] 240 303 #>  [36721,] 241 303 #>  [36722,] 242 303 #>  [36723,] 243 303 #>  [36724,] 244 303 #>  [36725,] 245 303 #>  [36726,] 246 303 #>  [36727,] 247 303 #>  [36728,] 248 303 #>  [36729,] 249 303 #>  [36730,] 250 303 #>  [36731,] 251 303 #>  [36732,] 252 303 #>  [36733,] 253 303 #>  [36734,] 254 303 #>  [36735,] 255 303 #>  [36736,] 256 303 #>  [36737,] 257 303 #>  [36738,] 258 303 #>  [36739,] 259 303 #>  [36740,] 260 303 #>  [36741,] 261 303 #>  [36742,] 262 303 #>  [36743,] 263 303 #>  [36744,] 264 303 #>  [36745,] 265 303 #>  [36746,] 266 303 #>  [36747,] 267 303 #>  [36748,] 268 303 #>  [36749,] 269 303 #>  [36750,] 270 303 #>  [36751,] 271 303 #>  [36752,] 272 303 #>  [36753,] 273 303 #>  [36754,] 274 303 #>  [36755,] 275 303 #>  [36756,] 276 303 #>  [36757,] 277 303 #>  [36758,] 278 303 #>  [36759,] 279 303 #>  [36760,] 280 303 #>  [36761,] 281 303 #>  [36762,] 282 303 #>  [36763,] 283 303 #>  [36764,] 284 303 #>  [36765,] 285 303 #>  [36766,] 286 303 #>  [36767,] 287 303 #>  [36768,] 288 303 #>  [36769,] 289 303 #>  [36770,] 290 303 #>  [36771,] 291 303 #>  [36772,] 292 303 #>  [36773,] 293 303 #>  [36774,] 294 303 #>  [36775,] 295 303 #>  [36776,] 296 303 #>  [36777,] 297 303 #>  [36778,] 298 303 #>  [36779,] 299 303 #>  [36780,] 300 303 #>  [36781,] 301 303 #>  [36782,] 302 303 #>  [36783,] 303 303 #>  [36784,] 304 303 #>  [36785,] 305 303 #>  [36786,] 306 303 #>  [36787,] 307 303 #>  [36788,] 308 303 #>  [36789,] 309 303 #>  [36790,] 310 303 #>  [36791,] 311 303 #>  [36792,] 312 303 #>  [36793,] 313 303 #>  [36794,] 314 303 #>  [36795,] 315 303 #>  [36796,] 316 303 #>  [36797,] 317 303 #>  [36798,] 318 303 #>  [36799,] 319 303 #>  [36800,] 320 303 #>  [36801,] 321 303 #>  [36802,] 322 303 #>  [36803,] 323 303 #>  [36804,] 324 303 #>  [36805,] 325 303 #>  [36806,] 326 303 #>  [36807,] 327 303 #>  [36808,] 328 303 #>  [36809,] 329 303 #>  [36810,] 330 303 #>  [36811,] 331 303 #>  [36812,] 332 303 #>  [36813,] 333 303 #>  [36814,] 334 303 #>  [36815,] 335 303 #>  [36816,] 336 303 #>  [36817,] 337 303 #>  [36818,] 338 303 #>  [36819,] 339 303 #>  [36820,] 340 303 #>  [36821,] 341 303 #>  [36822,] 342 303 #>  [36823,] 343 303 #>  [36824,] 344 303 #>  [36825,] 345 303 #>  [36826,] 346 303 #>  [36827,] 347 303 #>  [36828,] 348 303 #>  [36829,] 349 303 #>  [36830,] 350 303 #>  [36831,] 351 303 #>  [36832,] 352 303 #>  [36833,] 353 303 #>  [36834,] 354 303 #>  [36835,] 355 303 #>  [36836,] 356 303 #>  [36837,] 357 303 #>  [36838,] 358 303 #>  [36839,] 359 303 #>  [36840,] 360 303 #>  [36841,] 361 303 #>  [36842,] 362 303 #>  [36843,] 363 303 #>  [36844,] 364 303 #>  [36845,] 365 303 #>  [36846,] 366 303 #>  [36847,] 367 303 #>  [36848,] 368 303 #>  [36849,] 369 303 #>  [36850,] 370 303 #>  [36851,] 371 303 #>  [36852,] 372 303 #>  [36853,] 373 303 #>  [36854,] 374 303 #>  [36855,] 375 303 #>  [36856,] 376 303 #>  [36857,] 377 303 #>  [36858,] 378 303 #>  [36859,] 379 303 #>  [36860,] 380 303 #>  [36861,] 381 303 #>  [36862,] 382 303 #>  [36863,] 383 303 #>  [36864,] 384 303 #>  [36865,] 385 303 #>  [36866,] 386 303 #>  [36867,] 387 303 #>  [36868,] 388 303 #>  [36869,] 389 303 #>  [36870,] 390 303 #>  [36871,] 391 303 #>  [36872,] 392 303 #>  [36873,] 393 303 #>  [36874,] 394 303 #>  [36875,] 395 303 #>  [36876,] 396 303 #>  [36877,] 397 303 #>  [36878,] 398 303 #>  [36879,] 399 303 #>  [36880,] 400 303 #>  [36881,] 401 303 #>  [36882,] 402 303 #>  [36883,] 403 303 #>  [36884,] 404 303 #>  [36885,] 405 303 #>  [36886,] 406 303 #>  [36887,] 407 303 #>  [36888,] 408 303 #>  [36889,] 409 303 #>  [36890,] 410 303 #>  [36891,] 411 303 #>  [36892,] 412 303 #>  [36893,] 413 303 #>  [36894,] 414 303 #>  [36895,] 415 303 #>  [36896,] 416 303 #>  [36897,] 417 303 #>  [36898,] 418 303 #>  [36899,] 419 303 #>  [36900,] 420 303 #>  [36901,] 421 303 #>  [36902,] 422 303 #>  [36903,] 423 303 #>  [36904,] 424 303 #>  [36905,] 425 303 #>  [36906,] 426 303 #>  [36907,] 427 303 #>  [36908,] 428 303 #>  [36909,] 429 303 #>  [36910,] 430 303 #>  [36911,] 431 303 #>  [36912,] 432 303 #>  [36913,] 433 303 #>  [36914,] 434 303 #>  [36915,] 435 303 #>  [36916,] 436 303 #>  [36917,] 437 303 #>  [36918,] 438 303 #>  [36919,] 439 303 #>  [36920,] 440 303 #>  [36921,] 441 303 #>  [36922,] 442 303 #>  [36923,] 443 303 #>  [36924,] 444 303 #>  [36925,] 445 303 #>  [36926,] 446 303 #>  [36927,] 447 303 #>  [36928,] 448 303 #>  [36929,] 449 303 #>  [36930,] 450 303 #>  [36931,] 451 303 #>  [36932,] 452 303 #>  [36933,] 453 303 #>  [36934,] 454 303 #>  [36935,] 455 303 #>  [36936,] 456 303 #>  [36937,] 457 303 #>  [36938,] 458 303 #>  [36939,] 459 303 #>  [36940,] 460 303 #>  [36941,] 461 303 #>  [36942,] 462 303 #>  [36943,] 463 303 #>  [36944,] 464 303 #>  [36945,] 465 303 #>  [36946,] 466 303 #>  [36947,] 467 303 #>  [36948,] 468 303 #>  [36949,] 469 303 #>  [36950,] 470 303 #>  [36951,] 471 303 #>  [36952,] 472 303 #>  [36953,] 473 303 #>  [36954,] 474 303 #>  [36955,] 475 303 #>  [36956,] 476 303 #>  [36957,] 477 303 #>  [36958,] 478 303 #>  [36959,] 479 303 #>  [36960,] 480 303 #>  [36961,] 481 303 #>  [36962,] 482 303 #>  [36963,] 483 303 #>  [36964,] 484 303 #>  [36965,] 485 303 #>  [36966,] 486 303 #>  [36967,] 487 303 #>  [36968,] 488 303 #>  [36969,] 489 303 #>  [36970,] 490 303 #>  [36971,] 491 303 #>  [36972,] 492 303 #>  [36973,] 493 303 #>  [36974,] 494 303 #>  [36975,] 495 303 #>  [36976,] 496 303 #>  [36977,] 497 303 #>  [36978,] 498 303 #>  [36979,] 499 303 #>  [36980,] 500 303 #>  [36981,] 501 303 #>  [36982,] 502 303 #>  [36983,] 503 303 #>  [36984,] 504 303 #>  [36985,] 505 303 #>  [36986,] 506 303 #>  [36987,] 507 303 #>  [36988,] 508 303 #>  [36989,] 509 303 #>  [36990,] 510 303 #>  [36991,] 511 303 #>  [36992,] 512 303 #>  [36993,] 513 303 #>  [36994,] 514 303 #>  [36995,] 515 303 #>  [36996,] 516 303 #>  [36997,] 517 303 #>  [36998,] 518 303 #>  [36999,] 519 303 #>  [37000,] 520 303 #>  [37001,] 521 303 #>  [37002,] 522 303 #>  [37003,] 523 303 #>  [37004,] 524 303 #>  [37005,] 525 303 #>  [37006,] 526 303 #>  [37007,] 527 303 #>  [37008,] 528 303 #>  [37009,] 529 303 #>  [37010,] 530 303 #>  [37011,] 531 303 #>  [37012,] 532 303 #>  [37013,] 533 303 #>  [37014,] 534 303 #>  [37015,] 535 303 #>  [37016,] 536 303 #>  [37017,] 537 303 #>  [37018,] 538 303 #>  [37019,] 539 303 #>  [37020,] 540 303 #>  [37021,] 541 303 #>  [37022,] 542 303 #>  [37023,] 543 303 #>  [37024,] 544 303 #>  [37025,] 545 303 #>  [37026,] 546 303 #>  [37027,] 547 303 #>  [37028,] 548 303 #>  [37029,] 549 303 #>  [37030,] 550 303 #>  [37031,] 551 303 #>  [37032,] 552 303 #>  [37033,] 553 303 #>  [37034,] 554 303 #>  [37035,] 555 303 #>  [37036,] 556 303 #>  [37037,] 557 303 #>  [37038,] 558 303 #>  [37039,] 559 303 #>  [37040,] 560 303 #>  [37041,] 561 303 #>  [37042,] 562 303 #>  [37043,] 563 303 #>  [37044,] 564 303 #>  [37045,] 565 303 #>  [37046,] 566 303 #>  [37047,] 567 303 #>  [37048,] 568 303 #>  [37049,] 569 303 #>  [37050,] 570 303 #>  [37051,] 571 303 #>  [37052,] 572 303 #>  [37053,] 573 303 #>  [37054,] 574 303 #>  [37055,] 575 303 #>  [37056,] 576 303 #>  [37057,] 577 303 #>  [37058,] 578 303 #>  [37059,] 579 303 #>  [37060,] 580 303 #>  [37061,] 581 303 #>  [37062,] 582 303 #>  [37063,] 583 303 #>  [37064,] 584 303 #>  [37065,] 585 303 #>  [37066,] 586 303 #>  [37067,] 587 303 #>  [37068,] 588 303 #>  [37069,] 589 303 #>  [37070,] 590 303 #>  [37071,] 591 303 #>  [37072,] 592 303 #>  [37073,] 593 303 #>  [37074,] 594 303 #>  [37075,] 595 303 #>  [37076,] 596 303 #>  [37077,] 597 303 #>  [37078,] 598 303 #>  [37079,] 599 303 #>  [37080,] 600 303 #>  [37081,] 601 303 #>  [37082,] 602 303 #>  [37083,] 603 303 #>  [37084,] 604 303 #>  [37085,] 605 303 #>  [37086,] 606 303 #>  [37087,] 607 303 #>  [37088,] 608 303 #>  [37089,] 609 303 #>  [37090,] 610 303 #>  [37091,] 611 303 #>  [37092,] 612 303 #>  [37093,] 613 303 #>  [37094,] 614 303 #>  [37095,] 615 303 #>  [37096,] 616 303 #>  [37097,] 617 303 #>  [37098,] 618 303 #>  [37099,] 619 303 #>  [37100,] 620 303 #>  [37101,] 621 303 #>  [37102,] 622 303 #>  [37103,] 623 303 #>  [37104,] 624 303 #>  [37105,] 625 303 #>  [37106,] 626 303 #>  [37107,] 627 303 #>  [37108,] 628 303 #>  [37109,] 629 303 #>  [37110,] 630 303 #>  [37111,] 631 303 #>  [37112,] 632 303 #>  [37113,] 633 303 #>  [37114,] 634 303 #>  [37115,] 635 303 #>  [37116,] 636 303 #>  [37117,] 637 303 #>  [37118,] 638 303 #>  [37119,] 639 303 #>  [37120,] 640 303 #>  [37121,]   1 302 #>  [37122,]   2 302 #>  [37123,]   3 302 #>  [37124,]   4 302 #>  [37125,]   5 302 #>  [37126,]   6 302 #>  [37127,]   7 302 #>  [37128,]   8 302 #>  [37129,]   9 302 #>  [37130,]  10 302 #>  [37131,]  11 302 #>  [37132,]  12 302 #>  [37133,]  13 302 #>  [37134,]  14 302 #>  [37135,]  15 302 #>  [37136,]  16 302 #>  [37137,]  17 302 #>  [37138,]  18 302 #>  [37139,]  19 302 #>  [37140,]  20 302 #>  [37141,]  21 302 #>  [37142,]  22 302 #>  [37143,]  23 302 #>  [37144,]  24 302 #>  [37145,]  25 302 #>  [37146,]  26 302 #>  [37147,]  27 302 #>  [37148,]  28 302 #>  [37149,]  29 302 #>  [37150,]  30 302 #>  [37151,]  31 302 #>  [37152,]  32 302 #>  [37153,]  33 302 #>  [37154,]  34 302 #>  [37155,]  35 302 #>  [37156,]  36 302 #>  [37157,]  37 302 #>  [37158,]  38 302 #>  [37159,]  39 302 #>  [37160,]  40 302 #>  [37161,]  41 302 #>  [37162,]  42 302 #>  [37163,]  43 302 #>  [37164,]  44 302 #>  [37165,]  45 302 #>  [37166,]  46 302 #>  [37167,]  47 302 #>  [37168,]  48 302 #>  [37169,]  49 302 #>  [37170,]  50 302 #>  [37171,]  51 302 #>  [37172,]  52 302 #>  [37173,]  53 302 #>  [37174,]  54 302 #>  [37175,]  55 302 #>  [37176,]  56 302 #>  [37177,]  57 302 #>  [37178,]  58 302 #>  [37179,]  59 302 #>  [37180,]  60 302 #>  [37181,]  61 302 #>  [37182,]  62 302 #>  [37183,]  63 302 #>  [37184,]  64 302 #>  [37185,]  65 302 #>  [37186,]  66 302 #>  [37187,]  67 302 #>  [37188,]  68 302 #>  [37189,]  69 302 #>  [37190,]  70 302 #>  [37191,]  71 302 #>  [37192,]  72 302 #>  [37193,]  73 302 #>  [37194,]  74 302 #>  [37195,]  75 302 #>  [37196,]  76 302 #>  [37197,]  77 302 #>  [37198,]  78 302 #>  [37199,]  79 302 #>  [37200,]  80 302 #>  [37201,]  81 302 #>  [37202,]  82 302 #>  [37203,]  83 302 #>  [37204,]  84 302 #>  [37205,]  85 302 #>  [37206,]  86 302 #>  [37207,]  87 302 #>  [37208,]  88 302 #>  [37209,]  89 302 #>  [37210,]  90 302 #>  [37211,]  91 302 #>  [37212,]  92 302 #>  [37213,]  93 302 #>  [37214,]  94 302 #>  [37215,]  95 302 #>  [37216,]  96 302 #>  [37217,]  97 302 #>  [37218,]  98 302 #>  [37219,]  99 302 #>  [37220,] 100 302 #>  [37221,] 101 302 #>  [37222,] 102 302 #>  [37223,] 103 302 #>  [37224,] 104 302 #>  [37225,] 105 302 #>  [37226,] 106 302 #>  [37227,] 107 302 #>  [37228,] 108 302 #>  [37229,] 109 302 #>  [37230,] 110 302 #>  [37231,] 111 302 #>  [37232,] 112 302 #>  [37233,] 113 302 #>  [37234,] 114 302 #>  [37235,] 115 302 #>  [37236,] 116 302 #>  [37237,] 117 302 #>  [37238,] 118 302 #>  [37239,] 119 302 #>  [37240,] 120 302 #>  [37241,] 121 302 #>  [37242,] 122 302 #>  [37243,] 123 302 #>  [37244,] 124 302 #>  [37245,] 125 302 #>  [37246,] 126 302 #>  [37247,] 127 302 #>  [37248,] 128 302 #>  [37249,] 129 302 #>  [37250,] 130 302 #>  [37251,] 131 302 #>  [37252,] 132 302 #>  [37253,] 133 302 #>  [37254,] 134 302 #>  [37255,] 135 302 #>  [37256,] 136 302 #>  [37257,] 137 302 #>  [37258,] 138 302 #>  [37259,] 139 302 #>  [37260,] 140 302 #>  [37261,] 141 302 #>  [37262,] 142 302 #>  [37263,] 143 302 #>  [37264,] 144 302 #>  [37265,] 145 302 #>  [37266,] 146 302 #>  [37267,] 147 302 #>  [37268,] 148 302 #>  [37269,] 149 302 #>  [37270,] 150 302 #>  [37271,] 151 302 #>  [37272,] 152 302 #>  [37273,] 153 302 #>  [37274,] 154 302 #>  [37275,] 155 302 #>  [37276,] 156 302 #>  [37277,] 157 302 #>  [37278,] 158 302 #>  [37279,] 159 302 #>  [37280,] 160 302 #>  [37281,] 161 302 #>  [37282,] 162 302 #>  [37283,] 163 302 #>  [37284,] 164 302 #>  [37285,] 165 302 #>  [37286,] 166 302 #>  [37287,] 167 302 #>  [37288,] 168 302 #>  [37289,] 169 302 #>  [37290,] 170 302 #>  [37291,] 171 302 #>  [37292,] 172 302 #>  [37293,] 173 302 #>  [37294,] 174 302 #>  [37295,] 175 302 #>  [37296,] 176 302 #>  [37297,] 177 302 #>  [37298,] 178 302 #>  [37299,] 179 302 #>  [37300,] 180 302 #>  [37301,] 181 302 #>  [37302,] 182 302 #>  [37303,] 183 302 #>  [37304,] 184 302 #>  [37305,] 185 302 #>  [37306,] 186 302 #>  [37307,] 187 302 #>  [37308,] 188 302 #>  [37309,] 189 302 #>  [37310,] 190 302 #>  [37311,] 191 302 #>  [37312,] 192 302 #>  [37313,] 193 302 #>  [37314,] 194 302 #>  [37315,] 195 302 #>  [37316,] 196 302 #>  [37317,] 197 302 #>  [37318,] 198 302 #>  [37319,] 199 302 #>  [37320,] 200 302 #>  [37321,] 201 302 #>  [37322,] 202 302 #>  [37323,] 203 302 #>  [37324,] 204 302 #>  [37325,] 205 302 #>  [37326,] 206 302 #>  [37327,] 207 302 #>  [37328,] 208 302 #>  [37329,] 209 302 #>  [37330,] 210 302 #>  [37331,] 211 302 #>  [37332,] 212 302 #>  [37333,] 213 302 #>  [37334,] 214 302 #>  [37335,] 215 302 #>  [37336,] 216 302 #>  [37337,] 217 302 #>  [37338,] 218 302 #>  [37339,] 219 302 #>  [37340,] 220 302 #>  [37341,] 221 302 #>  [37342,] 222 302 #>  [37343,] 223 302 #>  [37344,] 224 302 #>  [37345,] 225 302 #>  [37346,] 226 302 #>  [37347,] 227 302 #>  [37348,] 228 302 #>  [37349,] 229 302 #>  [37350,] 230 302 #>  [37351,] 231 302 #>  [37352,] 232 302 #>  [37353,] 233 302 #>  [37354,] 234 302 #>  [37355,] 235 302 #>  [37356,] 236 302 #>  [37357,] 237 302 #>  [37358,] 238 302 #>  [37359,] 239 302 #>  [37360,] 240 302 #>  [37361,] 241 302 #>  [37362,] 242 302 #>  [37363,] 243 302 #>  [37364,] 244 302 #>  [37365,] 245 302 #>  [37366,] 246 302 #>  [37367,] 247 302 #>  [37368,] 248 302 #>  [37369,] 249 302 #>  [37370,] 250 302 #>  [37371,] 251 302 #>  [37372,] 252 302 #>  [37373,] 253 302 #>  [37374,] 254 302 #>  [37375,] 255 302 #>  [37376,] 256 302 #>  [37377,] 257 302 #>  [37378,] 258 302 #>  [37379,] 259 302 #>  [37380,] 260 302 #>  [37381,] 261 302 #>  [37382,] 262 302 #>  [37383,] 263 302 #>  [37384,] 264 302 #>  [37385,] 265 302 #>  [37386,] 266 302 #>  [37387,] 267 302 #>  [37388,] 268 302 #>  [37389,] 269 302 #>  [37390,] 270 302 #>  [37391,] 271 302 #>  [37392,] 272 302 #>  [37393,] 273 302 #>  [37394,] 274 302 #>  [37395,] 275 302 #>  [37396,] 276 302 #>  [37397,] 277 302 #>  [37398,] 278 302 #>  [37399,] 279 302 #>  [37400,] 280 302 #>  [37401,] 281 302 #>  [37402,] 282 302 #>  [37403,] 283 302 #>  [37404,] 284 302 #>  [37405,] 285 302 #>  [37406,] 286 302 #>  [37407,] 287 302 #>  [37408,] 288 302 #>  [37409,] 289 302 #>  [37410,] 290 302 #>  [37411,] 291 302 #>  [37412,] 292 302 #>  [37413,] 293 302 #>  [37414,] 294 302 #>  [37415,] 295 302 #>  [37416,] 296 302 #>  [37417,] 297 302 #>  [37418,] 298 302 #>  [37419,] 299 302 #>  [37420,] 300 302 #>  [37421,] 301 302 #>  [37422,] 302 302 #>  [37423,] 303 302 #>  [37424,] 304 302 #>  [37425,] 305 302 #>  [37426,] 306 302 #>  [37427,] 307 302 #>  [37428,] 308 302 #>  [37429,] 309 302 #>  [37430,] 310 302 #>  [37431,] 311 302 #>  [37432,] 312 302 #>  [37433,] 313 302 #>  [37434,] 314 302 #>  [37435,] 315 302 #>  [37436,] 316 302 #>  [37437,] 317 302 #>  [37438,] 318 302 #>  [37439,] 319 302 #>  [37440,] 320 302 #>  [37441,] 321 302 #>  [37442,] 322 302 #>  [37443,] 323 302 #>  [37444,] 324 302 #>  [37445,] 325 302 #>  [37446,] 326 302 #>  [37447,] 327 302 #>  [37448,] 328 302 #>  [37449,] 329 302 #>  [37450,] 330 302 #>  [37451,] 331 302 #>  [37452,] 332 302 #>  [37453,] 333 302 #>  [37454,] 334 302 #>  [37455,] 335 302 #>  [37456,] 336 302 #>  [37457,] 337 302 #>  [37458,] 338 302 #>  [37459,] 339 302 #>  [37460,] 340 302 #>  [37461,] 341 302 #>  [37462,] 342 302 #>  [37463,] 343 302 #>  [37464,] 344 302 #>  [37465,] 345 302 #>  [37466,] 346 302 #>  [37467,] 347 302 #>  [37468,] 348 302 #>  [37469,] 349 302 #>  [37470,] 350 302 #>  [37471,] 351 302 #>  [37472,] 352 302 #>  [37473,] 353 302 #>  [37474,] 354 302 #>  [37475,] 355 302 #>  [37476,] 356 302 #>  [37477,] 357 302 #>  [37478,] 358 302 #>  [37479,] 359 302 #>  [37480,] 360 302 #>  [37481,] 361 302 #>  [37482,] 362 302 #>  [37483,] 363 302 #>  [37484,] 364 302 #>  [37485,] 365 302 #>  [37486,] 366 302 #>  [37487,] 367 302 #>  [37488,] 368 302 #>  [37489,] 369 302 #>  [37490,] 370 302 #>  [37491,] 371 302 #>  [37492,] 372 302 #>  [37493,] 373 302 #>  [37494,] 374 302 #>  [37495,] 375 302 #>  [37496,] 376 302 #>  [37497,] 377 302 #>  [37498,] 378 302 #>  [37499,] 379 302 #>  [37500,] 380 302 #>  [37501,] 381 302 #>  [37502,] 382 302 #>  [37503,] 383 302 #>  [37504,] 384 302 #>  [37505,] 385 302 #>  [37506,] 386 302 #>  [37507,] 387 302 #>  [37508,] 388 302 #>  [37509,] 389 302 #>  [37510,] 390 302 #>  [37511,] 391 302 #>  [37512,] 392 302 #>  [37513,] 393 302 #>  [37514,] 394 302 #>  [37515,] 395 302 #>  [37516,] 396 302 #>  [37517,] 397 302 #>  [37518,] 398 302 #>  [37519,] 399 302 #>  [37520,] 400 302 #>  [37521,] 401 302 #>  [37522,] 402 302 #>  [37523,] 403 302 #>  [37524,] 404 302 #>  [37525,] 405 302 #>  [37526,] 406 302 #>  [37527,] 407 302 #>  [37528,] 408 302 #>  [37529,] 409 302 #>  [37530,] 410 302 #>  [37531,] 411 302 #>  [37532,] 412 302 #>  [37533,] 413 302 #>  [37534,] 414 302 #>  [37535,] 415 302 #>  [37536,] 416 302 #>  [37537,] 417 302 #>  [37538,] 418 302 #>  [37539,] 419 302 #>  [37540,] 420 302 #>  [37541,] 421 302 #>  [37542,] 422 302 #>  [37543,] 423 302 #>  [37544,] 424 302 #>  [37545,] 425 302 #>  [37546,] 426 302 #>  [37547,] 427 302 #>  [37548,] 428 302 #>  [37549,] 429 302 #>  [37550,] 430 302 #>  [37551,] 431 302 #>  [37552,] 432 302 #>  [37553,] 433 302 #>  [37554,] 434 302 #>  [37555,] 435 302 #>  [37556,] 436 302 #>  [37557,] 437 302 #>  [37558,] 438 302 #>  [37559,] 439 302 #>  [37560,] 440 302 #>  [37561,] 441 302 #>  [37562,] 442 302 #>  [37563,] 443 302 #>  [37564,] 444 302 #>  [37565,] 445 302 #>  [37566,] 446 302 #>  [37567,] 447 302 #>  [37568,] 448 302 #>  [37569,] 449 302 #>  [37570,] 450 302 #>  [37571,] 451 302 #>  [37572,] 452 302 #>  [37573,] 453 302 #>  [37574,] 454 302 #>  [37575,] 455 302 #>  [37576,] 456 302 #>  [37577,] 457 302 #>  [37578,] 458 302 #>  [37579,] 459 302 #>  [37580,] 460 302 #>  [37581,] 461 302 #>  [37582,] 462 302 #>  [37583,] 463 302 #>  [37584,] 464 302 #>  [37585,] 465 302 #>  [37586,] 466 302 #>  [37587,] 467 302 #>  [37588,] 468 302 #>  [37589,] 469 302 #>  [37590,] 470 302 #>  [37591,] 471 302 #>  [37592,] 472 302 #>  [37593,] 473 302 #>  [37594,] 474 302 #>  [37595,] 475 302 #>  [37596,] 476 302 #>  [37597,] 477 302 #>  [37598,] 478 302 #>  [37599,] 479 302 #>  [37600,] 480 302 #>  [37601,] 481 302 #>  [37602,] 482 302 #>  [37603,] 483 302 #>  [37604,] 484 302 #>  [37605,] 485 302 #>  [37606,] 486 302 #>  [37607,] 487 302 #>  [37608,] 488 302 #>  [37609,] 489 302 #>  [37610,] 490 302 #>  [37611,] 491 302 #>  [37612,] 492 302 #>  [37613,] 493 302 #>  [37614,] 494 302 #>  [37615,] 495 302 #>  [37616,] 496 302 #>  [37617,] 497 302 #>  [37618,] 498 302 #>  [37619,] 499 302 #>  [37620,] 500 302 #>  [37621,] 501 302 #>  [37622,] 502 302 #>  [37623,] 503 302 #>  [37624,] 504 302 #>  [37625,] 505 302 #>  [37626,] 506 302 #>  [37627,] 507 302 #>  [37628,] 508 302 #>  [37629,] 509 302 #>  [37630,] 510 302 #>  [37631,] 511 302 #>  [37632,] 512 302 #>  [37633,] 513 302 #>  [37634,] 514 302 #>  [37635,] 515 302 #>  [37636,] 516 302 #>  [37637,] 517 302 #>  [37638,] 518 302 #>  [37639,] 519 302 #>  [37640,] 520 302 #>  [37641,] 521 302 #>  [37642,] 522 302 #>  [37643,] 523 302 #>  [37644,] 524 302 #>  [37645,] 525 302 #>  [37646,] 526 302 #>  [37647,] 527 302 #>  [37648,] 528 302 #>  [37649,] 529 302 #>  [37650,] 530 302 #>  [37651,] 531 302 #>  [37652,] 532 302 #>  [37653,] 533 302 #>  [37654,] 534 302 #>  [37655,] 535 302 #>  [37656,] 536 302 #>  [37657,] 537 302 #>  [37658,] 538 302 #>  [37659,] 539 302 #>  [37660,] 540 302 #>  [37661,] 541 302 #>  [37662,] 542 302 #>  [37663,] 543 302 #>  [37664,] 544 302 #>  [37665,] 545 302 #>  [37666,] 546 302 #>  [37667,] 547 302 #>  [37668,] 548 302 #>  [37669,] 549 302 #>  [37670,] 550 302 #>  [37671,] 551 302 #>  [37672,] 552 302 #>  [37673,] 553 302 #>  [37674,] 554 302 #>  [37675,] 555 302 #>  [37676,] 556 302 #>  [37677,] 557 302 #>  [37678,] 558 302 #>  [37679,] 559 302 #>  [37680,] 560 302 #>  [37681,] 561 302 #>  [37682,] 562 302 #>  [37683,] 563 302 #>  [37684,] 564 302 #>  [37685,] 565 302 #>  [37686,] 566 302 #>  [37687,] 567 302 #>  [37688,] 568 302 #>  [37689,] 569 302 #>  [37690,] 570 302 #>  [37691,] 571 302 #>  [37692,] 572 302 #>  [37693,] 573 302 #>  [37694,] 574 302 #>  [37695,] 575 302 #>  [37696,] 576 302 #>  [37697,] 577 302 #>  [37698,] 578 302 #>  [37699,] 579 302 #>  [37700,] 580 302 #>  [37701,] 581 302 #>  [37702,] 582 302 #>  [37703,] 583 302 #>  [37704,] 584 302 #>  [37705,] 585 302 #>  [37706,] 586 302 #>  [37707,] 587 302 #>  [37708,] 588 302 #>  [37709,] 589 302 #>  [37710,] 590 302 #>  [37711,] 591 302 #>  [37712,] 592 302 #>  [37713,] 593 302 #>  [37714,] 594 302 #>  [37715,] 595 302 #>  [37716,] 596 302 #>  [37717,] 597 302 #>  [37718,] 598 302 #>  [37719,] 599 302 #>  [37720,] 600 302 #>  [37721,] 601 302 #>  [37722,] 602 302 #>  [37723,] 603 302 #>  [37724,] 604 302 #>  [37725,] 605 302 #>  [37726,] 606 302 #>  [37727,] 607 302 #>  [37728,] 608 302 #>  [37729,] 609 302 #>  [37730,] 610 302 #>  [37731,] 611 302 #>  [37732,] 612 302 #>  [37733,] 613 302 #>  [37734,] 614 302 #>  [37735,] 615 302 #>  [37736,] 616 302 #>  [37737,] 617 302 #>  [37738,] 618 302 #>  [37739,] 619 302 #>  [37740,] 620 302 #>  [37741,] 621 302 #>  [37742,] 622 302 #>  [37743,] 623 302 #>  [37744,] 624 302 #>  [37745,] 625 302 #>  [37746,] 626 302 #>  [37747,] 627 302 #>  [37748,] 628 302 #>  [37749,] 629 302 #>  [37750,] 630 302 #>  [37751,] 631 302 #>  [37752,] 632 302 #>  [37753,] 633 302 #>  [37754,] 634 302 #>  [37755,] 635 302 #>  [37756,] 636 302 #>  [37757,] 637 302 #>  [37758,] 638 302 #>  [37759,] 639 302 #>  [37760,] 640 302 #>  [37761,]   1 301 #>  [37762,]   2 301 #>  [37763,]   3 301 #>  [37764,]   4 301 #>  [37765,]   5 301 #>  [37766,]   6 301 #>  [37767,]   7 301 #>  [37768,]   8 301 #>  [37769,]   9 301 #>  [37770,]  10 301 #>  [37771,]  11 301 #>  [37772,]  12 301 #>  [37773,]  13 301 #>  [37774,]  14 301 #>  [37775,]  15 301 #>  [37776,]  16 301 #>  [37777,]  17 301 #>  [37778,]  18 301 #>  [37779,]  19 301 #>  [37780,]  20 301 #>  [37781,]  21 301 #>  [37782,]  22 301 #>  [37783,]  23 301 #>  [37784,]  24 301 #>  [37785,]  25 301 #>  [37786,]  26 301 #>  [37787,]  27 301 #>  [37788,]  28 301 #>  [37789,]  29 301 #>  [37790,]  30 301 #>  [37791,]  31 301 #>  [37792,]  32 301 #>  [37793,]  33 301 #>  [37794,]  34 301 #>  [37795,]  35 301 #>  [37796,]  36 301 #>  [37797,]  37 301 #>  [37798,]  38 301 #>  [37799,]  39 301 #>  [37800,]  40 301 #>  [37801,]  41 301 #>  [37802,]  42 301 #>  [37803,]  43 301 #>  [37804,]  44 301 #>  [37805,]  45 301 #>  [37806,]  46 301 #>  [37807,]  47 301 #>  [37808,]  48 301 #>  [37809,]  49 301 #>  [37810,]  50 301 #>  [37811,]  51 301 #>  [37812,]  52 301 #>  [37813,]  53 301 #>  [37814,]  54 301 #>  [37815,]  55 301 #>  [37816,]  56 301 #>  [37817,]  57 301 #>  [37818,]  58 301 #>  [37819,]  59 301 #>  [37820,]  60 301 #>  [37821,]  61 301 #>  [37822,]  62 301 #>  [37823,]  63 301 #>  [37824,]  64 301 #>  [37825,]  65 301 #>  [37826,]  66 301 #>  [37827,]  67 301 #>  [37828,]  68 301 #>  [37829,]  69 301 #>  [37830,]  70 301 #>  [37831,]  71 301 #>  [37832,]  72 301 #>  [37833,]  73 301 #>  [37834,]  74 301 #>  [37835,]  75 301 #>  [37836,]  76 301 #>  [37837,]  77 301 #>  [37838,]  78 301 #>  [37839,]  79 301 #>  [37840,]  80 301 #>  [37841,]  81 301 #>  [37842,]  82 301 #>  [37843,]  83 301 #>  [37844,]  84 301 #>  [37845,]  85 301 #>  [37846,]  86 301 #>  [37847,]  87 301 #>  [37848,]  88 301 #>  [37849,]  89 301 #>  [37850,]  90 301 #>  [37851,]  91 301 #>  [37852,]  92 301 #>  [37853,]  93 301 #>  [37854,]  94 301 #>  [37855,]  95 301 #>  [37856,]  96 301 #>  [37857,]  97 301 #>  [37858,]  98 301 #>  [37859,]  99 301 #>  [37860,] 100 301 #>  [37861,] 101 301 #>  [37862,] 102 301 #>  [37863,] 103 301 #>  [37864,] 104 301 #>  [37865,] 105 301 #>  [37866,] 106 301 #>  [37867,] 107 301 #>  [37868,] 108 301 #>  [37869,] 109 301 #>  [37870,] 110 301 #>  [37871,] 111 301 #>  [37872,] 112 301 #>  [37873,] 113 301 #>  [37874,] 114 301 #>  [37875,] 115 301 #>  [37876,] 116 301 #>  [37877,] 117 301 #>  [37878,] 118 301 #>  [37879,] 119 301 #>  [37880,] 120 301 #>  [37881,] 121 301 #>  [37882,] 122 301 #>  [37883,] 123 301 #>  [37884,] 124 301 #>  [37885,] 125 301 #>  [37886,] 126 301 #>  [37887,] 127 301 #>  [37888,] 128 301 #>  [37889,] 129 301 #>  [37890,] 130 301 #>  [37891,] 131 301 #>  [37892,] 132 301 #>  [37893,] 133 301 #>  [37894,] 134 301 #>  [37895,] 135 301 #>  [37896,] 136 301 #>  [37897,] 137 301 #>  [37898,] 138 301 #>  [37899,] 139 301 #>  [37900,] 140 301 #>  [37901,] 141 301 #>  [37902,] 142 301 #>  [37903,] 143 301 #>  [37904,] 144 301 #>  [37905,] 145 301 #>  [37906,] 146 301 #>  [37907,] 147 301 #>  [37908,] 148 301 #>  [37909,] 149 301 #>  [37910,] 150 301 #>  [37911,] 151 301 #>  [37912,] 152 301 #>  [37913,] 153 301 #>  [37914,] 154 301 #>  [37915,] 155 301 #>  [37916,] 156 301 #>  [37917,] 157 301 #>  [37918,] 158 301 #>  [37919,] 159 301 #>  [37920,] 160 301 #>  [37921,] 161 301 #>  [37922,] 162 301 #>  [37923,] 163 301 #>  [37924,] 164 301 #>  [37925,] 165 301 #>  [37926,] 166 301 #>  [37927,] 167 301 #>  [37928,] 168 301 #>  [37929,] 169 301 #>  [37930,] 170 301 #>  [37931,] 171 301 #>  [37932,] 172 301 #>  [37933,] 173 301 #>  [37934,] 174 301 #>  [37935,] 175 301 #>  [37936,] 176 301 #>  [37937,] 177 301 #>  [37938,] 178 301 #>  [37939,] 179 301 #>  [37940,] 180 301 #>  [37941,] 181 301 #>  [37942,] 182 301 #>  [37943,] 183 301 #>  [37944,] 184 301 #>  [37945,] 185 301 #>  [37946,] 186 301 #>  [37947,] 187 301 #>  [37948,] 188 301 #>  [37949,] 189 301 #>  [37950,] 190 301 #>  [37951,] 191 301 #>  [37952,] 192 301 #>  [37953,] 193 301 #>  [37954,] 194 301 #>  [37955,] 195 301 #>  [37956,] 196 301 #>  [37957,] 197 301 #>  [37958,] 198 301 #>  [37959,] 199 301 #>  [37960,] 200 301 #>  [37961,] 201 301 #>  [37962,] 202 301 #>  [37963,] 203 301 #>  [37964,] 204 301 #>  [37965,] 205 301 #>  [37966,] 206 301 #>  [37967,] 207 301 #>  [37968,] 208 301 #>  [37969,] 209 301 #>  [37970,] 210 301 #>  [37971,] 211 301 #>  [37972,] 212 301 #>  [37973,] 213 301 #>  [37974,] 214 301 #>  [37975,] 215 301 #>  [37976,] 216 301 #>  [37977,] 217 301 #>  [37978,] 218 301 #>  [37979,] 219 301 #>  [37980,] 220 301 #>  [37981,] 221 301 #>  [37982,] 222 301 #>  [37983,] 223 301 #>  [37984,] 224 301 #>  [37985,] 225 301 #>  [37986,] 226 301 #>  [37987,] 227 301 #>  [37988,] 228 301 #>  [37989,] 229 301 #>  [37990,] 230 301 #>  [37991,] 231 301 #>  [37992,] 232 301 #>  [37993,] 233 301 #>  [37994,] 234 301 #>  [37995,] 235 301 #>  [37996,] 236 301 #>  [37997,] 237 301 #>  [37998,] 238 301 #>  [37999,] 239 301 #>  [38000,] 240 301 #>  [38001,] 241 301 #>  [38002,] 242 301 #>  [38003,] 243 301 #>  [38004,] 244 301 #>  [38005,] 245 301 #>  [38006,] 246 301 #>  [38007,] 247 301 #>  [38008,] 248 301 #>  [38009,] 249 301 #>  [38010,] 250 301 #>  [38011,] 251 301 #>  [38012,] 252 301 #>  [38013,] 253 301 #>  [38014,] 254 301 #>  [38015,] 255 301 #>  [38016,] 256 301 #>  [38017,] 257 301 #>  [38018,] 258 301 #>  [38019,] 259 301 #>  [38020,] 260 301 #>  [38021,] 261 301 #>  [38022,] 262 301 #>  [38023,] 263 301 #>  [38024,] 264 301 #>  [38025,] 265 301 #>  [38026,] 266 301 #>  [38027,] 267 301 #>  [38028,] 268 301 #>  [38029,] 269 301 #>  [38030,] 270 301 #>  [38031,] 271 301 #>  [38032,] 272 301 #>  [38033,] 273 301 #>  [38034,] 274 301 #>  [38035,] 275 301 #>  [38036,] 276 301 #>  [38037,] 277 301 #>  [38038,] 278 301 #>  [38039,] 279 301 #>  [38040,] 280 301 #>  [38041,] 281 301 #>  [38042,] 282 301 #>  [38043,] 283 301 #>  [38044,] 284 301 #>  [38045,] 285 301 #>  [38046,] 286 301 #>  [38047,] 287 301 #>  [38048,] 288 301 #>  [38049,] 289 301 #>  [38050,] 290 301 #>  [38051,] 291 301 #>  [38052,] 292 301 #>  [38053,] 293 301 #>  [38054,] 294 301 #>  [38055,] 295 301 #>  [38056,] 296 301 #>  [38057,] 297 301 #>  [38058,] 298 301 #>  [38059,] 299 301 #>  [38060,] 300 301 #>  [38061,] 301 301 #>  [38062,] 302 301 #>  [38063,] 303 301 #>  [38064,] 304 301 #>  [38065,] 305 301 #>  [38066,] 306 301 #>  [38067,] 307 301 #>  [38068,] 308 301 #>  [38069,] 309 301 #>  [38070,] 310 301 #>  [38071,] 311 301 #>  [38072,] 312 301 #>  [38073,] 313 301 #>  [38074,] 314 301 #>  [38075,] 315 301 #>  [38076,] 316 301 #>  [38077,] 317 301 #>  [38078,] 318 301 #>  [38079,] 319 301 #>  [38080,] 320 301 #>  [38081,] 321 301 #>  [38082,] 322 301 #>  [38083,] 323 301 #>  [38084,] 324 301 #>  [38085,] 325 301 #>  [38086,] 326 301 #>  [38087,] 327 301 #>  [38088,] 328 301 #>  [38089,] 329 301 #>  [38090,] 330 301 #>  [38091,] 331 301 #>  [38092,] 332 301 #>  [38093,] 333 301 #>  [38094,] 334 301 #>  [38095,] 335 301 #>  [38096,] 336 301 #>  [38097,] 337 301 #>  [38098,] 338 301 #>  [38099,] 339 301 #>  [38100,] 340 301 #>  [38101,] 341 301 #>  [38102,] 342 301 #>  [38103,] 343 301 #>  [38104,] 344 301 #>  [38105,] 345 301 #>  [38106,] 346 301 #>  [38107,] 347 301 #>  [38108,] 348 301 #>  [38109,] 349 301 #>  [38110,] 350 301 #>  [38111,] 351 301 #>  [38112,] 352 301 #>  [38113,] 353 301 #>  [38114,] 354 301 #>  [38115,] 355 301 #>  [38116,] 356 301 #>  [38117,] 357 301 #>  [38118,] 358 301 #>  [38119,] 359 301 #>  [38120,] 360 301 #>  [38121,] 361 301 #>  [38122,] 362 301 #>  [38123,] 363 301 #>  [38124,] 364 301 #>  [38125,] 365 301 #>  [38126,] 366 301 #>  [38127,] 367 301 #>  [38128,] 368 301 #>  [38129,] 369 301 #>  [38130,] 370 301 #>  [38131,] 371 301 #>  [38132,] 372 301 #>  [38133,] 373 301 #>  [38134,] 374 301 #>  [38135,] 375 301 #>  [38136,] 376 301 #>  [38137,] 377 301 #>  [38138,] 378 301 #>  [38139,] 379 301 #>  [38140,] 380 301 #>  [38141,] 381 301 #>  [38142,] 382 301 #>  [38143,] 383 301 #>  [38144,] 384 301 #>  [38145,] 385 301 #>  [38146,] 386 301 #>  [38147,] 387 301 #>  [38148,] 388 301 #>  [38149,] 389 301 #>  [38150,] 390 301 #>  [38151,] 391 301 #>  [38152,] 392 301 #>  [38153,] 393 301 #>  [38154,] 394 301 #>  [38155,] 395 301 #>  [38156,] 396 301 #>  [38157,] 397 301 #>  [38158,] 398 301 #>  [38159,] 399 301 #>  [38160,] 400 301 #>  [38161,] 401 301 #>  [38162,] 402 301 #>  [38163,] 403 301 #>  [38164,] 404 301 #>  [38165,] 405 301 #>  [38166,] 406 301 #>  [38167,] 407 301 #>  [38168,] 408 301 #>  [38169,] 409 301 #>  [38170,] 410 301 #>  [38171,] 411 301 #>  [38172,] 412 301 #>  [38173,] 413 301 #>  [38174,] 414 301 #>  [38175,] 415 301 #>  [38176,] 416 301 #>  [38177,] 417 301 #>  [38178,] 418 301 #>  [38179,] 419 301 #>  [38180,] 420 301 #>  [38181,] 421 301 #>  [38182,] 422 301 #>  [38183,] 423 301 #>  [38184,] 424 301 #>  [38185,] 425 301 #>  [38186,] 426 301 #>  [38187,] 427 301 #>  [38188,] 428 301 #>  [38189,] 429 301 #>  [38190,] 430 301 #>  [38191,] 431 301 #>  [38192,] 432 301 #>  [38193,] 433 301 #>  [38194,] 434 301 #>  [38195,] 435 301 #>  [38196,] 436 301 #>  [38197,] 437 301 #>  [38198,] 438 301 #>  [38199,] 439 301 #>  [38200,] 440 301 #>  [38201,] 441 301 #>  [38202,] 442 301 #>  [38203,] 443 301 #>  [38204,] 444 301 #>  [38205,] 445 301 #>  [38206,] 446 301 #>  [38207,] 447 301 #>  [38208,] 448 301 #>  [38209,] 449 301 #>  [38210,] 450 301 #>  [38211,] 451 301 #>  [38212,] 452 301 #>  [38213,] 453 301 #>  [38214,] 454 301 #>  [38215,] 455 301 #>  [38216,] 456 301 #>  [38217,] 457 301 #>  [38218,] 458 301 #>  [38219,] 459 301 #>  [38220,] 460 301 #>  [38221,] 461 301 #>  [38222,] 462 301 #>  [38223,] 463 301 #>  [38224,] 464 301 #>  [38225,] 465 301 #>  [38226,] 466 301 #>  [38227,] 467 301 #>  [38228,] 468 301 #>  [38229,] 469 301 #>  [38230,] 470 301 #>  [38231,] 471 301 #>  [38232,] 472 301 #>  [38233,] 473 301 #>  [38234,] 474 301 #>  [38235,] 475 301 #>  [38236,] 476 301 #>  [38237,] 477 301 #>  [38238,] 478 301 #>  [38239,] 479 301 #>  [38240,] 480 301 #>  [38241,] 481 301 #>  [38242,] 482 301 #>  [38243,] 483 301 #>  [38244,] 484 301 #>  [38245,] 485 301 #>  [38246,] 486 301 #>  [38247,] 487 301 #>  [38248,] 488 301 #>  [38249,] 489 301 #>  [38250,] 490 301 #>  [38251,] 491 301 #>  [38252,] 492 301 #>  [38253,] 493 301 #>  [38254,] 494 301 #>  [38255,] 495 301 #>  [38256,] 496 301 #>  [38257,] 497 301 #>  [38258,] 498 301 #>  [38259,] 499 301 #>  [38260,] 500 301 #>  [38261,] 501 301 #>  [38262,] 502 301 #>  [38263,] 503 301 #>  [38264,] 504 301 #>  [38265,] 505 301 #>  [38266,] 506 301 #>  [38267,] 507 301 #>  [38268,] 508 301 #>  [38269,] 509 301 #>  [38270,] 510 301 #>  [38271,] 511 301 #>  [38272,] 512 301 #>  [38273,] 513 301 #>  [38274,] 514 301 #>  [38275,] 515 301 #>  [38276,] 516 301 #>  [38277,] 517 301 #>  [38278,] 518 301 #>  [38279,] 519 301 #>  [38280,] 520 301 #>  [38281,] 521 301 #>  [38282,] 522 301 #>  [38283,] 523 301 #>  [38284,] 524 301 #>  [38285,] 525 301 #>  [38286,] 526 301 #>  [38287,] 527 301 #>  [38288,] 528 301 #>  [38289,] 529 301 #>  [38290,] 530 301 #>  [38291,] 531 301 #>  [38292,] 532 301 #>  [38293,] 533 301 #>  [38294,] 534 301 #>  [38295,] 535 301 #>  [38296,] 536 301 #>  [38297,] 537 301 #>  [38298,] 538 301 #>  [38299,] 539 301 #>  [38300,] 540 301 #>  [38301,] 541 301 #>  [38302,] 542 301 #>  [38303,] 543 301 #>  [38304,] 544 301 #>  [38305,] 545 301 #>  [38306,] 546 301 #>  [38307,] 547 301 #>  [38308,] 548 301 #>  [38309,] 549 301 #>  [38310,] 550 301 #>  [38311,] 551 301 #>  [38312,] 552 301 #>  [38313,] 553 301 #>  [38314,] 554 301 #>  [38315,] 555 301 #>  [38316,] 556 301 #>  [38317,] 557 301 #>  [38318,] 558 301 #>  [38319,] 559 301 #>  [38320,] 560 301 #>  [38321,] 561 301 #>  [38322,] 562 301 #>  [38323,] 563 301 #>  [38324,] 564 301 #>  [38325,] 565 301 #>  [38326,] 566 301 #>  [38327,] 567 301 #>  [38328,] 568 301 #>  [38329,] 569 301 #>  [38330,] 570 301 #>  [38331,] 571 301 #>  [38332,] 572 301 #>  [38333,] 573 301 #>  [38334,] 574 301 #>  [38335,] 575 301 #>  [38336,] 576 301 #>  [38337,] 577 301 #>  [38338,] 578 301 #>  [38339,] 579 301 #>  [38340,] 580 301 #>  [38341,] 581 301 #>  [38342,] 582 301 #>  [38343,] 583 301 #>  [38344,] 584 301 #>  [38345,] 585 301 #>  [38346,] 586 301 #>  [38347,] 587 301 #>  [38348,] 588 301 #>  [38349,] 589 301 #>  [38350,] 590 301 #>  [38351,] 591 301 #>  [38352,] 592 301 #>  [38353,] 593 301 #>  [38354,] 594 301 #>  [38355,] 595 301 #>  [38356,] 596 301 #>  [38357,] 597 301 #>  [38358,] 598 301 #>  [38359,] 599 301 #>  [38360,] 600 301 #>  [38361,] 601 301 #>  [38362,] 602 301 #>  [38363,] 603 301 #>  [38364,] 604 301 #>  [38365,] 605 301 #>  [38366,] 606 301 #>  [38367,] 607 301 #>  [38368,] 608 301 #>  [38369,] 609 301 #>  [38370,] 610 301 #>  [38371,] 611 301 #>  [38372,] 612 301 #>  [38373,] 613 301 #>  [38374,] 614 301 #>  [38375,] 615 301 #>  [38376,] 616 301 #>  [38377,] 617 301 #>  [38378,] 618 301 #>  [38379,] 619 301 #>  [38380,] 620 301 #>  [38381,] 621 301 #>  [38382,] 622 301 #>  [38383,] 623 301 #>  [38384,] 624 301 #>  [38385,] 625 301 #>  [38386,] 626 301 #>  [38387,] 627 301 #>  [38388,] 628 301 #>  [38389,] 629 301 #>  [38390,] 630 301 #>  [38391,] 631 301 #>  [38392,] 632 301 #>  [38393,] 633 301 #>  [38394,] 634 301 #>  [38395,] 635 301 #>  [38396,] 636 301 #>  [38397,] 637 301 #>  [38398,] 638 301 #>  [38399,] 639 301 #>  [38400,] 640 301 #>  [38401,]   1 300 #>  [38402,]   2 300 #>  [38403,]   3 300 #>  [38404,]   4 300 #>  [38405,]   5 300 #>  [38406,]   6 300 #>  [38407,]   7 300 #>  [38408,]   8 300 #>  [38409,]   9 300 #>  [38410,]  10 300 #>  [38411,]  11 300 #>  [38412,]  12 300 #>  [38413,]  13 300 #>  [38414,]  14 300 #>  [38415,]  15 300 #>  [38416,]  16 300 #>  [38417,]  17 300 #>  [38418,]  18 300 #>  [38419,]  19 300 #>  [38420,]  20 300 #>  [38421,]  21 300 #>  [38422,]  22 300 #>  [38423,]  23 300 #>  [38424,]  24 300 #>  [38425,]  25 300 #>  [38426,]  26 300 #>  [38427,]  27 300 #>  [38428,]  28 300 #>  [38429,]  29 300 #>  [38430,]  30 300 #>  [38431,]  31 300 #>  [38432,]  32 300 #>  [38433,]  33 300 #>  [38434,]  34 300 #>  [38435,]  35 300 #>  [38436,]  36 300 #>  [38437,]  37 300 #>  [38438,]  38 300 #>  [38439,]  39 300 #>  [38440,]  40 300 #>  [38441,]  41 300 #>  [38442,]  42 300 #>  [38443,]  43 300 #>  [38444,]  44 300 #>  [38445,]  45 300 #>  [38446,]  46 300 #>  [38447,]  47 300 #>  [38448,]  48 300 #>  [38449,]  49 300 #>  [38450,]  50 300 #>  [38451,]  51 300 #>  [38452,]  52 300 #>  [38453,]  53 300 #>  [38454,]  54 300 #>  [38455,]  55 300 #>  [38456,]  56 300 #>  [38457,]  57 300 #>  [38458,]  58 300 #>  [38459,]  59 300 #>  [38460,]  60 300 #>  [38461,]  61 300 #>  [38462,]  62 300 #>  [38463,]  63 300 #>  [38464,]  64 300 #>  [38465,]  65 300 #>  [38466,]  66 300 #>  [38467,]  67 300 #>  [38468,]  68 300 #>  [38469,]  69 300 #>  [38470,]  70 300 #>  [38471,]  71 300 #>  [38472,]  72 300 #>  [38473,]  73 300 #>  [38474,]  74 300 #>  [38475,]  75 300 #>  [38476,]  76 300 #>  [38477,]  77 300 #>  [38478,]  78 300 #>  [38479,]  79 300 #>  [38480,]  80 300 #>  [38481,]  81 300 #>  [38482,]  82 300 #>  [38483,]  83 300 #>  [38484,]  84 300 #>  [38485,]  85 300 #>  [38486,]  86 300 #>  [38487,]  87 300 #>  [38488,]  88 300 #>  [38489,]  89 300 #>  [38490,]  90 300 #>  [38491,]  91 300 #>  [38492,]  92 300 #>  [38493,]  93 300 #>  [38494,]  94 300 #>  [38495,]  95 300 #>  [38496,]  96 300 #>  [38497,]  97 300 #>  [38498,]  98 300 #>  [38499,]  99 300 #>  [38500,] 100 300 #>  [38501,] 101 300 #>  [38502,] 102 300 #>  [38503,] 103 300 #>  [38504,] 104 300 #>  [38505,] 105 300 #>  [38506,] 106 300 #>  [38507,] 107 300 #>  [38508,] 108 300 #>  [38509,] 109 300 #>  [38510,] 110 300 #>  [38511,] 111 300 #>  [38512,] 112 300 #>  [38513,] 113 300 #>  [38514,] 114 300 #>  [38515,] 115 300 #>  [38516,] 116 300 #>  [38517,] 117 300 #>  [38518,] 118 300 #>  [38519,] 119 300 #>  [38520,] 120 300 #>  [38521,] 121 300 #>  [38522,] 122 300 #>  [38523,] 123 300 #>  [38524,] 124 300 #>  [38525,] 125 300 #>  [38526,] 126 300 #>  [38527,] 127 300 #>  [38528,] 128 300 #>  [38529,] 129 300 #>  [38530,] 130 300 #>  [38531,] 131 300 #>  [38532,] 132 300 #>  [38533,] 133 300 #>  [38534,] 134 300 #>  [38535,] 135 300 #>  [38536,] 136 300 #>  [38537,] 137 300 #>  [38538,] 138 300 #>  [38539,] 139 300 #>  [38540,] 140 300 #>  [38541,] 141 300 #>  [38542,] 142 300 #>  [38543,] 143 300 #>  [38544,] 144 300 #>  [38545,] 145 300 #>  [38546,] 146 300 #>  [38547,] 147 300 #>  [38548,] 148 300 #>  [38549,] 149 300 #>  [38550,] 150 300 #>  [38551,] 151 300 #>  [38552,] 152 300 #>  [38553,] 153 300 #>  [38554,] 154 300 #>  [38555,] 155 300 #>  [38556,] 156 300 #>  [38557,] 157 300 #>  [38558,] 158 300 #>  [38559,] 159 300 #>  [38560,] 160 300 #>  [38561,] 161 300 #>  [38562,] 162 300 #>  [38563,] 163 300 #>  [38564,] 164 300 #>  [38565,] 165 300 #>  [38566,] 166 300 #>  [38567,] 167 300 #>  [38568,] 168 300 #>  [38569,] 169 300 #>  [38570,] 170 300 #>  [38571,] 171 300 #>  [38572,] 172 300 #>  [38573,] 173 300 #>  [38574,] 174 300 #>  [38575,] 175 300 #>  [38576,] 176 300 #>  [38577,] 177 300 #>  [38578,] 178 300 #>  [38579,] 179 300 #>  [38580,] 180 300 #>  [38581,] 181 300 #>  [38582,] 182 300 #>  [38583,] 183 300 #>  [38584,] 184 300 #>  [38585,] 185 300 #>  [38586,] 186 300 #>  [38587,] 187 300 #>  [38588,] 188 300 #>  [38589,] 189 300 #>  [38590,] 190 300 #>  [38591,] 191 300 #>  [38592,] 192 300 #>  [38593,] 193 300 #>  [38594,] 194 300 #>  [38595,] 195 300 #>  [38596,] 196 300 #>  [38597,] 197 300 #>  [38598,] 198 300 #>  [38599,] 199 300 #>  [38600,] 200 300 #>  [38601,] 201 300 #>  [38602,] 202 300 #>  [38603,] 203 300 #>  [38604,] 204 300 #>  [38605,] 205 300 #>  [38606,] 206 300 #>  [38607,] 207 300 #>  [38608,] 208 300 #>  [38609,] 209 300 #>  [38610,] 210 300 #>  [38611,] 211 300 #>  [38612,] 212 300 #>  [38613,] 213 300 #>  [38614,] 214 300 #>  [38615,] 215 300 #>  [38616,] 216 300 #>  [38617,] 217 300 #>  [38618,] 218 300 #>  [38619,] 219 300 #>  [38620,] 220 300 #>  [38621,] 221 300 #>  [38622,] 222 300 #>  [38623,] 223 300 #>  [38624,] 224 300 #>  [38625,] 225 300 #>  [38626,] 226 300 #>  [38627,] 227 300 #>  [38628,] 228 300 #>  [38629,] 229 300 #>  [38630,] 230 300 #>  [38631,] 231 300 #>  [38632,] 232 300 #>  [38633,] 233 300 #>  [38634,] 234 300 #>  [38635,] 235 300 #>  [38636,] 236 300 #>  [38637,] 237 300 #>  [38638,] 238 300 #>  [38639,] 239 300 #>  [38640,] 240 300 #>  [38641,] 241 300 #>  [38642,] 242 300 #>  [38643,] 243 300 #>  [38644,] 244 300 #>  [38645,] 245 300 #>  [38646,] 246 300 #>  [38647,] 247 300 #>  [38648,] 248 300 #>  [38649,] 249 300 #>  [38650,] 250 300 #>  [38651,] 251 300 #>  [38652,] 252 300 #>  [38653,] 253 300 #>  [38654,] 254 300 #>  [38655,] 255 300 #>  [38656,] 256 300 #>  [38657,] 257 300 #>  [38658,] 258 300 #>  [38659,] 259 300 #>  [38660,] 260 300 #>  [38661,] 261 300 #>  [38662,] 262 300 #>  [38663,] 263 300 #>  [38664,] 264 300 #>  [38665,] 265 300 #>  [38666,] 266 300 #>  [38667,] 267 300 #>  [38668,] 268 300 #>  [38669,] 269 300 #>  [38670,] 270 300 #>  [38671,] 271 300 #>  [38672,] 272 300 #>  [38673,] 273 300 #>  [38674,] 274 300 #>  [38675,] 275 300 #>  [38676,] 276 300 #>  [38677,] 277 300 #>  [38678,] 278 300 #>  [38679,] 279 300 #>  [38680,] 280 300 #>  [38681,] 281 300 #>  [38682,] 282 300 #>  [38683,] 283 300 #>  [38684,] 284 300 #>  [38685,] 285 300 #>  [38686,] 286 300 #>  [38687,] 287 300 #>  [38688,] 288 300 #>  [38689,] 289 300 #>  [38690,] 290 300 #>  [38691,] 291 300 #>  [38692,] 292 300 #>  [38693,] 293 300 #>  [38694,] 294 300 #>  [38695,] 295 300 #>  [38696,] 296 300 #>  [38697,] 297 300 #>  [38698,] 298 300 #>  [38699,] 299 300 #>  [38700,] 300 300 #>  [38701,] 301 300 #>  [38702,] 302 300 #>  [38703,] 303 300 #>  [38704,] 304 300 #>  [38705,] 305 300 #>  [38706,] 306 300 #>  [38707,] 307 300 #>  [38708,] 308 300 #>  [38709,] 309 300 #>  [38710,] 310 300 #>  [38711,] 311 300 #>  [38712,] 312 300 #>  [38713,] 313 300 #>  [38714,] 314 300 #>  [38715,] 315 300 #>  [38716,] 316 300 #>  [38717,] 317 300 #>  [38718,] 318 300 #>  [38719,] 319 300 #>  [38720,] 320 300 #>  [38721,] 321 300 #>  [38722,] 322 300 #>  [38723,] 323 300 #>  [38724,] 324 300 #>  [38725,] 325 300 #>  [38726,] 326 300 #>  [38727,] 327 300 #>  [38728,] 328 300 #>  [38729,] 329 300 #>  [38730,] 330 300 #>  [38731,] 331 300 #>  [38732,] 332 300 #>  [38733,] 333 300 #>  [38734,] 334 300 #>  [38735,] 335 300 #>  [38736,] 336 300 #>  [38737,] 337 300 #>  [38738,] 338 300 #>  [38739,] 339 300 #>  [38740,] 340 300 #>  [38741,] 341 300 #>  [38742,] 342 300 #>  [38743,] 343 300 #>  [38744,] 344 300 #>  [38745,] 345 300 #>  [38746,] 346 300 #>  [38747,] 347 300 #>  [38748,] 348 300 #>  [38749,] 349 300 #>  [38750,] 350 300 #>  [38751,] 351 300 #>  [38752,] 352 300 #>  [38753,] 353 300 #>  [38754,] 354 300 #>  [38755,] 355 300 #>  [38756,] 356 300 #>  [38757,] 357 300 #>  [38758,] 358 300 #>  [38759,] 359 300 #>  [38760,] 360 300 #>  [38761,] 361 300 #>  [38762,] 362 300 #>  [38763,] 363 300 #>  [38764,] 364 300 #>  [38765,] 365 300 #>  [38766,] 366 300 #>  [38767,] 367 300 #>  [38768,] 368 300 #>  [38769,] 369 300 #>  [38770,] 370 300 #>  [38771,] 371 300 #>  [38772,] 372 300 #>  [38773,] 373 300 #>  [38774,] 374 300 #>  [38775,] 375 300 #>  [38776,] 376 300 #>  [38777,] 377 300 #>  [38778,] 378 300 #>  [38779,] 379 300 #>  [38780,] 380 300 #>  [38781,] 381 300 #>  [38782,] 382 300 #>  [38783,] 383 300 #>  [38784,] 384 300 #>  [38785,] 385 300 #>  [38786,] 386 300 #>  [38787,] 387 300 #>  [38788,] 388 300 #>  [38789,] 389 300 #>  [38790,] 390 300 #>  [38791,] 391 300 #>  [38792,] 392 300 #>  [38793,] 393 300 #>  [38794,] 394 300 #>  [38795,] 395 300 #>  [38796,] 396 300 #>  [38797,] 397 300 #>  [38798,] 398 300 #>  [38799,] 399 300 #>  [38800,] 400 300 #>  [38801,] 401 300 #>  [38802,] 402 300 #>  [38803,] 403 300 #>  [38804,] 404 300 #>  [38805,] 405 300 #>  [38806,] 406 300 #>  [38807,] 407 300 #>  [38808,] 408 300 #>  [38809,] 409 300 #>  [38810,] 410 300 #>  [38811,] 411 300 #>  [38812,] 412 300 #>  [38813,] 413 300 #>  [38814,] 414 300 #>  [38815,] 415 300 #>  [38816,] 416 300 #>  [38817,] 417 300 #>  [38818,] 418 300 #>  [38819,] 419 300 #>  [38820,] 420 300 #>  [38821,] 421 300 #>  [38822,] 422 300 #>  [38823,] 423 300 #>  [38824,] 424 300 #>  [38825,] 425 300 #>  [38826,] 426 300 #>  [38827,] 427 300 #>  [38828,] 428 300 #>  [38829,] 429 300 #>  [38830,] 430 300 #>  [38831,] 431 300 #>  [38832,] 432 300 #>  [38833,] 433 300 #>  [38834,] 434 300 #>  [38835,] 435 300 #>  [38836,] 436 300 #>  [38837,] 437 300 #>  [38838,] 438 300 #>  [38839,] 439 300 #>  [38840,] 440 300 #>  [38841,] 441 300 #>  [38842,] 442 300 #>  [38843,] 443 300 #>  [38844,] 444 300 #>  [38845,] 445 300 #>  [38846,] 446 300 #>  [38847,] 447 300 #>  [38848,] 448 300 #>  [38849,] 449 300 #>  [38850,] 450 300 #>  [38851,] 451 300 #>  [38852,] 452 300 #>  [38853,] 453 300 #>  [38854,] 454 300 #>  [38855,] 455 300 #>  [38856,] 456 300 #>  [38857,] 457 300 #>  [38858,] 458 300 #>  [38859,] 459 300 #>  [38860,] 460 300 #>  [38861,] 461 300 #>  [38862,] 462 300 #>  [38863,] 463 300 #>  [38864,] 464 300 #>  [38865,] 465 300 #>  [38866,] 466 300 #>  [38867,] 467 300 #>  [38868,] 468 300 #>  [38869,] 469 300 #>  [38870,] 470 300 #>  [38871,] 471 300 #>  [38872,] 472 300 #>  [38873,] 473 300 #>  [38874,] 474 300 #>  [38875,] 475 300 #>  [38876,] 476 300 #>  [38877,] 477 300 #>  [38878,] 478 300 #>  [38879,] 479 300 #>  [38880,] 480 300 #>  [38881,] 481 300 #>  [38882,] 482 300 #>  [38883,] 483 300 #>  [38884,] 484 300 #>  [38885,] 485 300 #>  [38886,] 486 300 #>  [38887,] 487 300 #>  [38888,] 488 300 #>  [38889,] 489 300 #>  [38890,] 490 300 #>  [38891,] 491 300 #>  [38892,] 492 300 #>  [38893,] 493 300 #>  [38894,] 494 300 #>  [38895,] 495 300 #>  [38896,] 496 300 #>  [38897,] 497 300 #>  [38898,] 498 300 #>  [38899,] 499 300 #>  [38900,] 500 300 #>  [38901,] 501 300 #>  [38902,] 502 300 #>  [38903,] 503 300 #>  [38904,] 504 300 #>  [38905,] 505 300 #>  [38906,] 506 300 #>  [38907,] 507 300 #>  [38908,] 508 300 #>  [38909,] 509 300 #>  [38910,] 510 300 #>  [38911,] 511 300 #>  [38912,] 512 300 #>  [38913,] 513 300 #>  [38914,] 514 300 #>  [38915,] 515 300 #>  [38916,] 516 300 #>  [38917,] 517 300 #>  [38918,] 518 300 #>  [38919,] 519 300 #>  [38920,] 520 300 #>  [38921,] 521 300 #>  [38922,] 522 300 #>  [38923,] 523 300 #>  [38924,] 524 300 #>  [38925,] 525 300 #>  [38926,] 526 300 #>  [38927,] 527 300 #>  [38928,] 528 300 #>  [38929,] 529 300 #>  [38930,] 530 300 #>  [38931,] 531 300 #>  [38932,] 532 300 #>  [38933,] 533 300 #>  [38934,] 534 300 #>  [38935,] 535 300 #>  [38936,] 536 300 #>  [38937,] 537 300 #>  [38938,] 538 300 #>  [38939,] 539 300 #>  [38940,] 540 300 #>  [38941,] 541 300 #>  [38942,] 542 300 #>  [38943,] 543 300 #>  [38944,] 544 300 #>  [38945,] 545 300 #>  [38946,] 546 300 #>  [38947,] 547 300 #>  [38948,] 548 300 #>  [38949,] 549 300 #>  [38950,] 550 300 #>  [38951,] 551 300 #>  [38952,] 552 300 #>  [38953,] 553 300 #>  [38954,] 554 300 #>  [38955,] 555 300 #>  [38956,] 556 300 #>  [38957,] 557 300 #>  [38958,] 558 300 #>  [38959,] 559 300 #>  [38960,] 560 300 #>  [38961,] 561 300 #>  [38962,] 562 300 #>  [38963,] 563 300 #>  [38964,] 564 300 #>  [38965,] 565 300 #>  [38966,] 566 300 #>  [38967,] 567 300 #>  [38968,] 568 300 #>  [38969,] 569 300 #>  [38970,] 570 300 #>  [38971,] 571 300 #>  [38972,] 572 300 #>  [38973,] 573 300 #>  [38974,] 574 300 #>  [38975,] 575 300 #>  [38976,] 576 300 #>  [38977,] 577 300 #>  [38978,] 578 300 #>  [38979,] 579 300 #>  [38980,] 580 300 #>  [38981,] 581 300 #>  [38982,] 582 300 #>  [38983,] 583 300 #>  [38984,] 584 300 #>  [38985,] 585 300 #>  [38986,] 586 300 #>  [38987,] 587 300 #>  [38988,] 588 300 #>  [38989,] 589 300 #>  [38990,] 590 300 #>  [38991,] 591 300 #>  [38992,] 592 300 #>  [38993,] 593 300 #>  [38994,] 594 300 #>  [38995,] 595 300 #>  [38996,] 596 300 #>  [38997,] 597 300 #>  [38998,] 598 300 #>  [38999,] 599 300 #>  [39000,] 600 300 #>  [39001,] 601 300 #>  [39002,] 602 300 #>  [39003,] 603 300 #>  [39004,] 604 300 #>  [39005,] 605 300 #>  [39006,] 606 300 #>  [39007,] 607 300 #>  [39008,] 608 300 #>  [39009,] 609 300 #>  [39010,] 610 300 #>  [39011,] 611 300 #>  [39012,] 612 300 #>  [39013,] 613 300 #>  [39014,] 614 300 #>  [39015,] 615 300 #>  [39016,] 616 300 #>  [39017,] 617 300 #>  [39018,] 618 300 #>  [39019,] 619 300 #>  [39020,] 620 300 #>  [39021,] 621 300 #>  [39022,] 622 300 #>  [39023,] 623 300 #>  [39024,] 624 300 #>  [39025,] 625 300 #>  [39026,] 626 300 #>  [39027,] 627 300 #>  [39028,] 628 300 #>  [39029,] 629 300 #>  [39030,] 630 300 #>  [39031,] 631 300 #>  [39032,] 632 300 #>  [39033,] 633 300 #>  [39034,] 634 300 #>  [39035,] 635 300 #>  [39036,] 636 300 #>  [39037,] 637 300 #>  [39038,] 638 300 #>  [39039,] 639 300 #>  [39040,] 640 300 #>  [39041,]   1 299 #>  [39042,]   2 299 #>  [39043,]   3 299 #>  [39044,]   4 299 #>  [39045,]   5 299 #>  [39046,]   6 299 #>  [39047,]   7 299 #>  [39048,]   8 299 #>  [39049,]   9 299 #>  [39050,]  10 299 #>  [39051,]  11 299 #>  [39052,]  12 299 #>  [39053,]  13 299 #>  [39054,]  14 299 #>  [39055,]  15 299 #>  [39056,]  16 299 #>  [39057,]  17 299 #>  [39058,]  18 299 #>  [39059,]  19 299 #>  [39060,]  20 299 #>  [39061,]  21 299 #>  [39062,]  22 299 #>  [39063,]  23 299 #>  [39064,]  24 299 #>  [39065,]  25 299 #>  [39066,]  26 299 #>  [39067,]  27 299 #>  [39068,]  28 299 #>  [39069,]  29 299 #>  [39070,]  30 299 #>  [39071,]  31 299 #>  [39072,]  32 299 #>  [39073,]  33 299 #>  [39074,]  34 299 #>  [39075,]  35 299 #>  [39076,]  36 299 #>  [39077,]  37 299 #>  [39078,]  38 299 #>  [39079,]  39 299 #>  [39080,]  40 299 #>  [39081,]  41 299 #>  [39082,]  42 299 #>  [39083,]  43 299 #>  [39084,]  44 299 #>  [39085,]  45 299 #>  [39086,]  46 299 #>  [39087,]  47 299 #>  [39088,]  48 299 #>  [39089,]  49 299 #>  [39090,]  50 299 #>  [39091,]  51 299 #>  [39092,]  52 299 #>  [39093,]  53 299 #>  [39094,]  54 299 #>  [39095,]  55 299 #>  [39096,]  56 299 #>  [39097,]  57 299 #>  [39098,]  58 299 #>  [39099,]  59 299 #>  [39100,]  60 299 #>  [39101,]  61 299 #>  [39102,]  62 299 #>  [39103,]  63 299 #>  [39104,]  64 299 #>  [39105,]  65 299 #>  [39106,]  66 299 #>  [39107,]  67 299 #>  [39108,]  68 299 #>  [39109,]  69 299 #>  [39110,]  70 299 #>  [39111,]  71 299 #>  [39112,]  72 299 #>  [39113,]  73 299 #>  [39114,]  74 299 #>  [39115,]  75 299 #>  [39116,]  76 299 #>  [39117,]  77 299 #>  [39118,]  78 299 #>  [39119,]  79 299 #>  [39120,]  80 299 #>  [39121,]  81 299 #>  [39122,]  82 299 #>  [39123,]  83 299 #>  [39124,]  84 299 #>  [39125,]  85 299 #>  [39126,]  86 299 #>  [39127,]  87 299 #>  [39128,]  88 299 #>  [39129,]  89 299 #>  [39130,]  90 299 #>  [39131,]  91 299 #>  [39132,]  92 299 #>  [39133,]  93 299 #>  [39134,]  94 299 #>  [39135,]  95 299 #>  [39136,]  96 299 #>  [39137,]  97 299 #>  [39138,]  98 299 #>  [39139,]  99 299 #>  [39140,] 100 299 #>  [39141,] 101 299 #>  [39142,] 102 299 #>  [39143,] 103 299 #>  [39144,] 104 299 #>  [39145,] 105 299 #>  [39146,] 106 299 #>  [39147,] 107 299 #>  [39148,] 108 299 #>  [39149,] 109 299 #>  [39150,] 110 299 #>  [39151,] 111 299 #>  [39152,] 112 299 #>  [39153,] 113 299 #>  [39154,] 114 299 #>  [39155,] 115 299 #>  [39156,] 116 299 #>  [39157,] 117 299 #>  [39158,] 118 299 #>  [39159,] 119 299 #>  [39160,] 120 299 #>  [39161,] 121 299 #>  [39162,] 122 299 #>  [39163,] 123 299 #>  [39164,] 124 299 #>  [39165,] 125 299 #>  [39166,] 126 299 #>  [39167,] 127 299 #>  [39168,] 128 299 #>  [39169,] 129 299 #>  [39170,] 130 299 #>  [39171,] 131 299 #>  [39172,] 132 299 #>  [39173,] 133 299 #>  [39174,] 134 299 #>  [39175,] 135 299 #>  [39176,] 136 299 #>  [39177,] 137 299 #>  [39178,] 138 299 #>  [39179,] 139 299 #>  [39180,] 140 299 #>  [39181,] 141 299 #>  [39182,] 142 299 #>  [39183,] 143 299 #>  [39184,] 144 299 #>  [39185,] 145 299 #>  [39186,] 146 299 #>  [39187,] 147 299 #>  [39188,] 148 299 #>  [39189,] 149 299 #>  [39190,] 150 299 #>  [39191,] 151 299 #>  [39192,] 152 299 #>  [39193,] 153 299 #>  [39194,] 154 299 #>  [39195,] 155 299 #>  [39196,] 156 299 #>  [39197,] 157 299 #>  [39198,] 158 299 #>  [39199,] 159 299 #>  [39200,] 160 299 #>  [39201,] 161 299 #>  [39202,] 162 299 #>  [39203,] 163 299 #>  [39204,] 164 299 #>  [39205,] 165 299 #>  [39206,] 166 299 #>  [39207,] 167 299 #>  [39208,] 168 299 #>  [39209,] 169 299 #>  [39210,] 170 299 #>  [39211,] 171 299 #>  [39212,] 172 299 #>  [39213,] 173 299 #>  [39214,] 174 299 #>  [39215,] 175 299 #>  [39216,] 176 299 #>  [39217,] 177 299 #>  [39218,] 178 299 #>  [39219,] 179 299 #>  [39220,] 180 299 #>  [39221,] 181 299 #>  [39222,] 182 299 #>  [39223,] 183 299 #>  [39224,] 184 299 #>  [39225,] 185 299 #>  [39226,] 186 299 #>  [39227,] 187 299 #>  [39228,] 188 299 #>  [39229,] 189 299 #>  [39230,] 190 299 #>  [39231,] 191 299 #>  [39232,] 192 299 #>  [39233,] 193 299 #>  [39234,] 194 299 #>  [39235,] 195 299 #>  [39236,] 196 299 #>  [39237,] 197 299 #>  [39238,] 198 299 #>  [39239,] 199 299 #>  [39240,] 200 299 #>  [39241,] 201 299 #>  [39242,] 202 299 #>  [39243,] 203 299 #>  [39244,] 204 299 #>  [39245,] 205 299 #>  [39246,] 206 299 #>  [39247,] 207 299 #>  [39248,] 208 299 #>  [39249,] 209 299 #>  [39250,] 210 299 #>  [39251,] 211 299 #>  [39252,] 212 299 #>  [39253,] 213 299 #>  [39254,] 214 299 #>  [39255,] 215 299 #>  [39256,] 216 299 #>  [39257,] 217 299 #>  [39258,] 218 299 #>  [39259,] 219 299 #>  [39260,] 220 299 #>  [39261,] 221 299 #>  [39262,] 222 299 #>  [39263,] 223 299 #>  [39264,] 224 299 #>  [39265,] 225 299 #>  [39266,] 226 299 #>  [39267,] 227 299 #>  [39268,] 228 299 #>  [39269,] 229 299 #>  [39270,] 230 299 #>  [39271,] 231 299 #>  [39272,] 232 299 #>  [39273,] 233 299 #>  [39274,] 234 299 #>  [39275,] 235 299 #>  [39276,] 236 299 #>  [39277,] 237 299 #>  [39278,] 238 299 #>  [39279,] 239 299 #>  [39280,] 240 299 #>  [39281,] 241 299 #>  [39282,] 242 299 #>  [39283,] 243 299 #>  [39284,] 244 299 #>  [39285,] 245 299 #>  [39286,] 246 299 #>  [39287,] 247 299 #>  [39288,] 248 299 #>  [39289,] 249 299 #>  [39290,] 250 299 #>  [39291,] 251 299 #>  [39292,] 252 299 #>  [39293,] 253 299 #>  [39294,] 254 299 #>  [39295,] 255 299 #>  [39296,] 256 299 #>  [39297,] 257 299 #>  [39298,] 258 299 #>  [39299,] 259 299 #>  [39300,] 260 299 #>  [39301,] 261 299 #>  [39302,] 262 299 #>  [39303,] 263 299 #>  [39304,] 264 299 #>  [39305,] 265 299 #>  [39306,] 266 299 #>  [39307,] 267 299 #>  [39308,] 268 299 #>  [39309,] 269 299 #>  [39310,] 270 299 #>  [39311,] 271 299 #>  [39312,] 272 299 #>  [39313,] 273 299 #>  [39314,] 274 299 #>  [39315,] 275 299 #>  [39316,] 276 299 #>  [39317,] 277 299 #>  [39318,] 278 299 #>  [39319,] 279 299 #>  [39320,] 280 299 #>  [39321,] 281 299 #>  [39322,] 282 299 #>  [39323,] 283 299 #>  [39324,] 284 299 #>  [39325,] 285 299 #>  [39326,] 286 299 #>  [39327,] 287 299 #>  [39328,] 288 299 #>  [39329,] 289 299 #>  [39330,] 290 299 #>  [39331,] 291 299 #>  [39332,] 292 299 #>  [39333,] 293 299 #>  [39334,] 294 299 #>  [39335,] 295 299 #>  [39336,] 296 299 #>  [39337,] 297 299 #>  [39338,] 298 299 #>  [39339,] 299 299 #>  [39340,] 300 299 #>  [39341,] 301 299 #>  [39342,] 302 299 #>  [39343,] 303 299 #>  [39344,] 304 299 #>  [39345,] 305 299 #>  [39346,] 306 299 #>  [39347,] 307 299 #>  [39348,] 308 299 #>  [39349,] 309 299 #>  [39350,] 310 299 #>  [39351,] 311 299 #>  [39352,] 312 299 #>  [39353,] 313 299 #>  [39354,] 314 299 #>  [39355,] 315 299 #>  [39356,] 316 299 #>  [39357,] 317 299 #>  [39358,] 318 299 #>  [39359,] 319 299 #>  [39360,] 320 299 #>  [39361,] 321 299 #>  [39362,] 322 299 #>  [39363,] 323 299 #>  [39364,] 324 299 #>  [39365,] 325 299 #>  [39366,] 326 299 #>  [39367,] 327 299 #>  [39368,] 328 299 #>  [39369,] 329 299 #>  [39370,] 330 299 #>  [39371,] 331 299 #>  [39372,] 332 299 #>  [39373,] 333 299 #>  [39374,] 334 299 #>  [39375,] 335 299 #>  [39376,] 336 299 #>  [39377,] 337 299 #>  [39378,] 338 299 #>  [39379,] 339 299 #>  [39380,] 340 299 #>  [39381,] 341 299 #>  [39382,] 342 299 #>  [39383,] 343 299 #>  [39384,] 344 299 #>  [39385,] 345 299 #>  [39386,] 346 299 #>  [39387,] 347 299 #>  [39388,] 348 299 #>  [39389,] 349 299 #>  [39390,] 350 299 #>  [39391,] 351 299 #>  [39392,] 352 299 #>  [39393,] 353 299 #>  [39394,] 354 299 #>  [39395,] 355 299 #>  [39396,] 356 299 #>  [39397,] 357 299 #>  [39398,] 358 299 #>  [39399,] 359 299 #>  [39400,] 360 299 #>  [39401,] 361 299 #>  [39402,] 362 299 #>  [39403,] 363 299 #>  [39404,] 364 299 #>  [39405,] 365 299 #>  [39406,] 366 299 #>  [39407,] 367 299 #>  [39408,] 368 299 #>  [39409,] 369 299 #>  [39410,] 370 299 #>  [39411,] 371 299 #>  [39412,] 372 299 #>  [39413,] 373 299 #>  [39414,] 374 299 #>  [39415,] 375 299 #>  [39416,] 376 299 #>  [39417,] 377 299 #>  [39418,] 378 299 #>  [39419,] 379 299 #>  [39420,] 380 299 #>  [39421,] 381 299 #>  [39422,] 382 299 #>  [39423,] 383 299 #>  [39424,] 384 299 #>  [39425,] 385 299 #>  [39426,] 386 299 #>  [39427,] 387 299 #>  [39428,] 388 299 #>  [39429,] 389 299 #>  [39430,] 390 299 #>  [39431,] 391 299 #>  [39432,] 392 299 #>  [39433,] 393 299 #>  [39434,] 394 299 #>  [39435,] 395 299 #>  [39436,] 396 299 #>  [39437,] 397 299 #>  [39438,] 398 299 #>  [39439,] 399 299 #>  [39440,] 400 299 #>  [39441,] 401 299 #>  [39442,] 402 299 #>  [39443,] 403 299 #>  [39444,] 404 299 #>  [39445,] 405 299 #>  [39446,] 406 299 #>  [39447,] 407 299 #>  [39448,] 408 299 #>  [39449,] 409 299 #>  [39450,] 410 299 #>  [39451,] 411 299 #>  [39452,] 412 299 #>  [39453,] 413 299 #>  [39454,] 414 299 #>  [39455,] 415 299 #>  [39456,] 416 299 #>  [39457,] 417 299 #>  [39458,] 418 299 #>  [39459,] 419 299 #>  [39460,] 420 299 #>  [39461,] 421 299 #>  [39462,] 422 299 #>  [39463,] 423 299 #>  [39464,] 424 299 #>  [39465,] 425 299 #>  [39466,] 426 299 #>  [39467,] 427 299 #>  [39468,] 428 299 #>  [39469,] 429 299 #>  [39470,] 430 299 #>  [39471,] 431 299 #>  [39472,] 432 299 #>  [39473,] 433 299 #>  [39474,] 434 299 #>  [39475,] 435 299 #>  [39476,] 436 299 #>  [39477,] 437 299 #>  [39478,] 438 299 #>  [39479,] 439 299 #>  [39480,] 440 299 #>  [39481,] 441 299 #>  [39482,] 442 299 #>  [39483,] 443 299 #>  [39484,] 444 299 #>  [39485,] 445 299 #>  [39486,] 446 299 #>  [39487,] 447 299 #>  [39488,] 448 299 #>  [39489,] 449 299 #>  [39490,] 450 299 #>  [39491,] 451 299 #>  [39492,] 452 299 #>  [39493,] 453 299 #>  [39494,] 454 299 #>  [39495,] 455 299 #>  [39496,] 456 299 #>  [39497,] 457 299 #>  [39498,] 458 299 #>  [39499,] 459 299 #>  [39500,] 460 299 #>  [39501,] 461 299 #>  [39502,] 462 299 #>  [39503,] 463 299 #>  [39504,] 464 299 #>  [39505,] 465 299 #>  [39506,] 466 299 #>  [39507,] 467 299 #>  [39508,] 468 299 #>  [39509,] 469 299 #>  [39510,] 470 299 #>  [39511,] 471 299 #>  [39512,] 472 299 #>  [39513,] 473 299 #>  [39514,] 474 299 #>  [39515,] 475 299 #>  [39516,] 476 299 #>  [39517,] 477 299 #>  [39518,] 478 299 #>  [39519,] 479 299 #>  [39520,] 480 299 #>  [39521,] 481 299 #>  [39522,] 482 299 #>  [39523,] 483 299 #>  [39524,] 484 299 #>  [39525,] 485 299 #>  [39526,] 486 299 #>  [39527,] 487 299 #>  [39528,] 488 299 #>  [39529,] 489 299 #>  [39530,] 490 299 #>  [39531,] 491 299 #>  [39532,] 492 299 #>  [39533,] 493 299 #>  [39534,] 494 299 #>  [39535,] 495 299 #>  [39536,] 496 299 #>  [39537,] 497 299 #>  [39538,] 498 299 #>  [39539,] 499 299 #>  [39540,] 500 299 #>  [39541,] 501 299 #>  [39542,] 502 299 #>  [39543,] 503 299 #>  [39544,] 504 299 #>  [39545,] 505 299 #>  [39546,] 506 299 #>  [39547,] 507 299 #>  [39548,] 508 299 #>  [39549,] 509 299 #>  [39550,] 510 299 #>  [39551,] 511 299 #>  [39552,] 512 299 #>  [39553,] 513 299 #>  [39554,] 514 299 #>  [39555,] 515 299 #>  [39556,] 516 299 #>  [39557,] 517 299 #>  [39558,] 518 299 #>  [39559,] 519 299 #>  [39560,] 520 299 #>  [39561,] 521 299 #>  [39562,] 522 299 #>  [39563,] 523 299 #>  [39564,] 524 299 #>  [39565,] 525 299 #>  [39566,] 526 299 #>  [39567,] 527 299 #>  [39568,] 528 299 #>  [39569,] 529 299 #>  [39570,] 530 299 #>  [39571,] 531 299 #>  [39572,] 532 299 #>  [39573,] 533 299 #>  [39574,] 534 299 #>  [39575,] 535 299 #>  [39576,] 536 299 #>  [39577,] 537 299 #>  [39578,] 538 299 #>  [39579,] 539 299 #>  [39580,] 540 299 #>  [39581,] 541 299 #>  [39582,] 542 299 #>  [39583,] 543 299 #>  [39584,] 544 299 #>  [39585,] 545 299 #>  [39586,] 546 299 #>  [39587,] 547 299 #>  [39588,] 548 299 #>  [39589,] 549 299 #>  [39590,] 550 299 #>  [39591,] 551 299 #>  [39592,] 552 299 #>  [39593,] 553 299 #>  [39594,] 554 299 #>  [39595,] 555 299 #>  [39596,] 556 299 #>  [39597,] 557 299 #>  [39598,] 558 299 #>  [39599,] 559 299 #>  [39600,] 560 299 #>  [39601,] 561 299 #>  [39602,] 562 299 #>  [39603,] 563 299 #>  [39604,] 564 299 #>  [39605,] 565 299 #>  [39606,] 566 299 #>  [39607,] 567 299 #>  [39608,] 568 299 #>  [39609,] 569 299 #>  [39610,] 570 299 #>  [39611,] 571 299 #>  [39612,] 572 299 #>  [39613,] 573 299 #>  [39614,] 574 299 #>  [39615,] 575 299 #>  [39616,] 576 299 #>  [39617,] 577 299 #>  [39618,] 578 299 #>  [39619,] 579 299 #>  [39620,] 580 299 #>  [39621,] 581 299 #>  [39622,] 582 299 #>  [39623,] 583 299 #>  [39624,] 584 299 #>  [39625,] 585 299 #>  [39626,] 586 299 #>  [39627,] 587 299 #>  [39628,] 588 299 #>  [39629,] 589 299 #>  [39630,] 590 299 #>  [39631,] 591 299 #>  [39632,] 592 299 #>  [39633,] 593 299 #>  [39634,] 594 299 #>  [39635,] 595 299 #>  [39636,] 596 299 #>  [39637,] 597 299 #>  [39638,] 598 299 #>  [39639,] 599 299 #>  [39640,] 600 299 #>  [39641,] 601 299 #>  [39642,] 602 299 #>  [39643,] 603 299 #>  [39644,] 604 299 #>  [39645,] 605 299 #>  [39646,] 606 299 #>  [39647,] 607 299 #>  [39648,] 608 299 #>  [39649,] 609 299 #>  [39650,] 610 299 #>  [39651,] 611 299 #>  [39652,] 612 299 #>  [39653,] 613 299 #>  [39654,] 614 299 #>  [39655,] 615 299 #>  [39656,] 616 299 #>  [39657,] 617 299 #>  [39658,] 618 299 #>  [39659,] 619 299 #>  [39660,] 620 299 #>  [39661,] 621 299 #>  [39662,] 622 299 #>  [39663,] 623 299 #>  [39664,] 624 299 #>  [39665,] 625 299 #>  [39666,] 626 299 #>  [39667,] 627 299 #>  [39668,] 628 299 #>  [39669,] 629 299 #>  [39670,] 630 299 #>  [39671,] 631 299 #>  [39672,] 632 299 #>  [39673,] 633 299 #>  [39674,] 634 299 #>  [39675,] 635 299 #>  [39676,] 636 299 #>  [39677,] 637 299 #>  [39678,] 638 299 #>  [39679,] 639 299 #>  [39680,] 640 299 #>  [39681,]   1 298 #>  [39682,]   2 298 #>  [39683,]   3 298 #>  [39684,]   4 298 #>  [39685,]   5 298 #>  [39686,]   6 298 #>  [39687,]   7 298 #>  [39688,]   8 298 #>  [39689,]   9 298 #>  [39690,]  10 298 #>  [39691,]  11 298 #>  [39692,]  12 298 #>  [39693,]  13 298 #>  [39694,]  14 298 #>  [39695,]  15 298 #>  [39696,]  16 298 #>  [39697,]  17 298 #>  [39698,]  18 298 #>  [39699,]  19 298 #>  [39700,]  20 298 #>  [39701,]  21 298 #>  [39702,]  22 298 #>  [39703,]  23 298 #>  [39704,]  24 298 #>  [39705,]  25 298 #>  [39706,]  26 298 #>  [39707,]  27 298 #>  [39708,]  28 298 #>  [39709,]  29 298 #>  [39710,]  30 298 #>  [39711,]  31 298 #>  [39712,]  32 298 #>  [39713,]  33 298 #>  [39714,]  34 298 #>  [39715,]  35 298 #>  [39716,]  36 298 #>  [39717,]  37 298 #>  [39718,]  38 298 #>  [39719,]  39 298 #>  [39720,]  40 298 #>  [39721,]  41 298 #>  [39722,]  42 298 #>  [39723,]  43 298 #>  [39724,]  44 298 #>  [39725,]  45 298 #>  [39726,]  46 298 #>  [39727,]  47 298 #>  [39728,]  48 298 #>  [39729,]  49 298 #>  [39730,]  50 298 #>  [39731,]  51 298 #>  [39732,]  52 298 #>  [39733,]  53 298 #>  [39734,]  54 298 #>  [39735,]  55 298 #>  [39736,]  56 298 #>  [39737,]  57 298 #>  [39738,]  58 298 #>  [39739,]  59 298 #>  [39740,]  60 298 #>  [39741,]  61 298 #>  [39742,]  62 298 #>  [39743,]  63 298 #>  [39744,]  64 298 #>  [39745,]  65 298 #>  [39746,]  66 298 #>  [39747,]  67 298 #>  [39748,]  68 298 #>  [39749,]  69 298 #>  [39750,]  70 298 #>  [39751,]  71 298 #>  [39752,]  72 298 #>  [39753,]  73 298 #>  [39754,]  74 298 #>  [39755,]  75 298 #>  [39756,]  76 298 #>  [39757,]  77 298 #>  [39758,]  78 298 #>  [39759,]  79 298 #>  [39760,]  80 298 #>  [39761,]  81 298 #>  [39762,]  82 298 #>  [39763,]  83 298 #>  [39764,]  84 298 #>  [39765,]  85 298 #>  [39766,]  86 298 #>  [39767,]  87 298 #>  [39768,]  88 298 #>  [39769,]  89 298 #>  [39770,]  90 298 #>  [39771,]  91 298 #>  [39772,]  92 298 #>  [39773,]  93 298 #>  [39774,]  94 298 #>  [39775,]  95 298 #>  [39776,]  96 298 #>  [39777,]  97 298 #>  [39778,]  98 298 #>  [39779,]  99 298 #>  [39780,] 100 298 #>  [39781,] 101 298 #>  [39782,] 102 298 #>  [39783,] 103 298 #>  [39784,] 104 298 #>  [39785,] 105 298 #>  [39786,] 106 298 #>  [39787,] 107 298 #>  [39788,] 108 298 #>  [39789,] 109 298 #>  [39790,] 110 298 #>  [39791,] 111 298 #>  [39792,] 112 298 #>  [39793,] 113 298 #>  [39794,] 114 298 #>  [39795,] 115 298 #>  [39796,] 116 298 #>  [39797,] 117 298 #>  [39798,] 118 298 #>  [39799,] 119 298 #>  [39800,] 120 298 #>  [39801,] 121 298 #>  [39802,] 122 298 #>  [39803,] 123 298 #>  [39804,] 124 298 #>  [39805,] 125 298 #>  [39806,] 126 298 #>  [39807,] 127 298 #>  [39808,] 128 298 #>  [39809,] 129 298 #>  [39810,] 130 298 #>  [39811,] 131 298 #>  [39812,] 132 298 #>  [39813,] 133 298 #>  [39814,] 134 298 #>  [39815,] 135 298 #>  [39816,] 136 298 #>  [39817,] 137 298 #>  [39818,] 138 298 #>  [39819,] 139 298 #>  [39820,] 140 298 #>  [39821,] 141 298 #>  [39822,] 142 298 #>  [39823,] 143 298 #>  [39824,] 144 298 #>  [39825,] 145 298 #>  [39826,] 146 298 #>  [39827,] 147 298 #>  [39828,] 148 298 #>  [39829,] 149 298 #>  [39830,] 150 298 #>  [39831,] 151 298 #>  [39832,] 152 298 #>  [39833,] 153 298 #>  [39834,] 154 298 #>  [39835,] 155 298 #>  [39836,] 156 298 #>  [39837,] 157 298 #>  [39838,] 158 298 #>  [39839,] 159 298 #>  [39840,] 160 298 #>  [39841,] 161 298 #>  [39842,] 162 298 #>  [39843,] 163 298 #>  [39844,] 164 298 #>  [39845,] 165 298 #>  [39846,] 166 298 #>  [39847,] 167 298 #>  [39848,] 168 298 #>  [39849,] 169 298 #>  [39850,] 170 298 #>  [39851,] 171 298 #>  [39852,] 172 298 #>  [39853,] 173 298 #>  [39854,] 174 298 #>  [39855,] 175 298 #>  [39856,] 176 298 #>  [39857,] 177 298 #>  [39858,] 178 298 #>  [39859,] 179 298 #>  [39860,] 180 298 #>  [39861,] 181 298 #>  [39862,] 182 298 #>  [39863,] 183 298 #>  [39864,] 184 298 #>  [39865,] 185 298 #>  [39866,] 186 298 #>  [39867,] 187 298 #>  [39868,] 188 298 #>  [39869,] 189 298 #>  [39870,] 190 298 #>  [39871,] 191 298 #>  [39872,] 192 298 #>  [39873,] 193 298 #>  [39874,] 194 298 #>  [39875,] 195 298 #>  [39876,] 196 298 #>  [39877,] 197 298 #>  [39878,] 198 298 #>  [39879,] 199 298 #>  [39880,] 200 298 #>  [39881,] 201 298 #>  [39882,] 202 298 #>  [39883,] 203 298 #>  [39884,] 204 298 #>  [39885,] 205 298 #>  [39886,] 206 298 #>  [39887,] 207 298 #>  [39888,] 208 298 #>  [39889,] 209 298 #>  [39890,] 210 298 #>  [39891,] 211 298 #>  [39892,] 212 298 #>  [39893,] 213 298 #>  [39894,] 214 298 #>  [39895,] 215 298 #>  [39896,] 216 298 #>  [39897,] 217 298 #>  [39898,] 218 298 #>  [39899,] 219 298 #>  [39900,] 220 298 #>  [39901,] 221 298 #>  [39902,] 222 298 #>  [39903,] 223 298 #>  [39904,] 224 298 #>  [39905,] 225 298 #>  [39906,] 226 298 #>  [39907,] 227 298 #>  [39908,] 228 298 #>  [39909,] 229 298 #>  [39910,] 230 298 #>  [39911,] 231 298 #>  [39912,] 232 298 #>  [39913,] 233 298 #>  [39914,] 234 298 #>  [39915,] 235 298 #>  [39916,] 236 298 #>  [39917,] 237 298 #>  [39918,] 238 298 #>  [39919,] 239 298 #>  [39920,] 240 298 #>  [39921,] 241 298 #>  [39922,] 242 298 #>  [39923,] 243 298 #>  [39924,] 244 298 #>  [39925,] 245 298 #>  [39926,] 246 298 #>  [39927,] 247 298 #>  [39928,] 248 298 #>  [39929,] 249 298 #>  [39930,] 250 298 #>  [39931,] 251 298 #>  [39932,] 252 298 #>  [39933,] 253 298 #>  [39934,] 254 298 #>  [39935,] 255 298 #>  [39936,] 256 298 #>  [39937,] 257 298 #>  [39938,] 258 298 #>  [39939,] 259 298 #>  [39940,] 260 298 #>  [39941,] 261 298 #>  [39942,] 262 298 #>  [39943,] 263 298 #>  [39944,] 264 298 #>  [39945,] 265 298 #>  [39946,] 266 298 #>  [39947,] 267 298 #>  [39948,] 268 298 #>  [39949,] 269 298 #>  [39950,] 270 298 #>  [39951,] 271 298 #>  [39952,] 272 298 #>  [39953,] 273 298 #>  [39954,] 274 298 #>  [39955,] 275 298 #>  [39956,] 276 298 #>  [39957,] 277 298 #>  [39958,] 278 298 #>  [39959,] 279 298 #>  [39960,] 280 298 #>  [39961,] 281 298 #>  [39962,] 282 298 #>  [39963,] 283 298 #>  [39964,] 284 298 #>  [39965,] 285 298 #>  [39966,] 286 298 #>  [39967,] 287 298 #>  [39968,] 288 298 #>  [39969,] 289 298 #>  [39970,] 290 298 #>  [39971,] 291 298 #>  [39972,] 292 298 #>  [39973,] 293 298 #>  [39974,] 294 298 #>  [39975,] 295 298 #>  [39976,] 296 298 #>  [39977,] 297 298 #>  [39978,] 298 298 #>  [39979,] 299 298 #>  [39980,] 300 298 #>  [39981,] 301 298 #>  [39982,] 302 298 #>  [39983,] 303 298 #>  [39984,] 304 298 #>  [39985,] 305 298 #>  [39986,] 306 298 #>  [39987,] 307 298 #>  [39988,] 308 298 #>  [39989,] 309 298 #>  [39990,] 310 298 #>  [39991,] 311 298 #>  [39992,] 312 298 #>  [39993,] 313 298 #>  [39994,] 314 298 #>  [39995,] 315 298 #>  [39996,] 316 298 #>  [39997,] 317 298 #>  [39998,] 318 298 #>  [39999,] 319 298 #>  [40000,] 320 298 #>  [40001,] 321 298 #>  [40002,] 322 298 #>  [40003,] 323 298 #>  [40004,] 324 298 #>  [40005,] 325 298 #>  [40006,] 326 298 #>  [40007,] 327 298 #>  [40008,] 328 298 #>  [40009,] 329 298 #>  [40010,] 330 298 #>  [40011,] 331 298 #>  [40012,] 332 298 #>  [40013,] 333 298 #>  [40014,] 334 298 #>  [40015,] 335 298 #>  [40016,] 336 298 #>  [40017,] 337 298 #>  [40018,] 338 298 #>  [40019,] 339 298 #>  [40020,] 340 298 #>  [40021,] 341 298 #>  [40022,] 342 298 #>  [40023,] 343 298 #>  [40024,] 344 298 #>  [40025,] 345 298 #>  [40026,] 346 298 #>  [40027,] 347 298 #>  [40028,] 348 298 #>  [40029,] 349 298 #>  [40030,] 350 298 #>  [40031,] 351 298 #>  [40032,] 352 298 #>  [40033,] 353 298 #>  [40034,] 354 298 #>  [40035,] 355 298 #>  [40036,] 356 298 #>  [40037,] 357 298 #>  [40038,] 358 298 #>  [40039,] 359 298 #>  [40040,] 360 298 #>  [40041,] 361 298 #>  [40042,] 362 298 #>  [40043,] 363 298 #>  [40044,] 364 298 #>  [40045,] 365 298 #>  [40046,] 366 298 #>  [40047,] 367 298 #>  [40048,] 368 298 #>  [40049,] 369 298 #>  [40050,] 370 298 #>  [40051,] 371 298 #>  [40052,] 372 298 #>  [40053,] 373 298 #>  [40054,] 374 298 #>  [40055,] 375 298 #>  [40056,] 376 298 #>  [40057,] 377 298 #>  [40058,] 378 298 #>  [40059,] 379 298 #>  [40060,] 380 298 #>  [40061,] 381 298 #>  [40062,] 382 298 #>  [40063,] 383 298 #>  [40064,] 384 298 #>  [40065,] 385 298 #>  [40066,] 386 298 #>  [40067,] 387 298 #>  [40068,] 388 298 #>  [40069,] 389 298 #>  [40070,] 390 298 #>  [40071,] 391 298 #>  [40072,] 392 298 #>  [40073,] 393 298 #>  [40074,] 394 298 #>  [40075,] 395 298 #>  [40076,] 396 298 #>  [40077,] 397 298 #>  [40078,] 398 298 #>  [40079,] 399 298 #>  [40080,] 400 298 #>  [40081,] 401 298 #>  [40082,] 402 298 #>  [40083,] 403 298 #>  [40084,] 404 298 #>  [40085,] 405 298 #>  [40086,] 406 298 #>  [40087,] 407 298 #>  [40088,] 408 298 #>  [40089,] 409 298 #>  [40090,] 410 298 #>  [40091,] 411 298 #>  [40092,] 412 298 #>  [40093,] 413 298 #>  [40094,] 414 298 #>  [40095,] 415 298 #>  [40096,] 416 298 #>  [40097,] 417 298 #>  [40098,] 418 298 #>  [40099,] 419 298 #>  [40100,] 420 298 #>  [40101,] 421 298 #>  [40102,] 422 298 #>  [40103,] 423 298 #>  [40104,] 424 298 #>  [40105,] 425 298 #>  [40106,] 426 298 #>  [40107,] 427 298 #>  [40108,] 428 298 #>  [40109,] 429 298 #>  [40110,] 430 298 #>  [40111,] 431 298 #>  [40112,] 432 298 #>  [40113,] 433 298 #>  [40114,] 434 298 #>  [40115,] 435 298 #>  [40116,] 436 298 #>  [40117,] 437 298 #>  [40118,] 438 298 #>  [40119,] 439 298 #>  [40120,] 440 298 #>  [40121,] 441 298 #>  [40122,] 442 298 #>  [40123,] 443 298 #>  [40124,] 444 298 #>  [40125,] 445 298 #>  [40126,] 446 298 #>  [40127,] 447 298 #>  [40128,] 448 298 #>  [40129,] 449 298 #>  [40130,] 450 298 #>  [40131,] 451 298 #>  [40132,] 452 298 #>  [40133,] 453 298 #>  [40134,] 454 298 #>  [40135,] 455 298 #>  [40136,] 456 298 #>  [40137,] 457 298 #>  [40138,] 458 298 #>  [40139,] 459 298 #>  [40140,] 460 298 #>  [40141,] 461 298 #>  [40142,] 462 298 #>  [40143,] 463 298 #>  [40144,] 464 298 #>  [40145,] 465 298 #>  [40146,] 466 298 #>  [40147,] 467 298 #>  [40148,] 468 298 #>  [40149,] 469 298 #>  [40150,] 470 298 #>  [40151,] 471 298 #>  [40152,] 472 298 #>  [40153,] 473 298 #>  [40154,] 474 298 #>  [40155,] 475 298 #>  [40156,] 476 298 #>  [40157,] 477 298 #>  [40158,] 478 298 #>  [40159,] 479 298 #>  [40160,] 480 298 #>  [40161,] 481 298 #>  [40162,] 482 298 #>  [40163,] 483 298 #>  [40164,] 484 298 #>  [40165,] 485 298 #>  [40166,] 486 298 #>  [40167,] 487 298 #>  [40168,] 488 298 #>  [40169,] 489 298 #>  [40170,] 490 298 #>  [40171,] 491 298 #>  [40172,] 492 298 #>  [40173,] 493 298 #>  [40174,] 494 298 #>  [40175,] 495 298 #>  [40176,] 496 298 #>  [40177,] 497 298 #>  [40178,] 498 298 #>  [40179,] 499 298 #>  [40180,] 500 298 #>  [40181,] 501 298 #>  [40182,] 502 298 #>  [40183,] 503 298 #>  [40184,] 504 298 #>  [40185,] 505 298 #>  [40186,] 506 298 #>  [40187,] 507 298 #>  [40188,] 508 298 #>  [40189,] 509 298 #>  [40190,] 510 298 #>  [40191,] 511 298 #>  [40192,] 512 298 #>  [40193,] 513 298 #>  [40194,] 514 298 #>  [40195,] 515 298 #>  [40196,] 516 298 #>  [40197,] 517 298 #>  [40198,] 518 298 #>  [40199,] 519 298 #>  [40200,] 520 298 #>  [40201,] 521 298 #>  [40202,] 522 298 #>  [40203,] 523 298 #>  [40204,] 524 298 #>  [40205,] 525 298 #>  [40206,] 526 298 #>  [40207,] 527 298 #>  [40208,] 528 298 #>  [40209,] 529 298 #>  [40210,] 530 298 #>  [40211,] 531 298 #>  [40212,] 532 298 #>  [40213,] 533 298 #>  [40214,] 534 298 #>  [40215,] 535 298 #>  [40216,] 536 298 #>  [40217,] 537 298 #>  [40218,] 538 298 #>  [40219,] 539 298 #>  [40220,] 540 298 #>  [40221,] 541 298 #>  [40222,] 542 298 #>  [40223,] 543 298 #>  [40224,] 544 298 #>  [40225,] 545 298 #>  [40226,] 546 298 #>  [40227,] 547 298 #>  [40228,] 548 298 #>  [40229,] 549 298 #>  [40230,] 550 298 #>  [40231,] 551 298 #>  [40232,] 552 298 #>  [40233,] 553 298 #>  [40234,] 554 298 #>  [40235,] 555 298 #>  [40236,] 556 298 #>  [40237,] 557 298 #>  [40238,] 558 298 #>  [40239,] 559 298 #>  [40240,] 560 298 #>  [40241,] 561 298 #>  [40242,] 562 298 #>  [40243,] 563 298 #>  [40244,] 564 298 #>  [40245,] 565 298 #>  [40246,] 566 298 #>  [40247,] 567 298 #>  [40248,] 568 298 #>  [40249,] 569 298 #>  [40250,] 570 298 #>  [40251,] 571 298 #>  [40252,] 572 298 #>  [40253,] 573 298 #>  [40254,] 574 298 #>  [40255,] 575 298 #>  [40256,] 576 298 #>  [40257,] 577 298 #>  [40258,] 578 298 #>  [40259,] 579 298 #>  [40260,] 580 298 #>  [40261,] 581 298 #>  [40262,] 582 298 #>  [40263,] 583 298 #>  [40264,] 584 298 #>  [40265,] 585 298 #>  [40266,] 586 298 #>  [40267,] 587 298 #>  [40268,] 588 298 #>  [40269,] 589 298 #>  [40270,] 590 298 #>  [40271,] 591 298 #>  [40272,] 592 298 #>  [40273,] 593 298 #>  [40274,] 594 298 #>  [40275,] 595 298 #>  [40276,] 596 298 #>  [40277,] 597 298 #>  [40278,] 598 298 #>  [40279,] 599 298 #>  [40280,] 600 298 #>  [40281,] 601 298 #>  [40282,] 602 298 #>  [40283,] 603 298 #>  [40284,] 604 298 #>  [40285,] 605 298 #>  [40286,] 606 298 #>  [40287,] 607 298 #>  [40288,] 608 298 #>  [40289,] 609 298 #>  [40290,] 610 298 #>  [40291,] 611 298 #>  [40292,] 612 298 #>  [40293,] 613 298 #>  [40294,] 614 298 #>  [40295,] 615 298 #>  [40296,] 616 298 #>  [40297,] 617 298 #>  [40298,] 618 298 #>  [40299,] 619 298 #>  [40300,] 620 298 #>  [40301,] 621 298 #>  [40302,] 622 298 #>  [40303,] 623 298 #>  [40304,] 624 298 #>  [40305,] 625 298 #>  [40306,] 626 298 #>  [40307,] 627 298 #>  [40308,] 628 298 #>  [40309,] 629 298 #>  [40310,] 630 298 #>  [40311,] 631 298 #>  [40312,] 632 298 #>  [40313,] 633 298 #>  [40314,] 634 298 #>  [40315,] 635 298 #>  [40316,] 636 298 #>  [40317,] 637 298 #>  [40318,] 638 298 #>  [40319,] 639 298 #>  [40320,] 640 298 #>  [40321,]   1 297 #>  [40322,]   2 297 #>  [40323,]   3 297 #>  [40324,]   4 297 #>  [40325,]   5 297 #>  [40326,]   6 297 #>  [40327,]   7 297 #>  [40328,]   8 297 #>  [40329,]   9 297 #>  [40330,]  10 297 #>  [40331,]  11 297 #>  [40332,]  12 297 #>  [40333,]  13 297 #>  [40334,]  14 297 #>  [40335,]  15 297 #>  [40336,]  16 297 #>  [40337,]  17 297 #>  [40338,]  18 297 #>  [40339,]  19 297 #>  [40340,]  20 297 #>  [40341,]  21 297 #>  [40342,]  22 297 #>  [40343,]  23 297 #>  [40344,]  24 297 #>  [40345,]  25 297 #>  [40346,]  26 297 #>  [40347,]  27 297 #>  [40348,]  28 297 #>  [40349,]  29 297 #>  [40350,]  30 297 #>  [40351,]  31 297 #>  [40352,]  32 297 #>  [40353,]  33 297 #>  [40354,]  34 297 #>  [40355,]  35 297 #>  [40356,]  36 297 #>  [40357,]  37 297 #>  [40358,]  38 297 #>  [40359,]  39 297 #>  [40360,]  40 297 #>  [40361,]  41 297 #>  [40362,]  42 297 #>  [40363,]  43 297 #>  [40364,]  44 297 #>  [40365,]  45 297 #>  [40366,]  46 297 #>  [40367,]  47 297 #>  [40368,]  48 297 #>  [40369,]  49 297 #>  [40370,]  50 297 #>  [40371,]  51 297 #>  [40372,]  52 297 #>  [40373,]  53 297 #>  [40374,]  54 297 #>  [40375,]  55 297 #>  [40376,]  56 297 #>  [40377,]  57 297 #>  [40378,]  58 297 #>  [40379,]  59 297 #>  [40380,]  60 297 #>  [40381,]  61 297 #>  [40382,]  62 297 #>  [40383,]  63 297 #>  [40384,]  64 297 #>  [40385,]  65 297 #>  [40386,]  66 297 #>  [40387,]  67 297 #>  [40388,]  68 297 #>  [40389,]  69 297 #>  [40390,]  70 297 #>  [40391,]  71 297 #>  [40392,]  72 297 #>  [40393,]  73 297 #>  [40394,]  74 297 #>  [40395,]  75 297 #>  [40396,]  76 297 #>  [40397,]  77 297 #>  [40398,]  78 297 #>  [40399,]  79 297 #>  [40400,]  80 297 #>  [40401,]  81 297 #>  [40402,]  82 297 #>  [40403,]  83 297 #>  [40404,]  84 297 #>  [40405,]  85 297 #>  [40406,]  86 297 #>  [40407,]  87 297 #>  [40408,]  88 297 #>  [40409,]  89 297 #>  [40410,]  90 297 #>  [40411,]  91 297 #>  [40412,]  92 297 #>  [40413,]  93 297 #>  [40414,]  94 297 #>  [40415,]  95 297 #>  [40416,]  96 297 #>  [40417,]  97 297 #>  [40418,]  98 297 #>  [40419,]  99 297 #>  [40420,] 100 297 #>  [40421,] 101 297 #>  [40422,] 102 297 #>  [40423,] 103 297 #>  [40424,] 104 297 #>  [40425,] 105 297 #>  [40426,] 106 297 #>  [40427,] 107 297 #>  [40428,] 108 297 #>  [40429,] 109 297 #>  [40430,] 110 297 #>  [40431,] 111 297 #>  [40432,] 112 297 #>  [40433,] 113 297 #>  [40434,] 114 297 #>  [40435,] 115 297 #>  [40436,] 116 297 #>  [40437,] 117 297 #>  [40438,] 118 297 #>  [40439,] 119 297 #>  [40440,] 120 297 #>  [40441,] 121 297 #>  [40442,] 122 297 #>  [40443,] 123 297 #>  [40444,] 124 297 #>  [40445,] 125 297 #>  [40446,] 126 297 #>  [40447,] 127 297 #>  [40448,] 128 297 #>  [40449,] 129 297 #>  [40450,] 130 297 #>  [40451,] 131 297 #>  [40452,] 132 297 #>  [40453,] 133 297 #>  [40454,] 134 297 #>  [40455,] 135 297 #>  [40456,] 136 297 #>  [40457,] 137 297 #>  [40458,] 138 297 #>  [40459,] 139 297 #>  [40460,] 140 297 #>  [40461,] 141 297 #>  [40462,] 142 297 #>  [40463,] 143 297 #>  [40464,] 144 297 #>  [40465,] 145 297 #>  [40466,] 146 297 #>  [40467,] 147 297 #>  [40468,] 148 297 #>  [40469,] 149 297 #>  [40470,] 150 297 #>  [40471,] 151 297 #>  [40472,] 152 297 #>  [40473,] 153 297 #>  [40474,] 154 297 #>  [40475,] 155 297 #>  [40476,] 156 297 #>  [40477,] 157 297 #>  [40478,] 158 297 #>  [40479,] 159 297 #>  [40480,] 160 297 #>  [40481,] 161 297 #>  [40482,] 162 297 #>  [40483,] 163 297 #>  [40484,] 164 297 #>  [40485,] 165 297 #>  [40486,] 166 297 #>  [40487,] 167 297 #>  [40488,] 168 297 #>  [40489,] 169 297 #>  [40490,] 170 297 #>  [40491,] 171 297 #>  [40492,] 172 297 #>  [40493,] 173 297 #>  [40494,] 174 297 #>  [40495,] 175 297 #>  [40496,] 176 297 #>  [40497,] 177 297 #>  [40498,] 178 297 #>  [40499,] 179 297 #>  [40500,] 180 297 #>  [40501,] 181 297 #>  [40502,] 182 297 #>  [40503,] 183 297 #>  [40504,] 184 297 #>  [40505,] 185 297 #>  [40506,] 186 297 #>  [40507,] 187 297 #>  [40508,] 188 297 #>  [40509,] 189 297 #>  [40510,] 190 297 #>  [40511,] 191 297 #>  [40512,] 192 297 #>  [40513,] 193 297 #>  [40514,] 194 297 #>  [40515,] 195 297 #>  [40516,] 196 297 #>  [40517,] 197 297 #>  [40518,] 198 297 #>  [40519,] 199 297 #>  [40520,] 200 297 #>  [40521,] 201 297 #>  [40522,] 202 297 #>  [40523,] 203 297 #>  [40524,] 204 297 #>  [40525,] 205 297 #>  [40526,] 206 297 #>  [40527,] 207 297 #>  [40528,] 208 297 #>  [40529,] 209 297 #>  [40530,] 210 297 #>  [40531,] 211 297 #>  [40532,] 212 297 #>  [40533,] 213 297 #>  [40534,] 214 297 #>  [40535,] 215 297 #>  [40536,] 216 297 #>  [40537,] 217 297 #>  [40538,] 218 297 #>  [40539,] 219 297 #>  [40540,] 220 297 #>  [40541,] 221 297 #>  [40542,] 222 297 #>  [40543,] 223 297 #>  [40544,] 224 297 #>  [40545,] 225 297 #>  [40546,] 226 297 #>  [40547,] 227 297 #>  [40548,] 228 297 #>  [40549,] 229 297 #>  [40550,] 230 297 #>  [40551,] 231 297 #>  [40552,] 232 297 #>  [40553,] 233 297 #>  [40554,] 234 297 #>  [40555,] 235 297 #>  [40556,] 236 297 #>  [40557,] 237 297 #>  [40558,] 238 297 #>  [40559,] 239 297 #>  [40560,] 240 297 #>  [40561,] 241 297 #>  [40562,] 242 297 #>  [40563,] 243 297 #>  [40564,] 244 297 #>  [40565,] 245 297 #>  [40566,] 246 297 #>  [40567,] 247 297 #>  [40568,] 248 297 #>  [40569,] 249 297 #>  [40570,] 250 297 #>  [40571,] 251 297 #>  [40572,] 252 297 #>  [40573,] 253 297 #>  [40574,] 254 297 #>  [40575,] 255 297 #>  [40576,] 256 297 #>  [40577,] 257 297 #>  [40578,] 258 297 #>  [40579,] 259 297 #>  [40580,] 260 297 #>  [40581,] 261 297 #>  [40582,] 262 297 #>  [40583,] 263 297 #>  [40584,] 264 297 #>  [40585,] 265 297 #>  [40586,] 266 297 #>  [40587,] 267 297 #>  [40588,] 268 297 #>  [40589,] 269 297 #>  [40590,] 270 297 #>  [40591,] 271 297 #>  [40592,] 272 297 #>  [40593,] 273 297 #>  [40594,] 274 297 #>  [40595,] 275 297 #>  [40596,] 276 297 #>  [40597,] 277 297 #>  [40598,] 278 297 #>  [40599,] 279 297 #>  [40600,] 280 297 #>  [40601,] 281 297 #>  [40602,] 282 297 #>  [40603,] 283 297 #>  [40604,] 284 297 #>  [40605,] 285 297 #>  [40606,] 286 297 #>  [40607,] 287 297 #>  [40608,] 288 297 #>  [40609,] 289 297 #>  [40610,] 290 297 #>  [40611,] 291 297 #>  [40612,] 292 297 #>  [40613,] 293 297 #>  [40614,] 294 297 #>  [40615,] 295 297 #>  [40616,] 296 297 #>  [40617,] 297 297 #>  [40618,] 298 297 #>  [40619,] 299 297 #>  [40620,] 300 297 #>  [40621,] 301 297 #>  [40622,] 302 297 #>  [40623,] 303 297 #>  [40624,] 304 297 #>  [40625,] 305 297 #>  [40626,] 306 297 #>  [40627,] 307 297 #>  [40628,] 308 297 #>  [40629,] 309 297 #>  [40630,] 310 297 #>  [40631,] 311 297 #>  [40632,] 312 297 #>  [40633,] 313 297 #>  [40634,] 314 297 #>  [40635,] 315 297 #>  [40636,] 316 297 #>  [40637,] 317 297 #>  [40638,] 318 297 #>  [40639,] 319 297 #>  [40640,] 320 297 #>  [40641,] 321 297 #>  [40642,] 322 297 #>  [40643,] 323 297 #>  [40644,] 324 297 #>  [40645,] 325 297 #>  [40646,] 326 297 #>  [40647,] 327 297 #>  [40648,] 328 297 #>  [40649,] 329 297 #>  [40650,] 330 297 #>  [40651,] 331 297 #>  [40652,] 332 297 #>  [40653,] 333 297 #>  [40654,] 334 297 #>  [40655,] 335 297 #>  [40656,] 336 297 #>  [40657,] 337 297 #>  [40658,] 338 297 #>  [40659,] 339 297 #>  [40660,] 340 297 #>  [40661,] 341 297 #>  [40662,] 342 297 #>  [40663,] 343 297 #>  [40664,] 344 297 #>  [40665,] 345 297 #>  [40666,] 346 297 #>  [40667,] 347 297 #>  [40668,] 348 297 #>  [40669,] 349 297 #>  [40670,] 350 297 #>  [40671,] 351 297 #>  [40672,] 352 297 #>  [40673,] 353 297 #>  [40674,] 354 297 #>  [40675,] 355 297 #>  [40676,] 356 297 #>  [40677,] 357 297 #>  [40678,] 358 297 #>  [40679,] 359 297 #>  [40680,] 360 297 #>  [40681,] 361 297 #>  [40682,] 362 297 #>  [40683,] 363 297 #>  [40684,] 364 297 #>  [40685,] 365 297 #>  [40686,] 366 297 #>  [40687,] 367 297 #>  [40688,] 368 297 #>  [40689,] 369 297 #>  [40690,] 370 297 #>  [40691,] 371 297 #>  [40692,] 372 297 #>  [40693,] 373 297 #>  [40694,] 374 297 #>  [40695,] 375 297 #>  [40696,] 376 297 #>  [40697,] 377 297 #>  [40698,] 378 297 #>  [40699,] 379 297 #>  [40700,] 380 297 #>  [40701,] 381 297 #>  [40702,] 382 297 #>  [40703,] 383 297 #>  [40704,] 384 297 #>  [40705,] 385 297 #>  [40706,] 386 297 #>  [40707,] 387 297 #>  [40708,] 388 297 #>  [40709,] 389 297 #>  [40710,] 390 297 #>  [40711,] 391 297 #>  [40712,] 392 297 #>  [40713,] 393 297 #>  [40714,] 394 297 #>  [40715,] 395 297 #>  [40716,] 396 297 #>  [40717,] 397 297 #>  [40718,] 398 297 #>  [40719,] 399 297 #>  [40720,] 400 297 #>  [40721,] 401 297 #>  [40722,] 402 297 #>  [40723,] 403 297 #>  [40724,] 404 297 #>  [40725,] 405 297 #>  [40726,] 406 297 #>  [40727,] 407 297 #>  [40728,] 408 297 #>  [40729,] 409 297 #>  [40730,] 410 297 #>  [40731,] 411 297 #>  [40732,] 412 297 #>  [40733,] 413 297 #>  [40734,] 414 297 #>  [40735,] 415 297 #>  [40736,] 416 297 #>  [40737,] 417 297 #>  [40738,] 418 297 #>  [40739,] 419 297 #>  [40740,] 420 297 #>  [40741,] 421 297 #>  [40742,] 422 297 #>  [40743,] 423 297 #>  [40744,] 424 297 #>  [40745,] 425 297 #>  [40746,] 426 297 #>  [40747,] 427 297 #>  [40748,] 428 297 #>  [40749,] 429 297 #>  [40750,] 430 297 #>  [40751,] 431 297 #>  [40752,] 432 297 #>  [40753,] 433 297 #>  [40754,] 434 297 #>  [40755,] 435 297 #>  [40756,] 436 297 #>  [40757,] 437 297 #>  [40758,] 438 297 #>  [40759,] 439 297 #>  [40760,] 440 297 #>  [40761,] 441 297 #>  [40762,] 442 297 #>  [40763,] 443 297 #>  [40764,] 444 297 #>  [40765,] 445 297 #>  [40766,] 446 297 #>  [40767,] 447 297 #>  [40768,] 448 297 #>  [40769,] 449 297 #>  [40770,] 450 297 #>  [40771,] 451 297 #>  [40772,] 452 297 #>  [40773,] 453 297 #>  [40774,] 454 297 #>  [40775,] 455 297 #>  [40776,] 456 297 #>  [40777,] 457 297 #>  [40778,] 458 297 #>  [40779,] 459 297 #>  [40780,] 460 297 #>  [40781,] 461 297 #>  [40782,] 462 297 #>  [40783,] 463 297 #>  [40784,] 464 297 #>  [40785,] 465 297 #>  [40786,] 466 297 #>  [40787,] 467 297 #>  [40788,] 468 297 #>  [40789,] 469 297 #>  [40790,] 470 297 #>  [40791,] 471 297 #>  [40792,] 472 297 #>  [40793,] 473 297 #>  [40794,] 474 297 #>  [40795,] 475 297 #>  [40796,] 476 297 #>  [40797,] 477 297 #>  [40798,] 478 297 #>  [40799,] 479 297 #>  [40800,] 480 297 #>  [40801,] 481 297 #>  [40802,] 482 297 #>  [40803,] 483 297 #>  [40804,] 484 297 #>  [40805,] 485 297 #>  [40806,] 486 297 #>  [40807,] 487 297 #>  [40808,] 488 297 #>  [40809,] 489 297 #>  [40810,] 490 297 #>  [40811,] 491 297 #>  [40812,] 492 297 #>  [40813,] 493 297 #>  [40814,] 494 297 #>  [40815,] 495 297 #>  [40816,] 496 297 #>  [40817,] 497 297 #>  [40818,] 498 297 #>  [40819,] 499 297 #>  [40820,] 500 297 #>  [40821,] 501 297 #>  [40822,] 502 297 #>  [40823,] 503 297 #>  [40824,] 504 297 #>  [40825,] 505 297 #>  [40826,] 506 297 #>  [40827,] 507 297 #>  [40828,] 508 297 #>  [40829,] 509 297 #>  [40830,] 510 297 #>  [40831,] 511 297 #>  [40832,] 512 297 #>  [40833,] 513 297 #>  [40834,] 514 297 #>  [40835,] 515 297 #>  [40836,] 516 297 #>  [40837,] 517 297 #>  [40838,] 518 297 #>  [40839,] 519 297 #>  [40840,] 520 297 #>  [40841,] 521 297 #>  [40842,] 522 297 #>  [40843,] 523 297 #>  [40844,] 524 297 #>  [40845,] 525 297 #>  [40846,] 526 297 #>  [40847,] 527 297 #>  [40848,] 528 297 #>  [40849,] 529 297 #>  [40850,] 530 297 #>  [40851,] 531 297 #>  [40852,] 532 297 #>  [40853,] 533 297 #>  [40854,] 534 297 #>  [40855,] 535 297 #>  [40856,] 536 297 #>  [40857,] 537 297 #>  [40858,] 538 297 #>  [40859,] 539 297 #>  [40860,] 540 297 #>  [40861,] 541 297 #>  [40862,] 542 297 #>  [40863,] 543 297 #>  [40864,] 544 297 #>  [40865,] 545 297 #>  [40866,] 546 297 #>  [40867,] 547 297 #>  [40868,] 548 297 #>  [40869,] 549 297 #>  [40870,] 550 297 #>  [40871,] 551 297 #>  [40872,] 552 297 #>  [40873,] 553 297 #>  [40874,] 554 297 #>  [40875,] 555 297 #>  [40876,] 556 297 #>  [40877,] 557 297 #>  [40878,] 558 297 #>  [40879,] 559 297 #>  [40880,] 560 297 #>  [40881,] 561 297 #>  [40882,] 562 297 #>  [40883,] 563 297 #>  [40884,] 564 297 #>  [40885,] 565 297 #>  [40886,] 566 297 #>  [40887,] 567 297 #>  [40888,] 568 297 #>  [40889,] 569 297 #>  [40890,] 570 297 #>  [40891,] 571 297 #>  [40892,] 572 297 #>  [40893,] 573 297 #>  [40894,] 574 297 #>  [40895,] 575 297 #>  [40896,] 576 297 #>  [40897,] 577 297 #>  [40898,] 578 297 #>  [40899,] 579 297 #>  [40900,] 580 297 #>  [40901,] 581 297 #>  [40902,] 582 297 #>  [40903,] 583 297 #>  [40904,] 584 297 #>  [40905,] 585 297 #>  [40906,] 586 297 #>  [40907,] 587 297 #>  [40908,] 588 297 #>  [40909,] 589 297 #>  [40910,] 590 297 #>  [40911,] 591 297 #>  [40912,] 592 297 #>  [40913,] 593 297 #>  [40914,] 594 297 #>  [40915,] 595 297 #>  [40916,] 596 297 #>  [40917,] 597 297 #>  [40918,] 598 297 #>  [40919,] 599 297 #>  [40920,] 600 297 #>  [40921,] 601 297 #>  [40922,] 602 297 #>  [40923,] 603 297 #>  [40924,] 604 297 #>  [40925,] 605 297 #>  [40926,] 606 297 #>  [40927,] 607 297 #>  [40928,] 608 297 #>  [40929,] 609 297 #>  [40930,] 610 297 #>  [40931,] 611 297 #>  [40932,] 612 297 #>  [40933,] 613 297 #>  [40934,] 614 297 #>  [40935,] 615 297 #>  [40936,] 616 297 #>  [40937,] 617 297 #>  [40938,] 618 297 #>  [40939,] 619 297 #>  [40940,] 620 297 #>  [40941,] 621 297 #>  [40942,] 622 297 #>  [40943,] 623 297 #>  [40944,] 624 297 #>  [40945,] 625 297 #>  [40946,] 626 297 #>  [40947,] 627 297 #>  [40948,] 628 297 #>  [40949,] 629 297 #>  [40950,] 630 297 #>  [40951,] 631 297 #>  [40952,] 632 297 #>  [40953,] 633 297 #>  [40954,] 634 297 #>  [40955,] 635 297 #>  [40956,] 636 297 #>  [40957,] 637 297 #>  [40958,] 638 297 #>  [40959,] 639 297 #>  [40960,] 640 297 #>  [40961,]   1 296 #>  [40962,]   2 296 #>  [40963,]   3 296 #>  [40964,]   4 296 #>  [40965,]   5 296 #>  [40966,]   6 296 #>  [40967,]   7 296 #>  [40968,]   8 296 #>  [40969,]   9 296 #>  [40970,]  10 296 #>  [40971,]  11 296 #>  [40972,]  12 296 #>  [40973,]  13 296 #>  [40974,]  14 296 #>  [40975,]  15 296 #>  [40976,]  16 296 #>  [40977,]  17 296 #>  [40978,]  18 296 #>  [40979,]  19 296 #>  [40980,]  20 296 #>  [40981,]  21 296 #>  [40982,]  22 296 #>  [40983,]  23 296 #>  [40984,]  24 296 #>  [40985,]  25 296 #>  [40986,]  26 296 #>  [40987,]  27 296 #>  [40988,]  28 296 #>  [40989,]  29 296 #>  [40990,]  30 296 #>  [40991,]  31 296 #>  [40992,]  32 296 #>  [40993,]  33 296 #>  [40994,]  34 296 #>  [40995,]  35 296 #>  [40996,]  36 296 #>  [40997,]  37 296 #>  [40998,]  38 296 #>  [40999,]  39 296 #>  [41000,]  40 296 #>  [41001,]  41 296 #>  [41002,]  42 296 #>  [41003,]  43 296 #>  [41004,]  44 296 #>  [41005,]  45 296 #>  [41006,]  46 296 #>  [41007,]  47 296 #>  [41008,]  48 296 #>  [41009,]  49 296 #>  [41010,]  50 296 #>  [41011,]  51 296 #>  [41012,]  52 296 #>  [41013,]  53 296 #>  [41014,]  54 296 #>  [41015,]  55 296 #>  [41016,]  56 296 #>  [41017,]  57 296 #>  [41018,]  58 296 #>  [41019,]  59 296 #>  [41020,]  60 296 #>  [41021,]  61 296 #>  [41022,]  62 296 #>  [41023,]  63 296 #>  [41024,]  64 296 #>  [41025,]  65 296 #>  [41026,]  66 296 #>  [41027,]  67 296 #>  [41028,]  68 296 #>  [41029,]  69 296 #>  [41030,]  70 296 #>  [41031,]  71 296 #>  [41032,]  72 296 #>  [41033,]  73 296 #>  [41034,]  74 296 #>  [41035,]  75 296 #>  [41036,]  76 296 #>  [41037,]  77 296 #>  [41038,]  78 296 #>  [41039,]  79 296 #>  [41040,]  80 296 #>  [41041,]  81 296 #>  [41042,]  82 296 #>  [41043,]  83 296 #>  [41044,]  84 296 #>  [41045,]  85 296 #>  [41046,]  86 296 #>  [41047,]  87 296 #>  [41048,]  88 296 #>  [41049,]  89 296 #>  [41050,]  90 296 #>  [41051,]  91 296 #>  [41052,]  92 296 #>  [41053,]  93 296 #>  [41054,]  94 296 #>  [41055,]  95 296 #>  [41056,]  96 296 #>  [41057,]  97 296 #>  [41058,]  98 296 #>  [41059,]  99 296 #>  [41060,] 100 296 #>  [41061,] 101 296 #>  [41062,] 102 296 #>  [41063,] 103 296 #>  [41064,] 104 296 #>  [41065,] 105 296 #>  [41066,] 106 296 #>  [41067,] 107 296 #>  [41068,] 108 296 #>  [41069,] 109 296 #>  [41070,] 110 296 #>  [41071,] 111 296 #>  [41072,] 112 296 #>  [41073,] 113 296 #>  [41074,] 114 296 #>  [41075,] 115 296 #>  [41076,] 116 296 #>  [41077,] 117 296 #>  [41078,] 118 296 #>  [41079,] 119 296 #>  [41080,] 120 296 #>  [41081,] 121 296 #>  [41082,] 122 296 #>  [41083,] 123 296 #>  [41084,] 124 296 #>  [41085,] 125 296 #>  [41086,] 126 296 #>  [41087,] 127 296 #>  [41088,] 128 296 #>  [41089,] 129 296 #>  [41090,] 130 296 #>  [41091,] 131 296 #>  [41092,] 132 296 #>  [41093,] 133 296 #>  [41094,] 134 296 #>  [41095,] 135 296 #>  [41096,] 136 296 #>  [41097,] 137 296 #>  [41098,] 138 296 #>  [41099,] 139 296 #>  [41100,] 140 296 #>  [41101,] 141 296 #>  [41102,] 142 296 #>  [41103,] 143 296 #>  [41104,] 144 296 #>  [41105,] 145 296 #>  [41106,] 146 296 #>  [41107,] 147 296 #>  [41108,] 148 296 #>  [41109,] 149 296 #>  [41110,] 150 296 #>  [41111,] 151 296 #>  [41112,] 152 296 #>  [41113,] 153 296 #>  [41114,] 154 296 #>  [41115,] 155 296 #>  [41116,] 156 296 #>  [41117,] 157 296 #>  [41118,] 158 296 #>  [41119,] 159 296 #>  [41120,] 160 296 #>  [41121,] 161 296 #>  [41122,] 162 296 #>  [41123,] 163 296 #>  [41124,] 164 296 #>  [41125,] 165 296 #>  [41126,] 166 296 #>  [41127,] 167 296 #>  [41128,] 168 296 #>  [41129,] 169 296 #>  [41130,] 170 296 #>  [41131,] 171 296 #>  [41132,] 172 296 #>  [41133,] 173 296 #>  [41134,] 174 296 #>  [41135,] 175 296 #>  [41136,] 176 296 #>  [41137,] 177 296 #>  [41138,] 178 296 #>  [41139,] 179 296 #>  [41140,] 180 296 #>  [41141,] 181 296 #>  [41142,] 182 296 #>  [41143,] 183 296 #>  [41144,] 184 296 #>  [41145,] 185 296 #>  [41146,] 186 296 #>  [41147,] 187 296 #>  [41148,] 188 296 #>  [41149,] 189 296 #>  [41150,] 190 296 #>  [41151,] 191 296 #>  [41152,] 192 296 #>  [41153,] 193 296 #>  [41154,] 194 296 #>  [41155,] 195 296 #>  [41156,] 196 296 #>  [41157,] 197 296 #>  [41158,] 198 296 #>  [41159,] 199 296 #>  [41160,] 200 296 #>  [41161,] 201 296 #>  [41162,] 202 296 #>  [41163,] 203 296 #>  [41164,] 204 296 #>  [41165,] 205 296 #>  [41166,] 206 296 #>  [41167,] 207 296 #>  [41168,] 208 296 #>  [41169,] 209 296 #>  [41170,] 210 296 #>  [41171,] 211 296 #>  [41172,] 212 296 #>  [41173,] 213 296 #>  [41174,] 214 296 #>  [41175,] 215 296 #>  [41176,] 216 296 #>  [41177,] 217 296 #>  [41178,] 218 296 #>  [41179,] 219 296 #>  [41180,] 220 296 #>  [41181,] 221 296 #>  [41182,] 222 296 #>  [41183,] 223 296 #>  [41184,] 224 296 #>  [41185,] 225 296 #>  [41186,] 226 296 #>  [41187,] 227 296 #>  [41188,] 228 296 #>  [41189,] 229 296 #>  [41190,] 230 296 #>  [41191,] 231 296 #>  [41192,] 232 296 #>  [41193,] 233 296 #>  [41194,] 234 296 #>  [41195,] 235 296 #>  [41196,] 236 296 #>  [41197,] 237 296 #>  [41198,] 238 296 #>  [41199,] 239 296 #>  [41200,] 240 296 #>  [41201,] 241 296 #>  [41202,] 242 296 #>  [41203,] 243 296 #>  [41204,] 244 296 #>  [41205,] 245 296 #>  [41206,] 246 296 #>  [41207,] 247 296 #>  [41208,] 248 296 #>  [41209,] 249 296 #>  [41210,] 250 296 #>  [41211,] 251 296 #>  [41212,] 252 296 #>  [41213,] 253 296 #>  [41214,] 254 296 #>  [41215,] 255 296 #>  [41216,] 256 296 #>  [41217,] 257 296 #>  [41218,] 258 296 #>  [41219,] 259 296 #>  [41220,] 260 296 #>  [41221,] 261 296 #>  [41222,] 262 296 #>  [41223,] 263 296 #>  [41224,] 264 296 #>  [41225,] 265 296 #>  [41226,] 266 296 #>  [41227,] 267 296 #>  [41228,] 268 296 #>  [41229,] 269 296 #>  [41230,] 270 296 #>  [41231,] 271 296 #>  [41232,] 272 296 #>  [41233,] 273 296 #>  [41234,] 274 296 #>  [41235,] 275 296 #>  [41236,] 276 296 #>  [41237,] 277 296 #>  [41238,] 278 296 #>  [41239,] 279 296 #>  [41240,] 280 296 #>  [41241,] 281 296 #>  [41242,] 282 296 #>  [41243,] 283 296 #>  [41244,] 284 296 #>  [41245,] 285 296 #>  [41246,] 286 296 #>  [41247,] 287 296 #>  [41248,] 288 296 #>  [41249,] 289 296 #>  [41250,] 290 296 #>  [41251,] 291 296 #>  [41252,] 292 296 #>  [41253,] 293 296 #>  [41254,] 294 296 #>  [41255,] 295 296 #>  [41256,] 296 296 #>  [41257,] 297 296 #>  [41258,] 298 296 #>  [41259,] 299 296 #>  [41260,] 300 296 #>  [41261,] 301 296 #>  [41262,] 302 296 #>  [41263,] 303 296 #>  [41264,] 304 296 #>  [41265,] 305 296 #>  [41266,] 306 296 #>  [41267,] 307 296 #>  [41268,] 308 296 #>  [41269,] 309 296 #>  [41270,] 310 296 #>  [41271,] 311 296 #>  [41272,] 312 296 #>  [41273,] 313 296 #>  [41274,] 314 296 #>  [41275,] 315 296 #>  [41276,] 316 296 #>  [41277,] 317 296 #>  [41278,] 318 296 #>  [41279,] 319 296 #>  [41280,] 320 296 #>  [41281,] 321 296 #>  [41282,] 322 296 #>  [41283,] 323 296 #>  [41284,] 324 296 #>  [41285,] 325 296 #>  [41286,] 326 296 #>  [41287,] 327 296 #>  [41288,] 328 296 #>  [41289,] 329 296 #>  [41290,] 330 296 #>  [41291,] 331 296 #>  [41292,] 332 296 #>  [41293,] 333 296 #>  [41294,] 334 296 #>  [41295,] 335 296 #>  [41296,] 336 296 #>  [41297,] 337 296 #>  [41298,] 338 296 #>  [41299,] 339 296 #>  [41300,] 340 296 #>  [41301,] 341 296 #>  [41302,] 342 296 #>  [41303,] 343 296 #>  [41304,] 344 296 #>  [41305,] 345 296 #>  [41306,] 346 296 #>  [41307,] 347 296 #>  [41308,] 348 296 #>  [41309,] 349 296 #>  [41310,] 350 296 #>  [41311,] 351 296 #>  [41312,] 352 296 #>  [41313,] 353 296 #>  [41314,] 354 296 #>  [41315,] 355 296 #>  [41316,] 356 296 #>  [41317,] 357 296 #>  [41318,] 358 296 #>  [41319,] 359 296 #>  [41320,] 360 296 #>  [41321,] 361 296 #>  [41322,] 362 296 #>  [41323,] 363 296 #>  [41324,] 364 296 #>  [41325,] 365 296 #>  [41326,] 366 296 #>  [41327,] 367 296 #>  [41328,] 368 296 #>  [41329,] 369 296 #>  [41330,] 370 296 #>  [41331,] 371 296 #>  [41332,] 372 296 #>  [41333,] 373 296 #>  [41334,] 374 296 #>  [41335,] 375 296 #>  [41336,] 376 296 #>  [41337,] 377 296 #>  [41338,] 378 296 #>  [41339,] 379 296 #>  [41340,] 380 296 #>  [41341,] 381 296 #>  [41342,] 382 296 #>  [41343,] 383 296 #>  [41344,] 384 296 #>  [41345,] 385 296 #>  [41346,] 386 296 #>  [41347,] 387 296 #>  [41348,] 388 296 #>  [41349,] 389 296 #>  [41350,] 390 296 #>  [41351,] 391 296 #>  [41352,] 392 296 #>  [41353,] 393 296 #>  [41354,] 394 296 #>  [41355,] 395 296 #>  [41356,] 396 296 #>  [41357,] 397 296 #>  [41358,] 398 296 #>  [41359,] 399 296 #>  [41360,] 400 296 #>  [41361,] 401 296 #>  [41362,] 402 296 #>  [41363,] 403 296 #>  [41364,] 404 296 #>  [41365,] 405 296 #>  [41366,] 406 296 #>  [41367,] 407 296 #>  [41368,] 408 296 #>  [41369,] 409 296 #>  [41370,] 410 296 #>  [41371,] 411 296 #>  [41372,] 412 296 #>  [41373,] 413 296 #>  [41374,] 414 296 #>  [41375,] 415 296 #>  [41376,] 416 296 #>  [41377,] 417 296 #>  [41378,] 418 296 #>  [41379,] 419 296 #>  [41380,] 420 296 #>  [41381,] 421 296 #>  [41382,] 422 296 #>  [41383,] 423 296 #>  [41384,] 424 296 #>  [41385,] 425 296 #>  [41386,] 426 296 #>  [41387,] 427 296 #>  [41388,] 428 296 #>  [41389,] 429 296 #>  [41390,] 430 296 #>  [41391,] 431 296 #>  [41392,] 432 296 #>  [41393,] 433 296 #>  [41394,] 434 296 #>  [41395,] 435 296 #>  [41396,] 436 296 #>  [41397,] 437 296 #>  [41398,] 438 296 #>  [41399,] 439 296 #>  [41400,] 440 296 #>  [41401,] 441 296 #>  [41402,] 442 296 #>  [41403,] 443 296 #>  [41404,] 444 296 #>  [41405,] 445 296 #>  [41406,] 446 296 #>  [41407,] 447 296 #>  [41408,] 448 296 #>  [41409,] 449 296 #>  [41410,] 450 296 #>  [41411,] 451 296 #>  [41412,] 452 296 #>  [41413,] 453 296 #>  [41414,] 454 296 #>  [41415,] 455 296 #>  [41416,] 456 296 #>  [41417,] 457 296 #>  [41418,] 458 296 #>  [41419,] 459 296 #>  [41420,] 460 296 #>  [41421,] 461 296 #>  [41422,] 462 296 #>  [41423,] 463 296 #>  [41424,] 464 296 #>  [41425,] 465 296 #>  [41426,] 466 296 #>  [41427,] 467 296 #>  [41428,] 468 296 #>  [41429,] 469 296 #>  [41430,] 470 296 #>  [41431,] 471 296 #>  [41432,] 472 296 #>  [41433,] 473 296 #>  [41434,] 474 296 #>  [41435,] 475 296 #>  [41436,] 476 296 #>  [41437,] 477 296 #>  [41438,] 478 296 #>  [41439,] 479 296 #>  [41440,] 480 296 #>  [41441,] 481 296 #>  [41442,] 482 296 #>  [41443,] 483 296 #>  [41444,] 484 296 #>  [41445,] 485 296 #>  [41446,] 486 296 #>  [41447,] 487 296 #>  [41448,] 488 296 #>  [41449,] 489 296 #>  [41450,] 490 296 #>  [41451,] 491 296 #>  [41452,] 492 296 #>  [41453,] 493 296 #>  [41454,] 494 296 #>  [41455,] 495 296 #>  [41456,] 496 296 #>  [41457,] 497 296 #>  [41458,] 498 296 #>  [41459,] 499 296 #>  [41460,] 500 296 #>  [41461,] 501 296 #>  [41462,] 502 296 #>  [41463,] 503 296 #>  [41464,] 504 296 #>  [41465,] 505 296 #>  [41466,] 506 296 #>  [41467,] 507 296 #>  [41468,] 508 296 #>  [41469,] 509 296 #>  [41470,] 510 296 #>  [41471,] 511 296 #>  [41472,] 512 296 #>  [41473,] 513 296 #>  [41474,] 514 296 #>  [41475,] 515 296 #>  [41476,] 516 296 #>  [41477,] 517 296 #>  [41478,] 518 296 #>  [41479,] 519 296 #>  [41480,] 520 296 #>  [41481,] 521 296 #>  [41482,] 522 296 #>  [41483,] 523 296 #>  [41484,] 524 296 #>  [41485,] 525 296 #>  [41486,] 526 296 #>  [41487,] 527 296 #>  [41488,] 528 296 #>  [41489,] 529 296 #>  [41490,] 530 296 #>  [41491,] 531 296 #>  [41492,] 532 296 #>  [41493,] 533 296 #>  [41494,] 534 296 #>  [41495,] 535 296 #>  [41496,] 536 296 #>  [41497,] 537 296 #>  [41498,] 538 296 #>  [41499,] 539 296 #>  [41500,] 540 296 #>  [41501,] 541 296 #>  [41502,] 542 296 #>  [41503,] 543 296 #>  [41504,] 544 296 #>  [41505,] 545 296 #>  [41506,] 546 296 #>  [41507,] 547 296 #>  [41508,] 548 296 #>  [41509,] 549 296 #>  [41510,] 550 296 #>  [41511,] 551 296 #>  [41512,] 552 296 #>  [41513,] 553 296 #>  [41514,] 554 296 #>  [41515,] 555 296 #>  [41516,] 556 296 #>  [41517,] 557 296 #>  [41518,] 558 296 #>  [41519,] 559 296 #>  [41520,] 560 296 #>  [41521,] 561 296 #>  [41522,] 562 296 #>  [41523,] 563 296 #>  [41524,] 564 296 #>  [41525,] 565 296 #>  [41526,] 566 296 #>  [41527,] 567 296 #>  [41528,] 568 296 #>  [41529,] 569 296 #>  [41530,] 570 296 #>  [41531,] 571 296 #>  [41532,] 572 296 #>  [41533,] 573 296 #>  [41534,] 574 296 #>  [41535,] 575 296 #>  [41536,] 576 296 #>  [41537,] 577 296 #>  [41538,] 578 296 #>  [41539,] 579 296 #>  [41540,] 580 296 #>  [41541,] 581 296 #>  [41542,] 582 296 #>  [41543,] 583 296 #>  [41544,] 584 296 #>  [41545,] 585 296 #>  [41546,] 586 296 #>  [41547,] 587 296 #>  [41548,] 588 296 #>  [41549,] 589 296 #>  [41550,] 590 296 #>  [41551,] 591 296 #>  [41552,] 592 296 #>  [41553,] 593 296 #>  [41554,] 594 296 #>  [41555,] 595 296 #>  [41556,] 596 296 #>  [41557,] 597 296 #>  [41558,] 598 296 #>  [41559,] 599 296 #>  [41560,] 600 296 #>  [41561,] 601 296 #>  [41562,] 602 296 #>  [41563,] 603 296 #>  [41564,] 604 296 #>  [41565,] 605 296 #>  [41566,] 606 296 #>  [41567,] 607 296 #>  [41568,] 608 296 #>  [41569,] 609 296 #>  [41570,] 610 296 #>  [41571,] 611 296 #>  [41572,] 612 296 #>  [41573,] 613 296 #>  [41574,] 614 296 #>  [41575,] 615 296 #>  [41576,] 616 296 #>  [41577,] 617 296 #>  [41578,] 618 296 #>  [41579,] 619 296 #>  [41580,] 620 296 #>  [41581,] 621 296 #>  [41582,] 622 296 #>  [41583,] 623 296 #>  [41584,] 624 296 #>  [41585,] 625 296 #>  [41586,] 626 296 #>  [41587,] 627 296 #>  [41588,] 628 296 #>  [41589,] 629 296 #>  [41590,] 630 296 #>  [41591,] 631 296 #>  [41592,] 632 296 #>  [41593,] 633 296 #>  [41594,] 634 296 #>  [41595,] 635 296 #>  [41596,] 636 296 #>  [41597,] 637 296 #>  [41598,] 638 296 #>  [41599,] 639 296 #>  [41600,] 640 296 #>  [41601,]   1 295 #>  [41602,]   2 295 #>  [41603,]   3 295 #>  [41604,]   4 295 #>  [41605,]   5 295 #>  [41606,]   6 295 #>  [41607,]   7 295 #>  [41608,]   8 295 #>  [41609,]   9 295 #>  [41610,]  10 295 #>  [41611,]  11 295 #>  [41612,]  12 295 #>  [41613,]  13 295 #>  [41614,]  14 295 #>  [41615,]  15 295 #>  [41616,]  16 295 #>  [41617,]  17 295 #>  [41618,]  18 295 #>  [41619,]  19 295 #>  [41620,]  20 295 #>  [41621,]  21 295 #>  [41622,]  22 295 #>  [41623,]  23 295 #>  [41624,]  24 295 #>  [41625,]  25 295 #>  [41626,]  26 295 #>  [41627,]  27 295 #>  [41628,]  28 295 #>  [41629,]  29 295 #>  [41630,]  30 295 #>  [41631,]  31 295 #>  [41632,]  32 295 #>  [41633,]  33 295 #>  [41634,]  34 295 #>  [41635,]  35 295 #>  [41636,]  36 295 #>  [41637,]  37 295 #>  [41638,]  38 295 #>  [41639,]  39 295 #>  [41640,]  40 295 #>  [41641,]  41 295 #>  [41642,]  42 295 #>  [41643,]  43 295 #>  [41644,]  44 295 #>  [41645,]  45 295 #>  [41646,]  46 295 #>  [41647,]  47 295 #>  [41648,]  48 295 #>  [41649,]  49 295 #>  [41650,]  50 295 #>  [41651,]  51 295 #>  [41652,]  52 295 #>  [41653,]  53 295 #>  [41654,]  54 295 #>  [41655,]  55 295 #>  [41656,]  56 295 #>  [41657,]  57 295 #>  [41658,]  58 295 #>  [41659,]  59 295 #>  [41660,]  60 295 #>  [41661,]  61 295 #>  [41662,]  62 295 #>  [41663,]  63 295 #>  [41664,]  64 295 #>  [41665,]  65 295 #>  [41666,]  66 295 #>  [41667,]  67 295 #>  [41668,]  68 295 #>  [41669,]  69 295 #>  [41670,]  70 295 #>  [41671,]  71 295 #>  [41672,]  72 295 #>  [41673,]  73 295 #>  [41674,]  74 295 #>  [41675,]  75 295 #>  [41676,]  76 295 #>  [41677,]  77 295 #>  [41678,]  78 295 #>  [41679,]  79 295 #>  [41680,]  80 295 #>  [41681,]  81 295 #>  [41682,]  82 295 #>  [41683,]  83 295 #>  [41684,]  84 295 #>  [41685,]  85 295 #>  [41686,]  86 295 #>  [41687,]  87 295 #>  [41688,]  88 295 #>  [41689,]  89 295 #>  [41690,]  90 295 #>  [41691,]  91 295 #>  [41692,]  92 295 #>  [41693,]  93 295 #>  [41694,]  94 295 #>  [41695,]  95 295 #>  [41696,]  96 295 #>  [41697,]  97 295 #>  [41698,]  98 295 #>  [41699,]  99 295 #>  [41700,] 100 295 #>  [41701,] 101 295 #>  [41702,] 102 295 #>  [41703,] 103 295 #>  [41704,] 104 295 #>  [41705,] 105 295 #>  [41706,] 106 295 #>  [41707,] 107 295 #>  [41708,] 108 295 #>  [41709,] 109 295 #>  [41710,] 110 295 #>  [41711,] 111 295 #>  [41712,] 112 295 #>  [41713,] 113 295 #>  [41714,] 114 295 #>  [41715,] 115 295 #>  [41716,] 116 295 #>  [41717,] 117 295 #>  [41718,] 118 295 #>  [41719,] 119 295 #>  [41720,] 120 295 #>  [41721,] 121 295 #>  [41722,] 122 295 #>  [41723,] 123 295 #>  [41724,] 124 295 #>  [41725,] 125 295 #>  [41726,] 126 295 #>  [41727,] 127 295 #>  [41728,] 128 295 #>  [41729,] 129 295 #>  [41730,] 130 295 #>  [41731,] 131 295 #>  [41732,] 132 295 #>  [41733,] 133 295 #>  [41734,] 134 295 #>  [41735,] 135 295 #>  [41736,] 136 295 #>  [41737,] 137 295 #>  [41738,] 138 295 #>  [41739,] 139 295 #>  [41740,] 140 295 #>  [41741,] 141 295 #>  [41742,] 142 295 #>  [41743,] 143 295 #>  [41744,] 144 295 #>  [41745,] 145 295 #>  [41746,] 146 295 #>  [41747,] 147 295 #>  [41748,] 148 295 #>  [41749,] 149 295 #>  [41750,] 150 295 #>  [41751,] 151 295 #>  [41752,] 152 295 #>  [41753,] 153 295 #>  [41754,] 154 295 #>  [41755,] 155 295 #>  [41756,] 156 295 #>  [41757,] 157 295 #>  [41758,] 158 295 #>  [41759,] 159 295 #>  [41760,] 160 295 #>  [41761,] 161 295 #>  [41762,] 162 295 #>  [41763,] 163 295 #>  [41764,] 164 295 #>  [41765,] 165 295 #>  [41766,] 166 295 #>  [41767,] 167 295 #>  [41768,] 168 295 #>  [41769,] 169 295 #>  [41770,] 170 295 #>  [41771,] 171 295 #>  [41772,] 172 295 #>  [41773,] 173 295 #>  [41774,] 174 295 #>  [41775,] 175 295 #>  [41776,] 176 295 #>  [41777,] 177 295 #>  [41778,] 178 295 #>  [41779,] 179 295 #>  [41780,] 180 295 #>  [41781,] 181 295 #>  [41782,] 182 295 #>  [41783,] 183 295 #>  [41784,] 184 295 #>  [41785,] 185 295 #>  [41786,] 186 295 #>  [41787,] 187 295 #>  [41788,] 188 295 #>  [41789,] 189 295 #>  [41790,] 190 295 #>  [41791,] 191 295 #>  [41792,] 192 295 #>  [41793,] 193 295 #>  [41794,] 194 295 #>  [41795,] 195 295 #>  [41796,] 196 295 #>  [41797,] 197 295 #>  [41798,] 198 295 #>  [41799,] 199 295 #>  [41800,] 200 295 #>  [41801,] 201 295 #>  [41802,] 202 295 #>  [41803,] 203 295 #>  [41804,] 204 295 #>  [41805,] 205 295 #>  [41806,] 206 295 #>  [41807,] 207 295 #>  [41808,] 208 295 #>  [41809,] 209 295 #>  [41810,] 210 295 #>  [41811,] 211 295 #>  [41812,] 212 295 #>  [41813,] 213 295 #>  [41814,] 214 295 #>  [41815,] 215 295 #>  [41816,] 216 295 #>  [41817,] 217 295 #>  [41818,] 218 295 #>  [41819,] 219 295 #>  [41820,] 220 295 #>  [41821,] 221 295 #>  [41822,] 222 295 #>  [41823,] 223 295 #>  [41824,] 224 295 #>  [41825,] 225 295 #>  [41826,] 226 295 #>  [41827,] 227 295 #>  [41828,] 228 295 #>  [41829,] 229 295 #>  [41830,] 230 295 #>  [41831,] 231 295 #>  [41832,] 232 295 #>  [41833,] 233 295 #>  [41834,] 234 295 #>  [41835,] 235 295 #>  [41836,] 236 295 #>  [41837,] 237 295 #>  [41838,] 238 295 #>  [41839,] 239 295 #>  [41840,] 240 295 #>  [41841,] 241 295 #>  [41842,] 242 295 #>  [41843,] 243 295 #>  [41844,] 244 295 #>  [41845,] 245 295 #>  [41846,] 246 295 #>  [41847,] 247 295 #>  [41848,] 248 295 #>  [41849,] 249 295 #>  [41850,] 250 295 #>  [41851,] 251 295 #>  [41852,] 252 295 #>  [41853,] 253 295 #>  [41854,] 254 295 #>  [41855,] 255 295 #>  [41856,] 256 295 #>  [41857,] 257 295 #>  [41858,] 258 295 #>  [41859,] 259 295 #>  [41860,] 260 295 #>  [41861,] 261 295 #>  [41862,] 262 295 #>  [41863,] 263 295 #>  [41864,] 264 295 #>  [41865,] 265 295 #>  [41866,] 266 295 #>  [41867,] 267 295 #>  [41868,] 268 295 #>  [41869,] 269 295 #>  [41870,] 270 295 #>  [41871,] 271 295 #>  [41872,] 272 295 #>  [41873,] 273 295 #>  [41874,] 274 295 #>  [41875,] 275 295 #>  [41876,] 276 295 #>  [41877,] 277 295 #>  [41878,] 278 295 #>  [41879,] 279 295 #>  [41880,] 280 295 #>  [41881,] 281 295 #>  [41882,] 282 295 #>  [41883,] 283 295 #>  [41884,] 284 295 #>  [41885,] 285 295 #>  [41886,] 286 295 #>  [41887,] 287 295 #>  [41888,] 288 295 #>  [41889,] 289 295 #>  [41890,] 290 295 #>  [41891,] 291 295 #>  [41892,] 292 295 #>  [41893,] 293 295 #>  [41894,] 294 295 #>  [41895,] 295 295 #>  [41896,] 296 295 #>  [41897,] 297 295 #>  [41898,] 298 295 #>  [41899,] 299 295 #>  [41900,] 300 295 #>  [41901,] 301 295 #>  [41902,] 302 295 #>  [41903,] 303 295 #>  [41904,] 304 295 #>  [41905,] 305 295 #>  [41906,] 306 295 #>  [41907,] 307 295 #>  [41908,] 308 295 #>  [41909,] 309 295 #>  [41910,] 310 295 #>  [41911,] 311 295 #>  [41912,] 312 295 #>  [41913,] 313 295 #>  [41914,] 314 295 #>  [41915,] 315 295 #>  [41916,] 316 295 #>  [41917,] 317 295 #>  [41918,] 318 295 #>  [41919,] 319 295 #>  [41920,] 320 295 #>  [41921,] 321 295 #>  [41922,] 322 295 #>  [41923,] 323 295 #>  [41924,] 324 295 #>  [41925,] 325 295 #>  [41926,] 326 295 #>  [41927,] 327 295 #>  [41928,] 328 295 #>  [41929,] 329 295 #>  [41930,] 330 295 #>  [41931,] 331 295 #>  [41932,] 332 295 #>  [41933,] 333 295 #>  [41934,] 334 295 #>  [41935,] 335 295 #>  [41936,] 336 295 #>  [41937,] 337 295 #>  [41938,] 338 295 #>  [41939,] 339 295 #>  [41940,] 340 295 #>  [41941,] 341 295 #>  [41942,] 342 295 #>  [41943,] 343 295 #>  [41944,] 344 295 #>  [41945,] 345 295 #>  [41946,] 346 295 #>  [41947,] 347 295 #>  [41948,] 348 295 #>  [41949,] 349 295 #>  [41950,] 350 295 #>  [41951,] 351 295 #>  [41952,] 352 295 #>  [41953,] 353 295 #>  [41954,] 354 295 #>  [41955,] 355 295 #>  [41956,] 356 295 #>  [41957,] 357 295 #>  [41958,] 358 295 #>  [41959,] 359 295 #>  [41960,] 360 295 #>  [41961,] 361 295 #>  [41962,] 362 295 #>  [41963,] 363 295 #>  [41964,] 364 295 #>  [41965,] 365 295 #>  [41966,] 366 295 #>  [41967,] 367 295 #>  [41968,] 368 295 #>  [41969,] 369 295 #>  [41970,] 370 295 #>  [41971,] 371 295 #>  [41972,] 372 295 #>  [41973,] 373 295 #>  [41974,] 374 295 #>  [41975,] 375 295 #>  [41976,] 376 295 #>  [41977,] 377 295 #>  [41978,] 378 295 #>  [41979,] 379 295 #>  [41980,] 380 295 #>  [41981,] 381 295 #>  [41982,] 382 295 #>  [41983,] 383 295 #>  [41984,] 384 295 #>  [41985,] 385 295 #>  [41986,] 386 295 #>  [41987,] 387 295 #>  [41988,] 388 295 #>  [41989,] 389 295 #>  [41990,] 390 295 #>  [41991,] 391 295 #>  [41992,] 392 295 #>  [41993,] 393 295 #>  [41994,] 394 295 #>  [41995,] 395 295 #>  [41996,] 396 295 #>  [41997,] 397 295 #>  [41998,] 398 295 #>  [41999,] 399 295 #>  [42000,] 400 295 #>  [42001,] 401 295 #>  [42002,] 402 295 #>  [42003,] 403 295 #>  [42004,] 404 295 #>  [42005,] 405 295 #>  [42006,] 406 295 #>  [42007,] 407 295 #>  [42008,] 408 295 #>  [42009,] 409 295 #>  [42010,] 410 295 #>  [42011,] 411 295 #>  [42012,] 412 295 #>  [42013,] 413 295 #>  [42014,] 414 295 #>  [42015,] 415 295 #>  [42016,] 416 295 #>  [42017,] 417 295 #>  [42018,] 418 295 #>  [42019,] 419 295 #>  [42020,] 420 295 #>  [42021,] 421 295 #>  [42022,] 422 295 #>  [42023,] 423 295 #>  [42024,] 424 295 #>  [42025,] 425 295 #>  [42026,] 426 295 #>  [42027,] 427 295 #>  [42028,] 428 295 #>  [42029,] 429 295 #>  [42030,] 430 295 #>  [42031,] 431 295 #>  [42032,] 432 295 #>  [42033,] 433 295 #>  [42034,] 434 295 #>  [42035,] 435 295 #>  [42036,] 436 295 #>  [42037,] 437 295 #>  [42038,] 438 295 #>  [42039,] 439 295 #>  [42040,] 440 295 #>  [42041,] 441 295 #>  [42042,] 442 295 #>  [42043,] 443 295 #>  [42044,] 444 295 #>  [42045,] 445 295 #>  [42046,] 446 295 #>  [42047,] 447 295 #>  [42048,] 448 295 #>  [42049,] 449 295 #>  [42050,] 450 295 #>  [42051,] 451 295 #>  [42052,] 452 295 #>  [42053,] 453 295 #>  [42054,] 454 295 #>  [42055,] 455 295 #>  [42056,] 456 295 #>  [42057,] 457 295 #>  [42058,] 458 295 #>  [42059,] 459 295 #>  [42060,] 460 295 #>  [42061,] 461 295 #>  [42062,] 462 295 #>  [42063,] 463 295 #>  [42064,] 464 295 #>  [42065,] 465 295 #>  [42066,] 466 295 #>  [42067,] 467 295 #>  [42068,] 468 295 #>  [42069,] 469 295 #>  [42070,] 470 295 #>  [42071,] 471 295 #>  [42072,] 472 295 #>  [42073,] 473 295 #>  [42074,] 474 295 #>  [42075,] 475 295 #>  [42076,] 476 295 #>  [42077,] 477 295 #>  [42078,] 478 295 #>  [42079,] 479 295 #>  [42080,] 480 295 #>  [42081,] 481 295 #>  [42082,] 482 295 #>  [42083,] 483 295 #>  [42084,] 484 295 #>  [42085,] 485 295 #>  [42086,] 486 295 #>  [42087,] 487 295 #>  [42088,] 488 295 #>  [42089,] 489 295 #>  [42090,] 490 295 #>  [42091,] 491 295 #>  [42092,] 492 295 #>  [42093,] 493 295 #>  [42094,] 494 295 #>  [42095,] 495 295 #>  [42096,] 496 295 #>  [42097,] 497 295 #>  [42098,] 498 295 #>  [42099,] 499 295 #>  [42100,] 500 295 #>  [42101,] 501 295 #>  [42102,] 502 295 #>  [42103,] 503 295 #>  [42104,] 504 295 #>  [42105,] 505 295 #>  [42106,] 506 295 #>  [42107,] 507 295 #>  [42108,] 508 295 #>  [42109,] 509 295 #>  [42110,] 510 295 #>  [42111,] 511 295 #>  [42112,] 512 295 #>  [42113,] 513 295 #>  [42114,] 514 295 #>  [42115,] 515 295 #>  [42116,] 516 295 #>  [42117,] 517 295 #>  [42118,] 518 295 #>  [42119,] 519 295 #>  [42120,] 520 295 #>  [42121,] 521 295 #>  [42122,] 522 295 #>  [42123,] 523 295 #>  [42124,] 524 295 #>  [42125,] 525 295 #>  [42126,] 526 295 #>  [42127,] 527 295 #>  [42128,] 528 295 #>  [42129,] 529 295 #>  [42130,] 530 295 #>  [42131,] 531 295 #>  [42132,] 532 295 #>  [42133,] 533 295 #>  [42134,] 534 295 #>  [42135,] 535 295 #>  [42136,] 536 295 #>  [42137,] 537 295 #>  [42138,] 538 295 #>  [42139,] 539 295 #>  [42140,] 540 295 #>  [42141,] 541 295 #>  [42142,] 542 295 #>  [42143,] 543 295 #>  [42144,] 544 295 #>  [42145,] 545 295 #>  [42146,] 546 295 #>  [42147,] 547 295 #>  [42148,] 548 295 #>  [42149,] 549 295 #>  [42150,] 550 295 #>  [42151,] 551 295 #>  [42152,] 552 295 #>  [42153,] 553 295 #>  [42154,] 554 295 #>  [42155,] 555 295 #>  [42156,] 556 295 #>  [42157,] 557 295 #>  [42158,] 558 295 #>  [42159,] 559 295 #>  [42160,] 560 295 #>  [42161,] 561 295 #>  [42162,] 562 295 #>  [42163,] 563 295 #>  [42164,] 564 295 #>  [42165,] 565 295 #>  [42166,] 566 295 #>  [42167,] 567 295 #>  [42168,] 568 295 #>  [42169,] 569 295 #>  [42170,] 570 295 #>  [42171,] 571 295 #>  [42172,] 572 295 #>  [42173,] 573 295 #>  [42174,] 574 295 #>  [42175,] 575 295 #>  [42176,] 576 295 #>  [42177,] 577 295 #>  [42178,] 578 295 #>  [42179,] 579 295 #>  [42180,] 580 295 #>  [42181,] 581 295 #>  [42182,] 582 295 #>  [42183,] 583 295 #>  [42184,] 584 295 #>  [42185,] 585 295 #>  [42186,] 586 295 #>  [42187,] 587 295 #>  [42188,] 588 295 #>  [42189,] 589 295 #>  [42190,] 590 295 #>  [42191,] 591 295 #>  [42192,] 592 295 #>  [42193,] 593 295 #>  [42194,] 594 295 #>  [42195,] 595 295 #>  [42196,] 596 295 #>  [42197,] 597 295 #>  [42198,] 598 295 #>  [42199,] 599 295 #>  [42200,] 600 295 #>  [42201,] 601 295 #>  [42202,] 602 295 #>  [42203,] 603 295 #>  [42204,] 604 295 #>  [42205,] 605 295 #>  [42206,] 606 295 #>  [42207,] 607 295 #>  [42208,] 608 295 #>  [42209,] 609 295 #>  [42210,] 610 295 #>  [42211,] 611 295 #>  [42212,] 612 295 #>  [42213,] 613 295 #>  [42214,] 614 295 #>  [42215,] 615 295 #>  [42216,] 616 295 #>  [42217,] 617 295 #>  [42218,] 618 295 #>  [42219,] 619 295 #>  [42220,] 620 295 #>  [42221,] 621 295 #>  [42222,] 622 295 #>  [42223,] 623 295 #>  [42224,] 624 295 #>  [42225,] 625 295 #>  [42226,] 626 295 #>  [42227,] 627 295 #>  [42228,] 628 295 #>  [42229,] 629 295 #>  [42230,] 630 295 #>  [42231,] 631 295 #>  [42232,] 632 295 #>  [42233,] 633 295 #>  [42234,] 634 295 #>  [42235,] 635 295 #>  [42236,] 636 295 #>  [42237,] 637 295 #>  [42238,] 638 295 #>  [42239,] 639 295 #>  [42240,] 640 295 #>  [42241,]   1 294 #>  [42242,]   2 294 #>  [42243,]   3 294 #>  [42244,]   4 294 #>  [42245,]   5 294 #>  [42246,]   6 294 #>  [42247,]   7 294 #>  [42248,]   8 294 #>  [42249,]   9 294 #>  [42250,]  10 294 #>  [42251,]  11 294 #>  [42252,]  12 294 #>  [42253,]  13 294 #>  [42254,]  14 294 #>  [42255,]  15 294 #>  [42256,]  16 294 #>  [42257,]  17 294 #>  [42258,]  18 294 #>  [42259,]  19 294 #>  [42260,]  20 294 #>  [42261,]  21 294 #>  [42262,]  22 294 #>  [42263,]  23 294 #>  [42264,]  24 294 #>  [42265,]  25 294 #>  [42266,]  26 294 #>  [42267,]  27 294 #>  [42268,]  28 294 #>  [42269,]  29 294 #>  [42270,]  30 294 #>  [42271,]  31 294 #>  [42272,]  32 294 #>  [42273,]  33 294 #>  [42274,]  34 294 #>  [42275,]  35 294 #>  [42276,]  36 294 #>  [42277,]  37 294 #>  [42278,]  38 294 #>  [42279,]  39 294 #>  [42280,]  40 294 #>  [42281,]  41 294 #>  [42282,]  42 294 #>  [42283,]  43 294 #>  [42284,]  44 294 #>  [42285,]  45 294 #>  [42286,]  46 294 #>  [42287,]  47 294 #>  [42288,]  48 294 #>  [42289,]  49 294 #>  [42290,]  50 294 #>  [42291,]  51 294 #>  [42292,]  52 294 #>  [42293,]  53 294 #>  [42294,]  54 294 #>  [42295,]  55 294 #>  [42296,]  56 294 #>  [42297,]  57 294 #>  [42298,]  58 294 #>  [42299,]  59 294 #>  [42300,]  60 294 #>  [42301,]  61 294 #>  [42302,]  62 294 #>  [42303,]  63 294 #>  [42304,]  64 294 #>  [42305,]  65 294 #>  [42306,]  66 294 #>  [42307,]  67 294 #>  [42308,]  68 294 #>  [42309,]  69 294 #>  [42310,]  70 294 #>  [42311,]  71 294 #>  [42312,]  72 294 #>  [42313,]  73 294 #>  [42314,]  74 294 #>  [42315,]  75 294 #>  [42316,]  76 294 #>  [42317,]  77 294 #>  [42318,]  78 294 #>  [42319,]  79 294 #>  [42320,]  80 294 #>  [42321,]  81 294 #>  [42322,]  82 294 #>  [42323,]  83 294 #>  [42324,]  84 294 #>  [42325,]  85 294 #>  [42326,]  86 294 #>  [42327,]  87 294 #>  [42328,]  88 294 #>  [42329,]  89 294 #>  [42330,]  90 294 #>  [42331,]  91 294 #>  [42332,]  92 294 #>  [42333,]  93 294 #>  [42334,]  94 294 #>  [42335,]  95 294 #>  [42336,]  96 294 #>  [42337,]  97 294 #>  [42338,]  98 294 #>  [42339,]  99 294 #>  [42340,] 100 294 #>  [42341,] 101 294 #>  [42342,] 102 294 #>  [42343,] 103 294 #>  [42344,] 104 294 #>  [42345,] 105 294 #>  [42346,] 106 294 #>  [42347,] 107 294 #>  [42348,] 108 294 #>  [42349,] 109 294 #>  [42350,] 110 294 #>  [42351,] 111 294 #>  [42352,] 112 294 #>  [42353,] 113 294 #>  [42354,] 114 294 #>  [42355,] 115 294 #>  [42356,] 116 294 #>  [42357,] 117 294 #>  [42358,] 118 294 #>  [42359,] 119 294 #>  [42360,] 120 294 #>  [42361,] 121 294 #>  [42362,] 122 294 #>  [42363,] 123 294 #>  [42364,] 124 294 #>  [42365,] 125 294 #>  [42366,] 126 294 #>  [42367,] 127 294 #>  [42368,] 128 294 #>  [42369,] 129 294 #>  [42370,] 130 294 #>  [42371,] 131 294 #>  [42372,] 132 294 #>  [42373,] 133 294 #>  [42374,] 134 294 #>  [42375,] 135 294 #>  [42376,] 136 294 #>  [42377,] 137 294 #>  [42378,] 138 294 #>  [42379,] 139 294 #>  [42380,] 140 294 #>  [42381,] 141 294 #>  [42382,] 142 294 #>  [42383,] 143 294 #>  [42384,] 144 294 #>  [42385,] 145 294 #>  [42386,] 146 294 #>  [42387,] 147 294 #>  [42388,] 148 294 #>  [42389,] 149 294 #>  [42390,] 150 294 #>  [42391,] 151 294 #>  [42392,] 152 294 #>  [42393,] 153 294 #>  [42394,] 154 294 #>  [42395,] 155 294 #>  [42396,] 156 294 #>  [42397,] 157 294 #>  [42398,] 158 294 #>  [42399,] 159 294 #>  [42400,] 160 294 #>  [42401,] 161 294 #>  [42402,] 162 294 #>  [42403,] 163 294 #>  [42404,] 164 294 #>  [42405,] 165 294 #>  [42406,] 166 294 #>  [42407,] 167 294 #>  [42408,] 168 294 #>  [42409,] 169 294 #>  [42410,] 170 294 #>  [42411,] 171 294 #>  [42412,] 172 294 #>  [42413,] 173 294 #>  [42414,] 174 294 #>  [42415,] 175 294 #>  [42416,] 176 294 #>  [42417,] 177 294 #>  [42418,] 178 294 #>  [42419,] 179 294 #>  [42420,] 180 294 #>  [42421,] 181 294 #>  [42422,] 182 294 #>  [42423,] 183 294 #>  [42424,] 184 294 #>  [42425,] 185 294 #>  [42426,] 186 294 #>  [42427,] 187 294 #>  [42428,] 188 294 #>  [42429,] 189 294 #>  [42430,] 190 294 #>  [42431,] 191 294 #>  [42432,] 192 294 #>  [42433,] 193 294 #>  [42434,] 194 294 #>  [42435,] 195 294 #>  [42436,] 196 294 #>  [42437,] 197 294 #>  [42438,] 198 294 #>  [42439,] 199 294 #>  [42440,] 200 294 #>  [42441,] 201 294 #>  [42442,] 202 294 #>  [42443,] 203 294 #>  [42444,] 204 294 #>  [42445,] 205 294 #>  [42446,] 206 294 #>  [42447,] 207 294 #>  [42448,] 208 294 #>  [42449,] 209 294 #>  [42450,] 210 294 #>  [42451,] 211 294 #>  [42452,] 212 294 #>  [42453,] 213 294 #>  [42454,] 214 294 #>  [42455,] 215 294 #>  [42456,] 216 294 #>  [42457,] 217 294 #>  [42458,] 218 294 #>  [42459,] 219 294 #>  [42460,] 220 294 #>  [42461,] 221 294 #>  [42462,] 222 294 #>  [42463,] 223 294 #>  [42464,] 224 294 #>  [42465,] 225 294 #>  [42466,] 226 294 #>  [42467,] 227 294 #>  [42468,] 228 294 #>  [42469,] 229 294 #>  [42470,] 230 294 #>  [42471,] 231 294 #>  [42472,] 232 294 #>  [42473,] 233 294 #>  [42474,] 234 294 #>  [42475,] 235 294 #>  [42476,] 236 294 #>  [42477,] 237 294 #>  [42478,] 238 294 #>  [42479,] 239 294 #>  [42480,] 240 294 #>  [42481,] 241 294 #>  [42482,] 242 294 #>  [42483,] 243 294 #>  [42484,] 244 294 #>  [42485,] 245 294 #>  [42486,] 246 294 #>  [42487,] 247 294 #>  [42488,] 248 294 #>  [42489,] 249 294 #>  [42490,] 250 294 #>  [42491,] 251 294 #>  [42492,] 252 294 #>  [42493,] 253 294 #>  [42494,] 254 294 #>  [42495,] 255 294 #>  [42496,] 256 294 #>  [42497,] 257 294 #>  [42498,] 258 294 #>  [42499,] 259 294 #>  [42500,] 260 294 #>  [42501,] 261 294 #>  [42502,] 262 294 #>  [42503,] 263 294 #>  [42504,] 264 294 #>  [42505,] 265 294 #>  [42506,] 266 294 #>  [42507,] 267 294 #>  [42508,] 268 294 #>  [42509,] 269 294 #>  [42510,] 270 294 #>  [42511,] 271 294 #>  [42512,] 272 294 #>  [42513,] 273 294 #>  [42514,] 274 294 #>  [42515,] 275 294 #>  [42516,] 276 294 #>  [42517,] 277 294 #>  [42518,] 278 294 #>  [42519,] 279 294 #>  [42520,] 280 294 #>  [42521,] 281 294 #>  [42522,] 282 294 #>  [42523,] 283 294 #>  [42524,] 284 294 #>  [42525,] 285 294 #>  [42526,] 286 294 #>  [42527,] 287 294 #>  [42528,] 288 294 #>  [42529,] 289 294 #>  [42530,] 290 294 #>  [42531,] 291 294 #>  [42532,] 292 294 #>  [42533,] 293 294 #>  [42534,] 294 294 #>  [42535,] 295 294 #>  [42536,] 296 294 #>  [42537,] 297 294 #>  [42538,] 298 294 #>  [42539,] 299 294 #>  [42540,] 300 294 #>  [42541,] 301 294 #>  [42542,] 302 294 #>  [42543,] 303 294 #>  [42544,] 304 294 #>  [42545,] 305 294 #>  [42546,] 306 294 #>  [42547,] 307 294 #>  [42548,] 308 294 #>  [42549,] 309 294 #>  [42550,] 310 294 #>  [42551,] 311 294 #>  [42552,] 312 294 #>  [42553,] 313 294 #>  [42554,] 314 294 #>  [42555,] 315 294 #>  [42556,] 316 294 #>  [42557,] 317 294 #>  [42558,] 318 294 #>  [42559,] 319 294 #>  [42560,] 320 294 #>  [42561,] 321 294 #>  [42562,] 322 294 #>  [42563,] 323 294 #>  [42564,] 324 294 #>  [42565,] 325 294 #>  [42566,] 326 294 #>  [42567,] 327 294 #>  [42568,] 328 294 #>  [42569,] 329 294 #>  [42570,] 330 294 #>  [42571,] 331 294 #>  [42572,] 332 294 #>  [42573,] 333 294 #>  [42574,] 334 294 #>  [42575,] 335 294 #>  [42576,] 336 294 #>  [42577,] 337 294 #>  [42578,] 338 294 #>  [42579,] 339 294 #>  [42580,] 340 294 #>  [42581,] 341 294 #>  [42582,] 342 294 #>  [42583,] 343 294 #>  [42584,] 344 294 #>  [42585,] 345 294 #>  [42586,] 346 294 #>  [42587,] 347 294 #>  [42588,] 348 294 #>  [42589,] 349 294 #>  [42590,] 350 294 #>  [42591,] 351 294 #>  [42592,] 352 294 #>  [42593,] 353 294 #>  [42594,] 354 294 #>  [42595,] 355 294 #>  [42596,] 356 294 #>  [42597,] 357 294 #>  [42598,] 358 294 #>  [42599,] 359 294 #>  [42600,] 360 294 #>  [42601,] 361 294 #>  [42602,] 362 294 #>  [42603,] 363 294 #>  [42604,] 364 294 #>  [42605,] 365 294 #>  [42606,] 366 294 #>  [42607,] 367 294 #>  [42608,] 368 294 #>  [42609,] 369 294 #>  [42610,] 370 294 #>  [42611,] 371 294 #>  [42612,] 372 294 #>  [42613,] 373 294 #>  [42614,] 374 294 #>  [42615,] 375 294 #>  [42616,] 376 294 #>  [42617,] 377 294 #>  [42618,] 378 294 #>  [42619,] 379 294 #>  [42620,] 380 294 #>  [42621,] 381 294 #>  [42622,] 382 294 #>  [42623,] 383 294 #>  [42624,] 384 294 #>  [42625,] 385 294 #>  [42626,] 386 294 #>  [42627,] 387 294 #>  [42628,] 388 294 #>  [42629,] 389 294 #>  [42630,] 390 294 #>  [42631,] 391 294 #>  [42632,] 392 294 #>  [42633,] 393 294 #>  [42634,] 394 294 #>  [42635,] 395 294 #>  [42636,] 396 294 #>  [42637,] 397 294 #>  [42638,] 398 294 #>  [42639,] 399 294 #>  [42640,] 400 294 #>  [42641,] 401 294 #>  [42642,] 402 294 #>  [42643,] 403 294 #>  [42644,] 404 294 #>  [42645,] 405 294 #>  [42646,] 406 294 #>  [42647,] 407 294 #>  [42648,] 408 294 #>  [42649,] 409 294 #>  [42650,] 410 294 #>  [42651,] 411 294 #>  [42652,] 412 294 #>  [42653,] 413 294 #>  [42654,] 414 294 #>  [42655,] 415 294 #>  [42656,] 416 294 #>  [42657,] 417 294 #>  [42658,] 418 294 #>  [42659,] 419 294 #>  [42660,] 420 294 #>  [42661,] 421 294 #>  [42662,] 422 294 #>  [42663,] 423 294 #>  [42664,] 424 294 #>  [42665,] 425 294 #>  [42666,] 426 294 #>  [42667,] 427 294 #>  [42668,] 428 294 #>  [42669,] 429 294 #>  [42670,] 430 294 #>  [42671,] 431 294 #>  [42672,] 432 294 #>  [42673,] 433 294 #>  [42674,] 434 294 #>  [42675,] 435 294 #>  [42676,] 436 294 #>  [42677,] 437 294 #>  [42678,] 438 294 #>  [42679,] 439 294 #>  [42680,] 440 294 #>  [42681,] 441 294 #>  [42682,] 442 294 #>  [42683,] 443 294 #>  [42684,] 444 294 #>  [42685,] 445 294 #>  [42686,] 446 294 #>  [42687,] 447 294 #>  [42688,] 448 294 #>  [42689,] 449 294 #>  [42690,] 450 294 #>  [42691,] 451 294 #>  [42692,] 452 294 #>  [42693,] 453 294 #>  [42694,] 454 294 #>  [42695,] 455 294 #>  [42696,] 456 294 #>  [42697,] 457 294 #>  [42698,] 458 294 #>  [42699,] 459 294 #>  [42700,] 460 294 #>  [42701,] 461 294 #>  [42702,] 462 294 #>  [42703,] 463 294 #>  [42704,] 464 294 #>  [42705,] 465 294 #>  [42706,] 466 294 #>  [42707,] 467 294 #>  [42708,] 468 294 #>  [42709,] 469 294 #>  [42710,] 470 294 #>  [42711,] 471 294 #>  [42712,] 472 294 #>  [42713,] 473 294 #>  [42714,] 474 294 #>  [42715,] 475 294 #>  [42716,] 476 294 #>  [42717,] 477 294 #>  [42718,] 478 294 #>  [42719,] 479 294 #>  [42720,] 480 294 #>  [42721,] 481 294 #>  [42722,] 482 294 #>  [42723,] 483 294 #>  [42724,] 484 294 #>  [42725,] 485 294 #>  [42726,] 486 294 #>  [42727,] 487 294 #>  [42728,] 488 294 #>  [42729,] 489 294 #>  [42730,] 490 294 #>  [42731,] 491 294 #>  [42732,] 492 294 #>  [42733,] 493 294 #>  [42734,] 494 294 #>  [42735,] 495 294 #>  [42736,] 496 294 #>  [42737,] 497 294 #>  [42738,] 498 294 #>  [42739,] 499 294 #>  [42740,] 500 294 #>  [42741,] 501 294 #>  [42742,] 502 294 #>  [42743,] 503 294 #>  [42744,] 504 294 #>  [42745,] 505 294 #>  [42746,] 506 294 #>  [42747,] 507 294 #>  [42748,] 508 294 #>  [42749,] 509 294 #>  [42750,] 510 294 #>  [42751,] 511 294 #>  [42752,] 512 294 #>  [42753,] 513 294 #>  [42754,] 514 294 #>  [42755,] 515 294 #>  [42756,] 516 294 #>  [42757,] 517 294 #>  [42758,] 518 294 #>  [42759,] 519 294 #>  [42760,] 520 294 #>  [42761,] 521 294 #>  [42762,] 522 294 #>  [42763,] 523 294 #>  [42764,] 524 294 #>  [42765,] 525 294 #>  [42766,] 526 294 #>  [42767,] 527 294 #>  [42768,] 528 294 #>  [42769,] 529 294 #>  [42770,] 530 294 #>  [42771,] 531 294 #>  [42772,] 532 294 #>  [42773,] 533 294 #>  [42774,] 534 294 #>  [42775,] 535 294 #>  [42776,] 536 294 #>  [42777,] 537 294 #>  [42778,] 538 294 #>  [42779,] 539 294 #>  [42780,] 540 294 #>  [42781,] 541 294 #>  [42782,] 542 294 #>  [42783,] 543 294 #>  [42784,] 544 294 #>  [42785,] 545 294 #>  [42786,] 546 294 #>  [42787,] 547 294 #>  [42788,] 548 294 #>  [42789,] 549 294 #>  [42790,] 550 294 #>  [42791,] 551 294 #>  [42792,] 552 294 #>  [42793,] 553 294 #>  [42794,] 554 294 #>  [42795,] 555 294 #>  [42796,] 556 294 #>  [42797,] 557 294 #>  [42798,] 558 294 #>  [42799,] 559 294 #>  [42800,] 560 294 #>  [42801,] 561 294 #>  [42802,] 562 294 #>  [42803,] 563 294 #>  [42804,] 564 294 #>  [42805,] 565 294 #>  [42806,] 566 294 #>  [42807,] 567 294 #>  [42808,] 568 294 #>  [42809,] 569 294 #>  [42810,] 570 294 #>  [42811,] 571 294 #>  [42812,] 572 294 #>  [42813,] 573 294 #>  [42814,] 574 294 #>  [42815,] 575 294 #>  [42816,] 576 294 #>  [42817,] 577 294 #>  [42818,] 578 294 #>  [42819,] 579 294 #>  [42820,] 580 294 #>  [42821,] 581 294 #>  [42822,] 582 294 #>  [42823,] 583 294 #>  [42824,] 584 294 #>  [42825,] 585 294 #>  [42826,] 586 294 #>  [42827,] 587 294 #>  [42828,] 588 294 #>  [42829,] 589 294 #>  [42830,] 590 294 #>  [42831,] 591 294 #>  [42832,] 592 294 #>  [42833,] 593 294 #>  [42834,] 594 294 #>  [42835,] 595 294 #>  [42836,] 596 294 #>  [42837,] 597 294 #>  [42838,] 598 294 #>  [42839,] 599 294 #>  [42840,] 600 294 #>  [42841,] 601 294 #>  [42842,] 602 294 #>  [42843,] 603 294 #>  [42844,] 604 294 #>  [42845,] 605 294 #>  [42846,] 606 294 #>  [42847,] 607 294 #>  [42848,] 608 294 #>  [42849,] 609 294 #>  [42850,] 610 294 #>  [42851,] 611 294 #>  [42852,] 612 294 #>  [42853,] 613 294 #>  [42854,] 614 294 #>  [42855,] 615 294 #>  [42856,] 616 294 #>  [42857,] 617 294 #>  [42858,] 618 294 #>  [42859,] 619 294 #>  [42860,] 620 294 #>  [42861,] 621 294 #>  [42862,] 622 294 #>  [42863,] 623 294 #>  [42864,] 624 294 #>  [42865,] 625 294 #>  [42866,] 626 294 #>  [42867,] 627 294 #>  [42868,] 628 294 #>  [42869,] 629 294 #>  [42870,] 630 294 #>  [42871,] 631 294 #>  [42872,] 632 294 #>  [42873,] 633 294 #>  [42874,] 634 294 #>  [42875,] 635 294 #>  [42876,] 636 294 #>  [42877,] 637 294 #>  [42878,] 638 294 #>  [42879,] 639 294 #>  [42880,] 640 294 #>  [42881,]   1 293 #>  [42882,]   2 293 #>  [42883,]   3 293 #>  [42884,]   4 293 #>  [42885,]   5 293 #>  [42886,]   6 293 #>  [42887,]   7 293 #>  [42888,]   8 293 #>  [42889,]   9 293 #>  [42890,]  10 293 #>  [42891,]  11 293 #>  [42892,]  12 293 #>  [42893,]  13 293 #>  [42894,]  14 293 #>  [42895,]  15 293 #>  [42896,]  16 293 #>  [42897,]  17 293 #>  [42898,]  18 293 #>  [42899,]  19 293 #>  [42900,]  20 293 #>  [42901,]  21 293 #>  [42902,]  22 293 #>  [42903,]  23 293 #>  [42904,]  24 293 #>  [42905,]  25 293 #>  [42906,]  26 293 #>  [42907,]  27 293 #>  [42908,]  28 293 #>  [42909,]  29 293 #>  [42910,]  30 293 #>  [42911,]  31 293 #>  [42912,]  32 293 #>  [42913,]  33 293 #>  [42914,]  34 293 #>  [42915,]  35 293 #>  [42916,]  36 293 #>  [42917,]  37 293 #>  [42918,]  38 293 #>  [42919,]  39 293 #>  [42920,]  40 293 #>  [42921,]  41 293 #>  [42922,]  42 293 #>  [42923,]  43 293 #>  [42924,]  44 293 #>  [42925,]  45 293 #>  [42926,]  46 293 #>  [42927,]  47 293 #>  [42928,]  48 293 #>  [42929,]  49 293 #>  [42930,]  50 293 #>  [42931,]  51 293 #>  [42932,]  52 293 #>  [42933,]  53 293 #>  [42934,]  54 293 #>  [42935,]  55 293 #>  [42936,]  56 293 #>  [42937,]  57 293 #>  [42938,]  58 293 #>  [42939,]  59 293 #>  [42940,]  60 293 #>  [42941,]  61 293 #>  [42942,]  62 293 #>  [42943,]  63 293 #>  [42944,]  64 293 #>  [42945,]  65 293 #>  [42946,]  66 293 #>  [42947,]  67 293 #>  [42948,]  68 293 #>  [42949,]  69 293 #>  [42950,]  70 293 #>  [42951,]  71 293 #>  [42952,]  72 293 #>  [42953,]  73 293 #>  [42954,]  74 293 #>  [42955,]  75 293 #>  [42956,]  76 293 #>  [42957,]  77 293 #>  [42958,]  78 293 #>  [42959,]  79 293 #>  [42960,]  80 293 #>  [42961,]  81 293 #>  [42962,]  82 293 #>  [42963,]  83 293 #>  [42964,]  84 293 #>  [42965,]  85 293 #>  [42966,]  86 293 #>  [42967,]  87 293 #>  [42968,]  88 293 #>  [42969,]  89 293 #>  [42970,]  90 293 #>  [42971,]  91 293 #>  [42972,]  92 293 #>  [42973,]  93 293 #>  [42974,]  94 293 #>  [42975,]  95 293 #>  [42976,]  96 293 #>  [42977,]  97 293 #>  [42978,]  98 293 #>  [42979,]  99 293 #>  [42980,] 100 293 #>  [42981,] 101 293 #>  [42982,] 102 293 #>  [42983,] 103 293 #>  [42984,] 104 293 #>  [42985,] 105 293 #>  [42986,] 106 293 #>  [42987,] 107 293 #>  [42988,] 108 293 #>  [42989,] 109 293 #>  [42990,] 110 293 #>  [42991,] 111 293 #>  [42992,] 112 293 #>  [42993,] 113 293 #>  [42994,] 114 293 #>  [42995,] 115 293 #>  [42996,] 116 293 #>  [42997,] 117 293 #>  [42998,] 118 293 #>  [42999,] 119 293 #>  [43000,] 120 293 #>  [43001,] 121 293 #>  [43002,] 122 293 #>  [43003,] 123 293 #>  [43004,] 124 293 #>  [43005,] 125 293 #>  [43006,] 126 293 #>  [43007,] 127 293 #>  [43008,] 128 293 #>  [43009,] 129 293 #>  [43010,] 130 293 #>  [43011,] 131 293 #>  [43012,] 132 293 #>  [43013,] 133 293 #>  [43014,] 134 293 #>  [43015,] 135 293 #>  [43016,] 136 293 #>  [43017,] 137 293 #>  [43018,] 138 293 #>  [43019,] 139 293 #>  [43020,] 140 293 #>  [43021,] 141 293 #>  [43022,] 142 293 #>  [43023,] 143 293 #>  [43024,] 144 293 #>  [43025,] 145 293 #>  [43026,] 146 293 #>  [43027,] 147 293 #>  [43028,] 148 293 #>  [43029,] 149 293 #>  [43030,] 150 293 #>  [43031,] 151 293 #>  [43032,] 152 293 #>  [43033,] 153 293 #>  [43034,] 154 293 #>  [43035,] 155 293 #>  [43036,] 156 293 #>  [43037,] 157 293 #>  [43038,] 158 293 #>  [43039,] 159 293 #>  [43040,] 160 293 #>  [43041,] 161 293 #>  [43042,] 162 293 #>  [43043,] 163 293 #>  [43044,] 164 293 #>  [43045,] 165 293 #>  [43046,] 166 293 #>  [43047,] 167 293 #>  [43048,] 168 293 #>  [43049,] 169 293 #>  [43050,] 170 293 #>  [43051,] 171 293 #>  [43052,] 172 293 #>  [43053,] 173 293 #>  [43054,] 174 293 #>  [43055,] 175 293 #>  [43056,] 176 293 #>  [43057,] 177 293 #>  [43058,] 178 293 #>  [43059,] 179 293 #>  [43060,] 180 293 #>  [43061,] 181 293 #>  [43062,] 182 293 #>  [43063,] 183 293 #>  [43064,] 184 293 #>  [43065,] 185 293 #>  [43066,] 186 293 #>  [43067,] 187 293 #>  [43068,] 188 293 #>  [43069,] 189 293 #>  [43070,] 190 293 #>  [43071,] 191 293 #>  [43072,] 192 293 #>  [43073,] 193 293 #>  [43074,] 194 293 #>  [43075,] 195 293 #>  [43076,] 196 293 #>  [43077,] 197 293 #>  [43078,] 198 293 #>  [43079,] 199 293 #>  [43080,] 200 293 #>  [43081,] 201 293 #>  [43082,] 202 293 #>  [43083,] 203 293 #>  [43084,] 204 293 #>  [43085,] 205 293 #>  [43086,] 206 293 #>  [43087,] 207 293 #>  [43088,] 208 293 #>  [43089,] 209 293 #>  [43090,] 210 293 #>  [43091,] 211 293 #>  [43092,] 212 293 #>  [43093,] 213 293 #>  [43094,] 214 293 #>  [43095,] 215 293 #>  [43096,] 216 293 #>  [43097,] 217 293 #>  [43098,] 218 293 #>  [43099,] 219 293 #>  [43100,] 220 293 #>  [43101,] 221 293 #>  [43102,] 222 293 #>  [43103,] 223 293 #>  [43104,] 224 293 #>  [43105,] 225 293 #>  [43106,] 226 293 #>  [43107,] 227 293 #>  [43108,] 228 293 #>  [43109,] 229 293 #>  [43110,] 230 293 #>  [43111,] 231 293 #>  [43112,] 232 293 #>  [43113,] 233 293 #>  [43114,] 234 293 #>  [43115,] 235 293 #>  [43116,] 236 293 #>  [43117,] 237 293 #>  [43118,] 238 293 #>  [43119,] 239 293 #>  [43120,] 240 293 #>  [43121,] 241 293 #>  [43122,] 242 293 #>  [43123,] 243 293 #>  [43124,] 244 293 #>  [43125,] 245 293 #>  [43126,] 246 293 #>  [43127,] 247 293 #>  [43128,] 248 293 #>  [43129,] 249 293 #>  [43130,] 250 293 #>  [43131,] 251 293 #>  [43132,] 252 293 #>  [43133,] 253 293 #>  [43134,] 254 293 #>  [43135,] 255 293 #>  [43136,] 256 293 #>  [43137,] 257 293 #>  [43138,] 258 293 #>  [43139,] 259 293 #>  [43140,] 260 293 #>  [43141,] 261 293 #>  [43142,] 262 293 #>  [43143,] 263 293 #>  [43144,] 264 293 #>  [43145,] 265 293 #>  [43146,] 266 293 #>  [43147,] 267 293 #>  [43148,] 268 293 #>  [43149,] 269 293 #>  [43150,] 270 293 #>  [43151,] 271 293 #>  [43152,] 272 293 #>  [43153,] 273 293 #>  [43154,] 274 293 #>  [43155,] 275 293 #>  [43156,] 276 293 #>  [43157,] 277 293 #>  [43158,] 278 293 #>  [43159,] 279 293 #>  [43160,] 280 293 #>  [43161,] 281 293 #>  [43162,] 282 293 #>  [43163,] 283 293 #>  [43164,] 284 293 #>  [43165,] 285 293 #>  [43166,] 286 293 #>  [43167,] 287 293 #>  [43168,] 288 293 #>  [43169,] 289 293 #>  [43170,] 290 293 #>  [43171,] 291 293 #>  [43172,] 292 293 #>  [43173,] 293 293 #>  [43174,] 294 293 #>  [43175,] 295 293 #>  [43176,] 296 293 #>  [43177,] 297 293 #>  [43178,] 298 293 #>  [43179,] 299 293 #>  [43180,] 300 293 #>  [43181,] 301 293 #>  [43182,] 302 293 #>  [43183,] 303 293 #>  [43184,] 304 293 #>  [43185,] 305 293 #>  [43186,] 306 293 #>  [43187,] 307 293 #>  [43188,] 308 293 #>  [43189,] 309 293 #>  [43190,] 310 293 #>  [43191,] 311 293 #>  [43192,] 312 293 #>  [43193,] 313 293 #>  [43194,] 314 293 #>  [43195,] 315 293 #>  [43196,] 316 293 #>  [43197,] 317 293 #>  [43198,] 318 293 #>  [43199,] 319 293 #>  [43200,] 320 293 #>  [43201,] 321 293 #>  [43202,] 322 293 #>  [43203,] 323 293 #>  [43204,] 324 293 #>  [43205,] 325 293 #>  [43206,] 326 293 #>  [43207,] 327 293 #>  [43208,] 328 293 #>  [43209,] 329 293 #>  [43210,] 330 293 #>  [43211,] 331 293 #>  [43212,] 332 293 #>  [43213,] 333 293 #>  [43214,] 334 293 #>  [43215,] 335 293 #>  [43216,] 336 293 #>  [43217,] 337 293 #>  [43218,] 338 293 #>  [43219,] 339 293 #>  [43220,] 340 293 #>  [43221,] 341 293 #>  [43222,] 342 293 #>  [43223,] 343 293 #>  [43224,] 344 293 #>  [43225,] 345 293 #>  [43226,] 346 293 #>  [43227,] 347 293 #>  [43228,] 348 293 #>  [43229,] 349 293 #>  [43230,] 350 293 #>  [43231,] 351 293 #>  [43232,] 352 293 #>  [43233,] 353 293 #>  [43234,] 354 293 #>  [43235,] 355 293 #>  [43236,] 356 293 #>  [43237,] 357 293 #>  [43238,] 358 293 #>  [43239,] 359 293 #>  [43240,] 360 293 #>  [43241,] 361 293 #>  [43242,] 362 293 #>  [43243,] 363 293 #>  [43244,] 364 293 #>  [43245,] 365 293 #>  [43246,] 366 293 #>  [43247,] 367 293 #>  [43248,] 368 293 #>  [43249,] 369 293 #>  [43250,] 370 293 #>  [43251,] 371 293 #>  [43252,] 372 293 #>  [43253,] 373 293 #>  [43254,] 374 293 #>  [43255,] 375 293 #>  [43256,] 376 293 #>  [43257,] 377 293 #>  [43258,] 378 293 #>  [43259,] 379 293 #>  [43260,] 380 293 #>  [43261,] 381 293 #>  [43262,] 382 293 #>  [43263,] 383 293 #>  [43264,] 384 293 #>  [43265,] 385 293 #>  [43266,] 386 293 #>  [43267,] 387 293 #>  [43268,] 388 293 #>  [43269,] 389 293 #>  [43270,] 390 293 #>  [43271,] 391 293 #>  [43272,] 392 293 #>  [43273,] 393 293 #>  [43274,] 394 293 #>  [43275,] 395 293 #>  [43276,] 396 293 #>  [43277,] 397 293 #>  [43278,] 398 293 #>  [43279,] 399 293 #>  [43280,] 400 293 #>  [43281,] 401 293 #>  [43282,] 402 293 #>  [43283,] 403 293 #>  [43284,] 404 293 #>  [43285,] 405 293 #>  [43286,] 406 293 #>  [43287,] 407 293 #>  [43288,] 408 293 #>  [43289,] 409 293 #>  [43290,] 410 293 #>  [43291,] 411 293 #>  [43292,] 412 293 #>  [43293,] 413 293 #>  [43294,] 414 293 #>  [43295,] 415 293 #>  [43296,] 416 293 #>  [43297,] 417 293 #>  [43298,] 418 293 #>  [43299,] 419 293 #>  [43300,] 420 293 #>  [43301,] 421 293 #>  [43302,] 422 293 #>  [43303,] 423 293 #>  [43304,] 424 293 #>  [43305,] 425 293 #>  [43306,] 426 293 #>  [43307,] 427 293 #>  [43308,] 428 293 #>  [43309,] 429 293 #>  [43310,] 430 293 #>  [43311,] 431 293 #>  [43312,] 432 293 #>  [43313,] 433 293 #>  [43314,] 434 293 #>  [43315,] 435 293 #>  [43316,] 436 293 #>  [43317,] 437 293 #>  [43318,] 438 293 #>  [43319,] 439 293 #>  [43320,] 440 293 #>  [43321,] 441 293 #>  [43322,] 442 293 #>  [43323,] 443 293 #>  [43324,] 444 293 #>  [43325,] 445 293 #>  [43326,] 446 293 #>  [43327,] 447 293 #>  [43328,] 448 293 #>  [43329,] 449 293 #>  [43330,] 450 293 #>  [43331,] 451 293 #>  [43332,] 452 293 #>  [43333,] 453 293 #>  [43334,] 454 293 #>  [43335,] 455 293 #>  [43336,] 456 293 #>  [43337,] 457 293 #>  [43338,] 458 293 #>  [43339,] 459 293 #>  [43340,] 460 293 #>  [43341,] 461 293 #>  [43342,] 462 293 #>  [43343,] 463 293 #>  [43344,] 464 293 #>  [43345,] 465 293 #>  [43346,] 466 293 #>  [43347,] 467 293 #>  [43348,] 468 293 #>  [43349,] 469 293 #>  [43350,] 470 293 #>  [43351,] 471 293 #>  [43352,] 472 293 #>  [43353,] 473 293 #>  [43354,] 474 293 #>  [43355,] 475 293 #>  [43356,] 476 293 #>  [43357,] 477 293 #>  [43358,] 478 293 #>  [43359,] 479 293 #>  [43360,] 480 293 #>  [43361,] 481 293 #>  [43362,] 482 293 #>  [43363,] 483 293 #>  [43364,] 484 293 #>  [43365,] 485 293 #>  [43366,] 486 293 #>  [43367,] 487 293 #>  [43368,] 488 293 #>  [43369,] 489 293 #>  [43370,] 490 293 #>  [43371,] 491 293 #>  [43372,] 492 293 #>  [43373,] 493 293 #>  [43374,] 494 293 #>  [43375,] 495 293 #>  [43376,] 496 293 #>  [43377,] 497 293 #>  [43378,] 498 293 #>  [43379,] 499 293 #>  [43380,] 500 293 #>  [43381,] 501 293 #>  [43382,] 502 293 #>  [43383,] 503 293 #>  [43384,] 504 293 #>  [43385,] 505 293 #>  [43386,] 506 293 #>  [43387,] 507 293 #>  [43388,] 508 293 #>  [43389,] 509 293 #>  [43390,] 510 293 #>  [43391,] 511 293 #>  [43392,] 512 293 #>  [43393,] 513 293 #>  [43394,] 514 293 #>  [43395,] 515 293 #>  [43396,] 516 293 #>  [43397,] 517 293 #>  [43398,] 518 293 #>  [43399,] 519 293 #>  [43400,] 520 293 #>  [43401,] 521 293 #>  [43402,] 522 293 #>  [43403,] 523 293 #>  [43404,] 524 293 #>  [43405,] 525 293 #>  [43406,] 526 293 #>  [43407,] 527 293 #>  [43408,] 528 293 #>  [43409,] 529 293 #>  [43410,] 530 293 #>  [43411,] 531 293 #>  [43412,] 532 293 #>  [43413,] 533 293 #>  [43414,] 534 293 #>  [43415,] 535 293 #>  [43416,] 536 293 #>  [43417,] 537 293 #>  [43418,] 538 293 #>  [43419,] 539 293 #>  [43420,] 540 293 #>  [43421,] 541 293 #>  [43422,] 542 293 #>  [43423,] 543 293 #>  [43424,] 544 293 #>  [43425,] 545 293 #>  [43426,] 546 293 #>  [43427,] 547 293 #>  [43428,] 548 293 #>  [43429,] 549 293 #>  [43430,] 550 293 #>  [43431,] 551 293 #>  [43432,] 552 293 #>  [43433,] 553 293 #>  [43434,] 554 293 #>  [43435,] 555 293 #>  [43436,] 556 293 #>  [43437,] 557 293 #>  [43438,] 558 293 #>  [43439,] 559 293 #>  [43440,] 560 293 #>  [43441,] 561 293 #>  [43442,] 562 293 #>  [43443,] 563 293 #>  [43444,] 564 293 #>  [43445,] 565 293 #>  [43446,] 566 293 #>  [43447,] 567 293 #>  [43448,] 568 293 #>  [43449,] 569 293 #>  [43450,] 570 293 #>  [43451,] 571 293 #>  [43452,] 572 293 #>  [43453,] 573 293 #>  [43454,] 574 293 #>  [43455,] 575 293 #>  [43456,] 576 293 #>  [43457,] 577 293 #>  [43458,] 578 293 #>  [43459,] 579 293 #>  [43460,] 580 293 #>  [43461,] 581 293 #>  [43462,] 582 293 #>  [43463,] 583 293 #>  [43464,] 584 293 #>  [43465,] 585 293 #>  [43466,] 586 293 #>  [43467,] 587 293 #>  [43468,] 588 293 #>  [43469,] 589 293 #>  [43470,] 590 293 #>  [43471,] 591 293 #>  [43472,] 592 293 #>  [43473,] 593 293 #>  [43474,] 594 293 #>  [43475,] 595 293 #>  [43476,] 596 293 #>  [43477,] 597 293 #>  [43478,] 598 293 #>  [43479,] 599 293 #>  [43480,] 600 293 #>  [43481,] 601 293 #>  [43482,] 602 293 #>  [43483,] 603 293 #>  [43484,] 604 293 #>  [43485,] 605 293 #>  [43486,] 606 293 #>  [43487,] 607 293 #>  [43488,] 608 293 #>  [43489,] 609 293 #>  [43490,] 610 293 #>  [43491,] 611 293 #>  [43492,] 612 293 #>  [43493,] 613 293 #>  [43494,] 614 293 #>  [43495,] 615 293 #>  [43496,] 616 293 #>  [43497,] 617 293 #>  [43498,] 618 293 #>  [43499,] 619 293 #>  [43500,] 620 293 #>  [43501,] 621 293 #>  [43502,] 622 293 #>  [43503,] 623 293 #>  [43504,] 624 293 #>  [43505,] 625 293 #>  [43506,] 626 293 #>  [43507,] 627 293 #>  [43508,] 628 293 #>  [43509,] 629 293 #>  [43510,] 630 293 #>  [43511,] 631 293 #>  [43512,] 632 293 #>  [43513,] 633 293 #>  [43514,] 634 293 #>  [43515,] 635 293 #>  [43516,] 636 293 #>  [43517,] 637 293 #>  [43518,] 638 293 #>  [43519,] 639 293 #>  [43520,] 640 293 #>  [43521,]   1 292 #>  [43522,]   2 292 #>  [43523,]   3 292 #>  [43524,]   4 292 #>  [43525,]   5 292 #>  [43526,]   6 292 #>  [43527,]   7 292 #>  [43528,]   8 292 #>  [43529,]   9 292 #>  [43530,]  10 292 #>  [43531,]  11 292 #>  [43532,]  12 292 #>  [43533,]  13 292 #>  [43534,]  14 292 #>  [43535,]  15 292 #>  [43536,]  16 292 #>  [43537,]  17 292 #>  [43538,]  18 292 #>  [43539,]  19 292 #>  [43540,]  20 292 #>  [43541,]  21 292 #>  [43542,]  22 292 #>  [43543,]  23 292 #>  [43544,]  24 292 #>  [43545,]  25 292 #>  [43546,]  26 292 #>  [43547,]  27 292 #>  [43548,]  28 292 #>  [43549,]  29 292 #>  [43550,]  30 292 #>  [43551,]  31 292 #>  [43552,]  32 292 #>  [43553,]  33 292 #>  [43554,]  34 292 #>  [43555,]  35 292 #>  [43556,]  36 292 #>  [43557,]  37 292 #>  [43558,]  38 292 #>  [43559,]  39 292 #>  [43560,]  40 292 #>  [43561,]  41 292 #>  [43562,]  42 292 #>  [43563,]  43 292 #>  [43564,]  44 292 #>  [43565,]  45 292 #>  [43566,]  46 292 #>  [43567,]  47 292 #>  [43568,]  48 292 #>  [43569,]  49 292 #>  [43570,]  50 292 #>  [43571,]  51 292 #>  [43572,]  52 292 #>  [43573,]  53 292 #>  [43574,]  54 292 #>  [43575,]  55 292 #>  [43576,]  56 292 #>  [43577,]  57 292 #>  [43578,]  58 292 #>  [43579,]  59 292 #>  [43580,]  60 292 #>  [43581,]  61 292 #>  [43582,]  62 292 #>  [43583,]  63 292 #>  [43584,]  64 292 #>  [43585,]  65 292 #>  [43586,]  66 292 #>  [43587,]  67 292 #>  [43588,]  68 292 #>  [43589,]  69 292 #>  [43590,]  70 292 #>  [43591,]  71 292 #>  [43592,]  72 292 #>  [43593,]  73 292 #>  [43594,]  74 292 #>  [43595,]  75 292 #>  [43596,]  76 292 #>  [43597,]  77 292 #>  [43598,]  78 292 #>  [43599,]  79 292 #>  [43600,]  80 292 #>  [43601,]  81 292 #>  [43602,]  82 292 #>  [43603,]  83 292 #>  [43604,]  84 292 #>  [43605,]  85 292 #>  [43606,]  86 292 #>  [43607,]  87 292 #>  [43608,]  88 292 #>  [43609,]  89 292 #>  [43610,]  90 292 #>  [43611,]  91 292 #>  [43612,]  92 292 #>  [43613,]  93 292 #>  [43614,]  94 292 #>  [43615,]  95 292 #>  [43616,]  96 292 #>  [43617,]  97 292 #>  [43618,]  98 292 #>  [43619,]  99 292 #>  [43620,] 100 292 #>  [43621,] 101 292 #>  [43622,] 102 292 #>  [43623,] 103 292 #>  [43624,] 104 292 #>  [43625,] 105 292 #>  [43626,] 106 292 #>  [43627,] 107 292 #>  [43628,] 108 292 #>  [43629,] 109 292 #>  [43630,] 110 292 #>  [43631,] 111 292 #>  [43632,] 112 292 #>  [43633,] 113 292 #>  [43634,] 114 292 #>  [43635,] 115 292 #>  [43636,] 116 292 #>  [43637,] 117 292 #>  [43638,] 118 292 #>  [43639,] 119 292 #>  [43640,] 120 292 #>  [43641,] 121 292 #>  [43642,] 122 292 #>  [43643,] 123 292 #>  [43644,] 124 292 #>  [43645,] 125 292 #>  [43646,] 126 292 #>  [43647,] 127 292 #>  [43648,] 128 292 #>  [43649,] 129 292 #>  [43650,] 130 292 #>  [43651,] 131 292 #>  [43652,] 132 292 #>  [43653,] 133 292 #>  [43654,] 134 292 #>  [43655,] 135 292 #>  [43656,] 136 292 #>  [43657,] 137 292 #>  [43658,] 138 292 #>  [43659,] 139 292 #>  [43660,] 140 292 #>  [43661,] 141 292 #>  [43662,] 142 292 #>  [43663,] 143 292 #>  [43664,] 144 292 #>  [43665,] 145 292 #>  [43666,] 146 292 #>  [43667,] 147 292 #>  [43668,] 148 292 #>  [43669,] 149 292 #>  [43670,] 150 292 #>  [43671,] 151 292 #>  [43672,] 152 292 #>  [43673,] 153 292 #>  [43674,] 154 292 #>  [43675,] 155 292 #>  [43676,] 156 292 #>  [43677,] 157 292 #>  [43678,] 158 292 #>  [43679,] 159 292 #>  [43680,] 160 292 #>  [43681,] 161 292 #>  [43682,] 162 292 #>  [43683,] 163 292 #>  [43684,] 164 292 #>  [43685,] 165 292 #>  [43686,] 166 292 #>  [43687,] 167 292 #>  [43688,] 168 292 #>  [43689,] 169 292 #>  [43690,] 170 292 #>  [43691,] 171 292 #>  [43692,] 172 292 #>  [43693,] 173 292 #>  [43694,] 174 292 #>  [43695,] 175 292 #>  [43696,] 176 292 #>  [43697,] 177 292 #>  [43698,] 178 292 #>  [43699,] 179 292 #>  [43700,] 180 292 #>  [43701,] 181 292 #>  [43702,] 182 292 #>  [43703,] 183 292 #>  [43704,] 184 292 #>  [43705,] 185 292 #>  [43706,] 186 292 #>  [43707,] 187 292 #>  [43708,] 188 292 #>  [43709,] 189 292 #>  [43710,] 190 292 #>  [43711,] 191 292 #>  [43712,] 192 292 #>  [43713,] 193 292 #>  [43714,] 194 292 #>  [43715,] 195 292 #>  [43716,] 196 292 #>  [43717,] 197 292 #>  [43718,] 198 292 #>  [43719,] 199 292 #>  [43720,] 200 292 #>  [43721,] 201 292 #>  [43722,] 202 292 #>  [43723,] 203 292 #>  [43724,] 204 292 #>  [43725,] 205 292 #>  [43726,] 206 292 #>  [43727,] 207 292 #>  [43728,] 208 292 #>  [43729,] 209 292 #>  [43730,] 210 292 #>  [43731,] 211 292 #>  [43732,] 212 292 #>  [43733,] 213 292 #>  [43734,] 214 292 #>  [43735,] 215 292 #>  [43736,] 216 292 #>  [43737,] 217 292 #>  [43738,] 218 292 #>  [43739,] 219 292 #>  [43740,] 220 292 #>  [43741,] 221 292 #>  [43742,] 222 292 #>  [43743,] 223 292 #>  [43744,] 224 292 #>  [43745,] 225 292 #>  [43746,] 226 292 #>  [43747,] 227 292 #>  [43748,] 228 292 #>  [43749,] 229 292 #>  [43750,] 230 292 #>  [43751,] 231 292 #>  [43752,] 232 292 #>  [43753,] 233 292 #>  [43754,] 234 292 #>  [43755,] 235 292 #>  [43756,] 236 292 #>  [43757,] 237 292 #>  [43758,] 238 292 #>  [43759,] 239 292 #>  [43760,] 240 292 #>  [43761,] 241 292 #>  [43762,] 242 292 #>  [43763,] 243 292 #>  [43764,] 244 292 #>  [43765,] 245 292 #>  [43766,] 246 292 #>  [43767,] 247 292 #>  [43768,] 248 292 #>  [43769,] 249 292 #>  [43770,] 250 292 #>  [43771,] 251 292 #>  [43772,] 252 292 #>  [43773,] 253 292 #>  [43774,] 254 292 #>  [43775,] 255 292 #>  [43776,] 256 292 #>  [43777,] 257 292 #>  [43778,] 258 292 #>  [43779,] 259 292 #>  [43780,] 260 292 #>  [43781,] 261 292 #>  [43782,] 262 292 #>  [43783,] 263 292 #>  [43784,] 264 292 #>  [43785,] 265 292 #>  [43786,] 266 292 #>  [43787,] 267 292 #>  [43788,] 268 292 #>  [43789,] 269 292 #>  [43790,] 270 292 #>  [43791,] 271 292 #>  [43792,] 272 292 #>  [43793,] 273 292 #>  [43794,] 274 292 #>  [43795,] 275 292 #>  [43796,] 276 292 #>  [43797,] 277 292 #>  [43798,] 278 292 #>  [43799,] 279 292 #>  [43800,] 280 292 #>  [43801,] 281 292 #>  [43802,] 282 292 #>  [43803,] 283 292 #>  [43804,] 284 292 #>  [43805,] 285 292 #>  [43806,] 286 292 #>  [43807,] 287 292 #>  [43808,] 288 292 #>  [43809,] 289 292 #>  [43810,] 290 292 #>  [43811,] 291 292 #>  [43812,] 292 292 #>  [43813,] 293 292 #>  [43814,] 294 292 #>  [43815,] 295 292 #>  [43816,] 296 292 #>  [43817,] 297 292 #>  [43818,] 298 292 #>  [43819,] 299 292 #>  [43820,] 300 292 #>  [43821,] 301 292 #>  [43822,] 302 292 #>  [43823,] 303 292 #>  [43824,] 304 292 #>  [43825,] 305 292 #>  [43826,] 306 292 #>  [43827,] 307 292 #>  [43828,] 308 292 #>  [43829,] 309 292 #>  [43830,] 310 292 #>  [43831,] 311 292 #>  [43832,] 312 292 #>  [43833,] 313 292 #>  [43834,] 314 292 #>  [43835,] 315 292 #>  [43836,] 316 292 #>  [43837,] 317 292 #>  [43838,] 318 292 #>  [43839,] 319 292 #>  [43840,] 320 292 #>  [43841,] 321 292 #>  [43842,] 322 292 #>  [43843,] 323 292 #>  [43844,] 324 292 #>  [43845,] 325 292 #>  [43846,] 326 292 #>  [43847,] 327 292 #>  [43848,] 328 292 #>  [43849,] 329 292 #>  [43850,] 330 292 #>  [43851,] 331 292 #>  [43852,] 332 292 #>  [43853,] 333 292 #>  [43854,] 334 292 #>  [43855,] 335 292 #>  [43856,] 336 292 #>  [43857,] 337 292 #>  [43858,] 338 292 #>  [43859,] 339 292 #>  [43860,] 340 292 #>  [43861,] 341 292 #>  [43862,] 342 292 #>  [43863,] 343 292 #>  [43864,] 344 292 #>  [43865,] 345 292 #>  [43866,] 346 292 #>  [43867,] 347 292 #>  [43868,] 348 292 #>  [43869,] 349 292 #>  [43870,] 350 292 #>  [43871,] 351 292 #>  [43872,] 352 292 #>  [43873,] 353 292 #>  [43874,] 354 292 #>  [43875,] 355 292 #>  [43876,] 356 292 #>  [43877,] 357 292 #>  [43878,] 358 292 #>  [43879,] 359 292 #>  [43880,] 360 292 #>  [43881,] 361 292 #>  [43882,] 362 292 #>  [43883,] 363 292 #>  [43884,] 364 292 #>  [43885,] 365 292 #>  [43886,] 366 292 #>  [43887,] 367 292 #>  [43888,] 368 292 #>  [43889,] 369 292 #>  [43890,] 370 292 #>  [43891,] 371 292 #>  [43892,] 372 292 #>  [43893,] 373 292 #>  [43894,] 374 292 #>  [43895,] 375 292 #>  [43896,] 376 292 #>  [43897,] 377 292 #>  [43898,] 378 292 #>  [43899,] 379 292 #>  [43900,] 380 292 #>  [43901,] 381 292 #>  [43902,] 382 292 #>  [43903,] 383 292 #>  [43904,] 384 292 #>  [43905,] 385 292 #>  [43906,] 386 292 #>  [43907,] 387 292 #>  [43908,] 388 292 #>  [43909,] 389 292 #>  [43910,] 390 292 #>  [43911,] 391 292 #>  [43912,] 392 292 #>  [43913,] 393 292 #>  [43914,] 394 292 #>  [43915,] 395 292 #>  [43916,] 396 292 #>  [43917,] 397 292 #>  [43918,] 398 292 #>  [43919,] 399 292 #>  [43920,] 400 292 #>  [43921,] 401 292 #>  [43922,] 402 292 #>  [43923,] 403 292 #>  [43924,] 404 292 #>  [43925,] 405 292 #>  [43926,] 406 292 #>  [43927,] 407 292 #>  [43928,] 408 292 #>  [43929,] 409 292 #>  [43930,] 410 292 #>  [43931,] 411 292 #>  [43932,] 412 292 #>  [43933,] 413 292 #>  [43934,] 414 292 #>  [43935,] 415 292 #>  [43936,] 416 292 #>  [43937,] 417 292 #>  [43938,] 418 292 #>  [43939,] 419 292 #>  [43940,] 420 292 #>  [43941,] 421 292 #>  [43942,] 422 292 #>  [43943,] 423 292 #>  [43944,] 424 292 #>  [43945,] 425 292 #>  [43946,] 426 292 #>  [43947,] 427 292 #>  [43948,] 428 292 #>  [43949,] 429 292 #>  [43950,] 430 292 #>  [43951,] 431 292 #>  [43952,] 432 292 #>  [43953,] 433 292 #>  [43954,] 434 292 #>  [43955,] 435 292 #>  [43956,] 436 292 #>  [43957,] 437 292 #>  [43958,] 438 292 #>  [43959,] 439 292 #>  [43960,] 440 292 #>  [43961,] 441 292 #>  [43962,] 442 292 #>  [43963,] 443 292 #>  [43964,] 444 292 #>  [43965,] 445 292 #>  [43966,] 446 292 #>  [43967,] 447 292 #>  [43968,] 448 292 #>  [43969,] 449 292 #>  [43970,] 450 292 #>  [43971,] 451 292 #>  [43972,] 452 292 #>  [43973,] 453 292 #>  [43974,] 454 292 #>  [43975,] 455 292 #>  [43976,] 456 292 #>  [43977,] 457 292 #>  [43978,] 458 292 #>  [43979,] 459 292 #>  [43980,] 460 292 #>  [43981,] 461 292 #>  [43982,] 462 292 #>  [43983,] 463 292 #>  [43984,] 464 292 #>  [43985,] 465 292 #>  [43986,] 466 292 #>  [43987,] 467 292 #>  [43988,] 468 292 #>  [43989,] 469 292 #>  [43990,] 470 292 #>  [43991,] 471 292 #>  [43992,] 472 292 #>  [43993,] 473 292 #>  [43994,] 474 292 #>  [43995,] 475 292 #>  [43996,] 476 292 #>  [43997,] 477 292 #>  [43998,] 478 292 #>  [43999,] 479 292 #>  [44000,] 480 292 #>  [44001,] 481 292 #>  [44002,] 482 292 #>  [44003,] 483 292 #>  [44004,] 484 292 #>  [44005,] 485 292 #>  [44006,] 486 292 #>  [44007,] 487 292 #>  [44008,] 488 292 #>  [44009,] 489 292 #>  [44010,] 490 292 #>  [44011,] 491 292 #>  [44012,] 492 292 #>  [44013,] 493 292 #>  [44014,] 494 292 #>  [44015,] 495 292 #>  [44016,] 496 292 #>  [44017,] 497 292 #>  [44018,] 498 292 #>  [44019,] 499 292 #>  [44020,] 500 292 #>  [44021,] 501 292 #>  [44022,] 502 292 #>  [44023,] 503 292 #>  [44024,] 504 292 #>  [44025,] 505 292 #>  [44026,] 506 292 #>  [44027,] 507 292 #>  [44028,] 508 292 #>  [44029,] 509 292 #>  [44030,] 510 292 #>  [44031,] 511 292 #>  [44032,] 512 292 #>  [44033,] 513 292 #>  [44034,] 514 292 #>  [44035,] 515 292 #>  [44036,] 516 292 #>  [44037,] 517 292 #>  [44038,] 518 292 #>  [44039,] 519 292 #>  [44040,] 520 292 #>  [44041,] 521 292 #>  [44042,] 522 292 #>  [44043,] 523 292 #>  [44044,] 524 292 #>  [44045,] 525 292 #>  [44046,] 526 292 #>  [44047,] 527 292 #>  [44048,] 528 292 #>  [44049,] 529 292 #>  [44050,] 530 292 #>  [44051,] 531 292 #>  [44052,] 532 292 #>  [44053,] 533 292 #>  [44054,] 534 292 #>  [44055,] 535 292 #>  [44056,] 536 292 #>  [44057,] 537 292 #>  [44058,] 538 292 #>  [44059,] 539 292 #>  [44060,] 540 292 #>  [44061,] 541 292 #>  [44062,] 542 292 #>  [44063,] 543 292 #>  [44064,] 544 292 #>  [44065,] 545 292 #>  [44066,] 546 292 #>  [44067,] 547 292 #>  [44068,] 548 292 #>  [44069,] 549 292 #>  [44070,] 550 292 #>  [44071,] 551 292 #>  [44072,] 552 292 #>  [44073,] 553 292 #>  [44074,] 554 292 #>  [44075,] 555 292 #>  [44076,] 556 292 #>  [44077,] 557 292 #>  [44078,] 558 292 #>  [44079,] 559 292 #>  [44080,] 560 292 #>  [44081,] 561 292 #>  [44082,] 562 292 #>  [44083,] 563 292 #>  [44084,] 564 292 #>  [44085,] 565 292 #>  [44086,] 566 292 #>  [44087,] 567 292 #>  [44088,] 568 292 #>  [44089,] 569 292 #>  [44090,] 570 292 #>  [44091,] 571 292 #>  [44092,] 572 292 #>  [44093,] 573 292 #>  [44094,] 574 292 #>  [44095,] 575 292 #>  [44096,] 576 292 #>  [44097,] 577 292 #>  [44098,] 578 292 #>  [44099,] 579 292 #>  [44100,] 580 292 #>  [44101,] 581 292 #>  [44102,] 582 292 #>  [44103,] 583 292 #>  [44104,] 584 292 #>  [44105,] 585 292 #>  [44106,] 586 292 #>  [44107,] 587 292 #>  [44108,] 588 292 #>  [44109,] 589 292 #>  [44110,] 590 292 #>  [44111,] 591 292 #>  [44112,] 592 292 #>  [44113,] 593 292 #>  [44114,] 594 292 #>  [44115,] 595 292 #>  [44116,] 596 292 #>  [44117,] 597 292 #>  [44118,] 598 292 #>  [44119,] 599 292 #>  [44120,] 600 292 #>  [44121,] 601 292 #>  [44122,] 602 292 #>  [44123,] 603 292 #>  [44124,] 604 292 #>  [44125,] 605 292 #>  [44126,] 606 292 #>  [44127,] 607 292 #>  [44128,] 608 292 #>  [44129,] 609 292 #>  [44130,] 610 292 #>  [44131,] 611 292 #>  [44132,] 612 292 #>  [44133,] 613 292 #>  [44134,] 614 292 #>  [44135,] 615 292 #>  [44136,] 616 292 #>  [44137,] 617 292 #>  [44138,] 618 292 #>  [44139,] 619 292 #>  [44140,] 620 292 #>  [44141,] 621 292 #>  [44142,] 622 292 #>  [44143,] 623 292 #>  [44144,] 624 292 #>  [44145,] 625 292 #>  [44146,] 626 292 #>  [44147,] 627 292 #>  [44148,] 628 292 #>  [44149,] 629 292 #>  [44150,] 630 292 #>  [44151,] 631 292 #>  [44152,] 632 292 #>  [44153,] 633 292 #>  [44154,] 634 292 #>  [44155,] 635 292 #>  [44156,] 636 292 #>  [44157,] 637 292 #>  [44158,] 638 292 #>  [44159,] 639 292 #>  [44160,] 640 292 #>  [44161,]   1 291 #>  [44162,]   2 291 #>  [44163,]   3 291 #>  [44164,]   4 291 #>  [44165,]   5 291 #>  [44166,]   6 291 #>  [44167,]   7 291 #>  [44168,]   8 291 #>  [44169,]   9 291 #>  [44170,]  10 291 #>  [44171,]  11 291 #>  [44172,]  12 291 #>  [44173,]  13 291 #>  [44174,]  14 291 #>  [44175,]  15 291 #>  [44176,]  16 291 #>  [44177,]  17 291 #>  [44178,]  18 291 #>  [44179,]  19 291 #>  [44180,]  20 291 #>  [44181,]  21 291 #>  [44182,]  22 291 #>  [44183,]  23 291 #>  [44184,]  24 291 #>  [44185,]  25 291 #>  [44186,]  26 291 #>  [44187,]  27 291 #>  [44188,]  28 291 #>  [44189,]  29 291 #>  [44190,]  30 291 #>  [44191,]  31 291 #>  [44192,]  32 291 #>  [44193,]  33 291 #>  [44194,]  34 291 #>  [44195,]  35 291 #>  [44196,]  36 291 #>  [44197,]  37 291 #>  [44198,]  38 291 #>  [44199,]  39 291 #>  [44200,]  40 291 #>  [44201,]  41 291 #>  [44202,]  42 291 #>  [44203,]  43 291 #>  [44204,]  44 291 #>  [44205,]  45 291 #>  [44206,]  46 291 #>  [44207,]  47 291 #>  [44208,]  48 291 #>  [44209,]  49 291 #>  [44210,]  50 291 #>  [44211,]  51 291 #>  [44212,]  52 291 #>  [44213,]  53 291 #>  [44214,]  54 291 #>  [44215,]  55 291 #>  [44216,]  56 291 #>  [44217,]  57 291 #>  [44218,]  58 291 #>  [44219,]  59 291 #>  [44220,]  60 291 #>  [44221,]  61 291 #>  [44222,]  62 291 #>  [44223,]  63 291 #>  [44224,]  64 291 #>  [44225,]  65 291 #>  [44226,]  66 291 #>  [44227,]  67 291 #>  [44228,]  68 291 #>  [44229,]  69 291 #>  [44230,]  70 291 #>  [44231,]  71 291 #>  [44232,]  72 291 #>  [44233,]  73 291 #>  [44234,]  74 291 #>  [44235,]  75 291 #>  [44236,]  76 291 #>  [44237,]  77 291 #>  [44238,]  78 291 #>  [44239,]  79 291 #>  [44240,]  80 291 #>  [44241,]  81 291 #>  [44242,]  82 291 #>  [44243,]  83 291 #>  [44244,]  84 291 #>  [44245,]  85 291 #>  [44246,]  86 291 #>  [44247,]  87 291 #>  [44248,]  88 291 #>  [44249,]  89 291 #>  [44250,]  90 291 #>  [44251,]  91 291 #>  [44252,]  92 291 #>  [44253,]  93 291 #>  [44254,]  94 291 #>  [44255,]  95 291 #>  [44256,]  96 291 #>  [44257,]  97 291 #>  [44258,]  98 291 #>  [44259,]  99 291 #>  [44260,] 100 291 #>  [44261,] 101 291 #>  [44262,] 102 291 #>  [44263,] 103 291 #>  [44264,] 104 291 #>  [44265,] 105 291 #>  [44266,] 106 291 #>  [44267,] 107 291 #>  [44268,] 108 291 #>  [44269,] 109 291 #>  [44270,] 110 291 #>  [44271,] 111 291 #>  [44272,] 112 291 #>  [44273,] 113 291 #>  [44274,] 114 291 #>  [44275,] 115 291 #>  [44276,] 116 291 #>  [44277,] 117 291 #>  [44278,] 118 291 #>  [44279,] 119 291 #>  [44280,] 120 291 #>  [44281,] 121 291 #>  [44282,] 122 291 #>  [44283,] 123 291 #>  [44284,] 124 291 #>  [44285,] 125 291 #>  [44286,] 126 291 #>  [44287,] 127 291 #>  [44288,] 128 291 #>  [44289,] 129 291 #>  [44290,] 130 291 #>  [44291,] 131 291 #>  [44292,] 132 291 #>  [44293,] 133 291 #>  [44294,] 134 291 #>  [44295,] 135 291 #>  [44296,] 136 291 #>  [44297,] 137 291 #>  [44298,] 138 291 #>  [44299,] 139 291 #>  [44300,] 140 291 #>  [44301,] 141 291 #>  [44302,] 142 291 #>  [44303,] 143 291 #>  [44304,] 144 291 #>  [44305,] 145 291 #>  [44306,] 146 291 #>  [44307,] 147 291 #>  [44308,] 148 291 #>  [44309,] 149 291 #>  [44310,] 150 291 #>  [44311,] 151 291 #>  [44312,] 152 291 #>  [44313,] 153 291 #>  [44314,] 154 291 #>  [44315,] 155 291 #>  [44316,] 156 291 #>  [44317,] 157 291 #>  [44318,] 158 291 #>  [44319,] 159 291 #>  [44320,] 160 291 #>  [44321,] 161 291 #>  [44322,] 162 291 #>  [44323,] 163 291 #>  [44324,] 164 291 #>  [44325,] 165 291 #>  [44326,] 166 291 #>  [44327,] 167 291 #>  [44328,] 168 291 #>  [44329,] 169 291 #>  [44330,] 170 291 #>  [44331,] 171 291 #>  [44332,] 172 291 #>  [44333,] 173 291 #>  [44334,] 174 291 #>  [44335,] 175 291 #>  [44336,] 176 291 #>  [44337,] 177 291 #>  [44338,] 178 291 #>  [44339,] 179 291 #>  [44340,] 180 291 #>  [44341,] 181 291 #>  [44342,] 182 291 #>  [44343,] 183 291 #>  [44344,] 184 291 #>  [44345,] 185 291 #>  [44346,] 186 291 #>  [44347,] 187 291 #>  [44348,] 188 291 #>  [44349,] 189 291 #>  [44350,] 190 291 #>  [44351,] 191 291 #>  [44352,] 192 291 #>  [44353,] 193 291 #>  [44354,] 194 291 #>  [44355,] 195 291 #>  [44356,] 196 291 #>  [44357,] 197 291 #>  [44358,] 198 291 #>  [44359,] 199 291 #>  [44360,] 200 291 #>  [44361,] 201 291 #>  [44362,] 202 291 #>  [44363,] 203 291 #>  [44364,] 204 291 #>  [44365,] 205 291 #>  [44366,] 206 291 #>  [44367,] 207 291 #>  [44368,] 208 291 #>  [44369,] 209 291 #>  [44370,] 210 291 #>  [44371,] 211 291 #>  [44372,] 212 291 #>  [44373,] 213 291 #>  [44374,] 214 291 #>  [44375,] 215 291 #>  [44376,] 216 291 #>  [44377,] 217 291 #>  [44378,] 218 291 #>  [44379,] 219 291 #>  [44380,] 220 291 #>  [44381,] 221 291 #>  [44382,] 222 291 #>  [44383,] 223 291 #>  [44384,] 224 291 #>  [44385,] 225 291 #>  [44386,] 226 291 #>  [44387,] 227 291 #>  [44388,] 228 291 #>  [44389,] 229 291 #>  [44390,] 230 291 #>  [44391,] 231 291 #>  [44392,] 232 291 #>  [44393,] 233 291 #>  [44394,] 234 291 #>  [44395,] 235 291 #>  [44396,] 236 291 #>  [44397,] 237 291 #>  [44398,] 238 291 #>  [44399,] 239 291 #>  [44400,] 240 291 #>  [44401,] 241 291 #>  [44402,] 242 291 #>  [44403,] 243 291 #>  [44404,] 244 291 #>  [44405,] 245 291 #>  [44406,] 246 291 #>  [44407,] 247 291 #>  [44408,] 248 291 #>  [44409,] 249 291 #>  [44410,] 250 291 #>  [44411,] 251 291 #>  [44412,] 252 291 #>  [44413,] 253 291 #>  [44414,] 254 291 #>  [44415,] 255 291 #>  [44416,] 256 291 #>  [44417,] 257 291 #>  [44418,] 258 291 #>  [44419,] 259 291 #>  [44420,] 260 291 #>  [44421,] 261 291 #>  [44422,] 262 291 #>  [44423,] 263 291 #>  [44424,] 264 291 #>  [44425,] 265 291 #>  [44426,] 266 291 #>  [44427,] 267 291 #>  [44428,] 268 291 #>  [44429,] 269 291 #>  [44430,] 270 291 #>  [44431,] 271 291 #>  [44432,] 272 291 #>  [44433,] 273 291 #>  [44434,] 274 291 #>  [44435,] 275 291 #>  [44436,] 276 291 #>  [44437,] 277 291 #>  [44438,] 278 291 #>  [44439,] 279 291 #>  [44440,] 280 291 #>  [44441,] 281 291 #>  [44442,] 282 291 #>  [44443,] 283 291 #>  [44444,] 284 291 #>  [44445,] 285 291 #>  [44446,] 286 291 #>  [44447,] 287 291 #>  [44448,] 288 291 #>  [44449,] 289 291 #>  [44450,] 290 291 #>  [44451,] 291 291 #>  [44452,] 292 291 #>  [44453,] 293 291 #>  [44454,] 294 291 #>  [44455,] 295 291 #>  [44456,] 296 291 #>  [44457,] 297 291 #>  [44458,] 298 291 #>  [44459,] 299 291 #>  [44460,] 300 291 #>  [44461,] 301 291 #>  [44462,] 302 291 #>  [44463,] 303 291 #>  [44464,] 304 291 #>  [44465,] 305 291 #>  [44466,] 306 291 #>  [44467,] 307 291 #>  [44468,] 308 291 #>  [44469,] 309 291 #>  [44470,] 310 291 #>  [44471,] 311 291 #>  [44472,] 312 291 #>  [44473,] 313 291 #>  [44474,] 314 291 #>  [44475,] 315 291 #>  [44476,] 316 291 #>  [44477,] 317 291 #>  [44478,] 318 291 #>  [44479,] 319 291 #>  [44480,] 320 291 #>  [44481,] 321 291 #>  [44482,] 322 291 #>  [44483,] 323 291 #>  [44484,] 324 291 #>  [44485,] 325 291 #>  [44486,] 326 291 #>  [44487,] 327 291 #>  [44488,] 328 291 #>  [44489,] 329 291 #>  [44490,] 330 291 #>  [44491,] 331 291 #>  [44492,] 332 291 #>  [44493,] 333 291 #>  [44494,] 334 291 #>  [44495,] 335 291 #>  [44496,] 336 291 #>  [44497,] 337 291 #>  [44498,] 338 291 #>  [44499,] 339 291 #>  [44500,] 340 291 #>  [44501,] 341 291 #>  [44502,] 342 291 #>  [44503,] 343 291 #>  [44504,] 344 291 #>  [44505,] 345 291 #>  [44506,] 346 291 #>  [44507,] 347 291 #>  [44508,] 348 291 #>  [44509,] 349 291 #>  [44510,] 350 291 #>  [44511,] 351 291 #>  [44512,] 352 291 #>  [44513,] 353 291 #>  [44514,] 354 291 #>  [44515,] 355 291 #>  [44516,] 356 291 #>  [44517,] 357 291 #>  [44518,] 358 291 #>  [44519,] 359 291 #>  [44520,] 360 291 #>  [44521,] 361 291 #>  [44522,] 362 291 #>  [44523,] 363 291 #>  [44524,] 364 291 #>  [44525,] 365 291 #>  [44526,] 366 291 #>  [44527,] 367 291 #>  [44528,] 368 291 #>  [44529,] 369 291 #>  [44530,] 370 291 #>  [44531,] 371 291 #>  [44532,] 372 291 #>  [44533,] 373 291 #>  [44534,] 374 291 #>  [44535,] 375 291 #>  [44536,] 376 291 #>  [44537,] 377 291 #>  [44538,] 378 291 #>  [44539,] 379 291 #>  [44540,] 380 291 #>  [44541,] 381 291 #>  [44542,] 382 291 #>  [44543,] 383 291 #>  [44544,] 384 291 #>  [44545,] 385 291 #>  [44546,] 386 291 #>  [44547,] 387 291 #>  [44548,] 388 291 #>  [44549,] 389 291 #>  [44550,] 390 291 #>  [44551,] 391 291 #>  [44552,] 392 291 #>  [44553,] 393 291 #>  [44554,] 394 291 #>  [44555,] 395 291 #>  [44556,] 396 291 #>  [44557,] 397 291 #>  [44558,] 398 291 #>  [44559,] 399 291 #>  [44560,] 400 291 #>  [44561,] 401 291 #>  [44562,] 402 291 #>  [44563,] 403 291 #>  [44564,] 404 291 #>  [44565,] 405 291 #>  [44566,] 406 291 #>  [44567,] 407 291 #>  [44568,] 408 291 #>  [44569,] 409 291 #>  [44570,] 410 291 #>  [44571,] 411 291 #>  [44572,] 412 291 #>  [44573,] 413 291 #>  [44574,] 414 291 #>  [44575,] 415 291 #>  [44576,] 416 291 #>  [44577,] 417 291 #>  [44578,] 418 291 #>  [44579,] 419 291 #>  [44580,] 420 291 #>  [44581,] 421 291 #>  [44582,] 422 291 #>  [44583,] 423 291 #>  [44584,] 424 291 #>  [44585,] 425 291 #>  [44586,] 426 291 #>  [44587,] 427 291 #>  [44588,] 428 291 #>  [44589,] 429 291 #>  [44590,] 430 291 #>  [44591,] 431 291 #>  [44592,] 432 291 #>  [44593,] 433 291 #>  [44594,] 434 291 #>  [44595,] 435 291 #>  [44596,] 436 291 #>  [44597,] 437 291 #>  [44598,] 438 291 #>  [44599,] 439 291 #>  [44600,] 440 291 #>  [44601,] 441 291 #>  [44602,] 442 291 #>  [44603,] 443 291 #>  [44604,] 444 291 #>  [44605,] 445 291 #>  [44606,] 446 291 #>  [44607,] 447 291 #>  [44608,] 448 291 #>  [44609,] 449 291 #>  [44610,] 450 291 #>  [44611,] 451 291 #>  [44612,] 452 291 #>  [44613,] 453 291 #>  [44614,] 454 291 #>  [44615,] 455 291 #>  [44616,] 456 291 #>  [44617,] 457 291 #>  [44618,] 458 291 #>  [44619,] 459 291 #>  [44620,] 460 291 #>  [44621,] 461 291 #>  [44622,] 462 291 #>  [44623,] 463 291 #>  [44624,] 464 291 #>  [44625,] 465 291 #>  [44626,] 466 291 #>  [44627,] 467 291 #>  [44628,] 468 291 #>  [44629,] 469 291 #>  [44630,] 470 291 #>  [44631,] 471 291 #>  [44632,] 472 291 #>  [44633,] 473 291 #>  [44634,] 474 291 #>  [44635,] 475 291 #>  [44636,] 476 291 #>  [44637,] 477 291 #>  [44638,] 478 291 #>  [44639,] 479 291 #>  [44640,] 480 291 #>  [44641,] 481 291 #>  [44642,] 482 291 #>  [44643,] 483 291 #>  [44644,] 484 291 #>  [44645,] 485 291 #>  [44646,] 486 291 #>  [44647,] 487 291 #>  [44648,] 488 291 #>  [44649,] 489 291 #>  [44650,] 490 291 #>  [44651,] 491 291 #>  [44652,] 492 291 #>  [44653,] 493 291 #>  [44654,] 494 291 #>  [44655,] 495 291 #>  [44656,] 496 291 #>  [44657,] 497 291 #>  [44658,] 498 291 #>  [44659,] 499 291 #>  [44660,] 500 291 #>  [44661,] 501 291 #>  [44662,] 502 291 #>  [44663,] 503 291 #>  [44664,] 504 291 #>  [44665,] 505 291 #>  [44666,] 506 291 #>  [44667,] 507 291 #>  [44668,] 508 291 #>  [44669,] 509 291 #>  [44670,] 510 291 #>  [44671,] 511 291 #>  [44672,] 512 291 #>  [44673,] 513 291 #>  [44674,] 514 291 #>  [44675,] 515 291 #>  [44676,] 516 291 #>  [44677,] 517 291 #>  [44678,] 518 291 #>  [44679,] 519 291 #>  [44680,] 520 291 #>  [44681,] 521 291 #>  [44682,] 522 291 #>  [44683,] 523 291 #>  [44684,] 524 291 #>  [44685,] 525 291 #>  [44686,] 526 291 #>  [44687,] 527 291 #>  [44688,] 528 291 #>  [44689,] 529 291 #>  [44690,] 530 291 #>  [44691,] 531 291 #>  [44692,] 532 291 #>  [44693,] 533 291 #>  [44694,] 534 291 #>  [44695,] 535 291 #>  [44696,] 536 291 #>  [44697,] 537 291 #>  [44698,] 538 291 #>  [44699,] 539 291 #>  [44700,] 540 291 #>  [44701,] 541 291 #>  [44702,] 542 291 #>  [44703,] 543 291 #>  [44704,] 544 291 #>  [44705,] 545 291 #>  [44706,] 546 291 #>  [44707,] 547 291 #>  [44708,] 548 291 #>  [44709,] 549 291 #>  [44710,] 550 291 #>  [44711,] 551 291 #>  [44712,] 552 291 #>  [44713,] 553 291 #>  [44714,] 554 291 #>  [44715,] 555 291 #>  [44716,] 556 291 #>  [44717,] 557 291 #>  [44718,] 558 291 #>  [44719,] 559 291 #>  [44720,] 560 291 #>  [44721,] 561 291 #>  [44722,] 562 291 #>  [44723,] 563 291 #>  [44724,] 564 291 #>  [44725,] 565 291 #>  [44726,] 566 291 #>  [44727,] 567 291 #>  [44728,] 568 291 #>  [44729,] 569 291 #>  [44730,] 570 291 #>  [44731,] 571 291 #>  [44732,] 572 291 #>  [44733,] 573 291 #>  [44734,] 574 291 #>  [44735,] 575 291 #>  [44736,] 576 291 #>  [44737,] 577 291 #>  [44738,] 578 291 #>  [44739,] 579 291 #>  [44740,] 580 291 #>  [44741,] 581 291 #>  [44742,] 582 291 #>  [44743,] 583 291 #>  [44744,] 584 291 #>  [44745,] 585 291 #>  [44746,] 586 291 #>  [44747,] 587 291 #>  [44748,] 588 291 #>  [44749,] 589 291 #>  [44750,] 590 291 #>  [44751,] 591 291 #>  [44752,] 592 291 #>  [44753,] 593 291 #>  [44754,] 594 291 #>  [44755,] 595 291 #>  [44756,] 596 291 #>  [44757,] 597 291 #>  [44758,] 598 291 #>  [44759,] 599 291 #>  [44760,] 600 291 #>  [44761,] 601 291 #>  [44762,] 602 291 #>  [44763,] 603 291 #>  [44764,] 604 291 #>  [44765,] 605 291 #>  [44766,] 606 291 #>  [44767,] 607 291 #>  [44768,] 608 291 #>  [44769,] 609 291 #>  [44770,] 610 291 #>  [44771,] 611 291 #>  [44772,] 612 291 #>  [44773,] 613 291 #>  [44774,] 614 291 #>  [44775,] 615 291 #>  [44776,] 616 291 #>  [44777,] 617 291 #>  [44778,] 618 291 #>  [44779,] 619 291 #>  [44780,] 620 291 #>  [44781,] 621 291 #>  [44782,] 622 291 #>  [44783,] 623 291 #>  [44784,] 624 291 #>  [44785,] 625 291 #>  [44786,] 626 291 #>  [44787,] 627 291 #>  [44788,] 628 291 #>  [44789,] 629 291 #>  [44790,] 630 291 #>  [44791,] 631 291 #>  [44792,] 632 291 #>  [44793,] 633 291 #>  [44794,] 634 291 #>  [44795,] 635 291 #>  [44796,] 636 291 #>  [44797,] 637 291 #>  [44798,] 638 291 #>  [44799,] 639 291 #>  [44800,] 640 291 #>  [44801,]   1 290 #>  [44802,]   2 290 #>  [44803,]   3 290 #>  [44804,]   4 290 #>  [44805,]   5 290 #>  [44806,]   6 290 #>  [44807,]   7 290 #>  [44808,]   8 290 #>  [44809,]   9 290 #>  [44810,]  10 290 #>  [44811,]  11 290 #>  [44812,]  12 290 #>  [44813,]  13 290 #>  [44814,]  14 290 #>  [44815,]  15 290 #>  [44816,]  16 290 #>  [44817,]  17 290 #>  [44818,]  18 290 #>  [44819,]  19 290 #>  [44820,]  20 290 #>  [44821,]  21 290 #>  [44822,]  22 290 #>  [44823,]  23 290 #>  [44824,]  24 290 #>  [44825,]  25 290 #>  [44826,]  26 290 #>  [44827,]  27 290 #>  [44828,]  28 290 #>  [44829,]  29 290 #>  [44830,]  30 290 #>  [44831,]  31 290 #>  [44832,]  32 290 #>  [44833,]  33 290 #>  [44834,]  34 290 #>  [44835,]  35 290 #>  [44836,]  36 290 #>  [44837,]  37 290 #>  [44838,]  38 290 #>  [44839,]  39 290 #>  [44840,]  40 290 #>  [44841,]  41 290 #>  [44842,]  42 290 #>  [44843,]  43 290 #>  [44844,]  44 290 #>  [44845,]  45 290 #>  [44846,]  46 290 #>  [44847,]  47 290 #>  [44848,]  48 290 #>  [44849,]  49 290 #>  [44850,]  50 290 #>  [44851,]  51 290 #>  [44852,]  52 290 #>  [44853,]  53 290 #>  [44854,]  54 290 #>  [44855,]  55 290 #>  [44856,]  56 290 #>  [44857,]  57 290 #>  [44858,]  58 290 #>  [44859,]  59 290 #>  [44860,]  60 290 #>  [44861,]  61 290 #>  [44862,]  62 290 #>  [44863,]  63 290 #>  [44864,]  64 290 #>  [44865,]  65 290 #>  [44866,]  66 290 #>  [44867,]  67 290 #>  [44868,]  68 290 #>  [44869,]  69 290 #>  [44870,]  70 290 #>  [44871,]  71 290 #>  [44872,]  72 290 #>  [44873,]  73 290 #>  [44874,]  74 290 #>  [44875,]  75 290 #>  [44876,]  76 290 #>  [44877,]  77 290 #>  [44878,]  78 290 #>  [44879,]  79 290 #>  [44880,]  80 290 #>  [44881,]  81 290 #>  [44882,]  82 290 #>  [44883,]  83 290 #>  [44884,]  84 290 #>  [44885,]  85 290 #>  [44886,]  86 290 #>  [44887,]  87 290 #>  [44888,]  88 290 #>  [44889,]  89 290 #>  [44890,]  90 290 #>  [44891,]  91 290 #>  [44892,]  92 290 #>  [44893,]  93 290 #>  [44894,]  94 290 #>  [44895,]  95 290 #>  [44896,]  96 290 #>  [44897,]  97 290 #>  [44898,]  98 290 #>  [44899,]  99 290 #>  [44900,] 100 290 #>  [44901,] 101 290 #>  [44902,] 102 290 #>  [44903,] 103 290 #>  [44904,] 104 290 #>  [44905,] 105 290 #>  [44906,] 106 290 #>  [44907,] 107 290 #>  [44908,] 108 290 #>  [44909,] 109 290 #>  [44910,] 110 290 #>  [44911,] 111 290 #>  [44912,] 112 290 #>  [44913,] 113 290 #>  [44914,] 114 290 #>  [44915,] 115 290 #>  [44916,] 116 290 #>  [44917,] 117 290 #>  [44918,] 118 290 #>  [44919,] 119 290 #>  [44920,] 120 290 #>  [44921,] 121 290 #>  [44922,] 122 290 #>  [44923,] 123 290 #>  [44924,] 124 290 #>  [44925,] 125 290 #>  [44926,] 126 290 #>  [44927,] 127 290 #>  [44928,] 128 290 #>  [44929,] 129 290 #>  [44930,] 130 290 #>  [44931,] 131 290 #>  [44932,] 132 290 #>  [44933,] 133 290 #>  [44934,] 134 290 #>  [44935,] 135 290 #>  [44936,] 136 290 #>  [44937,] 137 290 #>  [44938,] 138 290 #>  [44939,] 139 290 #>  [44940,] 140 290 #>  [44941,] 141 290 #>  [44942,] 142 290 #>  [44943,] 143 290 #>  [44944,] 144 290 #>  [44945,] 145 290 #>  [44946,] 146 290 #>  [44947,] 147 290 #>  [44948,] 148 290 #>  [44949,] 149 290 #>  [44950,] 150 290 #>  [44951,] 151 290 #>  [44952,] 152 290 #>  [44953,] 153 290 #>  [44954,] 154 290 #>  [44955,] 155 290 #>  [44956,] 156 290 #>  [44957,] 157 290 #>  [44958,] 158 290 #>  [44959,] 159 290 #>  [44960,] 160 290 #>  [44961,] 161 290 #>  [44962,] 162 290 #>  [44963,] 163 290 #>  [44964,] 164 290 #>  [44965,] 165 290 #>  [44966,] 166 290 #>  [44967,] 167 290 #>  [44968,] 168 290 #>  [44969,] 169 290 #>  [44970,] 170 290 #>  [44971,] 171 290 #>  [44972,] 172 290 #>  [44973,] 173 290 #>  [44974,] 174 290 #>  [44975,] 175 290 #>  [44976,] 176 290 #>  [44977,] 177 290 #>  [44978,] 178 290 #>  [44979,] 179 290 #>  [44980,] 180 290 #>  [44981,] 181 290 #>  [44982,] 182 290 #>  [44983,] 183 290 #>  [44984,] 184 290 #>  [44985,] 185 290 #>  [44986,] 186 290 #>  [44987,] 187 290 #>  [44988,] 188 290 #>  [44989,] 189 290 #>  [44990,] 190 290 #>  [44991,] 191 290 #>  [44992,] 192 290 #>  [44993,] 193 290 #>  [44994,] 194 290 #>  [44995,] 195 290 #>  [44996,] 196 290 #>  [44997,] 197 290 #>  [44998,] 198 290 #>  [44999,] 199 290 #>  [45000,] 200 290 #>  [45001,] 201 290 #>  [45002,] 202 290 #>  [45003,] 203 290 #>  [45004,] 204 290 #>  [45005,] 205 290 #>  [45006,] 206 290 #>  [45007,] 207 290 #>  [45008,] 208 290 #>  [45009,] 209 290 #>  [45010,] 210 290 #>  [45011,] 211 290 #>  [45012,] 212 290 #>  [45013,] 213 290 #>  [45014,] 214 290 #>  [45015,] 215 290 #>  [45016,] 216 290 #>  [45017,] 217 290 #>  [45018,] 218 290 #>  [45019,] 219 290 #>  [45020,] 220 290 #>  [45021,] 221 290 #>  [45022,] 222 290 #>  [45023,] 223 290 #>  [45024,] 224 290 #>  [45025,] 225 290 #>  [45026,] 226 290 #>  [45027,] 227 290 #>  [45028,] 228 290 #>  [45029,] 229 290 #>  [45030,] 230 290 #>  [45031,] 231 290 #>  [45032,] 232 290 #>  [45033,] 233 290 #>  [45034,] 234 290 #>  [45035,] 235 290 #>  [45036,] 236 290 #>  [45037,] 237 290 #>  [45038,] 238 290 #>  [45039,] 239 290 #>  [45040,] 240 290 #>  [45041,] 241 290 #>  [45042,] 242 290 #>  [45043,] 243 290 #>  [45044,] 244 290 #>  [45045,] 245 290 #>  [45046,] 246 290 #>  [45047,] 247 290 #>  [45048,] 248 290 #>  [45049,] 249 290 #>  [45050,] 250 290 #>  [45051,] 251 290 #>  [45052,] 252 290 #>  [45053,] 253 290 #>  [45054,] 254 290 #>  [45055,] 255 290 #>  [45056,] 256 290 #>  [45057,] 257 290 #>  [45058,] 258 290 #>  [45059,] 259 290 #>  [45060,] 260 290 #>  [45061,] 261 290 #>  [45062,] 262 290 #>  [45063,] 263 290 #>  [45064,] 264 290 #>  [45065,] 265 290 #>  [45066,] 266 290 #>  [45067,] 267 290 #>  [45068,] 268 290 #>  [45069,] 269 290 #>  [45070,] 270 290 #>  [45071,] 271 290 #>  [45072,] 272 290 #>  [45073,] 273 290 #>  [45074,] 274 290 #>  [45075,] 275 290 #>  [45076,] 276 290 #>  [45077,] 277 290 #>  [45078,] 278 290 #>  [45079,] 279 290 #>  [45080,] 280 290 #>  [45081,] 281 290 #>  [45082,] 282 290 #>  [45083,] 283 290 #>  [45084,] 284 290 #>  [45085,] 285 290 #>  [45086,] 286 290 #>  [45087,] 287 290 #>  [45088,] 288 290 #>  [45089,] 289 290 #>  [45090,] 290 290 #>  [45091,] 291 290 #>  [45092,] 292 290 #>  [45093,] 293 290 #>  [45094,] 294 290 #>  [45095,] 295 290 #>  [45096,] 296 290 #>  [45097,] 297 290 #>  [45098,] 298 290 #>  [45099,] 299 290 #>  [45100,] 300 290 #>  [45101,] 301 290 #>  [45102,] 302 290 #>  [45103,] 303 290 #>  [45104,] 304 290 #>  [45105,] 305 290 #>  [45106,] 306 290 #>  [45107,] 307 290 #>  [45108,] 308 290 #>  [45109,] 309 290 #>  [45110,] 310 290 #>  [45111,] 311 290 #>  [45112,] 312 290 #>  [45113,] 313 290 #>  [45114,] 314 290 #>  [45115,] 315 290 #>  [45116,] 316 290 #>  [45117,] 317 290 #>  [45118,] 318 290 #>  [45119,] 319 290 #>  [45120,] 320 290 #>  [45121,] 321 290 #>  [45122,] 322 290 #>  [45123,] 323 290 #>  [45124,] 324 290 #>  [45125,] 325 290 #>  [45126,] 326 290 #>  [45127,] 327 290 #>  [45128,] 328 290 #>  [45129,] 329 290 #>  [45130,] 330 290 #>  [45131,] 331 290 #>  [45132,] 332 290 #>  [45133,] 333 290 #>  [45134,] 334 290 #>  [45135,] 335 290 #>  [45136,] 336 290 #>  [45137,] 337 290 #>  [45138,] 338 290 #>  [45139,] 339 290 #>  [45140,] 340 290 #>  [45141,] 341 290 #>  [45142,] 342 290 #>  [45143,] 343 290 #>  [45144,] 344 290 #>  [45145,] 345 290 #>  [45146,] 346 290 #>  [45147,] 347 290 #>  [45148,] 348 290 #>  [45149,] 349 290 #>  [45150,] 350 290 #>  [45151,] 351 290 #>  [45152,] 352 290 #>  [45153,] 353 290 #>  [45154,] 354 290 #>  [45155,] 355 290 #>  [45156,] 356 290 #>  [45157,] 357 290 #>  [45158,] 358 290 #>  [45159,] 359 290 #>  [45160,] 360 290 #>  [45161,] 361 290 #>  [45162,] 362 290 #>  [45163,] 363 290 #>  [45164,] 364 290 #>  [45165,] 365 290 #>  [45166,] 366 290 #>  [45167,] 367 290 #>  [45168,] 368 290 #>  [45169,] 369 290 #>  [45170,] 370 290 #>  [45171,] 371 290 #>  [45172,] 372 290 #>  [45173,] 373 290 #>  [45174,] 374 290 #>  [45175,] 375 290 #>  [45176,] 376 290 #>  [45177,] 377 290 #>  [45178,] 378 290 #>  [45179,] 379 290 #>  [45180,] 380 290 #>  [45181,] 381 290 #>  [45182,] 382 290 #>  [45183,] 383 290 #>  [45184,] 384 290 #>  [45185,] 385 290 #>  [45186,] 386 290 #>  [45187,] 387 290 #>  [45188,] 388 290 #>  [45189,] 389 290 #>  [45190,] 390 290 #>  [45191,] 391 290 #>  [45192,] 392 290 #>  [45193,] 393 290 #>  [45194,] 394 290 #>  [45195,] 395 290 #>  [45196,] 396 290 #>  [45197,] 397 290 #>  [45198,] 398 290 #>  [45199,] 399 290 #>  [45200,] 400 290 #>  [45201,] 401 290 #>  [45202,] 402 290 #>  [45203,] 403 290 #>  [45204,] 404 290 #>  [45205,] 405 290 #>  [45206,] 406 290 #>  [45207,] 407 290 #>  [45208,] 408 290 #>  [45209,] 409 290 #>  [45210,] 410 290 #>  [45211,] 411 290 #>  [45212,] 412 290 #>  [45213,] 413 290 #>  [45214,] 414 290 #>  [45215,] 415 290 #>  [45216,] 416 290 #>  [45217,] 417 290 #>  [45218,] 418 290 #>  [45219,] 419 290 #>  [45220,] 420 290 #>  [45221,] 421 290 #>  [45222,] 422 290 #>  [45223,] 423 290 #>  [45224,] 424 290 #>  [45225,] 425 290 #>  [45226,] 426 290 #>  [45227,] 427 290 #>  [45228,] 428 290 #>  [45229,] 429 290 #>  [45230,] 430 290 #>  [45231,] 431 290 #>  [45232,] 432 290 #>  [45233,] 433 290 #>  [45234,] 434 290 #>  [45235,] 435 290 #>  [45236,] 436 290 #>  [45237,] 437 290 #>  [45238,] 438 290 #>  [45239,] 439 290 #>  [45240,] 440 290 #>  [45241,] 441 290 #>  [45242,] 442 290 #>  [45243,] 443 290 #>  [45244,] 444 290 #>  [45245,] 445 290 #>  [45246,] 446 290 #>  [45247,] 447 290 #>  [45248,] 448 290 #>  [45249,] 449 290 #>  [45250,] 450 290 #>  [45251,] 451 290 #>  [45252,] 452 290 #>  [45253,] 453 290 #>  [45254,] 454 290 #>  [45255,] 455 290 #>  [45256,] 456 290 #>  [45257,] 457 290 #>  [45258,] 458 290 #>  [45259,] 459 290 #>  [45260,] 460 290 #>  [45261,] 461 290 #>  [45262,] 462 290 #>  [45263,] 463 290 #>  [45264,] 464 290 #>  [45265,] 465 290 #>  [45266,] 466 290 #>  [45267,] 467 290 #>  [45268,] 468 290 #>  [45269,] 469 290 #>  [45270,] 470 290 #>  [45271,] 471 290 #>  [45272,] 472 290 #>  [45273,] 473 290 #>  [45274,] 474 290 #>  [45275,] 475 290 #>  [45276,] 476 290 #>  [45277,] 477 290 #>  [45278,] 478 290 #>  [45279,] 479 290 #>  [45280,] 480 290 #>  [45281,] 481 290 #>  [45282,] 482 290 #>  [45283,] 483 290 #>  [45284,] 484 290 #>  [45285,] 485 290 #>  [45286,] 486 290 #>  [45287,] 487 290 #>  [45288,] 488 290 #>  [45289,] 489 290 #>  [45290,] 490 290 #>  [45291,] 491 290 #>  [45292,] 492 290 #>  [45293,] 493 290 #>  [45294,] 494 290 #>  [45295,] 495 290 #>  [45296,] 496 290 #>  [45297,] 497 290 #>  [45298,] 498 290 #>  [45299,] 499 290 #>  [45300,] 500 290 #>  [45301,] 501 290 #>  [45302,] 502 290 #>  [45303,] 503 290 #>  [45304,] 504 290 #>  [45305,] 505 290 #>  [45306,] 506 290 #>  [45307,] 507 290 #>  [45308,] 508 290 #>  [45309,] 509 290 #>  [45310,] 510 290 #>  [45311,] 511 290 #>  [45312,] 512 290 #>  [45313,] 513 290 #>  [45314,] 514 290 #>  [45315,] 515 290 #>  [45316,] 516 290 #>  [45317,] 517 290 #>  [45318,] 518 290 #>  [45319,] 519 290 #>  [45320,] 520 290 #>  [45321,] 521 290 #>  [45322,] 522 290 #>  [45323,] 523 290 #>  [45324,] 524 290 #>  [45325,] 525 290 #>  [45326,] 526 290 #>  [45327,] 527 290 #>  [45328,] 528 290 #>  [45329,] 529 290 #>  [45330,] 530 290 #>  [45331,] 531 290 #>  [45332,] 532 290 #>  [45333,] 533 290 #>  [45334,] 534 290 #>  [45335,] 535 290 #>  [45336,] 536 290 #>  [45337,] 537 290 #>  [45338,] 538 290 #>  [45339,] 539 290 #>  [45340,] 540 290 #>  [45341,] 541 290 #>  [45342,] 542 290 #>  [45343,] 543 290 #>  [45344,] 544 290 #>  [45345,] 545 290 #>  [45346,] 546 290 #>  [45347,] 547 290 #>  [45348,] 548 290 #>  [45349,] 549 290 #>  [45350,] 550 290 #>  [45351,] 551 290 #>  [45352,] 552 290 #>  [45353,] 553 290 #>  [45354,] 554 290 #>  [45355,] 555 290 #>  [45356,] 556 290 #>  [45357,] 557 290 #>  [45358,] 558 290 #>  [45359,] 559 290 #>  [45360,] 560 290 #>  [45361,] 561 290 #>  [45362,] 562 290 #>  [45363,] 563 290 #>  [45364,] 564 290 #>  [45365,] 565 290 #>  [45366,] 566 290 #>  [45367,] 567 290 #>  [45368,] 568 290 #>  [45369,] 569 290 #>  [45370,] 570 290 #>  [45371,] 571 290 #>  [45372,] 572 290 #>  [45373,] 573 290 #>  [45374,] 574 290 #>  [45375,] 575 290 #>  [45376,] 576 290 #>  [45377,] 577 290 #>  [45378,] 578 290 #>  [45379,] 579 290 #>  [45380,] 580 290 #>  [45381,] 581 290 #>  [45382,] 582 290 #>  [45383,] 583 290 #>  [45384,] 584 290 #>  [45385,] 585 290 #>  [45386,] 586 290 #>  [45387,] 587 290 #>  [45388,] 588 290 #>  [45389,] 589 290 #>  [45390,] 590 290 #>  [45391,] 591 290 #>  [45392,] 592 290 #>  [45393,] 593 290 #>  [45394,] 594 290 #>  [45395,] 595 290 #>  [45396,] 596 290 #>  [45397,] 597 290 #>  [45398,] 598 290 #>  [45399,] 599 290 #>  [45400,] 600 290 #>  [45401,] 601 290 #>  [45402,] 602 290 #>  [45403,] 603 290 #>  [45404,] 604 290 #>  [45405,] 605 290 #>  [45406,] 606 290 #>  [45407,] 607 290 #>  [45408,] 608 290 #>  [45409,] 609 290 #>  [45410,] 610 290 #>  [45411,] 611 290 #>  [45412,] 612 290 #>  [45413,] 613 290 #>  [45414,] 614 290 #>  [45415,] 615 290 #>  [45416,] 616 290 #>  [45417,] 617 290 #>  [45418,] 618 290 #>  [45419,] 619 290 #>  [45420,] 620 290 #>  [45421,] 621 290 #>  [45422,] 622 290 #>  [45423,] 623 290 #>  [45424,] 624 290 #>  [45425,] 625 290 #>  [45426,] 626 290 #>  [45427,] 627 290 #>  [45428,] 628 290 #>  [45429,] 629 290 #>  [45430,] 630 290 #>  [45431,] 631 290 #>  [45432,] 632 290 #>  [45433,] 633 290 #>  [45434,] 634 290 #>  [45435,] 635 290 #>  [45436,] 636 290 #>  [45437,] 637 290 #>  [45438,] 638 290 #>  [45439,] 639 290 #>  [45440,] 640 290 #>  [45441,]   1 289 #>  [45442,]   2 289 #>  [45443,]   3 289 #>  [45444,]   4 289 #>  [45445,]   5 289 #>  [45446,]   6 289 #>  [45447,]   7 289 #>  [45448,]   8 289 #>  [45449,]   9 289 #>  [45450,]  10 289 #>  [45451,]  11 289 #>  [45452,]  12 289 #>  [45453,]  13 289 #>  [45454,]  14 289 #>  [45455,]  15 289 #>  [45456,]  16 289 #>  [45457,]  17 289 #>  [45458,]  18 289 #>  [45459,]  19 289 #>  [45460,]  20 289 #>  [45461,]  21 289 #>  [45462,]  22 289 #>  [45463,]  23 289 #>  [45464,]  24 289 #>  [45465,]  25 289 #>  [45466,]  26 289 #>  [45467,]  27 289 #>  [45468,]  28 289 #>  [45469,]  29 289 #>  [45470,]  30 289 #>  [45471,]  31 289 #>  [45472,]  32 289 #>  [45473,]  33 289 #>  [45474,]  34 289 #>  [45475,]  35 289 #>  [45476,]  36 289 #>  [45477,]  37 289 #>  [45478,]  38 289 #>  [45479,]  39 289 #>  [45480,]  40 289 #>  [45481,]  41 289 #>  [45482,]  42 289 #>  [45483,]  43 289 #>  [45484,]  44 289 #>  [45485,]  45 289 #>  [45486,]  46 289 #>  [45487,]  47 289 #>  [45488,]  48 289 #>  [45489,]  49 289 #>  [45490,]  50 289 #>  [45491,]  51 289 #>  [45492,]  52 289 #>  [45493,]  53 289 #>  [45494,]  54 289 #>  [45495,]  55 289 #>  [45496,]  56 289 #>  [45497,]  57 289 #>  [45498,]  58 289 #>  [45499,]  59 289 #>  [45500,]  60 289 #>  [45501,]  61 289 #>  [45502,]  62 289 #>  [45503,]  63 289 #>  [45504,]  64 289 #>  [45505,]  65 289 #>  [45506,]  66 289 #>  [45507,]  67 289 #>  [45508,]  68 289 #>  [45509,]  69 289 #>  [45510,]  70 289 #>  [45511,]  71 289 #>  [45512,]  72 289 #>  [45513,]  73 289 #>  [45514,]  74 289 #>  [45515,]  75 289 #>  [45516,]  76 289 #>  [45517,]  77 289 #>  [45518,]  78 289 #>  [45519,]  79 289 #>  [45520,]  80 289 #>  [45521,]  81 289 #>  [45522,]  82 289 #>  [45523,]  83 289 #>  [45524,]  84 289 #>  [45525,]  85 289 #>  [45526,]  86 289 #>  [45527,]  87 289 #>  [45528,]  88 289 #>  [45529,]  89 289 #>  [45530,]  90 289 #>  [45531,]  91 289 #>  [45532,]  92 289 #>  [45533,]  93 289 #>  [45534,]  94 289 #>  [45535,]  95 289 #>  [45536,]  96 289 #>  [45537,]  97 289 #>  [45538,]  98 289 #>  [45539,]  99 289 #>  [45540,] 100 289 #>  [45541,] 101 289 #>  [45542,] 102 289 #>  [45543,] 103 289 #>  [45544,] 104 289 #>  [45545,] 105 289 #>  [45546,] 106 289 #>  [45547,] 107 289 #>  [45548,] 108 289 #>  [45549,] 109 289 #>  [45550,] 110 289 #>  [45551,] 111 289 #>  [45552,] 112 289 #>  [45553,] 113 289 #>  [45554,] 114 289 #>  [45555,] 115 289 #>  [45556,] 116 289 #>  [45557,] 117 289 #>  [45558,] 118 289 #>  [45559,] 119 289 #>  [45560,] 120 289 #>  [45561,] 121 289 #>  [45562,] 122 289 #>  [45563,] 123 289 #>  [45564,] 124 289 #>  [45565,] 125 289 #>  [45566,] 126 289 #>  [45567,] 127 289 #>  [45568,] 128 289 #>  [45569,] 129 289 #>  [45570,] 130 289 #>  [45571,] 131 289 #>  [45572,] 132 289 #>  [45573,] 133 289 #>  [45574,] 134 289 #>  [45575,] 135 289 #>  [45576,] 136 289 #>  [45577,] 137 289 #>  [45578,] 138 289 #>  [45579,] 139 289 #>  [45580,] 140 289 #>  [45581,] 141 289 #>  [45582,] 142 289 #>  [45583,] 143 289 #>  [45584,] 144 289 #>  [45585,] 145 289 #>  [45586,] 146 289 #>  [45587,] 147 289 #>  [45588,] 148 289 #>  [45589,] 149 289 #>  [45590,] 150 289 #>  [45591,] 151 289 #>  [45592,] 152 289 #>  [45593,] 153 289 #>  [45594,] 154 289 #>  [45595,] 155 289 #>  [45596,] 156 289 #>  [45597,] 157 289 #>  [45598,] 158 289 #>  [45599,] 159 289 #>  [45600,] 160 289 #>  [45601,] 161 289 #>  [45602,] 162 289 #>  [45603,] 163 289 #>  [45604,] 164 289 #>  [45605,] 165 289 #>  [45606,] 166 289 #>  [45607,] 167 289 #>  [45608,] 168 289 #>  [45609,] 169 289 #>  [45610,] 170 289 #>  [45611,] 171 289 #>  [45612,] 172 289 #>  [45613,] 173 289 #>  [45614,] 174 289 #>  [45615,] 175 289 #>  [45616,] 176 289 #>  [45617,] 177 289 #>  [45618,] 178 289 #>  [45619,] 179 289 #>  [45620,] 180 289 #>  [45621,] 181 289 #>  [45622,] 182 289 #>  [45623,] 183 289 #>  [45624,] 184 289 #>  [45625,] 185 289 #>  [45626,] 186 289 #>  [45627,] 187 289 #>  [45628,] 188 289 #>  [45629,] 189 289 #>  [45630,] 190 289 #>  [45631,] 191 289 #>  [45632,] 192 289 #>  [45633,] 193 289 #>  [45634,] 194 289 #>  [45635,] 195 289 #>  [45636,] 196 289 #>  [45637,] 197 289 #>  [45638,] 198 289 #>  [45639,] 199 289 #>  [45640,] 200 289 #>  [45641,] 201 289 #>  [45642,] 202 289 #>  [45643,] 203 289 #>  [45644,] 204 289 #>  [45645,] 205 289 #>  [45646,] 206 289 #>  [45647,] 207 289 #>  [45648,] 208 289 #>  [45649,] 209 289 #>  [45650,] 210 289 #>  [45651,] 211 289 #>  [45652,] 212 289 #>  [45653,] 213 289 #>  [45654,] 214 289 #>  [45655,] 215 289 #>  [45656,] 216 289 #>  [45657,] 217 289 #>  [45658,] 218 289 #>  [45659,] 219 289 #>  [45660,] 220 289 #>  [45661,] 221 289 #>  [45662,] 222 289 #>  [45663,] 223 289 #>  [45664,] 224 289 #>  [45665,] 225 289 #>  [45666,] 226 289 #>  [45667,] 227 289 #>  [45668,] 228 289 #>  [45669,] 229 289 #>  [45670,] 230 289 #>  [45671,] 231 289 #>  [45672,] 232 289 #>  [45673,] 233 289 #>  [45674,] 234 289 #>  [45675,] 235 289 #>  [45676,] 236 289 #>  [45677,] 237 289 #>  [45678,] 238 289 #>  [45679,] 239 289 #>  [45680,] 240 289 #>  [45681,] 241 289 #>  [45682,] 242 289 #>  [45683,] 243 289 #>  [45684,] 244 289 #>  [45685,] 245 289 #>  [45686,] 246 289 #>  [45687,] 247 289 #>  [45688,] 248 289 #>  [45689,] 249 289 #>  [45690,] 250 289 #>  [45691,] 251 289 #>  [45692,] 252 289 #>  [45693,] 253 289 #>  [45694,] 254 289 #>  [45695,] 255 289 #>  [45696,] 256 289 #>  [45697,] 257 289 #>  [45698,] 258 289 #>  [45699,] 259 289 #>  [45700,] 260 289 #>  [45701,] 261 289 #>  [45702,] 262 289 #>  [45703,] 263 289 #>  [45704,] 264 289 #>  [45705,] 265 289 #>  [45706,] 266 289 #>  [45707,] 267 289 #>  [45708,] 268 289 #>  [45709,] 269 289 #>  [45710,] 270 289 #>  [45711,] 271 289 #>  [45712,] 272 289 #>  [45713,] 273 289 #>  [45714,] 274 289 #>  [45715,] 275 289 #>  [45716,] 276 289 #>  [45717,] 277 289 #>  [45718,] 278 289 #>  [45719,] 279 289 #>  [45720,] 280 289 #>  [45721,] 281 289 #>  [45722,] 282 289 #>  [45723,] 283 289 #>  [45724,] 284 289 #>  [45725,] 285 289 #>  [45726,] 286 289 #>  [45727,] 287 289 #>  [45728,] 288 289 #>  [45729,] 289 289 #>  [45730,] 290 289 #>  [45731,] 291 289 #>  [45732,] 292 289 #>  [45733,] 293 289 #>  [45734,] 294 289 #>  [45735,] 295 289 #>  [45736,] 296 289 #>  [45737,] 297 289 #>  [45738,] 298 289 #>  [45739,] 299 289 #>  [45740,] 300 289 #>  [45741,] 301 289 #>  [45742,] 302 289 #>  [45743,] 303 289 #>  [45744,] 304 289 #>  [45745,] 305 289 #>  [45746,] 306 289 #>  [45747,] 307 289 #>  [45748,] 308 289 #>  [45749,] 309 289 #>  [45750,] 310 289 #>  [45751,] 311 289 #>  [45752,] 312 289 #>  [45753,] 313 289 #>  [45754,] 314 289 #>  [45755,] 315 289 #>  [45756,] 316 289 #>  [45757,] 317 289 #>  [45758,] 318 289 #>  [45759,] 319 289 #>  [45760,] 320 289 #>  [45761,] 321 289 #>  [45762,] 322 289 #>  [45763,] 323 289 #>  [45764,] 324 289 #>  [45765,] 325 289 #>  [45766,] 326 289 #>  [45767,] 327 289 #>  [45768,] 328 289 #>  [45769,] 329 289 #>  [45770,] 330 289 #>  [45771,] 331 289 #>  [45772,] 332 289 #>  [45773,] 333 289 #>  [45774,] 334 289 #>  [45775,] 335 289 #>  [45776,] 336 289 #>  [45777,] 337 289 #>  [45778,] 338 289 #>  [45779,] 339 289 #>  [45780,] 340 289 #>  [45781,] 341 289 #>  [45782,] 342 289 #>  [45783,] 343 289 #>  [45784,] 344 289 #>  [45785,] 345 289 #>  [45786,] 346 289 #>  [45787,] 347 289 #>  [45788,] 348 289 #>  [45789,] 349 289 #>  [45790,] 350 289 #>  [45791,] 351 289 #>  [45792,] 352 289 #>  [45793,] 353 289 #>  [45794,] 354 289 #>  [45795,] 355 289 #>  [45796,] 356 289 #>  [45797,] 357 289 #>  [45798,] 358 289 #>  [45799,] 359 289 #>  [45800,] 360 289 #>  [45801,] 361 289 #>  [45802,] 362 289 #>  [45803,] 363 289 #>  [45804,] 364 289 #>  [45805,] 365 289 #>  [45806,] 366 289 #>  [45807,] 367 289 #>  [45808,] 368 289 #>  [45809,] 369 289 #>  [45810,] 370 289 #>  [45811,] 371 289 #>  [45812,] 372 289 #>  [45813,] 373 289 #>  [45814,] 374 289 #>  [45815,] 375 289 #>  [45816,] 376 289 #>  [45817,] 377 289 #>  [45818,] 378 289 #>  [45819,] 379 289 #>  [45820,] 380 289 #>  [45821,] 381 289 #>  [45822,] 382 289 #>  [45823,] 383 289 #>  [45824,] 384 289 #>  [45825,] 385 289 #>  [45826,] 386 289 #>  [45827,] 387 289 #>  [45828,] 388 289 #>  [45829,] 389 289 #>  [45830,] 390 289 #>  [45831,] 391 289 #>  [45832,] 392 289 #>  [45833,] 393 289 #>  [45834,] 394 289 #>  [45835,] 395 289 #>  [45836,] 396 289 #>  [45837,] 397 289 #>  [45838,] 398 289 #>  [45839,] 399 289 #>  [45840,] 400 289 #>  [45841,] 401 289 #>  [45842,] 402 289 #>  [45843,] 403 289 #>  [45844,] 404 289 #>  [45845,] 405 289 #>  [45846,] 406 289 #>  [45847,] 407 289 #>  [45848,] 408 289 #>  [45849,] 409 289 #>  [45850,] 410 289 #>  [45851,] 411 289 #>  [45852,] 412 289 #>  [45853,] 413 289 #>  [45854,] 414 289 #>  [45855,] 415 289 #>  [45856,] 416 289 #>  [45857,] 417 289 #>  [45858,] 418 289 #>  [45859,] 419 289 #>  [45860,] 420 289 #>  [45861,] 421 289 #>  [45862,] 422 289 #>  [45863,] 423 289 #>  [45864,] 424 289 #>  [45865,] 425 289 #>  [45866,] 426 289 #>  [45867,] 427 289 #>  [45868,] 428 289 #>  [45869,] 429 289 #>  [45870,] 430 289 #>  [45871,] 431 289 #>  [45872,] 432 289 #>  [45873,] 433 289 #>  [45874,] 434 289 #>  [45875,] 435 289 #>  [45876,] 436 289 #>  [45877,] 437 289 #>  [45878,] 438 289 #>  [45879,] 439 289 #>  [45880,] 440 289 #>  [45881,] 441 289 #>  [45882,] 442 289 #>  [45883,] 443 289 #>  [45884,] 444 289 #>  [45885,] 445 289 #>  [45886,] 446 289 #>  [45887,] 447 289 #>  [45888,] 448 289 #>  [45889,] 449 289 #>  [45890,] 450 289 #>  [45891,] 451 289 #>  [45892,] 452 289 #>  [45893,] 453 289 #>  [45894,] 454 289 #>  [45895,] 455 289 #>  [45896,] 456 289 #>  [45897,] 457 289 #>  [45898,] 458 289 #>  [45899,] 459 289 #>  [45900,] 460 289 #>  [45901,] 461 289 #>  [45902,] 462 289 #>  [45903,] 463 289 #>  [45904,] 464 289 #>  [45905,] 465 289 #>  [45906,] 466 289 #>  [45907,] 467 289 #>  [45908,] 468 289 #>  [45909,] 469 289 #>  [45910,] 470 289 #>  [45911,] 471 289 #>  [45912,] 472 289 #>  [45913,] 473 289 #>  [45914,] 474 289 #>  [45915,] 475 289 #>  [45916,] 476 289 #>  [45917,] 477 289 #>  [45918,] 478 289 #>  [45919,] 479 289 #>  [45920,] 480 289 #>  [45921,] 481 289 #>  [45922,] 482 289 #>  [45923,] 483 289 #>  [45924,] 484 289 #>  [45925,] 485 289 #>  [45926,] 486 289 #>  [45927,] 487 289 #>  [45928,] 488 289 #>  [45929,] 489 289 #>  [45930,] 490 289 #>  [45931,] 491 289 #>  [45932,] 492 289 #>  [45933,] 493 289 #>  [45934,] 494 289 #>  [45935,] 495 289 #>  [45936,] 496 289 #>  [45937,] 497 289 #>  [45938,] 498 289 #>  [45939,] 499 289 #>  [45940,] 500 289 #>  [45941,] 501 289 #>  [45942,] 502 289 #>  [45943,] 503 289 #>  [45944,] 504 289 #>  [45945,] 505 289 #>  [45946,] 506 289 #>  [45947,] 507 289 #>  [45948,] 508 289 #>  [45949,] 509 289 #>  [45950,] 510 289 #>  [45951,] 511 289 #>  [45952,] 512 289 #>  [45953,] 513 289 #>  [45954,] 514 289 #>  [45955,] 515 289 #>  [45956,] 516 289 #>  [45957,] 517 289 #>  [45958,] 518 289 #>  [45959,] 519 289 #>  [45960,] 520 289 #>  [45961,] 521 289 #>  [45962,] 522 289 #>  [45963,] 523 289 #>  [45964,] 524 289 #>  [45965,] 525 289 #>  [45966,] 526 289 #>  [45967,] 527 289 #>  [45968,] 528 289 #>  [45969,] 529 289 #>  [45970,] 530 289 #>  [45971,] 531 289 #>  [45972,] 532 289 #>  [45973,] 533 289 #>  [45974,] 534 289 #>  [45975,] 535 289 #>  [45976,] 536 289 #>  [45977,] 537 289 #>  [45978,] 538 289 #>  [45979,] 539 289 #>  [45980,] 540 289 #>  [45981,] 541 289 #>  [45982,] 542 289 #>  [45983,] 543 289 #>  [45984,] 544 289 #>  [45985,] 545 289 #>  [45986,] 546 289 #>  [45987,] 547 289 #>  [45988,] 548 289 #>  [45989,] 549 289 #>  [45990,] 550 289 #>  [45991,] 551 289 #>  [45992,] 552 289 #>  [45993,] 553 289 #>  [45994,] 554 289 #>  [45995,] 555 289 #>  [45996,] 556 289 #>  [45997,] 557 289 #>  [45998,] 558 289 #>  [45999,] 559 289 #>  [46000,] 560 289 #>  [46001,] 561 289 #>  [46002,] 562 289 #>  [46003,] 563 289 #>  [46004,] 564 289 #>  [46005,] 565 289 #>  [46006,] 566 289 #>  [46007,] 567 289 #>  [46008,] 568 289 #>  [46009,] 569 289 #>  [46010,] 570 289 #>  [46011,] 571 289 #>  [46012,] 572 289 #>  [46013,] 573 289 #>  [46014,] 574 289 #>  [46015,] 575 289 #>  [46016,] 576 289 #>  [46017,] 577 289 #>  [46018,] 578 289 #>  [46019,] 579 289 #>  [46020,] 580 289 #>  [46021,] 581 289 #>  [46022,] 582 289 #>  [46023,] 583 289 #>  [46024,] 584 289 #>  [46025,] 585 289 #>  [46026,] 586 289 #>  [46027,] 587 289 #>  [46028,] 588 289 #>  [46029,] 589 289 #>  [46030,] 590 289 #>  [46031,] 591 289 #>  [46032,] 592 289 #>  [46033,] 593 289 #>  [46034,] 594 289 #>  [46035,] 595 289 #>  [46036,] 596 289 #>  [46037,] 597 289 #>  [46038,] 598 289 #>  [46039,] 599 289 #>  [46040,] 600 289 #>  [46041,] 601 289 #>  [46042,] 602 289 #>  [46043,] 603 289 #>  [46044,] 604 289 #>  [46045,] 605 289 #>  [46046,] 606 289 #>  [46047,] 607 289 #>  [46048,] 608 289 #>  [46049,] 609 289 #>  [46050,] 610 289 #>  [46051,] 611 289 #>  [46052,] 612 289 #>  [46053,] 613 289 #>  [46054,] 614 289 #>  [46055,] 615 289 #>  [46056,] 616 289 #>  [46057,] 617 289 #>  [46058,] 618 289 #>  [46059,] 619 289 #>  [46060,] 620 289 #>  [46061,] 621 289 #>  [46062,] 622 289 #>  [46063,] 623 289 #>  [46064,] 624 289 #>  [46065,] 625 289 #>  [46066,] 626 289 #>  [46067,] 627 289 #>  [46068,] 628 289 #>  [46069,] 629 289 #>  [46070,] 630 289 #>  [46071,] 631 289 #>  [46072,] 632 289 #>  [46073,] 633 289 #>  [46074,] 634 289 #>  [46075,] 635 289 #>  [46076,] 636 289 #>  [46077,] 637 289 #>  [46078,] 638 289 #>  [46079,] 639 289 #>  [46080,] 640 289 #>  [46081,]   1 288 #>  [46082,]   2 288 #>  [46083,]   3 288 #>  [46084,]   4 288 #>  [46085,]   5 288 #>  [46086,]   6 288 #>  [46087,]   7 288 #>  [46088,]   8 288 #>  [46089,]   9 288 #>  [46090,]  10 288 #>  [46091,]  11 288 #>  [46092,]  12 288 #>  [46093,]  13 288 #>  [46094,]  14 288 #>  [46095,]  15 288 #>  [46096,]  16 288 #>  [46097,]  17 288 #>  [46098,]  18 288 #>  [46099,]  19 288 #>  [46100,]  20 288 #>  [46101,]  21 288 #>  [46102,]  22 288 #>  [46103,]  23 288 #>  [46104,]  24 288 #>  [46105,]  25 288 #>  [46106,]  26 288 #>  [46107,]  27 288 #>  [46108,]  28 288 #>  [46109,]  29 288 #>  [46110,]  30 288 #>  [46111,]  31 288 #>  [46112,]  32 288 #>  [46113,]  33 288 #>  [46114,]  34 288 #>  [46115,]  35 288 #>  [46116,]  36 288 #>  [46117,]  37 288 #>  [46118,]  38 288 #>  [46119,]  39 288 #>  [46120,]  40 288 #>  [46121,]  41 288 #>  [46122,]  42 288 #>  [46123,]  43 288 #>  [46124,]  44 288 #>  [46125,]  45 288 #>  [46126,]  46 288 #>  [46127,]  47 288 #>  [46128,]  48 288 #>  [46129,]  49 288 #>  [46130,]  50 288 #>  [46131,]  51 288 #>  [46132,]  52 288 #>  [46133,]  53 288 #>  [46134,]  54 288 #>  [46135,]  55 288 #>  [46136,]  56 288 #>  [46137,]  57 288 #>  [46138,]  58 288 #>  [46139,]  59 288 #>  [46140,]  60 288 #>  [46141,]  61 288 #>  [46142,]  62 288 #>  [46143,]  63 288 #>  [46144,]  64 288 #>  [46145,]  65 288 #>  [46146,]  66 288 #>  [46147,]  67 288 #>  [46148,]  68 288 #>  [46149,]  69 288 #>  [46150,]  70 288 #>  [46151,]  71 288 #>  [46152,]  72 288 #>  [46153,]  73 288 #>  [46154,]  74 288 #>  [46155,]  75 288 #>  [46156,]  76 288 #>  [46157,]  77 288 #>  [46158,]  78 288 #>  [46159,]  79 288 #>  [46160,]  80 288 #>  [46161,]  81 288 #>  [46162,]  82 288 #>  [46163,]  83 288 #>  [46164,]  84 288 #>  [46165,]  85 288 #>  [46166,]  86 288 #>  [46167,]  87 288 #>  [46168,]  88 288 #>  [46169,]  89 288 #>  [46170,]  90 288 #>  [46171,]  91 288 #>  [46172,]  92 288 #>  [46173,]  93 288 #>  [46174,]  94 288 #>  [46175,]  95 288 #>  [46176,]  96 288 #>  [46177,]  97 288 #>  [46178,]  98 288 #>  [46179,]  99 288 #>  [46180,] 100 288 #>  [46181,] 101 288 #>  [46182,] 102 288 #>  [46183,] 103 288 #>  [46184,] 104 288 #>  [46185,] 105 288 #>  [46186,] 106 288 #>  [46187,] 107 288 #>  [46188,] 108 288 #>  [46189,] 109 288 #>  [46190,] 110 288 #>  [46191,] 111 288 #>  [46192,] 112 288 #>  [46193,] 113 288 #>  [46194,] 114 288 #>  [46195,] 115 288 #>  [46196,] 116 288 #>  [46197,] 117 288 #>  [46198,] 118 288 #>  [46199,] 119 288 #>  [46200,] 120 288 #>  [46201,] 121 288 #>  [46202,] 122 288 #>  [46203,] 123 288 #>  [46204,] 124 288 #>  [46205,] 125 288 #>  [46206,] 126 288 #>  [46207,] 127 288 #>  [46208,] 128 288 #>  [46209,] 129 288 #>  [46210,] 130 288 #>  [46211,] 131 288 #>  [46212,] 132 288 #>  [46213,] 133 288 #>  [46214,] 134 288 #>  [46215,] 135 288 #>  [46216,] 136 288 #>  [46217,] 137 288 #>  [46218,] 138 288 #>  [46219,] 139 288 #>  [46220,] 140 288 #>  [46221,] 141 288 #>  [46222,] 142 288 #>  [46223,] 143 288 #>  [46224,] 144 288 #>  [46225,] 145 288 #>  [46226,] 146 288 #>  [46227,] 147 288 #>  [46228,] 148 288 #>  [46229,] 149 288 #>  [46230,] 150 288 #>  [46231,] 151 288 #>  [46232,] 152 288 #>  [46233,] 153 288 #>  [46234,] 154 288 #>  [46235,] 155 288 #>  [46236,] 156 288 #>  [46237,] 157 288 #>  [46238,] 158 288 #>  [46239,] 159 288 #>  [46240,] 160 288 #>  [46241,] 161 288 #>  [46242,] 162 288 #>  [46243,] 163 288 #>  [46244,] 164 288 #>  [46245,] 165 288 #>  [46246,] 166 288 #>  [46247,] 167 288 #>  [46248,] 168 288 #>  [46249,] 169 288 #>  [46250,] 170 288 #>  [46251,] 171 288 #>  [46252,] 172 288 #>  [46253,] 173 288 #>  [46254,] 174 288 #>  [46255,] 175 288 #>  [46256,] 176 288 #>  [46257,] 177 288 #>  [46258,] 178 288 #>  [46259,] 179 288 #>  [46260,] 180 288 #>  [46261,] 181 288 #>  [46262,] 182 288 #>  [46263,] 183 288 #>  [46264,] 184 288 #>  [46265,] 185 288 #>  [46266,] 186 288 #>  [46267,] 187 288 #>  [46268,] 188 288 #>  [46269,] 189 288 #>  [46270,] 190 288 #>  [46271,] 191 288 #>  [46272,] 192 288 #>  [46273,] 193 288 #>  [46274,] 194 288 #>  [46275,] 195 288 #>  [46276,] 196 288 #>  [46277,] 197 288 #>  [46278,] 198 288 #>  [46279,] 199 288 #>  [46280,] 200 288 #>  [46281,] 201 288 #>  [46282,] 202 288 #>  [46283,] 203 288 #>  [46284,] 204 288 #>  [46285,] 205 288 #>  [46286,] 206 288 #>  [46287,] 207 288 #>  [46288,] 208 288 #>  [46289,] 209 288 #>  [46290,] 210 288 #>  [46291,] 211 288 #>  [46292,] 212 288 #>  [46293,] 213 288 #>  [46294,] 214 288 #>  [46295,] 215 288 #>  [46296,] 216 288 #>  [46297,] 217 288 #>  [46298,] 218 288 #>  [46299,] 219 288 #>  [46300,] 220 288 #>  [46301,] 221 288 #>  [46302,] 222 288 #>  [46303,] 223 288 #>  [46304,] 224 288 #>  [46305,] 225 288 #>  [46306,] 226 288 #>  [46307,] 227 288 #>  [46308,] 228 288 #>  [46309,] 229 288 #>  [46310,] 230 288 #>  [46311,] 231 288 #>  [46312,] 232 288 #>  [46313,] 233 288 #>  [46314,] 234 288 #>  [46315,] 235 288 #>  [46316,] 236 288 #>  [46317,] 237 288 #>  [46318,] 238 288 #>  [46319,] 239 288 #>  [46320,] 240 288 #>  [46321,] 241 288 #>  [46322,] 242 288 #>  [46323,] 243 288 #>  [46324,] 244 288 #>  [46325,] 245 288 #>  [46326,] 246 288 #>  [46327,] 247 288 #>  [46328,] 248 288 #>  [46329,] 249 288 #>  [46330,] 250 288 #>  [46331,] 251 288 #>  [46332,] 252 288 #>  [46333,] 253 288 #>  [46334,] 254 288 #>  [46335,] 255 288 #>  [46336,] 256 288 #>  [46337,] 257 288 #>  [46338,] 258 288 #>  [46339,] 259 288 #>  [46340,] 260 288 #>  [46341,] 261 288 #>  [46342,] 262 288 #>  [46343,] 263 288 #>  [46344,] 264 288 #>  [46345,] 265 288 #>  [46346,] 266 288 #>  [46347,] 267 288 #>  [46348,] 268 288 #>  [46349,] 269 288 #>  [46350,] 270 288 #>  [46351,] 271 288 #>  [46352,] 272 288 #>  [46353,] 273 288 #>  [46354,] 274 288 #>  [46355,] 275 288 #>  [46356,] 276 288 #>  [46357,] 277 288 #>  [46358,] 278 288 #>  [46359,] 279 288 #>  [46360,] 280 288 #>  [46361,] 281 288 #>  [46362,] 282 288 #>  [46363,] 283 288 #>  [46364,] 284 288 #>  [46365,] 285 288 #>  [46366,] 286 288 #>  [46367,] 287 288 #>  [46368,] 288 288 #>  [46369,] 289 288 #>  [46370,] 290 288 #>  [46371,] 291 288 #>  [46372,] 292 288 #>  [46373,] 293 288 #>  [46374,] 294 288 #>  [46375,] 295 288 #>  [46376,] 296 288 #>  [46377,] 297 288 #>  [46378,] 298 288 #>  [46379,] 299 288 #>  [46380,] 300 288 #>  [46381,] 301 288 #>  [46382,] 302 288 #>  [46383,] 303 288 #>  [46384,] 304 288 #>  [46385,] 305 288 #>  [46386,] 306 288 #>  [46387,] 307 288 #>  [46388,] 308 288 #>  [46389,] 309 288 #>  [46390,] 310 288 #>  [46391,] 311 288 #>  [46392,] 312 288 #>  [46393,] 313 288 #>  [46394,] 314 288 #>  [46395,] 315 288 #>  [46396,] 316 288 #>  [46397,] 317 288 #>  [46398,] 318 288 #>  [46399,] 319 288 #>  [46400,] 320 288 #>  [46401,] 321 288 #>  [46402,] 322 288 #>  [46403,] 323 288 #>  [46404,] 324 288 #>  [46405,] 325 288 #>  [46406,] 326 288 #>  [46407,] 327 288 #>  [46408,] 328 288 #>  [46409,] 329 288 #>  [46410,] 330 288 #>  [46411,] 331 288 #>  [46412,] 332 288 #>  [46413,] 333 288 #>  [46414,] 334 288 #>  [46415,] 335 288 #>  [46416,] 336 288 #>  [46417,] 337 288 #>  [46418,] 338 288 #>  [46419,] 339 288 #>  [46420,] 340 288 #>  [46421,] 341 288 #>  [46422,] 342 288 #>  [46423,] 343 288 #>  [46424,] 344 288 #>  [46425,] 345 288 #>  [46426,] 346 288 #>  [46427,] 347 288 #>  [46428,] 348 288 #>  [46429,] 349 288 #>  [46430,] 350 288 #>  [46431,] 351 288 #>  [46432,] 352 288 #>  [46433,] 353 288 #>  [46434,] 354 288 #>  [46435,] 355 288 #>  [46436,] 356 288 #>  [46437,] 357 288 #>  [46438,] 358 288 #>  [46439,] 359 288 #>  [46440,] 360 288 #>  [46441,] 361 288 #>  [46442,] 362 288 #>  [46443,] 363 288 #>  [46444,] 364 288 #>  [46445,] 365 288 #>  [46446,] 366 288 #>  [46447,] 367 288 #>  [46448,] 368 288 #>  [46449,] 369 288 #>  [46450,] 370 288 #>  [46451,] 371 288 #>  [46452,] 372 288 #>  [46453,] 373 288 #>  [46454,] 374 288 #>  [46455,] 375 288 #>  [46456,] 376 288 #>  [46457,] 377 288 #>  [46458,] 378 288 #>  [46459,] 379 288 #>  [46460,] 380 288 #>  [46461,] 381 288 #>  [46462,] 382 288 #>  [46463,] 383 288 #>  [46464,] 384 288 #>  [46465,] 385 288 #>  [46466,] 386 288 #>  [46467,] 387 288 #>  [46468,] 388 288 #>  [46469,] 389 288 #>  [46470,] 390 288 #>  [46471,] 391 288 #>  [46472,] 392 288 #>  [46473,] 393 288 #>  [46474,] 394 288 #>  [46475,] 395 288 #>  [46476,] 396 288 #>  [46477,] 397 288 #>  [46478,] 398 288 #>  [46479,] 399 288 #>  [46480,] 400 288 #>  [46481,] 401 288 #>  [46482,] 402 288 #>  [46483,] 403 288 #>  [46484,] 404 288 #>  [46485,] 405 288 #>  [46486,] 406 288 #>  [46487,] 407 288 #>  [46488,] 408 288 #>  [46489,] 409 288 #>  [46490,] 410 288 #>  [46491,] 411 288 #>  [46492,] 412 288 #>  [46493,] 413 288 #>  [46494,] 414 288 #>  [46495,] 415 288 #>  [46496,] 416 288 #>  [46497,] 417 288 #>  [46498,] 418 288 #>  [46499,] 419 288 #>  [46500,] 420 288 #>  [46501,] 421 288 #>  [46502,] 422 288 #>  [46503,] 423 288 #>  [46504,] 424 288 #>  [46505,] 425 288 #>  [46506,] 426 288 #>  [46507,] 427 288 #>  [46508,] 428 288 #>  [46509,] 429 288 #>  [46510,] 430 288 #>  [46511,] 431 288 #>  [46512,] 432 288 #>  [46513,] 433 288 #>  [46514,] 434 288 #>  [46515,] 435 288 #>  [46516,] 436 288 #>  [46517,] 437 288 #>  [46518,] 438 288 #>  [46519,] 439 288 #>  [46520,] 440 288 #>  [46521,] 441 288 #>  [46522,] 442 288 #>  [46523,] 443 288 #>  [46524,] 444 288 #>  [46525,] 445 288 #>  [46526,] 446 288 #>  [46527,] 447 288 #>  [46528,] 448 288 #>  [46529,] 449 288 #>  [46530,] 450 288 #>  [46531,] 451 288 #>  [46532,] 452 288 #>  [46533,] 453 288 #>  [46534,] 454 288 #>  [46535,] 455 288 #>  [46536,] 456 288 #>  [46537,] 457 288 #>  [46538,] 458 288 #>  [46539,] 459 288 #>  [46540,] 460 288 #>  [46541,] 461 288 #>  [46542,] 462 288 #>  [46543,] 463 288 #>  [46544,] 464 288 #>  [46545,] 465 288 #>  [46546,] 466 288 #>  [46547,] 467 288 #>  [46548,] 468 288 #>  [46549,] 469 288 #>  [46550,] 470 288 #>  [46551,] 471 288 #>  [46552,] 472 288 #>  [46553,] 473 288 #>  [46554,] 474 288 #>  [46555,] 475 288 #>  [46556,] 476 288 #>  [46557,] 477 288 #>  [46558,] 478 288 #>  [46559,] 479 288 #>  [46560,] 480 288 #>  [46561,] 481 288 #>  [46562,] 482 288 #>  [46563,] 483 288 #>  [46564,] 484 288 #>  [46565,] 485 288 #>  [46566,] 486 288 #>  [46567,] 487 288 #>  [46568,] 488 288 #>  [46569,] 489 288 #>  [46570,] 490 288 #>  [46571,] 491 288 #>  [46572,] 492 288 #>  [46573,] 493 288 #>  [46574,] 494 288 #>  [46575,] 495 288 #>  [46576,] 496 288 #>  [46577,] 497 288 #>  [46578,] 498 288 #>  [46579,] 499 288 #>  [46580,] 500 288 #>  [46581,] 501 288 #>  [46582,] 502 288 #>  [46583,] 503 288 #>  [46584,] 504 288 #>  [46585,] 505 288 #>  [46586,] 506 288 #>  [46587,] 507 288 #>  [46588,] 508 288 #>  [46589,] 509 288 #>  [46590,] 510 288 #>  [46591,] 511 288 #>  [46592,] 512 288 #>  [46593,] 513 288 #>  [46594,] 514 288 #>  [46595,] 515 288 #>  [46596,] 516 288 #>  [46597,] 517 288 #>  [46598,] 518 288 #>  [46599,] 519 288 #>  [46600,] 520 288 #>  [46601,] 521 288 #>  [46602,] 522 288 #>  [46603,] 523 288 #>  [46604,] 524 288 #>  [46605,] 525 288 #>  [46606,] 526 288 #>  [46607,] 527 288 #>  [46608,] 528 288 #>  [46609,] 529 288 #>  [46610,] 530 288 #>  [46611,] 531 288 #>  [46612,] 532 288 #>  [46613,] 533 288 #>  [46614,] 534 288 #>  [46615,] 535 288 #>  [46616,] 536 288 #>  [46617,] 537 288 #>  [46618,] 538 288 #>  [46619,] 539 288 #>  [46620,] 540 288 #>  [46621,] 541 288 #>  [46622,] 542 288 #>  [46623,] 543 288 #>  [46624,] 544 288 #>  [46625,] 545 288 #>  [46626,] 546 288 #>  [46627,] 547 288 #>  [46628,] 548 288 #>  [46629,] 549 288 #>  [46630,] 550 288 #>  [46631,] 551 288 #>  [46632,] 552 288 #>  [46633,] 553 288 #>  [46634,] 554 288 #>  [46635,] 555 288 #>  [46636,] 556 288 #>  [46637,] 557 288 #>  [46638,] 558 288 #>  [46639,] 559 288 #>  [46640,] 560 288 #>  [46641,] 561 288 #>  [46642,] 562 288 #>  [46643,] 563 288 #>  [46644,] 564 288 #>  [46645,] 565 288 #>  [46646,] 566 288 #>  [46647,] 567 288 #>  [46648,] 568 288 #>  [46649,] 569 288 #>  [46650,] 570 288 #>  [46651,] 571 288 #>  [46652,] 572 288 #>  [46653,] 573 288 #>  [46654,] 574 288 #>  [46655,] 575 288 #>  [46656,] 576 288 #>  [46657,] 577 288 #>  [46658,] 578 288 #>  [46659,] 579 288 #>  [46660,] 580 288 #>  [46661,] 581 288 #>  [46662,] 582 288 #>  [46663,] 583 288 #>  [46664,] 584 288 #>  [46665,] 585 288 #>  [46666,] 586 288 #>  [46667,] 587 288 #>  [46668,] 588 288 #>  [46669,] 589 288 #>  [46670,] 590 288 #>  [46671,] 591 288 #>  [46672,] 592 288 #>  [46673,] 593 288 #>  [46674,] 594 288 #>  [46675,] 595 288 #>  [46676,] 596 288 #>  [46677,] 597 288 #>  [46678,] 598 288 #>  [46679,] 599 288 #>  [46680,] 600 288 #>  [46681,] 601 288 #>  [46682,] 602 288 #>  [46683,] 603 288 #>  [46684,] 604 288 #>  [46685,] 605 288 #>  [46686,] 606 288 #>  [46687,] 607 288 #>  [46688,] 608 288 #>  [46689,] 609 288 #>  [46690,] 610 288 #>  [46691,] 611 288 #>  [46692,] 612 288 #>  [46693,] 613 288 #>  [46694,] 614 288 #>  [46695,] 615 288 #>  [46696,] 616 288 #>  [46697,] 617 288 #>  [46698,] 618 288 #>  [46699,] 619 288 #>  [46700,] 620 288 #>  [46701,] 621 288 #>  [46702,] 622 288 #>  [46703,] 623 288 #>  [46704,] 624 288 #>  [46705,] 625 288 #>  [46706,] 626 288 #>  [46707,] 627 288 #>  [46708,] 628 288 #>  [46709,] 629 288 #>  [46710,] 630 288 #>  [46711,] 631 288 #>  [46712,] 632 288 #>  [46713,] 633 288 #>  [46714,] 634 288 #>  [46715,] 635 288 #>  [46716,] 636 288 #>  [46717,] 637 288 #>  [46718,] 638 288 #>  [46719,] 639 288 #>  [46720,] 640 288 #>  [46721,]   1 287 #>  [46722,]   2 287 #>  [46723,]   3 287 #>  [46724,]   4 287 #>  [46725,]   5 287 #>  [46726,]   6 287 #>  [46727,]   7 287 #>  [46728,]   8 287 #>  [46729,]   9 287 #>  [46730,]  10 287 #>  [46731,]  11 287 #>  [46732,]  12 287 #>  [46733,]  13 287 #>  [46734,]  14 287 #>  [46735,]  15 287 #>  [46736,]  16 287 #>  [46737,]  17 287 #>  [46738,]  18 287 #>  [46739,]  19 287 #>  [46740,]  20 287 #>  [46741,]  21 287 #>  [46742,]  22 287 #>  [46743,]  23 287 #>  [46744,]  24 287 #>  [46745,]  25 287 #>  [46746,]  26 287 #>  [46747,]  27 287 #>  [46748,]  28 287 #>  [46749,]  29 287 #>  [46750,]  30 287 #>  [46751,]  31 287 #>  [46752,]  32 287 #>  [46753,]  33 287 #>  [46754,]  34 287 #>  [46755,]  35 287 #>  [46756,]  36 287 #>  [46757,]  37 287 #>  [46758,]  38 287 #>  [46759,]  39 287 #>  [46760,]  40 287 #>  [46761,]  41 287 #>  [46762,]  42 287 #>  [46763,]  43 287 #>  [46764,]  44 287 #>  [46765,]  45 287 #>  [46766,]  46 287 #>  [46767,]  47 287 #>  [46768,]  48 287 #>  [46769,]  49 287 #>  [46770,]  50 287 #>  [46771,]  51 287 #>  [46772,]  52 287 #>  [46773,]  53 287 #>  [46774,]  54 287 #>  [46775,]  55 287 #>  [46776,]  56 287 #>  [46777,]  57 287 #>  [46778,]  58 287 #>  [46779,]  59 287 #>  [46780,]  60 287 #>  [46781,]  61 287 #>  [46782,]  62 287 #>  [46783,]  63 287 #>  [46784,]  64 287 #>  [46785,]  65 287 #>  [46786,]  66 287 #>  [46787,]  67 287 #>  [46788,]  68 287 #>  [46789,]  69 287 #>  [46790,]  70 287 #>  [46791,]  71 287 #>  [46792,]  72 287 #>  [46793,]  73 287 #>  [46794,]  74 287 #>  [46795,]  75 287 #>  [46796,]  76 287 #>  [46797,]  77 287 #>  [46798,]  78 287 #>  [46799,]  79 287 #>  [46800,]  80 287 #>  [46801,]  81 287 #>  [46802,]  82 287 #>  [46803,]  83 287 #>  [46804,]  84 287 #>  [46805,]  85 287 #>  [46806,]  86 287 #>  [46807,]  87 287 #>  [46808,]  88 287 #>  [46809,]  89 287 #>  [46810,]  90 287 #>  [46811,]  91 287 #>  [46812,]  92 287 #>  [46813,]  93 287 #>  [46814,]  94 287 #>  [46815,]  95 287 #>  [46816,]  96 287 #>  [46817,]  97 287 #>  [46818,]  98 287 #>  [46819,]  99 287 #>  [46820,] 100 287 #>  [46821,] 101 287 #>  [46822,] 102 287 #>  [46823,] 103 287 #>  [46824,] 104 287 #>  [46825,] 105 287 #>  [46826,] 106 287 #>  [46827,] 107 287 #>  [46828,] 108 287 #>  [46829,] 109 287 #>  [46830,] 110 287 #>  [46831,] 111 287 #>  [46832,] 112 287 #>  [46833,] 113 287 #>  [46834,] 114 287 #>  [46835,] 115 287 #>  [46836,] 116 287 #>  [46837,] 117 287 #>  [46838,] 118 287 #>  [46839,] 119 287 #>  [46840,] 120 287 #>  [46841,] 121 287 #>  [46842,] 122 287 #>  [46843,] 123 287 #>  [46844,] 124 287 #>  [46845,] 125 287 #>  [46846,] 126 287 #>  [46847,] 127 287 #>  [46848,] 128 287 #>  [46849,] 129 287 #>  [46850,] 130 287 #>  [46851,] 131 287 #>  [46852,] 132 287 #>  [46853,] 133 287 #>  [46854,] 134 287 #>  [46855,] 135 287 #>  [46856,] 136 287 #>  [46857,] 137 287 #>  [46858,] 138 287 #>  [46859,] 139 287 #>  [46860,] 140 287 #>  [46861,] 141 287 #>  [46862,] 142 287 #>  [46863,] 143 287 #>  [46864,] 144 287 #>  [46865,] 145 287 #>  [46866,] 146 287 #>  [46867,] 147 287 #>  [46868,] 148 287 #>  [46869,] 149 287 #>  [46870,] 150 287 #>  [46871,] 151 287 #>  [46872,] 152 287 #>  [46873,] 153 287 #>  [46874,] 154 287 #>  [46875,] 155 287 #>  [46876,] 156 287 #>  [46877,] 157 287 #>  [46878,] 158 287 #>  [46879,] 159 287 #>  [46880,] 160 287 #>  [46881,] 161 287 #>  [46882,] 162 287 #>  [46883,] 163 287 #>  [46884,] 164 287 #>  [46885,] 165 287 #>  [46886,] 166 287 #>  [46887,] 167 287 #>  [46888,] 168 287 #>  [46889,] 169 287 #>  [46890,] 170 287 #>  [46891,] 171 287 #>  [46892,] 172 287 #>  [46893,] 173 287 #>  [46894,] 174 287 #>  [46895,] 175 287 #>  [46896,] 176 287 #>  [46897,] 177 287 #>  [46898,] 178 287 #>  [46899,] 179 287 #>  [46900,] 180 287 #>  [46901,] 181 287 #>  [46902,] 182 287 #>  [46903,] 183 287 #>  [46904,] 184 287 #>  [46905,] 185 287 #>  [46906,] 186 287 #>  [46907,] 187 287 #>  [46908,] 188 287 #>  [46909,] 189 287 #>  [46910,] 190 287 #>  [46911,] 191 287 #>  [46912,] 192 287 #>  [46913,] 193 287 #>  [46914,] 194 287 #>  [46915,] 195 287 #>  [46916,] 196 287 #>  [46917,] 197 287 #>  [46918,] 198 287 #>  [46919,] 199 287 #>  [46920,] 200 287 #>  [46921,] 201 287 #>  [46922,] 202 287 #>  [46923,] 203 287 #>  [46924,] 204 287 #>  [46925,] 205 287 #>  [46926,] 206 287 #>  [46927,] 207 287 #>  [46928,] 208 287 #>  [46929,] 209 287 #>  [46930,] 210 287 #>  [46931,] 211 287 #>  [46932,] 212 287 #>  [46933,] 213 287 #>  [46934,] 214 287 #>  [46935,] 215 287 #>  [46936,] 216 287 #>  [46937,] 217 287 #>  [46938,] 218 287 #>  [46939,] 219 287 #>  [46940,] 220 287 #>  [46941,] 221 287 #>  [46942,] 222 287 #>  [46943,] 223 287 #>  [46944,] 224 287 #>  [46945,] 225 287 #>  [46946,] 226 287 #>  [46947,] 227 287 #>  [46948,] 228 287 #>  [46949,] 229 287 #>  [46950,] 230 287 #>  [46951,] 231 287 #>  [46952,] 232 287 #>  [46953,] 233 287 #>  [46954,] 234 287 #>  [46955,] 235 287 #>  [46956,] 236 287 #>  [46957,] 237 287 #>  [46958,] 238 287 #>  [46959,] 239 287 #>  [46960,] 240 287 #>  [46961,] 241 287 #>  [46962,] 242 287 #>  [46963,] 243 287 #>  [46964,] 244 287 #>  [46965,] 245 287 #>  [46966,] 246 287 #>  [46967,] 247 287 #>  [46968,] 248 287 #>  [46969,] 249 287 #>  [46970,] 250 287 #>  [46971,] 251 287 #>  [46972,] 252 287 #>  [46973,] 253 287 #>  [46974,] 254 287 #>  [46975,] 255 287 #>  [46976,] 256 287 #>  [46977,] 257 287 #>  [46978,] 258 287 #>  [46979,] 259 287 #>  [46980,] 260 287 #>  [46981,] 261 287 #>  [46982,] 262 287 #>  [46983,] 263 287 #>  [46984,] 264 287 #>  [46985,] 265 287 #>  [46986,] 266 287 #>  [46987,] 267 287 #>  [46988,] 268 287 #>  [46989,] 269 287 #>  [46990,] 270 287 #>  [46991,] 271 287 #>  [46992,] 272 287 #>  [46993,] 273 287 #>  [46994,] 274 287 #>  [46995,] 275 287 #>  [46996,] 276 287 #>  [46997,] 277 287 #>  [46998,] 278 287 #>  [46999,] 279 287 #>  [47000,] 280 287 #>  [47001,] 281 287 #>  [47002,] 282 287 #>  [47003,] 283 287 #>  [47004,] 284 287 #>  [47005,] 285 287 #>  [47006,] 286 287 #>  [47007,] 287 287 #>  [47008,] 288 287 #>  [47009,] 289 287 #>  [47010,] 290 287 #>  [47011,] 291 287 #>  [47012,] 292 287 #>  [47013,] 293 287 #>  [47014,] 294 287 #>  [47015,] 295 287 #>  [47016,] 296 287 #>  [47017,] 297 287 #>  [47018,] 298 287 #>  [47019,] 299 287 #>  [47020,] 300 287 #>  [47021,] 301 287 #>  [47022,] 302 287 #>  [47023,] 303 287 #>  [47024,] 304 287 #>  [47025,] 305 287 #>  [47026,] 306 287 #>  [47027,] 307 287 #>  [47028,] 308 287 #>  [47029,] 309 287 #>  [47030,] 310 287 #>  [47031,] 311 287 #>  [47032,] 312 287 #>  [47033,] 313 287 #>  [47034,] 314 287 #>  [47035,] 315 287 #>  [47036,] 316 287 #>  [47037,] 317 287 #>  [47038,] 318 287 #>  [47039,] 319 287 #>  [47040,] 320 287 #>  [47041,] 321 287 #>  [47042,] 322 287 #>  [47043,] 323 287 #>  [47044,] 324 287 #>  [47045,] 325 287 #>  [47046,] 326 287 #>  [47047,] 327 287 #>  [47048,] 328 287 #>  [47049,] 329 287 #>  [47050,] 330 287 #>  [47051,] 331 287 #>  [47052,] 332 287 #>  [47053,] 333 287 #>  [47054,] 334 287 #>  [47055,] 335 287 #>  [47056,] 336 287 #>  [47057,] 337 287 #>  [47058,] 338 287 #>  [47059,] 339 287 #>  [47060,] 340 287 #>  [47061,] 341 287 #>  [47062,] 342 287 #>  [47063,] 343 287 #>  [47064,] 344 287 #>  [47065,] 345 287 #>  [47066,] 346 287 #>  [47067,] 347 287 #>  [47068,] 348 287 #>  [47069,] 349 287 #>  [47070,] 350 287 #>  [47071,] 351 287 #>  [47072,] 352 287 #>  [47073,] 353 287 #>  [47074,] 354 287 #>  [47075,] 355 287 #>  [47076,] 356 287 #>  [47077,] 357 287 #>  [47078,] 358 287 #>  [47079,] 359 287 #>  [47080,] 360 287 #>  [47081,] 361 287 #>  [47082,] 362 287 #>  [47083,] 363 287 #>  [47084,] 364 287 #>  [47085,] 365 287 #>  [47086,] 366 287 #>  [47087,] 367 287 #>  [47088,] 368 287 #>  [47089,] 369 287 #>  [47090,] 370 287 #>  [47091,] 371 287 #>  [47092,] 372 287 #>  [47093,] 373 287 #>  [47094,] 374 287 #>  [47095,] 375 287 #>  [47096,] 376 287 #>  [47097,] 377 287 #>  [47098,] 378 287 #>  [47099,] 379 287 #>  [47100,] 380 287 #>  [47101,] 381 287 #>  [47102,] 382 287 #>  [47103,] 383 287 #>  [47104,] 384 287 #>  [47105,] 385 287 #>  [47106,] 386 287 #>  [47107,] 387 287 #>  [47108,] 388 287 #>  [47109,] 389 287 #>  [47110,] 390 287 #>  [47111,] 391 287 #>  [47112,] 392 287 #>  [47113,] 393 287 #>  [47114,] 394 287 #>  [47115,] 395 287 #>  [47116,] 396 287 #>  [47117,] 397 287 #>  [47118,] 398 287 #>  [47119,] 399 287 #>  [47120,] 400 287 #>  [47121,] 401 287 #>  [47122,] 402 287 #>  [47123,] 403 287 #>  [47124,] 404 287 #>  [47125,] 405 287 #>  [47126,] 406 287 #>  [47127,] 407 287 #>  [47128,] 408 287 #>  [47129,] 409 287 #>  [47130,] 410 287 #>  [47131,] 411 287 #>  [47132,] 412 287 #>  [47133,] 413 287 #>  [47134,] 414 287 #>  [47135,] 415 287 #>  [47136,] 416 287 #>  [47137,] 417 287 #>  [47138,] 418 287 #>  [47139,] 419 287 #>  [47140,] 420 287 #>  [47141,] 421 287 #>  [47142,] 422 287 #>  [47143,] 423 287 #>  [47144,] 424 287 #>  [47145,] 425 287 #>  [47146,] 426 287 #>  [47147,] 427 287 #>  [47148,] 428 287 #>  [47149,] 429 287 #>  [47150,] 430 287 #>  [47151,] 431 287 #>  [47152,] 432 287 #>  [47153,] 433 287 #>  [47154,] 434 287 #>  [47155,] 435 287 #>  [47156,] 436 287 #>  [47157,] 437 287 #>  [47158,] 438 287 #>  [47159,] 439 287 #>  [47160,] 440 287 #>  [47161,] 441 287 #>  [47162,] 442 287 #>  [47163,] 443 287 #>  [47164,] 444 287 #>  [47165,] 445 287 #>  [47166,] 446 287 #>  [47167,] 447 287 #>  [47168,] 448 287 #>  [47169,] 449 287 #>  [47170,] 450 287 #>  [47171,] 451 287 #>  [47172,] 452 287 #>  [47173,] 453 287 #>  [47174,] 454 287 #>  [47175,] 455 287 #>  [47176,] 456 287 #>  [47177,] 457 287 #>  [47178,] 458 287 #>  [47179,] 459 287 #>  [47180,] 460 287 #>  [47181,] 461 287 #>  [47182,] 462 287 #>  [47183,] 463 287 #>  [47184,] 464 287 #>  [47185,] 465 287 #>  [47186,] 466 287 #>  [47187,] 467 287 #>  [47188,] 468 287 #>  [47189,] 469 287 #>  [47190,] 470 287 #>  [47191,] 471 287 #>  [47192,] 472 287 #>  [47193,] 473 287 #>  [47194,] 474 287 #>  [47195,] 475 287 #>  [47196,] 476 287 #>  [47197,] 477 287 #>  [47198,] 478 287 #>  [47199,] 479 287 #>  [47200,] 480 287 #>  [47201,] 481 287 #>  [47202,] 482 287 #>  [47203,] 483 287 #>  [47204,] 484 287 #>  [47205,] 485 287 #>  [47206,] 486 287 #>  [47207,] 487 287 #>  [47208,] 488 287 #>  [47209,] 489 287 #>  [47210,] 490 287 #>  [47211,] 491 287 #>  [47212,] 492 287 #>  [47213,] 493 287 #>  [47214,] 494 287 #>  [47215,] 495 287 #>  [47216,] 496 287 #>  [47217,] 497 287 #>  [47218,] 498 287 #>  [47219,] 499 287 #>  [47220,] 500 287 #>  [47221,] 501 287 #>  [47222,] 502 287 #>  [47223,] 503 287 #>  [47224,] 504 287 #>  [47225,] 505 287 #>  [47226,] 506 287 #>  [47227,] 507 287 #>  [47228,] 508 287 #>  [47229,] 509 287 #>  [47230,] 510 287 #>  [47231,] 511 287 #>  [47232,] 512 287 #>  [47233,] 513 287 #>  [47234,] 514 287 #>  [47235,] 515 287 #>  [47236,] 516 287 #>  [47237,] 517 287 #>  [47238,] 518 287 #>  [47239,] 519 287 #>  [47240,] 520 287 #>  [47241,] 521 287 #>  [47242,] 522 287 #>  [47243,] 523 287 #>  [47244,] 524 287 #>  [47245,] 525 287 #>  [47246,] 526 287 #>  [47247,] 527 287 #>  [47248,] 528 287 #>  [47249,] 529 287 #>  [47250,] 530 287 #>  [47251,] 531 287 #>  [47252,] 532 287 #>  [47253,] 533 287 #>  [47254,] 534 287 #>  [47255,] 535 287 #>  [47256,] 536 287 #>  [47257,] 537 287 #>  [47258,] 538 287 #>  [47259,] 539 287 #>  [47260,] 540 287 #>  [47261,] 541 287 #>  [47262,] 542 287 #>  [47263,] 543 287 #>  [47264,] 544 287 #>  [47265,] 545 287 #>  [47266,] 546 287 #>  [47267,] 547 287 #>  [47268,] 548 287 #>  [47269,] 549 287 #>  [47270,] 550 287 #>  [47271,] 551 287 #>  [47272,] 552 287 #>  [47273,] 553 287 #>  [47274,] 554 287 #>  [47275,] 555 287 #>  [47276,] 556 287 #>  [47277,] 557 287 #>  [47278,] 558 287 #>  [47279,] 559 287 #>  [47280,] 560 287 #>  [47281,] 561 287 #>  [47282,] 562 287 #>  [47283,] 563 287 #>  [47284,] 564 287 #>  [47285,] 565 287 #>  [47286,] 566 287 #>  [47287,] 567 287 #>  [47288,] 568 287 #>  [47289,] 569 287 #>  [47290,] 570 287 #>  [47291,] 571 287 #>  [47292,] 572 287 #>  [47293,] 573 287 #>  [47294,] 574 287 #>  [47295,] 575 287 #>  [47296,] 576 287 #>  [47297,] 577 287 #>  [47298,] 578 287 #>  [47299,] 579 287 #>  [47300,] 580 287 #>  [47301,] 581 287 #>  [47302,] 582 287 #>  [47303,] 583 287 #>  [47304,] 584 287 #>  [47305,] 585 287 #>  [47306,] 586 287 #>  [47307,] 587 287 #>  [47308,] 588 287 #>  [47309,] 589 287 #>  [47310,] 590 287 #>  [47311,] 591 287 #>  [47312,] 592 287 #>  [47313,] 593 287 #>  [47314,] 594 287 #>  [47315,] 595 287 #>  [47316,] 596 287 #>  [47317,] 597 287 #>  [47318,] 598 287 #>  [47319,] 599 287 #>  [47320,] 600 287 #>  [47321,] 601 287 #>  [47322,] 602 287 #>  [47323,] 603 287 #>  [47324,] 604 287 #>  [47325,] 605 287 #>  [47326,] 606 287 #>  [47327,] 607 287 #>  [47328,] 608 287 #>  [47329,] 609 287 #>  [47330,] 610 287 #>  [47331,] 611 287 #>  [47332,] 612 287 #>  [47333,] 613 287 #>  [47334,] 614 287 #>  [47335,] 615 287 #>  [47336,] 616 287 #>  [47337,] 617 287 #>  [47338,] 618 287 #>  [47339,] 619 287 #>  [47340,] 620 287 #>  [47341,] 621 287 #>  [47342,] 622 287 #>  [47343,] 623 287 #>  [47344,] 624 287 #>  [47345,] 625 287 #>  [47346,] 626 287 #>  [47347,] 627 287 #>  [47348,] 628 287 #>  [47349,] 629 287 #>  [47350,] 630 287 #>  [47351,] 631 287 #>  [47352,] 632 287 #>  [47353,] 633 287 #>  [47354,] 634 287 #>  [47355,] 635 287 #>  [47356,] 636 287 #>  [47357,] 637 287 #>  [47358,] 638 287 #>  [47359,] 639 287 #>  [47360,] 640 287 #>  [47361,]   1 286 #>  [47362,]   2 286 #>  [47363,]   3 286 #>  [47364,]   4 286 #>  [47365,]   5 286 #>  [47366,]   6 286 #>  [47367,]   7 286 #>  [47368,]   8 286 #>  [47369,]   9 286 #>  [47370,]  10 286 #>  [47371,]  11 286 #>  [47372,]  12 286 #>  [47373,]  13 286 #>  [47374,]  14 286 #>  [47375,]  15 286 #>  [47376,]  16 286 #>  [47377,]  17 286 #>  [47378,]  18 286 #>  [47379,]  19 286 #>  [47380,]  20 286 #>  [47381,]  21 286 #>  [47382,]  22 286 #>  [47383,]  23 286 #>  [47384,]  24 286 #>  [47385,]  25 286 #>  [47386,]  26 286 #>  [47387,]  27 286 #>  [47388,]  28 286 #>  [47389,]  29 286 #>  [47390,]  30 286 #>  [47391,]  31 286 #>  [47392,]  32 286 #>  [47393,]  33 286 #>  [47394,]  34 286 #>  [47395,]  35 286 #>  [47396,]  36 286 #>  [47397,]  37 286 #>  [47398,]  38 286 #>  [47399,]  39 286 #>  [47400,]  40 286 #>  [47401,]  41 286 #>  [47402,]  42 286 #>  [47403,]  43 286 #>  [47404,]  44 286 #>  [47405,]  45 286 #>  [47406,]  46 286 #>  [47407,]  47 286 #>  [47408,]  48 286 #>  [47409,]  49 286 #>  [47410,]  50 286 #>  [47411,]  51 286 #>  [47412,]  52 286 #>  [47413,]  53 286 #>  [47414,]  54 286 #>  [47415,]  55 286 #>  [47416,]  56 286 #>  [47417,]  57 286 #>  [47418,]  58 286 #>  [47419,]  59 286 #>  [47420,]  60 286 #>  [47421,]  61 286 #>  [47422,]  62 286 #>  [47423,]  63 286 #>  [47424,]  64 286 #>  [47425,]  65 286 #>  [47426,]  66 286 #>  [47427,]  67 286 #>  [47428,]  68 286 #>  [47429,]  69 286 #>  [47430,]  70 286 #>  [47431,]  71 286 #>  [47432,]  72 286 #>  [47433,]  73 286 #>  [47434,]  74 286 #>  [47435,]  75 286 #>  [47436,]  76 286 #>  [47437,]  77 286 #>  [47438,]  78 286 #>  [47439,]  79 286 #>  [47440,]  80 286 #>  [47441,]  81 286 #>  [47442,]  82 286 #>  [47443,]  83 286 #>  [47444,]  84 286 #>  [47445,]  85 286 #>  [47446,]  86 286 #>  [47447,]  87 286 #>  [47448,]  88 286 #>  [47449,]  89 286 #>  [47450,]  90 286 #>  [47451,]  91 286 #>  [47452,]  92 286 #>  [47453,]  93 286 #>  [47454,]  94 286 #>  [47455,]  95 286 #>  [47456,]  96 286 #>  [47457,]  97 286 #>  [47458,]  98 286 #>  [47459,]  99 286 #>  [47460,] 100 286 #>  [47461,] 101 286 #>  [47462,] 102 286 #>  [47463,] 103 286 #>  [47464,] 104 286 #>  [47465,] 105 286 #>  [47466,] 106 286 #>  [47467,] 107 286 #>  [47468,] 108 286 #>  [47469,] 109 286 #>  [47470,] 110 286 #>  [47471,] 111 286 #>  [47472,] 112 286 #>  [47473,] 113 286 #>  [47474,] 114 286 #>  [47475,] 115 286 #>  [47476,] 116 286 #>  [47477,] 117 286 #>  [47478,] 118 286 #>  [47479,] 119 286 #>  [47480,] 120 286 #>  [47481,] 121 286 #>  [47482,] 122 286 #>  [47483,] 123 286 #>  [47484,] 124 286 #>  [47485,] 125 286 #>  [47486,] 126 286 #>  [47487,] 127 286 #>  [47488,] 128 286 #>  [47489,] 129 286 #>  [47490,] 130 286 #>  [47491,] 131 286 #>  [47492,] 132 286 #>  [47493,] 133 286 #>  [47494,] 134 286 #>  [47495,] 135 286 #>  [47496,] 136 286 #>  [47497,] 137 286 #>  [47498,] 138 286 #>  [47499,] 139 286 #>  [47500,] 140 286 #>  [47501,] 141 286 #>  [47502,] 142 286 #>  [47503,] 143 286 #>  [47504,] 144 286 #>  [47505,] 145 286 #>  [47506,] 146 286 #>  [47507,] 147 286 #>  [47508,] 148 286 #>  [47509,] 149 286 #>  [47510,] 150 286 #>  [47511,] 151 286 #>  [47512,] 152 286 #>  [47513,] 153 286 #>  [47514,] 154 286 #>  [47515,] 155 286 #>  [47516,] 156 286 #>  [47517,] 157 286 #>  [47518,] 158 286 #>  [47519,] 159 286 #>  [47520,] 160 286 #>  [47521,] 161 286 #>  [47522,] 162 286 #>  [47523,] 163 286 #>  [47524,] 164 286 #>  [47525,] 165 286 #>  [47526,] 166 286 #>  [47527,] 167 286 #>  [47528,] 168 286 #>  [47529,] 169 286 #>  [47530,] 170 286 #>  [47531,] 171 286 #>  [47532,] 172 286 #>  [47533,] 173 286 #>  [47534,] 174 286 #>  [47535,] 175 286 #>  [47536,] 176 286 #>  [47537,] 177 286 #>  [47538,] 178 286 #>  [47539,] 179 286 #>  [47540,] 180 286 #>  [47541,] 181 286 #>  [47542,] 182 286 #>  [47543,] 183 286 #>  [47544,] 184 286 #>  [47545,] 185 286 #>  [47546,] 186 286 #>  [47547,] 187 286 #>  [47548,] 188 286 #>  [47549,] 189 286 #>  [47550,] 190 286 #>  [47551,] 191 286 #>  [47552,] 192 286 #>  [47553,] 193 286 #>  [47554,] 194 286 #>  [47555,] 195 286 #>  [47556,] 196 286 #>  [47557,] 197 286 #>  [47558,] 198 286 #>  [47559,] 199 286 #>  [47560,] 200 286 #>  [47561,] 201 286 #>  [47562,] 202 286 #>  [47563,] 203 286 #>  [47564,] 204 286 #>  [47565,] 205 286 #>  [47566,] 206 286 #>  [47567,] 207 286 #>  [47568,] 208 286 #>  [47569,] 209 286 #>  [47570,] 210 286 #>  [47571,] 211 286 #>  [47572,] 212 286 #>  [47573,] 213 286 #>  [47574,] 214 286 #>  [47575,] 215 286 #>  [47576,] 216 286 #>  [47577,] 217 286 #>  [47578,] 218 286 #>  [47579,] 219 286 #>  [47580,] 220 286 #>  [47581,] 221 286 #>  [47582,] 222 286 #>  [47583,] 223 286 #>  [47584,] 224 286 #>  [47585,] 225 286 #>  [47586,] 226 286 #>  [47587,] 227 286 #>  [47588,] 228 286 #>  [47589,] 229 286 #>  [47590,] 230 286 #>  [47591,] 231 286 #>  [47592,] 232 286 #>  [47593,] 233 286 #>  [47594,] 234 286 #>  [47595,] 235 286 #>  [47596,] 236 286 #>  [47597,] 237 286 #>  [47598,] 238 286 #>  [47599,] 239 286 #>  [47600,] 240 286 #>  [47601,] 241 286 #>  [47602,] 242 286 #>  [47603,] 243 286 #>  [47604,] 244 286 #>  [47605,] 245 286 #>  [47606,] 246 286 #>  [47607,] 247 286 #>  [47608,] 248 286 #>  [47609,] 249 286 #>  [47610,] 250 286 #>  [47611,] 251 286 #>  [47612,] 252 286 #>  [47613,] 253 286 #>  [47614,] 254 286 #>  [47615,] 255 286 #>  [47616,] 256 286 #>  [47617,] 257 286 #>  [47618,] 258 286 #>  [47619,] 259 286 #>  [47620,] 260 286 #>  [47621,] 261 286 #>  [47622,] 262 286 #>  [47623,] 263 286 #>  [47624,] 264 286 #>  [47625,] 265 286 #>  [47626,] 266 286 #>  [47627,] 267 286 #>  [47628,] 268 286 #>  [47629,] 269 286 #>  [47630,] 270 286 #>  [47631,] 271 286 #>  [47632,] 272 286 #>  [47633,] 273 286 #>  [47634,] 274 286 #>  [47635,] 275 286 #>  [47636,] 276 286 #>  [47637,] 277 286 #>  [47638,] 278 286 #>  [47639,] 279 286 #>  [47640,] 280 286 #>  [47641,] 281 286 #>  [47642,] 282 286 #>  [47643,] 283 286 #>  [47644,] 284 286 #>  [47645,] 285 286 #>  [47646,] 286 286 #>  [47647,] 287 286 #>  [47648,] 288 286 #>  [47649,] 289 286 #>  [47650,] 290 286 #>  [47651,] 291 286 #>  [47652,] 292 286 #>  [47653,] 293 286 #>  [47654,] 294 286 #>  [47655,] 295 286 #>  [47656,] 296 286 #>  [47657,] 297 286 #>  [47658,] 298 286 #>  [47659,] 299 286 #>  [47660,] 300 286 #>  [47661,] 301 286 #>  [47662,] 302 286 #>  [47663,] 303 286 #>  [47664,] 304 286 #>  [47665,] 305 286 #>  [47666,] 306 286 #>  [47667,] 307 286 #>  [47668,] 308 286 #>  [47669,] 309 286 #>  [47670,] 310 286 #>  [47671,] 311 286 #>  [47672,] 312 286 #>  [47673,] 313 286 #>  [47674,] 314 286 #>  [47675,] 315 286 #>  [47676,] 316 286 #>  [47677,] 317 286 #>  [47678,] 318 286 #>  [47679,] 319 286 #>  [47680,] 320 286 #>  [47681,] 321 286 #>  [47682,] 322 286 #>  [47683,] 323 286 #>  [47684,] 324 286 #>  [47685,] 325 286 #>  [47686,] 326 286 #>  [47687,] 327 286 #>  [47688,] 328 286 #>  [47689,] 329 286 #>  [47690,] 330 286 #>  [47691,] 331 286 #>  [47692,] 332 286 #>  [47693,] 333 286 #>  [47694,] 334 286 #>  [47695,] 335 286 #>  [47696,] 336 286 #>  [47697,] 337 286 #>  [47698,] 338 286 #>  [47699,] 339 286 #>  [47700,] 340 286 #>  [47701,] 341 286 #>  [47702,] 342 286 #>  [47703,] 343 286 #>  [47704,] 344 286 #>  [47705,] 345 286 #>  [47706,] 346 286 #>  [47707,] 347 286 #>  [47708,] 348 286 #>  [47709,] 349 286 #>  [47710,] 350 286 #>  [47711,] 351 286 #>  [47712,] 352 286 #>  [47713,] 353 286 #>  [47714,] 354 286 #>  [47715,] 355 286 #>  [47716,] 356 286 #>  [47717,] 357 286 #>  [47718,] 358 286 #>  [47719,] 359 286 #>  [47720,] 360 286 #>  [47721,] 361 286 #>  [47722,] 362 286 #>  [47723,] 363 286 #>  [47724,] 364 286 #>  [47725,] 365 286 #>  [47726,] 366 286 #>  [47727,] 367 286 #>  [47728,] 368 286 #>  [47729,] 369 286 #>  [47730,] 370 286 #>  [47731,] 371 286 #>  [47732,] 372 286 #>  [47733,] 373 286 #>  [47734,] 374 286 #>  [47735,] 375 286 #>  [47736,] 376 286 #>  [47737,] 377 286 #>  [47738,] 378 286 #>  [47739,] 379 286 #>  [47740,] 380 286 #>  [47741,] 381 286 #>  [47742,] 382 286 #>  [47743,] 383 286 #>  [47744,] 384 286 #>  [47745,] 385 286 #>  [47746,] 386 286 #>  [47747,] 387 286 #>  [47748,] 388 286 #>  [47749,] 389 286 #>  [47750,] 390 286 #>  [47751,] 391 286 #>  [47752,] 392 286 #>  [47753,] 393 286 #>  [47754,] 394 286 #>  [47755,] 395 286 #>  [47756,] 396 286 #>  [47757,] 397 286 #>  [47758,] 398 286 #>  [47759,] 399 286 #>  [47760,] 400 286 #>  [47761,] 401 286 #>  [47762,] 402 286 #>  [47763,] 403 286 #>  [47764,] 404 286 #>  [47765,] 405 286 #>  [47766,] 406 286 #>  [47767,] 407 286 #>  [47768,] 408 286 #>  [47769,] 409 286 #>  [47770,] 410 286 #>  [47771,] 411 286 #>  [47772,] 412 286 #>  [47773,] 413 286 #>  [47774,] 414 286 #>  [47775,] 415 286 #>  [47776,] 416 286 #>  [47777,] 417 286 #>  [47778,] 418 286 #>  [47779,] 419 286 #>  [47780,] 420 286 #>  [47781,] 421 286 #>  [47782,] 422 286 #>  [47783,] 423 286 #>  [47784,] 424 286 #>  [47785,] 425 286 #>  [47786,] 426 286 #>  [47787,] 427 286 #>  [47788,] 428 286 #>  [47789,] 429 286 #>  [47790,] 430 286 #>  [47791,] 431 286 #>  [47792,] 432 286 #>  [47793,] 433 286 #>  [47794,] 434 286 #>  [47795,] 435 286 #>  [47796,] 436 286 #>  [47797,] 437 286 #>  [47798,] 438 286 #>  [47799,] 439 286 #>  [47800,] 440 286 #>  [47801,] 441 286 #>  [47802,] 442 286 #>  [47803,] 443 286 #>  [47804,] 444 286 #>  [47805,] 445 286 #>  [47806,] 446 286 #>  [47807,] 447 286 #>  [47808,] 448 286 #>  [47809,] 449 286 #>  [47810,] 450 286 #>  [47811,] 451 286 #>  [47812,] 452 286 #>  [47813,] 453 286 #>  [47814,] 454 286 #>  [47815,] 455 286 #>  [47816,] 456 286 #>  [47817,] 457 286 #>  [47818,] 458 286 #>  [47819,] 459 286 #>  [47820,] 460 286 #>  [47821,] 461 286 #>  [47822,] 462 286 #>  [47823,] 463 286 #>  [47824,] 464 286 #>  [47825,] 465 286 #>  [47826,] 466 286 #>  [47827,] 467 286 #>  [47828,] 468 286 #>  [47829,] 469 286 #>  [47830,] 470 286 #>  [47831,] 471 286 #>  [47832,] 472 286 #>  [47833,] 473 286 #>  [47834,] 474 286 #>  [47835,] 475 286 #>  [47836,] 476 286 #>  [47837,] 477 286 #>  [47838,] 478 286 #>  [47839,] 479 286 #>  [47840,] 480 286 #>  [47841,] 481 286 #>  [47842,] 482 286 #>  [47843,] 483 286 #>  [47844,] 484 286 #>  [47845,] 485 286 #>  [47846,] 486 286 #>  [47847,] 487 286 #>  [47848,] 488 286 #>  [47849,] 489 286 #>  [47850,] 490 286 #>  [47851,] 491 286 #>  [47852,] 492 286 #>  [47853,] 493 286 #>  [47854,] 494 286 #>  [47855,] 495 286 #>  [47856,] 496 286 #>  [47857,] 497 286 #>  [47858,] 498 286 #>  [47859,] 499 286 #>  [47860,] 500 286 #>  [47861,] 501 286 #>  [47862,] 502 286 #>  [47863,] 503 286 #>  [47864,] 504 286 #>  [47865,] 505 286 #>  [47866,] 506 286 #>  [47867,] 507 286 #>  [47868,] 508 286 #>  [47869,] 509 286 #>  [47870,] 510 286 #>  [47871,] 511 286 #>  [47872,] 512 286 #>  [47873,] 513 286 #>  [47874,] 514 286 #>  [47875,] 515 286 #>  [47876,] 516 286 #>  [47877,] 517 286 #>  [47878,] 518 286 #>  [47879,] 519 286 #>  [47880,] 520 286 #>  [47881,] 521 286 #>  [47882,] 522 286 #>  [47883,] 523 286 #>  [47884,] 524 286 #>  [47885,] 525 286 #>  [47886,] 526 286 #>  [47887,] 527 286 #>  [47888,] 528 286 #>  [47889,] 529 286 #>  [47890,] 530 286 #>  [47891,] 531 286 #>  [47892,] 532 286 #>  [47893,] 533 286 #>  [47894,] 534 286 #>  [47895,] 535 286 #>  [47896,] 536 286 #>  [47897,] 537 286 #>  [47898,] 538 286 #>  [47899,] 539 286 #>  [47900,] 540 286 #>  [47901,] 541 286 #>  [47902,] 542 286 #>  [47903,] 543 286 #>  [47904,] 544 286 #>  [47905,] 545 286 #>  [47906,] 546 286 #>  [47907,] 547 286 #>  [47908,] 548 286 #>  [47909,] 549 286 #>  [47910,] 550 286 #>  [47911,] 551 286 #>  [47912,] 552 286 #>  [47913,] 553 286 #>  [47914,] 554 286 #>  [47915,] 555 286 #>  [47916,] 556 286 #>  [47917,] 557 286 #>  [47918,] 558 286 #>  [47919,] 559 286 #>  [47920,] 560 286 #>  [47921,] 561 286 #>  [47922,] 562 286 #>  [47923,] 563 286 #>  [47924,] 564 286 #>  [47925,] 565 286 #>  [47926,] 566 286 #>  [47927,] 567 286 #>  [47928,] 568 286 #>  [47929,] 569 286 #>  [47930,] 570 286 #>  [47931,] 571 286 #>  [47932,] 572 286 #>  [47933,] 573 286 #>  [47934,] 574 286 #>  [47935,] 575 286 #>  [47936,] 576 286 #>  [47937,] 577 286 #>  [47938,] 578 286 #>  [47939,] 579 286 #>  [47940,] 580 286 #>  [47941,] 581 286 #>  [47942,] 582 286 #>  [47943,] 583 286 #>  [47944,] 584 286 #>  [47945,] 585 286 #>  [47946,] 586 286 #>  [47947,] 587 286 #>  [47948,] 588 286 #>  [47949,] 589 286 #>  [47950,] 590 286 #>  [47951,] 591 286 #>  [47952,] 592 286 #>  [47953,] 593 286 #>  [47954,] 594 286 #>  [47955,] 595 286 #>  [47956,] 596 286 #>  [47957,] 597 286 #>  [47958,] 598 286 #>  [47959,] 599 286 #>  [47960,] 600 286 #>  [47961,] 601 286 #>  [47962,] 602 286 #>  [47963,] 603 286 #>  [47964,] 604 286 #>  [47965,] 605 286 #>  [47966,] 606 286 #>  [47967,] 607 286 #>  [47968,] 608 286 #>  [47969,] 609 286 #>  [47970,] 610 286 #>  [47971,] 611 286 #>  [47972,] 612 286 #>  [47973,] 613 286 #>  [47974,] 614 286 #>  [47975,] 615 286 #>  [47976,] 616 286 #>  [47977,] 617 286 #>  [47978,] 618 286 #>  [47979,] 619 286 #>  [47980,] 620 286 #>  [47981,] 621 286 #>  [47982,] 622 286 #>  [47983,] 623 286 #>  [47984,] 624 286 #>  [47985,] 625 286 #>  [47986,] 626 286 #>  [47987,] 627 286 #>  [47988,] 628 286 #>  [47989,] 629 286 #>  [47990,] 630 286 #>  [47991,] 631 286 #>  [47992,] 632 286 #>  [47993,] 633 286 #>  [47994,] 634 286 #>  [47995,] 635 286 #>  [47996,] 636 286 #>  [47997,] 637 286 #>  [47998,] 638 286 #>  [47999,] 639 286 #>  [48000,] 640 286 #>  [48001,]   1 285 #>  [48002,]   2 285 #>  [48003,]   3 285 #>  [48004,]   4 285 #>  [48005,]   5 285 #>  [48006,]   6 285 #>  [48007,]   7 285 #>  [48008,]   8 285 #>  [48009,]   9 285 #>  [48010,]  10 285 #>  [48011,]  11 285 #>  [48012,]  12 285 #>  [48013,]  13 285 #>  [48014,]  14 285 #>  [48015,]  15 285 #>  [48016,]  16 285 #>  [48017,]  17 285 #>  [48018,]  18 285 #>  [48019,]  19 285 #>  [48020,]  20 285 #>  [48021,]  21 285 #>  [48022,]  22 285 #>  [48023,]  23 285 #>  [48024,]  24 285 #>  [48025,]  25 285 #>  [48026,]  26 285 #>  [48027,]  27 285 #>  [48028,]  28 285 #>  [48029,]  29 285 #>  [48030,]  30 285 #>  [48031,]  31 285 #>  [48032,]  32 285 #>  [48033,]  33 285 #>  [48034,]  34 285 #>  [48035,]  35 285 #>  [48036,]  36 285 #>  [48037,]  37 285 #>  [48038,]  38 285 #>  [48039,]  39 285 #>  [48040,]  40 285 #>  [48041,]  41 285 #>  [48042,]  42 285 #>  [48043,]  43 285 #>  [48044,]  44 285 #>  [48045,]  45 285 #>  [48046,]  46 285 #>  [48047,]  47 285 #>  [48048,]  48 285 #>  [48049,]  49 285 #>  [48050,]  50 285 #>  [48051,]  51 285 #>  [48052,]  52 285 #>  [48053,]  53 285 #>  [48054,]  54 285 #>  [48055,]  55 285 #>  [48056,]  56 285 #>  [48057,]  57 285 #>  [48058,]  58 285 #>  [48059,]  59 285 #>  [48060,]  60 285 #>  [48061,]  61 285 #>  [48062,]  62 285 #>  [48063,]  63 285 #>  [48064,]  64 285 #>  [48065,]  65 285 #>  [48066,]  66 285 #>  [48067,]  67 285 #>  [48068,]  68 285 #>  [48069,]  69 285 #>  [48070,]  70 285 #>  [48071,]  71 285 #>  [48072,]  72 285 #>  [48073,]  73 285 #>  [48074,]  74 285 #>  [48075,]  75 285 #>  [48076,]  76 285 #>  [48077,]  77 285 #>  [48078,]  78 285 #>  [48079,]  79 285 #>  [48080,]  80 285 #>  [48081,]  81 285 #>  [48082,]  82 285 #>  [48083,]  83 285 #>  [48084,]  84 285 #>  [48085,]  85 285 #>  [48086,]  86 285 #>  [48087,]  87 285 #>  [48088,]  88 285 #>  [48089,]  89 285 #>  [48090,]  90 285 #>  [48091,]  91 285 #>  [48092,]  92 285 #>  [48093,]  93 285 #>  [48094,]  94 285 #>  [48095,]  95 285 #>  [48096,]  96 285 #>  [48097,]  97 285 #>  [48098,]  98 285 #>  [48099,]  99 285 #>  [48100,] 100 285 #>  [48101,] 101 285 #>  [48102,] 102 285 #>  [48103,] 103 285 #>  [48104,] 104 285 #>  [48105,] 105 285 #>  [48106,] 106 285 #>  [48107,] 107 285 #>  [48108,] 108 285 #>  [48109,] 109 285 #>  [48110,] 110 285 #>  [48111,] 111 285 #>  [48112,] 112 285 #>  [48113,] 113 285 #>  [48114,] 114 285 #>  [48115,] 115 285 #>  [48116,] 116 285 #>  [48117,] 117 285 #>  [48118,] 118 285 #>  [48119,] 119 285 #>  [48120,] 120 285 #>  [48121,] 121 285 #>  [48122,] 122 285 #>  [48123,] 123 285 #>  [48124,] 124 285 #>  [48125,] 125 285 #>  [48126,] 126 285 #>  [48127,] 127 285 #>  [48128,] 128 285 #>  [48129,] 129 285 #>  [48130,] 130 285 #>  [48131,] 131 285 #>  [48132,] 132 285 #>  [48133,] 133 285 #>  [48134,] 134 285 #>  [48135,] 135 285 #>  [48136,] 136 285 #>  [48137,] 137 285 #>  [48138,] 138 285 #>  [48139,] 139 285 #>  [48140,] 140 285 #>  [48141,] 141 285 #>  [48142,] 142 285 #>  [48143,] 143 285 #>  [48144,] 144 285 #>  [48145,] 145 285 #>  [48146,] 146 285 #>  [48147,] 147 285 #>  [48148,] 148 285 #>  [48149,] 149 285 #>  [48150,] 150 285 #>  [48151,] 151 285 #>  [48152,] 152 285 #>  [48153,] 153 285 #>  [48154,] 154 285 #>  [48155,] 155 285 #>  [48156,] 156 285 #>  [48157,] 157 285 #>  [48158,] 158 285 #>  [48159,] 159 285 #>  [48160,] 160 285 #>  [48161,] 161 285 #>  [48162,] 162 285 #>  [48163,] 163 285 #>  [48164,] 164 285 #>  [48165,] 165 285 #>  [48166,] 166 285 #>  [48167,] 167 285 #>  [48168,] 168 285 #>  [48169,] 169 285 #>  [48170,] 170 285 #>  [48171,] 171 285 #>  [48172,] 172 285 #>  [48173,] 173 285 #>  [48174,] 174 285 #>  [48175,] 175 285 #>  [48176,] 176 285 #>  [48177,] 177 285 #>  [48178,] 178 285 #>  [48179,] 179 285 #>  [48180,] 180 285 #>  [48181,] 181 285 #>  [48182,] 182 285 #>  [48183,] 183 285 #>  [48184,] 184 285 #>  [48185,] 185 285 #>  [48186,] 186 285 #>  [48187,] 187 285 #>  [48188,] 188 285 #>  [48189,] 189 285 #>  [48190,] 190 285 #>  [48191,] 191 285 #>  [48192,] 192 285 #>  [48193,] 193 285 #>  [48194,] 194 285 #>  [48195,] 195 285 #>  [48196,] 196 285 #>  [48197,] 197 285 #>  [48198,] 198 285 #>  [48199,] 199 285 #>  [48200,] 200 285 #>  [48201,] 201 285 #>  [48202,] 202 285 #>  [48203,] 203 285 #>  [48204,] 204 285 #>  [48205,] 205 285 #>  [48206,] 206 285 #>  [48207,] 207 285 #>  [48208,] 208 285 #>  [48209,] 209 285 #>  [48210,] 210 285 #>  [48211,] 211 285 #>  [48212,] 212 285 #>  [48213,] 213 285 #>  [48214,] 214 285 #>  [48215,] 215 285 #>  [48216,] 216 285 #>  [48217,] 217 285 #>  [48218,] 218 285 #>  [48219,] 219 285 #>  [48220,] 220 285 #>  [48221,] 221 285 #>  [48222,] 222 285 #>  [48223,] 223 285 #>  [48224,] 224 285 #>  [48225,] 225 285 #>  [48226,] 226 285 #>  [48227,] 227 285 #>  [48228,] 228 285 #>  [48229,] 229 285 #>  [48230,] 230 285 #>  [48231,] 231 285 #>  [48232,] 232 285 #>  [48233,] 233 285 #>  [48234,] 234 285 #>  [48235,] 235 285 #>  [48236,] 236 285 #>  [48237,] 237 285 #>  [48238,] 238 285 #>  [48239,] 239 285 #>  [48240,] 240 285 #>  [48241,] 241 285 #>  [48242,] 242 285 #>  [48243,] 243 285 #>  [48244,] 244 285 #>  [48245,] 245 285 #>  [48246,] 246 285 #>  [48247,] 247 285 #>  [48248,] 248 285 #>  [48249,] 249 285 #>  [48250,] 250 285 #>  [48251,] 251 285 #>  [48252,] 252 285 #>  [48253,] 253 285 #>  [48254,] 254 285 #>  [48255,] 255 285 #>  [48256,] 256 285 #>  [48257,] 257 285 #>  [48258,] 258 285 #>  [48259,] 259 285 #>  [48260,] 260 285 #>  [48261,] 261 285 #>  [48262,] 262 285 #>  [48263,] 263 285 #>  [48264,] 264 285 #>  [48265,] 265 285 #>  [48266,] 266 285 #>  [48267,] 267 285 #>  [48268,] 268 285 #>  [48269,] 269 285 #>  [48270,] 270 285 #>  [48271,] 271 285 #>  [48272,] 272 285 #>  [48273,] 273 285 #>  [48274,] 274 285 #>  [48275,] 275 285 #>  [48276,] 276 285 #>  [48277,] 277 285 #>  [48278,] 278 285 #>  [48279,] 279 285 #>  [48280,] 280 285 #>  [48281,] 281 285 #>  [48282,] 282 285 #>  [48283,] 283 285 #>  [48284,] 284 285 #>  [48285,] 285 285 #>  [48286,] 286 285 #>  [48287,] 287 285 #>  [48288,] 288 285 #>  [48289,] 289 285 #>  [48290,] 290 285 #>  [48291,] 291 285 #>  [48292,] 292 285 #>  [48293,] 293 285 #>  [48294,] 294 285 #>  [48295,] 295 285 #>  [48296,] 296 285 #>  [48297,] 297 285 #>  [48298,] 298 285 #>  [48299,] 299 285 #>  [48300,] 300 285 #>  [48301,] 301 285 #>  [48302,] 302 285 #>  [48303,] 303 285 #>  [48304,] 304 285 #>  [48305,] 305 285 #>  [48306,] 306 285 #>  [48307,] 307 285 #>  [48308,] 308 285 #>  [48309,] 309 285 #>  [48310,] 310 285 #>  [48311,] 311 285 #>  [48312,] 312 285 #>  [48313,] 313 285 #>  [48314,] 314 285 #>  [48315,] 315 285 #>  [48316,] 316 285 #>  [48317,] 317 285 #>  [48318,] 318 285 #>  [48319,] 319 285 #>  [48320,] 320 285 #>  [48321,] 321 285 #>  [48322,] 322 285 #>  [48323,] 323 285 #>  [48324,] 324 285 #>  [48325,] 325 285 #>  [48326,] 326 285 #>  [48327,] 327 285 #>  [48328,] 328 285 #>  [48329,] 329 285 #>  [48330,] 330 285 #>  [48331,] 331 285 #>  [48332,] 332 285 #>  [48333,] 333 285 #>  [48334,] 334 285 #>  [48335,] 335 285 #>  [48336,] 336 285 #>  [48337,] 337 285 #>  [48338,] 338 285 #>  [48339,] 339 285 #>  [48340,] 340 285 #>  [48341,] 341 285 #>  [48342,] 342 285 #>  [48343,] 343 285 #>  [48344,] 344 285 #>  [48345,] 345 285 #>  [48346,] 346 285 #>  [48347,] 347 285 #>  [48348,] 348 285 #>  [48349,] 349 285 #>  [48350,] 350 285 #>  [48351,] 351 285 #>  [48352,] 352 285 #>  [48353,] 353 285 #>  [48354,] 354 285 #>  [48355,] 355 285 #>  [48356,] 356 285 #>  [48357,] 357 285 #>  [48358,] 358 285 #>  [48359,] 359 285 #>  [48360,] 360 285 #>  [48361,] 361 285 #>  [48362,] 362 285 #>  [48363,] 363 285 #>  [48364,] 364 285 #>  [48365,] 365 285 #>  [48366,] 366 285 #>  [48367,] 367 285 #>  [48368,] 368 285 #>  [48369,] 369 285 #>  [48370,] 370 285 #>  [48371,] 371 285 #>  [48372,] 372 285 #>  [48373,] 373 285 #>  [48374,] 374 285 #>  [48375,] 375 285 #>  [48376,] 376 285 #>  [48377,] 377 285 #>  [48378,] 378 285 #>  [48379,] 379 285 #>  [48380,] 380 285 #>  [48381,] 381 285 #>  [48382,] 382 285 #>  [48383,] 383 285 #>  [48384,] 384 285 #>  [48385,] 385 285 #>  [48386,] 386 285 #>  [48387,] 387 285 #>  [48388,] 388 285 #>  [48389,] 389 285 #>  [48390,] 390 285 #>  [48391,] 391 285 #>  [48392,] 392 285 #>  [48393,] 393 285 #>  [48394,] 394 285 #>  [48395,] 395 285 #>  [48396,] 396 285 #>  [48397,] 397 285 #>  [48398,] 398 285 #>  [48399,] 399 285 #>  [48400,] 400 285 #>  [48401,] 401 285 #>  [48402,] 402 285 #>  [48403,] 403 285 #>  [48404,] 404 285 #>  [48405,] 405 285 #>  [48406,] 406 285 #>  [48407,] 407 285 #>  [48408,] 408 285 #>  [48409,] 409 285 #>  [48410,] 410 285 #>  [48411,] 411 285 #>  [48412,] 412 285 #>  [48413,] 413 285 #>  [48414,] 414 285 #>  [48415,] 415 285 #>  [48416,] 416 285 #>  [48417,] 417 285 #>  [48418,] 418 285 #>  [48419,] 419 285 #>  [48420,] 420 285 #>  [48421,] 421 285 #>  [48422,] 422 285 #>  [48423,] 423 285 #>  [48424,] 424 285 #>  [48425,] 425 285 #>  [48426,] 426 285 #>  [48427,] 427 285 #>  [48428,] 428 285 #>  [48429,] 429 285 #>  [48430,] 430 285 #>  [48431,] 431 285 #>  [48432,] 432 285 #>  [48433,] 433 285 #>  [48434,] 434 285 #>  [48435,] 435 285 #>  [48436,] 436 285 #>  [48437,] 437 285 #>  [48438,] 438 285 #>  [48439,] 439 285 #>  [48440,] 440 285 #>  [48441,] 441 285 #>  [48442,] 442 285 #>  [48443,] 443 285 #>  [48444,] 444 285 #>  [48445,] 445 285 #>  [48446,] 446 285 #>  [48447,] 447 285 #>  [48448,] 448 285 #>  [48449,] 449 285 #>  [48450,] 450 285 #>  [48451,] 451 285 #>  [48452,] 452 285 #>  [48453,] 453 285 #>  [48454,] 454 285 #>  [48455,] 455 285 #>  [48456,] 456 285 #>  [48457,] 457 285 #>  [48458,] 458 285 #>  [48459,] 459 285 #>  [48460,] 460 285 #>  [48461,] 461 285 #>  [48462,] 462 285 #>  [48463,] 463 285 #>  [48464,] 464 285 #>  [48465,] 465 285 #>  [48466,] 466 285 #>  [48467,] 467 285 #>  [48468,] 468 285 #>  [48469,] 469 285 #>  [48470,] 470 285 #>  [48471,] 471 285 #>  [48472,] 472 285 #>  [48473,] 473 285 #>  [48474,] 474 285 #>  [48475,] 475 285 #>  [48476,] 476 285 #>  [48477,] 477 285 #>  [48478,] 478 285 #>  [48479,] 479 285 #>  [48480,] 480 285 #>  [48481,] 481 285 #>  [48482,] 482 285 #>  [48483,] 483 285 #>  [48484,] 484 285 #>  [48485,] 485 285 #>  [48486,] 486 285 #>  [48487,] 487 285 #>  [48488,] 488 285 #>  [48489,] 489 285 #>  [48490,] 490 285 #>  [48491,] 491 285 #>  [48492,] 492 285 #>  [48493,] 493 285 #>  [48494,] 494 285 #>  [48495,] 495 285 #>  [48496,] 496 285 #>  [48497,] 497 285 #>  [48498,] 498 285 #>  [48499,] 499 285 #>  [48500,] 500 285 #>  [48501,] 501 285 #>  [48502,] 502 285 #>  [48503,] 503 285 #>  [48504,] 504 285 #>  [48505,] 505 285 #>  [48506,] 506 285 #>  [48507,] 507 285 #>  [48508,] 508 285 #>  [48509,] 509 285 #>  [48510,] 510 285 #>  [48511,] 511 285 #>  [48512,] 512 285 #>  [48513,] 513 285 #>  [48514,] 514 285 #>  [48515,] 515 285 #>  [48516,] 516 285 #>  [48517,] 517 285 #>  [48518,] 518 285 #>  [48519,] 519 285 #>  [48520,] 520 285 #>  [48521,] 521 285 #>  [48522,] 522 285 #>  [48523,] 523 285 #>  [48524,] 524 285 #>  [48525,] 525 285 #>  [48526,] 526 285 #>  [48527,] 527 285 #>  [48528,] 528 285 #>  [48529,] 529 285 #>  [48530,] 530 285 #>  [48531,] 531 285 #>  [48532,] 532 285 #>  [48533,] 533 285 #>  [48534,] 534 285 #>  [48535,] 535 285 #>  [48536,] 536 285 #>  [48537,] 537 285 #>  [48538,] 538 285 #>  [48539,] 539 285 #>  [48540,] 540 285 #>  [48541,] 541 285 #>  [48542,] 542 285 #>  [48543,] 543 285 #>  [48544,] 544 285 #>  [48545,] 545 285 #>  [48546,] 546 285 #>  [48547,] 547 285 #>  [48548,] 548 285 #>  [48549,] 549 285 #>  [48550,] 550 285 #>  [48551,] 551 285 #>  [48552,] 552 285 #>  [48553,] 553 285 #>  [48554,] 554 285 #>  [48555,] 555 285 #>  [48556,] 556 285 #>  [48557,] 557 285 #>  [48558,] 558 285 #>  [48559,] 559 285 #>  [48560,] 560 285 #>  [48561,] 561 285 #>  [48562,] 562 285 #>  [48563,] 563 285 #>  [48564,] 564 285 #>  [48565,] 565 285 #>  [48566,] 566 285 #>  [48567,] 567 285 #>  [48568,] 568 285 #>  [48569,] 569 285 #>  [48570,] 570 285 #>  [48571,] 571 285 #>  [48572,] 572 285 #>  [48573,] 573 285 #>  [48574,] 574 285 #>  [48575,] 575 285 #>  [48576,] 576 285 #>  [48577,] 577 285 #>  [48578,] 578 285 #>  [48579,] 579 285 #>  [48580,] 580 285 #>  [48581,] 581 285 #>  [48582,] 582 285 #>  [48583,] 583 285 #>  [48584,] 584 285 #>  [48585,] 585 285 #>  [48586,] 586 285 #>  [48587,] 587 285 #>  [48588,] 588 285 #>  [48589,] 589 285 #>  [48590,] 590 285 #>  [48591,] 591 285 #>  [48592,] 592 285 #>  [48593,] 593 285 #>  [48594,] 594 285 #>  [48595,] 595 285 #>  [48596,] 596 285 #>  [48597,] 597 285 #>  [48598,] 598 285 #>  [48599,] 599 285 #>  [48600,] 600 285 #>  [48601,] 601 285 #>  [48602,] 602 285 #>  [48603,] 603 285 #>  [48604,] 604 285 #>  [48605,] 605 285 #>  [48606,] 606 285 #>  [48607,] 607 285 #>  [48608,] 608 285 #>  [48609,] 609 285 #>  [48610,] 610 285 #>  [48611,] 611 285 #>  [48612,] 612 285 #>  [48613,] 613 285 #>  [48614,] 614 285 #>  [48615,] 615 285 #>  [48616,] 616 285 #>  [48617,] 617 285 #>  [48618,] 618 285 #>  [48619,] 619 285 #>  [48620,] 620 285 #>  [48621,] 621 285 #>  [48622,] 622 285 #>  [48623,] 623 285 #>  [48624,] 624 285 #>  [48625,] 625 285 #>  [48626,] 626 285 #>  [48627,] 627 285 #>  [48628,] 628 285 #>  [48629,] 629 285 #>  [48630,] 630 285 #>  [48631,] 631 285 #>  [48632,] 632 285 #>  [48633,] 633 285 #>  [48634,] 634 285 #>  [48635,] 635 285 #>  [48636,] 636 285 #>  [48637,] 637 285 #>  [48638,] 638 285 #>  [48639,] 639 285 #>  [48640,] 640 285 #>  [48641,]   1 284 #>  [48642,]   2 284 #>  [48643,]   3 284 #>  [48644,]   4 284 #>  [48645,]   5 284 #>  [48646,]   6 284 #>  [48647,]   7 284 #>  [48648,]   8 284 #>  [48649,]   9 284 #>  [48650,]  10 284 #>  [48651,]  11 284 #>  [48652,]  12 284 #>  [48653,]  13 284 #>  [48654,]  14 284 #>  [48655,]  15 284 #>  [48656,]  16 284 #>  [48657,]  17 284 #>  [48658,]  18 284 #>  [48659,]  19 284 #>  [48660,]  20 284 #>  [48661,]  21 284 #>  [48662,]  22 284 #>  [48663,]  23 284 #>  [48664,]  24 284 #>  [48665,]  25 284 #>  [48666,]  26 284 #>  [48667,]  27 284 #>  [48668,]  28 284 #>  [48669,]  29 284 #>  [48670,]  30 284 #>  [48671,]  31 284 #>  [48672,]  32 284 #>  [48673,]  33 284 #>  [48674,]  34 284 #>  [48675,]  35 284 #>  [48676,]  36 284 #>  [48677,]  37 284 #>  [48678,]  38 284 #>  [48679,]  39 284 #>  [48680,]  40 284 #>  [48681,]  41 284 #>  [48682,]  42 284 #>  [48683,]  43 284 #>  [48684,]  44 284 #>  [48685,]  45 284 #>  [48686,]  46 284 #>  [48687,]  47 284 #>  [48688,]  48 284 #>  [48689,]  49 284 #>  [48690,]  50 284 #>  [48691,]  51 284 #>  [48692,]  52 284 #>  [48693,]  53 284 #>  [48694,]  54 284 #>  [48695,]  55 284 #>  [48696,]  56 284 #>  [48697,]  57 284 #>  [48698,]  58 284 #>  [48699,]  59 284 #>  [48700,]  60 284 #>  [48701,]  61 284 #>  [48702,]  62 284 #>  [48703,]  63 284 #>  [48704,]  64 284 #>  [48705,]  65 284 #>  [48706,]  66 284 #>  [48707,]  67 284 #>  [48708,]  68 284 #>  [48709,]  69 284 #>  [48710,]  70 284 #>  [48711,]  71 284 #>  [48712,]  72 284 #>  [48713,]  73 284 #>  [48714,]  74 284 #>  [48715,]  75 284 #>  [48716,]  76 284 #>  [48717,]  77 284 #>  [48718,]  78 284 #>  [48719,]  79 284 #>  [48720,]  80 284 #>  [48721,]  81 284 #>  [48722,]  82 284 #>  [48723,]  83 284 #>  [48724,]  84 284 #>  [48725,]  85 284 #>  [48726,]  86 284 #>  [48727,]  87 284 #>  [48728,]  88 284 #>  [48729,]  89 284 #>  [48730,]  90 284 #>  [48731,]  91 284 #>  [48732,]  92 284 #>  [48733,]  93 284 #>  [48734,]  94 284 #>  [48735,]  95 284 #>  [48736,]  96 284 #>  [48737,]  97 284 #>  [48738,]  98 284 #>  [48739,]  99 284 #>  [48740,] 100 284 #>  [48741,] 101 284 #>  [48742,] 102 284 #>  [48743,] 103 284 #>  [48744,] 104 284 #>  [48745,] 105 284 #>  [48746,] 106 284 #>  [48747,] 107 284 #>  [48748,] 108 284 #>  [48749,] 109 284 #>  [48750,] 110 284 #>  [48751,] 111 284 #>  [48752,] 112 284 #>  [48753,] 113 284 #>  [48754,] 114 284 #>  [48755,] 115 284 #>  [48756,] 116 284 #>  [48757,] 117 284 #>  [48758,] 118 284 #>  [48759,] 119 284 #>  [48760,] 120 284 #>  [48761,] 121 284 #>  [48762,] 122 284 #>  [48763,] 123 284 #>  [48764,] 124 284 #>  [48765,] 125 284 #>  [48766,] 126 284 #>  [48767,] 127 284 #>  [48768,] 128 284 #>  [48769,] 129 284 #>  [48770,] 130 284 #>  [48771,] 131 284 #>  [48772,] 132 284 #>  [48773,] 133 284 #>  [48774,] 134 284 #>  [48775,] 135 284 #>  [48776,] 136 284 #>  [48777,] 137 284 #>  [48778,] 138 284 #>  [48779,] 139 284 #>  [48780,] 140 284 #>  [48781,] 141 284 #>  [48782,] 142 284 #>  [48783,] 143 284 #>  [48784,] 144 284 #>  [48785,] 145 284 #>  [48786,] 146 284 #>  [48787,] 147 284 #>  [48788,] 148 284 #>  [48789,] 149 284 #>  [48790,] 150 284 #>  [48791,] 151 284 #>  [48792,] 152 284 #>  [48793,] 153 284 #>  [48794,] 154 284 #>  [48795,] 155 284 #>  [48796,] 156 284 #>  [48797,] 157 284 #>  [48798,] 158 284 #>  [48799,] 159 284 #>  [48800,] 160 284 #>  [48801,] 161 284 #>  [48802,] 162 284 #>  [48803,] 163 284 #>  [48804,] 164 284 #>  [48805,] 165 284 #>  [48806,] 166 284 #>  [48807,] 167 284 #>  [48808,] 168 284 #>  [48809,] 169 284 #>  [48810,] 170 284 #>  [48811,] 171 284 #>  [48812,] 172 284 #>  [48813,] 173 284 #>  [48814,] 174 284 #>  [48815,] 175 284 #>  [48816,] 176 284 #>  [48817,] 177 284 #>  [48818,] 178 284 #>  [48819,] 179 284 #>  [48820,] 180 284 #>  [48821,] 181 284 #>  [48822,] 182 284 #>  [48823,] 183 284 #>  [48824,] 184 284 #>  [48825,] 185 284 #>  [48826,] 186 284 #>  [48827,] 187 284 #>  [48828,] 188 284 #>  [48829,] 189 284 #>  [48830,] 190 284 #>  [48831,] 191 284 #>  [48832,] 192 284 #>  [48833,] 193 284 #>  [48834,] 194 284 #>  [48835,] 195 284 #>  [48836,] 196 284 #>  [48837,] 197 284 #>  [48838,] 198 284 #>  [48839,] 199 284 #>  [48840,] 200 284 #>  [48841,] 201 284 #>  [48842,] 202 284 #>  [48843,] 203 284 #>  [48844,] 204 284 #>  [48845,] 205 284 #>  [48846,] 206 284 #>  [48847,] 207 284 #>  [48848,] 208 284 #>  [48849,] 209 284 #>  [48850,] 210 284 #>  [48851,] 211 284 #>  [48852,] 212 284 #>  [48853,] 213 284 #>  [48854,] 214 284 #>  [48855,] 215 284 #>  [48856,] 216 284 #>  [48857,] 217 284 #>  [48858,] 218 284 #>  [48859,] 219 284 #>  [48860,] 220 284 #>  [48861,] 221 284 #>  [48862,] 222 284 #>  [48863,] 223 284 #>  [48864,] 224 284 #>  [48865,] 225 284 #>  [48866,] 226 284 #>  [48867,] 227 284 #>  [48868,] 228 284 #>  [48869,] 229 284 #>  [48870,] 230 284 #>  [48871,] 231 284 #>  [48872,] 232 284 #>  [48873,] 233 284 #>  [48874,] 234 284 #>  [48875,] 235 284 #>  [48876,] 236 284 #>  [48877,] 237 284 #>  [48878,] 238 284 #>  [48879,] 239 284 #>  [48880,] 240 284 #>  [48881,] 241 284 #>  [48882,] 242 284 #>  [48883,] 243 284 #>  [48884,] 244 284 #>  [48885,] 245 284 #>  [48886,] 246 284 #>  [48887,] 247 284 #>  [48888,] 248 284 #>  [48889,] 249 284 #>  [48890,] 250 284 #>  [48891,] 251 284 #>  [48892,] 252 284 #>  [48893,] 253 284 #>  [48894,] 254 284 #>  [48895,] 255 284 #>  [48896,] 256 284 #>  [48897,] 257 284 #>  [48898,] 258 284 #>  [48899,] 259 284 #>  [48900,] 260 284 #>  [48901,] 261 284 #>  [48902,] 262 284 #>  [48903,] 263 284 #>  [48904,] 264 284 #>  [48905,] 265 284 #>  [48906,] 266 284 #>  [48907,] 267 284 #>  [48908,] 268 284 #>  [48909,] 269 284 #>  [48910,] 270 284 #>  [48911,] 271 284 #>  [48912,] 272 284 #>  [48913,] 273 284 #>  [48914,] 274 284 #>  [48915,] 275 284 #>  [48916,] 276 284 #>  [48917,] 277 284 #>  [48918,] 278 284 #>  [48919,] 279 284 #>  [48920,] 280 284 #>  [48921,] 281 284 #>  [48922,] 282 284 #>  [48923,] 283 284 #>  [48924,] 284 284 #>  [48925,] 285 284 #>  [48926,] 286 284 #>  [48927,] 287 284 #>  [48928,] 288 284 #>  [48929,] 289 284 #>  [48930,] 290 284 #>  [48931,] 291 284 #>  [48932,] 292 284 #>  [48933,] 293 284 #>  [48934,] 294 284 #>  [48935,] 295 284 #>  [48936,] 296 284 #>  [48937,] 297 284 #>  [48938,] 298 284 #>  [48939,] 299 284 #>  [48940,] 300 284 #>  [48941,] 301 284 #>  [48942,] 302 284 #>  [48943,] 303 284 #>  [48944,] 304 284 #>  [48945,] 305 284 #>  [48946,] 306 284 #>  [48947,] 307 284 #>  [48948,] 308 284 #>  [48949,] 309 284 #>  [48950,] 310 284 #>  [48951,] 311 284 #>  [48952,] 312 284 #>  [48953,] 313 284 #>  [48954,] 314 284 #>  [48955,] 315 284 #>  [48956,] 316 284 #>  [48957,] 317 284 #>  [48958,] 318 284 #>  [48959,] 319 284 #>  [48960,] 320 284 #>  [48961,] 321 284 #>  [48962,] 322 284 #>  [48963,] 323 284 #>  [48964,] 324 284 #>  [48965,] 325 284 #>  [48966,] 326 284 #>  [48967,] 327 284 #>  [48968,] 328 284 #>  [48969,] 329 284 #>  [48970,] 330 284 #>  [48971,] 331 284 #>  [48972,] 332 284 #>  [48973,] 333 284 #>  [48974,] 334 284 #>  [48975,] 335 284 #>  [48976,] 336 284 #>  [48977,] 337 284 #>  [48978,] 338 284 #>  [48979,] 339 284 #>  [48980,] 340 284 #>  [48981,] 341 284 #>  [48982,] 342 284 #>  [48983,] 343 284 #>  [48984,] 344 284 #>  [48985,] 345 284 #>  [48986,] 346 284 #>  [48987,] 347 284 #>  [48988,] 348 284 #>  [48989,] 349 284 #>  [48990,] 350 284 #>  [48991,] 351 284 #>  [48992,] 352 284 #>  [48993,] 353 284 #>  [48994,] 354 284 #>  [48995,] 355 284 #>  [48996,] 356 284 #>  [48997,] 357 284 #>  [48998,] 358 284 #>  [48999,] 359 284 #>  [49000,] 360 284 #>  [49001,] 361 284 #>  [49002,] 362 284 #>  [49003,] 363 284 #>  [49004,] 364 284 #>  [49005,] 365 284 #>  [49006,] 366 284 #>  [49007,] 367 284 #>  [49008,] 368 284 #>  [49009,] 369 284 #>  [49010,] 370 284 #>  [49011,] 371 284 #>  [49012,] 372 284 #>  [49013,] 373 284 #>  [49014,] 374 284 #>  [49015,] 375 284 #>  [49016,] 376 284 #>  [49017,] 377 284 #>  [49018,] 378 284 #>  [49019,] 379 284 #>  [49020,] 380 284 #>  [49021,] 381 284 #>  [49022,] 382 284 #>  [49023,] 383 284 #>  [49024,] 384 284 #>  [49025,] 385 284 #>  [49026,] 386 284 #>  [49027,] 387 284 #>  [49028,] 388 284 #>  [49029,] 389 284 #>  [49030,] 390 284 #>  [49031,] 391 284 #>  [49032,] 392 284 #>  [49033,] 393 284 #>  [49034,] 394 284 #>  [49035,] 395 284 #>  [49036,] 396 284 #>  [49037,] 397 284 #>  [49038,] 398 284 #>  [49039,] 399 284 #>  [49040,] 400 284 #>  [49041,] 401 284 #>  [49042,] 402 284 #>  [49043,] 403 284 #>  [49044,] 404 284 #>  [49045,] 405 284 #>  [49046,] 406 284 #>  [49047,] 407 284 #>  [49048,] 408 284 #>  [49049,] 409 284 #>  [49050,] 410 284 #>  [49051,] 411 284 #>  [49052,] 412 284 #>  [49053,] 413 284 #>  [49054,] 414 284 #>  [49055,] 415 284 #>  [49056,] 416 284 #>  [49057,] 417 284 #>  [49058,] 418 284 #>  [49059,] 419 284 #>  [49060,] 420 284 #>  [49061,] 421 284 #>  [49062,] 422 284 #>  [49063,] 423 284 #>  [49064,] 424 284 #>  [49065,] 425 284 #>  [49066,] 426 284 #>  [49067,] 427 284 #>  [49068,] 428 284 #>  [49069,] 429 284 #>  [49070,] 430 284 #>  [49071,] 431 284 #>  [49072,] 432 284 #>  [49073,] 433 284 #>  [49074,] 434 284 #>  [49075,] 435 284 #>  [49076,] 436 284 #>  [49077,] 437 284 #>  [49078,] 438 284 #>  [49079,] 439 284 #>  [49080,] 440 284 #>  [49081,] 441 284 #>  [49082,] 442 284 #>  [49083,] 443 284 #>  [49084,] 444 284 #>  [49085,] 445 284 #>  [49086,] 446 284 #>  [49087,] 447 284 #>  [49088,] 448 284 #>  [49089,] 449 284 #>  [49090,] 450 284 #>  [49091,] 451 284 #>  [49092,] 452 284 #>  [49093,] 453 284 #>  [49094,] 454 284 #>  [49095,] 455 284 #>  [49096,] 456 284 #>  [49097,] 457 284 #>  [49098,] 458 284 #>  [49099,] 459 284 #>  [49100,] 460 284 #>  [49101,] 461 284 #>  [49102,] 462 284 #>  [49103,] 463 284 #>  [49104,] 464 284 #>  [49105,] 465 284 #>  [49106,] 466 284 #>  [49107,] 467 284 #>  [49108,] 468 284 #>  [49109,] 469 284 #>  [49110,] 470 284 #>  [49111,] 471 284 #>  [49112,] 472 284 #>  [49113,] 473 284 #>  [49114,] 474 284 #>  [49115,] 475 284 #>  [49116,] 476 284 #>  [49117,] 477 284 #>  [49118,] 478 284 #>  [49119,] 479 284 #>  [49120,] 480 284 #>  [49121,] 481 284 #>  [49122,] 482 284 #>  [49123,] 483 284 #>  [49124,] 484 284 #>  [49125,] 485 284 #>  [49126,] 486 284 #>  [49127,] 487 284 #>  [49128,] 488 284 #>  [49129,] 489 284 #>  [49130,] 490 284 #>  [49131,] 491 284 #>  [49132,] 492 284 #>  [49133,] 493 284 #>  [49134,] 494 284 #>  [49135,] 495 284 #>  [49136,] 496 284 #>  [49137,] 497 284 #>  [49138,] 498 284 #>  [49139,] 499 284 #>  [49140,] 500 284 #>  [49141,] 501 284 #>  [49142,] 502 284 #>  [49143,] 503 284 #>  [49144,] 504 284 #>  [49145,] 505 284 #>  [49146,] 506 284 #>  [49147,] 507 284 #>  [49148,] 508 284 #>  [49149,] 509 284 #>  [49150,] 510 284 #>  [49151,] 511 284 #>  [49152,] 512 284 #>  [49153,] 513 284 #>  [49154,] 514 284 #>  [49155,] 515 284 #>  [49156,] 516 284 #>  [49157,] 517 284 #>  [49158,] 518 284 #>  [49159,] 519 284 #>  [49160,] 520 284 #>  [49161,] 521 284 #>  [49162,] 522 284 #>  [49163,] 523 284 #>  [49164,] 524 284 #>  [49165,] 525 284 #>  [49166,] 526 284 #>  [49167,] 527 284 #>  [49168,] 528 284 #>  [49169,] 529 284 #>  [49170,] 530 284 #>  [49171,] 531 284 #>  [49172,] 532 284 #>  [49173,] 533 284 #>  [49174,] 534 284 #>  [49175,] 535 284 #>  [49176,] 536 284 #>  [49177,] 537 284 #>  [49178,] 538 284 #>  [49179,] 539 284 #>  [49180,] 540 284 #>  [49181,] 541 284 #>  [49182,] 542 284 #>  [49183,] 543 284 #>  [49184,] 544 284 #>  [49185,] 545 284 #>  [49186,] 546 284 #>  [49187,] 547 284 #>  [49188,] 548 284 #>  [49189,] 549 284 #>  [49190,] 550 284 #>  [49191,] 551 284 #>  [49192,] 552 284 #>  [49193,] 553 284 #>  [49194,] 554 284 #>  [49195,] 555 284 #>  [49196,] 556 284 #>  [49197,] 557 284 #>  [49198,] 558 284 #>  [49199,] 559 284 #>  [49200,] 560 284 #>  [49201,] 561 284 #>  [49202,] 562 284 #>  [49203,] 563 284 #>  [49204,] 564 284 #>  [49205,] 565 284 #>  [49206,] 566 284 #>  [49207,] 567 284 #>  [49208,] 568 284 #>  [49209,] 569 284 #>  [49210,] 570 284 #>  [49211,] 571 284 #>  [49212,] 572 284 #>  [49213,] 573 284 #>  [49214,] 574 284 #>  [49215,] 575 284 #>  [49216,] 576 284 #>  [49217,] 577 284 #>  [49218,] 578 284 #>  [49219,] 579 284 #>  [49220,] 580 284 #>  [49221,] 581 284 #>  [49222,] 582 284 #>  [49223,] 583 284 #>  [49224,] 584 284 #>  [49225,] 585 284 #>  [49226,] 586 284 #>  [49227,] 587 284 #>  [49228,] 588 284 #>  [49229,] 589 284 #>  [49230,] 590 284 #>  [49231,] 591 284 #>  [49232,] 592 284 #>  [49233,] 593 284 #>  [49234,] 594 284 #>  [49235,] 595 284 #>  [49236,] 596 284 #>  [49237,] 597 284 #>  [49238,] 598 284 #>  [49239,] 599 284 #>  [49240,] 600 284 #>  [49241,] 601 284 #>  [49242,] 602 284 #>  [49243,] 603 284 #>  [49244,] 604 284 #>  [49245,] 605 284 #>  [49246,] 606 284 #>  [49247,] 607 284 #>  [49248,] 608 284 #>  [49249,] 609 284 #>  [49250,] 610 284 #>  [49251,] 611 284 #>  [49252,] 612 284 #>  [49253,] 613 284 #>  [49254,] 614 284 #>  [49255,] 615 284 #>  [49256,] 616 284 #>  [49257,] 617 284 #>  [49258,] 618 284 #>  [49259,] 619 284 #>  [49260,] 620 284 #>  [49261,] 621 284 #>  [49262,] 622 284 #>  [49263,] 623 284 #>  [49264,] 624 284 #>  [49265,] 625 284 #>  [49266,] 626 284 #>  [49267,] 627 284 #>  [49268,] 628 284 #>  [49269,] 629 284 #>  [49270,] 630 284 #>  [49271,] 631 284 #>  [49272,] 632 284 #>  [49273,] 633 284 #>  [49274,] 634 284 #>  [49275,] 635 284 #>  [49276,] 636 284 #>  [49277,] 637 284 #>  [49278,] 638 284 #>  [49279,] 639 284 #>  [49280,] 640 284 #>  [49281,]   1 283 #>  [49282,]   2 283 #>  [49283,]   3 283 #>  [49284,]   4 283 #>  [49285,]   5 283 #>  [49286,]   6 283 #>  [49287,]   7 283 #>  [49288,]   8 283 #>  [49289,]   9 283 #>  [49290,]  10 283 #>  [49291,]  11 283 #>  [49292,]  12 283 #>  [49293,]  13 283 #>  [49294,]  14 283 #>  [49295,]  15 283 #>  [49296,]  16 283 #>  [49297,]  17 283 #>  [49298,]  18 283 #>  [49299,]  19 283 #>  [49300,]  20 283 #>  [49301,]  21 283 #>  [49302,]  22 283 #>  [49303,]  23 283 #>  [49304,]  24 283 #>  [49305,]  25 283 #>  [49306,]  26 283 #>  [49307,]  27 283 #>  [49308,]  28 283 #>  [49309,]  29 283 #>  [49310,]  30 283 #>  [49311,]  31 283 #>  [49312,]  32 283 #>  [49313,]  33 283 #>  [49314,]  34 283 #>  [49315,]  35 283 #>  [49316,]  36 283 #>  [49317,]  37 283 #>  [49318,]  38 283 #>  [49319,]  39 283 #>  [49320,]  40 283 #>  [49321,]  41 283 #>  [49322,]  42 283 #>  [49323,]  43 283 #>  [49324,]  44 283 #>  [49325,]  45 283 #>  [49326,]  46 283 #>  [49327,]  47 283 #>  [49328,]  48 283 #>  [49329,]  49 283 #>  [49330,]  50 283 #>  [49331,]  51 283 #>  [49332,]  52 283 #>  [49333,]  53 283 #>  [49334,]  54 283 #>  [49335,]  55 283 #>  [49336,]  56 283 #>  [49337,]  57 283 #>  [49338,]  58 283 #>  [49339,]  59 283 #>  [49340,]  60 283 #>  [49341,]  61 283 #>  [49342,]  62 283 #>  [49343,]  63 283 #>  [49344,]  64 283 #>  [49345,]  65 283 #>  [49346,]  66 283 #>  [49347,]  67 283 #>  [49348,]  68 283 #>  [49349,]  69 283 #>  [49350,]  70 283 #>  [49351,]  71 283 #>  [49352,]  72 283 #>  [49353,]  73 283 #>  [49354,]  74 283 #>  [49355,]  75 283 #>  [49356,]  76 283 #>  [49357,]  77 283 #>  [49358,]  78 283 #>  [49359,]  79 283 #>  [49360,]  80 283 #>  [49361,]  81 283 #>  [49362,]  82 283 #>  [49363,]  83 283 #>  [49364,]  84 283 #>  [49365,]  85 283 #>  [49366,]  86 283 #>  [49367,]  87 283 #>  [49368,]  88 283 #>  [49369,]  89 283 #>  [49370,]  90 283 #>  [49371,]  91 283 #>  [49372,]  92 283 #>  [49373,]  93 283 #>  [49374,]  94 283 #>  [49375,]  95 283 #>  [49376,]  96 283 #>  [49377,]  97 283 #>  [49378,]  98 283 #>  [49379,]  99 283 #>  [49380,] 100 283 #>  [49381,] 101 283 #>  [49382,] 102 283 #>  [49383,] 103 283 #>  [49384,] 104 283 #>  [49385,] 105 283 #>  [49386,] 106 283 #>  [49387,] 107 283 #>  [49388,] 108 283 #>  [49389,] 109 283 #>  [49390,] 110 283 #>  [49391,] 111 283 #>  [49392,] 112 283 #>  [49393,] 113 283 #>  [49394,] 114 283 #>  [49395,] 115 283 #>  [49396,] 116 283 #>  [49397,] 117 283 #>  [49398,] 118 283 #>  [49399,] 119 283 #>  [49400,] 120 283 #>  [49401,] 121 283 #>  [49402,] 122 283 #>  [49403,] 123 283 #>  [49404,] 124 283 #>  [49405,] 125 283 #>  [49406,] 126 283 #>  [49407,] 127 283 #>  [49408,] 128 283 #>  [49409,] 129 283 #>  [49410,] 130 283 #>  [49411,] 131 283 #>  [49412,] 132 283 #>  [49413,] 133 283 #>  [49414,] 134 283 #>  [49415,] 135 283 #>  [49416,] 136 283 #>  [49417,] 137 283 #>  [49418,] 138 283 #>  [49419,] 139 283 #>  [49420,] 140 283 #>  [49421,] 141 283 #>  [49422,] 142 283 #>  [49423,] 143 283 #>  [49424,] 144 283 #>  [49425,] 145 283 #>  [49426,] 146 283 #>  [49427,] 147 283 #>  [49428,] 148 283 #>  [49429,] 149 283 #>  [49430,] 150 283 #>  [49431,] 151 283 #>  [49432,] 152 283 #>  [49433,] 153 283 #>  [49434,] 154 283 #>  [49435,] 155 283 #>  [49436,] 156 283 #>  [49437,] 157 283 #>  [49438,] 158 283 #>  [49439,] 159 283 #>  [49440,] 160 283 #>  [49441,] 161 283 #>  [49442,] 162 283 #>  [49443,] 163 283 #>  [49444,] 164 283 #>  [49445,] 165 283 #>  [49446,] 166 283 #>  [49447,] 167 283 #>  [49448,] 168 283 #>  [49449,] 169 283 #>  [49450,] 170 283 #>  [49451,] 171 283 #>  [49452,] 172 283 #>  [49453,] 173 283 #>  [49454,] 174 283 #>  [49455,] 175 283 #>  [49456,] 176 283 #>  [49457,] 177 283 #>  [49458,] 178 283 #>  [49459,] 179 283 #>  [49460,] 180 283 #>  [49461,] 181 283 #>  [49462,] 182 283 #>  [49463,] 183 283 #>  [49464,] 184 283 #>  [49465,] 185 283 #>  [49466,] 186 283 #>  [49467,] 187 283 #>  [49468,] 188 283 #>  [49469,] 189 283 #>  [49470,] 190 283 #>  [49471,] 191 283 #>  [49472,] 192 283 #>  [49473,] 193 283 #>  [49474,] 194 283 #>  [49475,] 195 283 #>  [49476,] 196 283 #>  [49477,] 197 283 #>  [49478,] 198 283 #>  [49479,] 199 283 #>  [49480,] 200 283 #>  [49481,] 201 283 #>  [49482,] 202 283 #>  [49483,] 203 283 #>  [49484,] 204 283 #>  [49485,] 205 283 #>  [49486,] 206 283 #>  [49487,] 207 283 #>  [49488,] 208 283 #>  [49489,] 209 283 #>  [49490,] 210 283 #>  [49491,] 211 283 #>  [49492,] 212 283 #>  [49493,] 213 283 #>  [49494,] 214 283 #>  [49495,] 215 283 #>  [49496,] 216 283 #>  [49497,] 217 283 #>  [49498,] 218 283 #>  [49499,] 219 283 #>  [49500,] 220 283 #>  [49501,] 221 283 #>  [49502,] 222 283 #>  [49503,] 223 283 #>  [49504,] 224 283 #>  [49505,] 225 283 #>  [49506,] 226 283 #>  [49507,] 227 283 #>  [49508,] 228 283 #>  [49509,] 229 283 #>  [49510,] 230 283 #>  [49511,] 231 283 #>  [49512,] 232 283 #>  [49513,] 233 283 #>  [49514,] 234 283 #>  [49515,] 235 283 #>  [49516,] 236 283 #>  [49517,] 237 283 #>  [49518,] 238 283 #>  [49519,] 239 283 #>  [49520,] 240 283 #>  [49521,] 241 283 #>  [49522,] 242 283 #>  [49523,] 243 283 #>  [49524,] 244 283 #>  [49525,] 245 283 #>  [49526,] 246 283 #>  [49527,] 247 283 #>  [49528,] 248 283 #>  [49529,] 249 283 #>  [49530,] 250 283 #>  [49531,] 251 283 #>  [49532,] 252 283 #>  [49533,] 253 283 #>  [49534,] 254 283 #>  [49535,] 255 283 #>  [49536,] 256 283 #>  [49537,] 257 283 #>  [49538,] 258 283 #>  [49539,] 259 283 #>  [49540,] 260 283 #>  [49541,] 261 283 #>  [49542,] 262 283 #>  [49543,] 263 283 #>  [49544,] 264 283 #>  [49545,] 265 283 #>  [49546,] 266 283 #>  [49547,] 267 283 #>  [49548,] 268 283 #>  [49549,] 269 283 #>  [49550,] 270 283 #>  [49551,] 271 283 #>  [49552,] 272 283 #>  [49553,] 273 283 #>  [49554,] 274 283 #>  [49555,] 275 283 #>  [49556,] 276 283 #>  [49557,] 277 283 #>  [49558,] 278 283 #>  [49559,] 279 283 #>  [49560,] 280 283 #>  [49561,] 281 283 #>  [49562,] 282 283 #>  [49563,] 283 283 #>  [49564,] 284 283 #>  [49565,] 285 283 #>  [49566,] 286 283 #>  [49567,] 287 283 #>  [49568,] 288 283 #>  [49569,] 289 283 #>  [49570,] 290 283 #>  [49571,] 291 283 #>  [49572,] 292 283 #>  [49573,] 293 283 #>  [49574,] 294 283 #>  [49575,] 295 283 #>  [49576,] 296 283 #>  [49577,] 297 283 #>  [49578,] 298 283 #>  [49579,] 299 283 #>  [49580,] 300 283 #>  [49581,] 301 283 #>  [49582,] 302 283 #>  [49583,] 303 283 #>  [49584,] 304 283 #>  [49585,] 305 283 #>  [49586,] 306 283 #>  [49587,] 307 283 #>  [49588,] 308 283 #>  [49589,] 309 283 #>  [49590,] 310 283 #>  [49591,] 311 283 #>  [49592,] 312 283 #>  [49593,] 313 283 #>  [49594,] 314 283 #>  [49595,] 315 283 #>  [49596,] 316 283 #>  [49597,] 317 283 #>  [49598,] 318 283 #>  [49599,] 319 283 #>  [49600,] 320 283 #>  [49601,] 321 283 #>  [49602,] 322 283 #>  [49603,] 323 283 #>  [49604,] 324 283 #>  [49605,] 325 283 #>  [49606,] 326 283 #>  [49607,] 327 283 #>  [49608,] 328 283 #>  [49609,] 329 283 #>  [49610,] 330 283 #>  [49611,] 331 283 #>  [49612,] 332 283 #>  [49613,] 333 283 #>  [49614,] 334 283 #>  [49615,] 335 283 #>  [49616,] 336 283 #>  [49617,] 337 283 #>  [49618,] 338 283 #>  [49619,] 339 283 #>  [49620,] 340 283 #>  [49621,] 341 283 #>  [49622,] 342 283 #>  [49623,] 343 283 #>  [49624,] 344 283 #>  [49625,] 345 283 #>  [49626,] 346 283 #>  [49627,] 347 283 #>  [49628,] 348 283 #>  [49629,] 349 283 #>  [49630,] 350 283 #>  [49631,] 351 283 #>  [49632,] 352 283 #>  [49633,] 353 283 #>  [49634,] 354 283 #>  [49635,] 355 283 #>  [49636,] 356 283 #>  [49637,] 357 283 #>  [49638,] 358 283 #>  [49639,] 359 283 #>  [49640,] 360 283 #>  [49641,] 361 283 #>  [49642,] 362 283 #>  [49643,] 363 283 #>  [49644,] 364 283 #>  [49645,] 365 283 #>  [49646,] 366 283 #>  [49647,] 367 283 #>  [49648,] 368 283 #>  [49649,] 369 283 #>  [49650,] 370 283 #>  [49651,] 371 283 #>  [49652,] 372 283 #>  [49653,] 373 283 #>  [49654,] 374 283 #>  [49655,] 375 283 #>  [49656,] 376 283 #>  [49657,] 377 283 #>  [49658,] 378 283 #>  [49659,] 379 283 #>  [49660,] 380 283 #>  [49661,] 381 283 #>  [49662,] 382 283 #>  [49663,] 383 283 #>  [49664,] 384 283 #>  [49665,] 385 283 #>  [49666,] 386 283 #>  [49667,] 387 283 #>  [49668,] 388 283 #>  [49669,] 389 283 #>  [49670,] 390 283 #>  [49671,] 391 283 #>  [49672,] 392 283 #>  [49673,] 393 283 #>  [49674,] 394 283 #>  [49675,] 395 283 #>  [49676,] 396 283 #>  [49677,] 397 283 #>  [49678,] 398 283 #>  [49679,] 399 283 #>  [49680,] 400 283 #>  [49681,] 401 283 #>  [49682,] 402 283 #>  [49683,] 403 283 #>  [49684,] 404 283 #>  [49685,] 405 283 #>  [49686,] 406 283 #>  [49687,] 407 283 #>  [49688,] 408 283 #>  [49689,] 409 283 #>  [49690,] 410 283 #>  [49691,] 411 283 #>  [49692,] 412 283 #>  [49693,] 413 283 #>  [49694,] 414 283 #>  [49695,] 415 283 #>  [49696,] 416 283 #>  [49697,] 417 283 #>  [49698,] 418 283 #>  [49699,] 419 283 #>  [49700,] 420 283 #>  [49701,] 421 283 #>  [49702,] 422 283 #>  [49703,] 423 283 #>  [49704,] 424 283 #>  [49705,] 425 283 #>  [49706,] 426 283 #>  [49707,] 427 283 #>  [49708,] 428 283 #>  [49709,] 429 283 #>  [49710,] 430 283 #>  [49711,] 431 283 #>  [49712,] 432 283 #>  [49713,] 433 283 #>  [49714,] 434 283 #>  [49715,] 435 283 #>  [49716,] 436 283 #>  [49717,] 437 283 #>  [49718,] 438 283 #>  [49719,] 439 283 #>  [49720,] 440 283 #>  [49721,] 441 283 #>  [49722,] 442 283 #>  [49723,] 443 283 #>  [49724,] 444 283 #>  [49725,] 445 283 #>  [49726,] 446 283 #>  [49727,] 447 283 #>  [49728,] 448 283 #>  [49729,] 449 283 #>  [49730,] 450 283 #>  [49731,] 451 283 #>  [49732,] 452 283 #>  [49733,] 453 283 #>  [49734,] 454 283 #>  [49735,] 455 283 #>  [49736,] 456 283 #>  [49737,] 457 283 #>  [49738,] 458 283 #>  [49739,] 459 283 #>  [49740,] 460 283 #>  [49741,] 461 283 #>  [49742,] 462 283 #>  [49743,] 463 283 #>  [49744,] 464 283 #>  [49745,] 465 283 #>  [49746,] 466 283 #>  [49747,] 467 283 #>  [49748,] 468 283 #>  [49749,] 469 283 #>  [49750,] 470 283 #>  [49751,] 471 283 #>  [49752,] 472 283 #>  [49753,] 473 283 #>  [49754,] 474 283 #>  [49755,] 475 283 #>  [49756,] 476 283 #>  [49757,] 477 283 #>  [49758,] 478 283 #>  [49759,] 479 283 #>  [49760,] 480 283 #>  [49761,] 481 283 #>  [49762,] 482 283 #>  [49763,] 483 283 #>  [49764,] 484 283 #>  [49765,] 485 283 #>  [49766,] 486 283 #>  [49767,] 487 283 #>  [49768,] 488 283 #>  [49769,] 489 283 #>  [49770,] 490 283 #>  [49771,] 491 283 #>  [49772,] 492 283 #>  [49773,] 493 283 #>  [49774,] 494 283 #>  [49775,] 495 283 #>  [49776,] 496 283 #>  [49777,] 497 283 #>  [49778,] 498 283 #>  [49779,] 499 283 #>  [49780,] 500 283 #>  [49781,] 501 283 #>  [49782,] 502 283 #>  [49783,] 503 283 #>  [49784,] 504 283 #>  [49785,] 505 283 #>  [49786,] 506 283 #>  [49787,] 507 283 #>  [49788,] 508 283 #>  [49789,] 509 283 #>  [49790,] 510 283 #>  [49791,] 511 283 #>  [49792,] 512 283 #>  [49793,] 513 283 #>  [49794,] 514 283 #>  [49795,] 515 283 #>  [49796,] 516 283 #>  [49797,] 517 283 #>  [49798,] 518 283 #>  [49799,] 519 283 #>  [49800,] 520 283 #>  [49801,] 521 283 #>  [49802,] 522 283 #>  [49803,] 523 283 #>  [49804,] 524 283 #>  [49805,] 525 283 #>  [49806,] 526 283 #>  [49807,] 527 283 #>  [49808,] 528 283 #>  [49809,] 529 283 #>  [49810,] 530 283 #>  [49811,] 531 283 #>  [49812,] 532 283 #>  [49813,] 533 283 #>  [49814,] 534 283 #>  [49815,] 535 283 #>  [49816,] 536 283 #>  [49817,] 537 283 #>  [49818,] 538 283 #>  [49819,] 539 283 #>  [49820,] 540 283 #>  [49821,] 541 283 #>  [49822,] 542 283 #>  [49823,] 543 283 #>  [49824,] 544 283 #>  [49825,] 545 283 #>  [49826,] 546 283 #>  [49827,] 547 283 #>  [49828,] 548 283 #>  [49829,] 549 283 #>  [49830,] 550 283 #>  [49831,] 551 283 #>  [49832,] 552 283 #>  [49833,] 553 283 #>  [49834,] 554 283 #>  [49835,] 555 283 #>  [49836,] 556 283 #>  [49837,] 557 283 #>  [49838,] 558 283 #>  [49839,] 559 283 #>  [49840,] 560 283 #>  [49841,] 561 283 #>  [49842,] 562 283 #>  [49843,] 563 283 #>  [49844,] 564 283 #>  [49845,] 565 283 #>  [49846,] 566 283 #>  [49847,] 567 283 #>  [49848,] 568 283 #>  [49849,] 569 283 #>  [49850,] 570 283 #>  [49851,] 571 283 #>  [49852,] 572 283 #>  [49853,] 573 283 #>  [49854,] 574 283 #>  [49855,] 575 283 #>  [49856,] 576 283 #>  [49857,] 577 283 #>  [49858,] 578 283 #>  [49859,] 579 283 #>  [49860,] 580 283 #>  [49861,] 581 283 #>  [49862,] 582 283 #>  [49863,] 583 283 #>  [49864,] 584 283 #>  [49865,] 585 283 #>  [49866,] 586 283 #>  [49867,] 587 283 #>  [49868,] 588 283 #>  [49869,] 589 283 #>  [49870,] 590 283 #>  [49871,] 591 283 #>  [49872,] 592 283 #>  [49873,] 593 283 #>  [49874,] 594 283 #>  [49875,] 595 283 #>  [49876,] 596 283 #>  [49877,] 597 283 #>  [49878,] 598 283 #>  [49879,] 599 283 #>  [49880,] 600 283 #>  [49881,] 601 283 #>  [49882,] 602 283 #>  [49883,] 603 283 #>  [49884,] 604 283 #>  [49885,] 605 283 #>  [49886,] 606 283 #>  [49887,] 607 283 #>  [49888,] 608 283 #>  [49889,] 609 283 #>  [49890,] 610 283 #>  [49891,] 611 283 #>  [49892,] 612 283 #>  [49893,] 613 283 #>  [49894,] 614 283 #>  [49895,] 615 283 #>  [49896,] 616 283 #>  [49897,] 617 283 #>  [49898,] 618 283 #>  [49899,] 619 283 #>  [49900,] 620 283 #>  [49901,] 621 283 #>  [49902,] 622 283 #>  [49903,] 623 283 #>  [49904,] 624 283 #>  [49905,] 625 283 #>  [49906,] 626 283 #>  [49907,] 627 283 #>  [49908,] 628 283 #>  [49909,] 629 283 #>  [49910,] 630 283 #>  [49911,] 631 283 #>  [49912,] 632 283 #>  [49913,] 633 283 #>  [49914,] 634 283 #>  [49915,] 635 283 #>  [49916,] 636 283 #>  [49917,] 637 283 #>  [49918,] 638 283 #>  [49919,] 639 283 #>  [49920,] 640 283 #>  [49921,]   1 282 #>  [49922,]   2 282 #>  [49923,]   3 282 #>  [49924,]   4 282 #>  [49925,]   5 282 #>  [49926,]   6 282 #>  [49927,]   7 282 #>  [49928,]   8 282 #>  [49929,]   9 282 #>  [49930,]  10 282 #>  [49931,]  11 282 #>  [49932,]  12 282 #>  [49933,]  13 282 #>  [49934,]  14 282 #>  [49935,]  15 282 #>  [49936,]  16 282 #>  [49937,]  17 282 #>  [49938,]  18 282 #>  [49939,]  19 282 #>  [49940,]  20 282 #>  [49941,]  21 282 #>  [49942,]  22 282 #>  [49943,]  23 282 #>  [49944,]  24 282 #>  [49945,]  25 282 #>  [49946,]  26 282 #>  [49947,]  27 282 #>  [49948,]  28 282 #>  [49949,]  29 282 #>  [49950,]  30 282 #>  [49951,]  31 282 #>  [49952,]  32 282 #>  [49953,]  33 282 #>  [49954,]  34 282 #>  [49955,]  35 282 #>  [49956,]  36 282 #>  [49957,]  37 282 #>  [49958,]  38 282 #>  [49959,]  39 282 #>  [49960,]  40 282 #>  [49961,]  41 282 #>  [49962,]  42 282 #>  [49963,]  43 282 #>  [49964,]  44 282 #>  [49965,]  45 282 #>  [49966,]  46 282 #>  [49967,]  47 282 #>  [49968,]  48 282 #>  [49969,]  49 282 #>  [49970,]  50 282 #>  [49971,]  51 282 #>  [49972,]  52 282 #>  [49973,]  53 282 #>  [49974,]  54 282 #>  [49975,]  55 282 #>  [49976,]  56 282 #>  [49977,]  57 282 #>  [49978,]  58 282 #>  [49979,]  59 282 #>  [49980,]  60 282 #>  [49981,]  61 282 #>  [49982,]  62 282 #>  [49983,]  63 282 #>  [49984,]  64 282 #>  [49985,]  65 282 #>  [49986,]  66 282 #>  [49987,]  67 282 #>  [49988,]  68 282 #>  [49989,]  69 282 #>  [49990,]  70 282 #>  [49991,]  71 282 #>  [49992,]  72 282 #>  [49993,]  73 282 #>  [49994,]  74 282 #>  [49995,]  75 282 #>  [49996,]  76 282 #>  [49997,]  77 282 #>  [49998,]  78 282 #>  [49999,]  79 282 #>  [ reached getOption(\"max.print\") -- omitted 180401 rows ]"},{"path":"https://swarm-lab.github.io/Rvision/reference/findTransformECC.html","id":null,"dir":"Reference","previous_headings":"","what":"Enhanced Correlation Coefficient-based Geometric Transform — findTransformECC","title":"Enhanced Correlation Coefficient-based Geometric Transform — findTransformECC","text":"findTransformECC computes geometric transform  two images terms Enhanced Correlation Coefficient criterion.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/findTransformECC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enhanced Correlation Coefficient-based Geometric Transform — findTransformECC","text":"","code":"findTransformECC(   template,   image,   warp_matrix = NULL,   warp_mode = \"affine\",   max_it = 200,   epsilon = 0.001,   mask = NULL,   filt_size = 0 )"},{"path":"https://swarm-lab.github.io/Rvision/reference/findTransformECC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enhanced Correlation Coefficient-based Geometric Transform — findTransformECC","text":"template grayscale Image object. image grayscale Image object dimensions template. warp_matrix initial mapping (warp) matrix. must 3x3 matrix warp_mode set \"homography\", 2x3 matrix otherwise. set NULL (default), automatically initialized identity matrix appropriate dimensions. warp_mode character string indicating type warping required transform image template. can following: \"translation\":simple translational transformation. \"euclidean\":Euclidean (rigid) transformation (translation + rotation). \"affine\" (default):affine transformation (Euclidean + shear;   transformation preserve parallelism lines). \"homography\":homography transformation (affine + perspective;   transformation preserve parallelism lines). max_it maximum number iterations (default: 200). epsilon convergene tolerance (default: 1e-3). mask binary Image object dimensions template. pixels image mask nonzero used computation. NULL, pixels used. filt_size size pixels gaussian blur filter applied images computation transform. set 0 (default), filtering applied.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/findTransformECC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enhanced Correlation Coefficient-based Geometric Transform — findTransformECC","text":"2x3 3x3 (warp_mode = \"homography\") matrix.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/findTransformECC.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Enhanced Correlation Coefficient-based Geometric Transform — findTransformECC","text":"Evangelidis, G. D., Psarakis, E. Z. (2008). Parametric image  alignment using enhanced correlation coefficient maximization. IEEE Trans.  Pattern Anal. Mach. Intell. 30, 1858–1865. doi:10.1109/TPAMI.2008.113.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/findTransformECC.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Enhanced Correlation Coefficient-based Geometric Transform — findTransformECC","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/findTransformECC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Enhanced Correlation Coefficient-based Geometric Transform — findTransformECC","text":"","code":"file1 <- system.file(\"sample_img/balloon1.png\", package = \"Rvision\") file2 <- system.file(\"sample_img/balloon2.png\", package = \"Rvision\") balloon1 <- changeColorSpace(image(file1), \"GRAY\") balloon2 <- changeColorSpace(image(file2), \"GRAY\") findTransformECC(balloon1, balloon2) #>            [,1]     [,2]      [,3] #> [1,]  1.0909468 0.128925 -67.90497 #> [2,] -0.1418501 1.148562  17.78894"},{"path":"https://swarm-lab.github.io/Rvision/reference/findTransformORB.html","id":null,"dir":"Reference","previous_headings":"","what":"ORB-based Geometric Transform — findTransformORB","title":"ORB-based Geometric Transform — findTransformORB","text":"findTransformORB computes geometric transform  two images terms ORB feature detector.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/findTransformORB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ORB-based Geometric Transform — findTransformORB","text":"","code":"findTransformORB(   template,   image,   warp_mode = \"affine\",   max_features = 500,   descriptor_matcher = \"BruteForce-Hamming\",   match_frac = 0.15,   homography_method = \"RANSAC\" )"},{"path":"https://swarm-lab.github.io/Rvision/reference/findTransformORB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ORB-based Geometric Transform — findTransformORB","text":"template grayscale Image object. image grayscale Image object dimensions template. warp_mode character string indicating type warping required transform image template. can following: \"affine\" (default):affine transformation (Euclidean + shear;   transformation preserve parallelism lines). \"homography\":homography transformation (affine + perspective;   transformation preserve parallelism lines). max_features maximum number features extract (default: 500). descriptor_matcher character string indicating type descriptor matcher use. can one followings: \"BruteForce\", \"BruteForce-L1\", \"BruteForce-Hamming\" (default), \"BruteForce-Hamming(2)\", \"FlannBased\". match_frac fraction top matches keep (default: 0.15). homography_method character string indicating method used compute homography matrix. can one followings: \"LS\" (least-square), \"RANSAC\" (RANSAC-based robust method; default), \"LMEDS\" (Least-Median robust method), \"RHO\" (PROSAC-based robust method).","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/findTransformORB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ORB-based Geometric Transform — findTransformORB","text":"2x3 3x3 (warp_mode = \"homography\") matrix.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/findTransformORB.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"ORB-based Geometric Transform — findTransformORB","text":"Evangelidis, G. D., Psarakis, E. Z. (2008). Parametric image  alignment using enhanced correlation coefficient maximization. IEEE Trans.  Pattern Anal. Mach. Intell. 30, 1858–1865. doi:10.1109/TPAMI.2008.113.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/findTransformORB.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ORB-based Geometric Transform — findTransformORB","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/findTransformORB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ORB-based Geometric Transform — findTransformORB","text":"","code":"file1 <- system.file(\"sample_img/balloon1.png\", package = \"Rvision\") file2 <- system.file(\"sample_img/balloon2.png\", package = \"Rvision\") balloon1 <- changeColorSpace(image(file1), \"GRAY\") balloon2 <- changeColorSpace(image(file2), \"GRAY\") findTransformORB(balloon1, balloon2) #>            [,1]      [,2]      [,3] #> [1,]  1.1907848 0.1557008 -212.3257 #> [2,] -0.2262562 1.1072557  141.3409"},{"path":"https://swarm-lab.github.io/Rvision/reference/fitEllipse.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit an Ellipse Around a Set of 2D Points — fitEllipse","title":"Fit an Ellipse Around a Set of 2D Points — fitEllipse","text":"fitEllipse calculates ellipse fits set 2D  points.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/fitEllipse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit an Ellipse Around a Set of 2D Points — fitEllipse","text":"","code":"fitEllipse(x, y, method = \"original\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/fitEllipse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit an Ellipse Around a Set of 2D Points — fitEllipse","text":"x vector x coordinates. y vector y coordinates lenght x. method character string indicating method use order fit ellipse. can take following values: 'original': least square. 'ams': Approximate Mean Square (AMS) proposed Taubin (1991). 'direct': Direct least square method proposed Fitzgibbon, Pilu,     Fisher (1999).","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/fitEllipse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit an Ellipse Around a Set of 2D Points — fitEllipse","text":"list containing height width (pixels) ellipse,  angle (degrees) main axis respect vertical axis,  x y coordinates center.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/fitEllipse.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit an Ellipse Around a Set of 2D Points — fitEllipse","text":"Taubin G. Estimation planar curves, surfaces, nonplanar  space curves defined implicit equations applications edge  range image segmentation. IEEE Trans Pattern Anal Mach Intell. 1991;13:  1115–1138. doi:10.1109/34.103273 Fitzgibbon , Pilu M, Fisher RB. Direct least square fitting  ellipses. IEEE Trans Pattern Anal Mach Intell. 1999;21: 476–480.  doi:10.1109/34.765658","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/fitEllipse.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit an Ellipse Around a Set of 2D Points — fitEllipse","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/fitEllipse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit an Ellipse Around a Set of 2D Points — fitEllipse","text":"","code":"fitEllipse(rnorm(100), rnorm(100)) #> $angle #> [1] 54.46844 #>  #> $height #> [1] 4.125383 #>  #> $width #> [1] 3.275702 #>  #> $center #> [1]  0.2803737 -0.1137554 #>"},{"path":"https://swarm-lab.github.io/Rvision/reference/flip.html","id":null,"dir":"Reference","previous_headings":"","what":"Flip an Image — flip","title":"Flip an Image — flip","text":"flip returns flipped version Image  around one axes.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/flip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flip an Image — flip","text":"","code":"flip(image, type = 0, target = \"new\", in_place = NULL)"},{"path":"https://swarm-lab.github.io/Rvision/reference/flip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flip an Image — flip","text":"image Image object. type integer indicating type flipping performed. type = 0 (default), image flipped around x-axis; type = 1 (positive value, flipped around y-axis; finally, type = -1 (negative value, flipped around axes.) target location results stored. can take 3 values: \"new\":new Image object created results   stored inside (default). \"self\":results stored back image (faster   destructive). Image object:results stored another   existing Image object. fast replace   content image replace target. Note   target dimensions, number channels,   bit depth image, nothing stored. in_place Deprecated. Use target instead.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/flip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flip an Image — flip","text":"target=\"new\", function returns Image object. target=\"self\", function returns nothing modifies  image place. target Image object,  function returns nothing modifies Image object  place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/flip.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Flip an Image — flip","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/flip.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flip an Image — flip","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) balloon_flipped <- flip(balloon, -1)"},{"path":"https://swarm-lab.github.io/Rvision/reference/floodFill.html","id":null,"dir":"Reference","previous_headings":"","what":"Fills a Connected Component with a Given Color. — floodFill","title":"Fills a Connected Component with a Given Color. — floodFill","text":"floodFill fills connected component starting  seed point specified color.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/floodFill.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fills a Connected Component with a Given Color. — floodFill","text":"","code":"floodFill(   image,   seed = c(1, 1),   color = \"white\",   lo_diff = 0,   up_diff = 0,   connectivity = 4 )"},{"path":"https://swarm-lab.github.io/Rvision/reference/floodFill.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fills a Connected Component with a Given Color. — floodFill","text":"image Image object. seed 2-element vector indicating x y coordinates seed point start filling. color value vector kind R color specification compatible col2bgr representing color border (default: \"white\"). lo_diff Maximal lower brightness/color difference currently observed pixel one neighbors belonging component, seed pixel added component (see Details). can single value vector length number n channels image. shorter, elements recycled. , first n elements used. up_diff Maximal upper brightness/color difference currently observed pixel one neighbors belonging component, seed pixel added component (see Details). can single value vector length number n channels image. shorter, elements recycled. , first n elements used. connectivity connetivity neighborhood decide whether 2 pixels contiguous. parameter can take two values: 4: neighborhood pixel four pixels located   (north), (south), left (west) right (east) pixel. 8 (default): neighborhood pixel includes four   4-neighbors four pixels along diagonal directions (northeast,   northwest, southeast, southwest).","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/floodFill.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fills a Connected Component with a Given Color. — floodFill","text":"function returns number pixels filled  modifies image place.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/floodFill.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fills a Connected Component with a Given Color. — floodFill","text":"connectivity determined color/brightness closeness  neighbor pixels. pixel (x,y) considered belong  repainted domain : case floating range: image[x',y'] - lo_diff <= image[x,y] <= image[x',y'] + up_diff case fixed range: image[seed$x,seed$y] − lo_diff <= image[x,y] <= image(seed$x,seed$y) + up_diff image[x′,y′] value one pixel neighbors already  known belong component. , added connected  component, color/brightness pixel close enough : Color/brightness one neighbors already belong    connected component case floating range. Color/brightness seed point case fixed range.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/floodFill.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fills a Connected Component with a Given Color. — floodFill","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/floodFill.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fills a Connected Component with a Given Color. — floodFill","text":"","code":"dots <- image(system.file(\"sample_img/dots.jpg\", package = \"Rvision\")) floodFill(dots, color = \"green\") #> [1] 128564"},{"path":"https://swarm-lab.github.io/Rvision/reference/fourcc.html","id":null,"dir":"Reference","previous_headings":"","what":"Codec Name to FOURCC Code — fourcc","title":"Codec Name to FOURCC Code — fourcc","text":"fourcc translates 4-character name video codec  corresponding FOURCC code.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/fourcc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Codec Name to FOURCC Code — fourcc","text":"","code":"fourcc(x)"},{"path":"https://swarm-lab.github.io/Rvision/reference/fourcc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Codec Name to FOURCC Code — fourcc","text":"x 4-element character chain corresponding name valid video codec. list valid codec names can found archived page fourcc site https://www.fourcc.org/codecs.php.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/fourcc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Codec Name to FOURCC Code — fourcc","text":"integer value corresponding FOURCC code video codec.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/fourcc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Codec Name to FOURCC Code — fourcc","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/fourcc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Codec Name to FOURCC Code — fourcc","text":"","code":"fourcc(\"xvid\") #> [1] 1684633208"},{"path":"https://swarm-lab.github.io/Rvision/reference/fps.html","id":null,"dir":"Reference","previous_headings":"","what":"Frame Rate of a Video — fps.Rcpp_Video","title":"Frame Rate of a Video — fps.Rcpp_Video","text":"Retrieve frame rate (frames per second)  Video, VideoStack, VideoWriter  object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/fps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Frame Rate of a Video — fps.Rcpp_Video","text":"","code":"# S3 method for Rcpp_Video fps(x)  # S3 method for VideoStack fps(x)  # S3 method for Rcpp_VideoWriter fps(x)  fps(x)"},{"path":"https://swarm-lab.github.io/Rvision/reference/fps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Frame Rate of a Video — fps.Rcpp_Video","text":"x Video, VideoStack, VideoWriter object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/fps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Frame Rate of a Video — fps.Rcpp_Video","text":"numeric value.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/fps.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Frame Rate of a Video — fps.Rcpp_Video","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/fps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Frame Rate of a Video — fps.Rcpp_Video","text":"","code":"balloon <- video(system.file(\"sample_vid/Balloon.mp4\", package = \"Rvision\")) #> Error: Could not open the video. fps(balloon) #> Error in eval(expr, envir, enclos): object 'balloon' not found"},{"path":"https://swarm-lab.github.io/Rvision/reference/frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Reader Head Position — frame.Rcpp_Queue","title":"Reader Head Position — frame.Rcpp_Queue","text":"Retrieve set index frame read next  Video, VideoStack Queue object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reader Head Position — frame.Rcpp_Queue","text":"","code":"# S3 method for Rcpp_Queue frame(x)  # S3 method for Rcpp_Video frame(x)  # S3 method for Rcpp_Video frame(x) <- value  # S3 method for VideoStack frame(x)  # S3 method for VideoStack frame(x) <- value  frame(x)  frame(x) <- value"},{"path":"https://swarm-lab.github.io/Rvision/reference/frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reader Head Position — frame.Rcpp_Queue","text":"x Video, VideoStack Queue object. value index frame read next.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reader Head Position — frame.Rcpp_Queue","text":"numeric value `x` new head position.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/frame.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Reader Head Position — frame.Rcpp_Queue","text":"Frame index starts 1 (.e. first image index 1).","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/frame.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Reader Head Position — frame.Rcpp_Queue","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reader Head Position — frame.Rcpp_Queue","text":"","code":"balloon <- video(system.file(\"sample_vid/Balloon.mp4\", package = \"Rvision\")) #> Error: Could not open the video. frame(balloon) #> Error in eval(expr, envir, enclos): object 'balloon' not found"},{"path":"https://swarm-lab.github.io/Rvision/reference/full.html","id":null,"dir":"Reference","previous_headings":"","what":"Test for a Full/Empty Queue Object — full","title":"Test for a Full/Empty Queue Object — full","text":"full tests whether Queue object full,  whether number frames contains equal capacity.  empty tests whether Queue object empty,  whether contains frames.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/full.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test for a Full/Empty Queue Object — full","text":"","code":"full(x)  empty(x)"},{"path":"https://swarm-lab.github.io/Rvision/reference/full.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test for a Full/Empty Queue Object — full","text":"x Queue object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/full.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test for a Full/Empty Queue Object — full","text":"logical.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/full.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Test for a Full/Empty Queue Object — full","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/full.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test for a Full/Empty Queue Object — full","text":"","code":"balloon <- video(system.file(\"sample_vid/Balloon.mp4\", package = \"Rvision\")) #> Error: Could not open the video. buf <- queue(balloon) #> Error in eval(expr, envir, enclos): object 'balloon' not found full(buf) #> Error in eval(expr, envir, enclos): object 'buf' not found"},{"path":"https://swarm-lab.github.io/Rvision/reference/gaussianBlur.html","id":null,"dir":"Reference","previous_headings":"","what":"Blurs an Image Using a Gaussian Filter — gaussianBlur","title":"Blurs an Image Using a Gaussian Filter — gaussianBlur","text":"gaussianBlur convolves source image  specified Gaussian kernel. result blurred version source  image.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/gaussianBlur.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Blurs an Image Using a Gaussian Filter — gaussianBlur","text":"","code":"gaussianBlur(   image,   k_height = 5,   k_width = 5,   sigma_x = 1,   sigma_y = 1,   target = \"new\",   in_place = NULL )"},{"path":"https://swarm-lab.github.io/Rvision/reference/gaussianBlur.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Blurs an Image Using a Gaussian Filter — gaussianBlur","text":"image Image object. k_height half-height pixels kernel (default: 5). k_width half-width pixels kernel (default: 5). sigma_x standard deviation kernel along x axis (default: 1). sigma_y standard deviation kernel along y axis (default: 1). target location results stored. can take 3 values: \"new\":new Image object created results   stored inside (default). \"self\":results stored back image (faster   destructive). Image object:results stored another   existing Image object. fast replace   content image replace target. Note   target dimensions, number channels,   bit depth image, error may thrown. in_place Deprecated. Use target instead.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/gaussianBlur.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Blurs an Image Using a Gaussian Filter — gaussianBlur","text":"target=\"new\", function returns Image object. target=\"self\", function returns nothing modifies  image place. target Image object,  function returns nothing modifies Image object  place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/gaussianBlur.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Blurs an Image Using a Gaussian Filter — gaussianBlur","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/gaussianBlur.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Blurs an Image Using a Gaussian Filter — gaussianBlur","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) balloon_blur <- gaussianBlur(balloon, 11, 11, 5, 5)"},{"path":"https://swarm-lab.github.io/Rvision/reference/getAffineTransform.html","id":null,"dir":"Reference","previous_headings":"","what":"Affine Transform — getAffineTransform","title":"Affine Transform — getAffineTransform","text":"getAffineTransform computes matrix affine  transform 4 pairs corresponding points source destination  image.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/getAffineTransform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Affine Transform — getAffineTransform","text":"","code":"getAffineTransform(from, to, from_dim, to_dim = from_dim)"},{"path":"https://swarm-lab.github.io/Rvision/reference/getAffineTransform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Affine Transform — getAffineTransform","text":"4x2 matrix indicating location (x, y) 4 points source image. 4x2 matrix indicating location (x, y) 4 points destination image. order points must correspond order . from_dim vector first two elements indicate number rows columns source image. to_dim vector first two elements indicate number rows columns destination image. specified, from_dim used default.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/getAffineTransform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Affine Transform — getAffineTransform","text":"3x3 matrix.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/getAffineTransform.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Affine Transform — getAffineTransform","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/getAffineTransform.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Affine Transform — getAffineTransform","text":"","code":"from <- matrix(c(1, 1, 2, 5, 6, 5, 5, 1), nrow = 4, byrow = TRUE) to <- matrix(c(1, 1, 1, 5, 5, 5, 5, 1), nrow = 4, byrow = TRUE) getAffineTransform(from, to, c(1080, 1920), c(1080, 1920)) #>      [,1] [,2]    [,3] #> [1,]    1 0.25 -269.75 #> [2,]    0 1.00    0.00"},{"path":"https://swarm-lab.github.io/Rvision/reference/getGaborKernel.html","id":null,"dir":"Reference","previous_headings":"","what":"Gabor Filter Kernels — getGaborKernel","title":"Gabor Filter Kernels — getGaborKernel","text":"getGaborKernel convenience function create Gabor  kernels can used filter images filter2D.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/getGaborKernel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gabor Filter Kernels — getGaborKernel","text":"","code":"getGaborKernel(   width = 31,   height = 31,   sigma = 5,   theta = pi,   lambda = 31,   gamma = 5,   psi = 0 )"},{"path":"https://swarm-lab.github.io/Rvision/reference/getGaborKernel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gabor Filter Kernels — getGaborKernel","text":"width width pixels kernel (default: 31). height height pixels kernel (default: 31). sigma standard deviation Gaussian envelope (default: 5). theta orientation normal parallel stripes Gabor function (default: pi). lambda wavelength sinusoidal factor (default: 31). gamma spatial aspect ratio (default: 5). psi phase offset (default: 0).","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/getGaborKernel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gabor Filter Kernels — getGaborKernel","text":"matrix Gabor coefficients.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/getGaborKernel.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Gabor Filter Kernels — getGaborKernel","text":"details Gabor filter equations parameters,  see: Gabor filter.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/getGaborKernel.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Gabor Filter Kernels — getGaborKernel","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/getGaborKernel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gabor Filter Kernels — getGaborKernel","text":"","code":"getGaborKernel() #>                [,1]          [,2]          [,3]          [,4]          [,5] #>  [1,]  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00 #>  [2,] -2.802597e-45 -5.605194e-45 -8.407791e-45 -1.121039e-44 -1.541428e-44 #>  [3,] -2.215936e-39 -3.795715e-39 -5.968766e-39 -8.539876e-39 -1.091315e-38 #>  [4,] -5.946182e-34 -1.018532e-33 -1.601642e-33 -2.291567e-33 -2.928406e-33 #>  [5,] -5.869819e-29 -1.005452e-28 -1.581074e-28 -2.262138e-28 -2.890798e-28 #>  [6,] -2.131654e-24 -3.651349e-24 -5.741749e-24 -8.215068e-24 -1.049808e-23 #>  [7,] -2.847832e-20 -4.878102e-20 -7.670819e-20 -1.097511e-19 -1.402515e-19 #>  [8,] -1.399644e-16 -2.397474e-16 -3.770031e-16 -5.394011e-16 -6.893036e-16 #>  [9,] -2.530615e-13 -4.334735e-13 -6.816375e-13 -9.752600e-13 -1.246290e-12 #> [10,] -1.683217e-10 -2.883213e-10 -4.533855e-10 -6.486860e-10 -8.289595e-10 #> [11,] -4.118697e-08 -7.054989e-08 -1.109398e-07 -1.587282e-07 -2.028397e-07 #> [12,] -3.707533e-06 -6.350699e-06 -9.986480e-06 -1.428826e-05 -1.825905e-05 #> [13,] -1.227766e-04 -2.103063e-04 -3.307068e-04 -4.731622e-04 -6.046566e-04 #> [14,] -1.495725e-03 -2.562055e-03 -4.028833e-03 -5.764296e-03 -7.366226e-03 #> [15,] -6.703377e-03 -1.148233e-02 -1.805598e-02 -2.583378e-02 -3.301313e-02 #> [16,] -1.105200e-02 -1.893117e-02 -2.976928e-02 -4.259271e-02 -5.442945e-02 #> [17,] -6.703377e-03 -1.148233e-02 -1.805598e-02 -2.583378e-02 -3.301313e-02 #> [18,] -1.495725e-03 -2.562055e-03 -4.028833e-03 -5.764296e-03 -7.366226e-03 #> [19,] -1.227766e-04 -2.103063e-04 -3.307068e-04 -4.731622e-04 -6.046566e-04 #> [20,] -3.707533e-06 -6.350699e-06 -9.986480e-06 -1.428826e-05 -1.825905e-05 #> [21,] -4.118697e-08 -7.054989e-08 -1.109398e-07 -1.587282e-07 -2.028397e-07 #> [22,] -1.683217e-10 -2.883213e-10 -4.533855e-10 -6.486860e-10 -8.289595e-10 #> [23,] -2.530615e-13 -4.334735e-13 -6.816375e-13 -9.752600e-13 -1.246290e-12 #> [24,] -1.399644e-16 -2.397474e-16 -3.770031e-16 -5.394011e-16 -6.893036e-16 #> [25,] -2.847832e-20 -4.878102e-20 -7.670819e-20 -1.097511e-19 -1.402515e-19 #> [26,] -2.131654e-24 -3.651349e-24 -5.741749e-24 -8.215068e-24 -1.049808e-23 #> [27,] -5.869819e-29 -1.005452e-28 -1.581074e-28 -2.262138e-28 -2.890798e-28 #> [28,] -5.946182e-34 -1.018532e-33 -1.601642e-33 -2.291567e-33 -2.928406e-33 #> [29,] -2.215936e-39 -3.795715e-39 -5.968766e-39 -8.539876e-39 -1.091315e-38 #> [30,] -2.802597e-45 -5.605194e-45 -8.407791e-45 -1.121039e-44 -1.541428e-44 #> [31,]  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00 #>                [,6]          [,7]          [,8]         [,9]        [,10] #>  [1,]  0.000000e+00  0.000000e+00  0.000000e+00 0.000000e+00 0.000000e+00 #>  [2,] -1.681558e-44 -1.401298e-44 -4.203895e-45 1.541428e-44 4.624285e-44 #>  [3,] -1.195003e-38 -9.945608e-39 -2.823525e-39 1.139497e-38 3.389500e-38 #>  [4,] -3.206638e-33 -2.668777e-33 -7.576571e-34 3.057696e-33 9.095291e-33 #>  [5,] -3.165457e-28 -2.634504e-28 -7.479270e-29 3.018428e-28 8.978487e-28 #>  [6,] -1.149552e-23 -9.567334e-24 -2.716135e-24 1.096157e-23 3.260583e-23 #>  [7,] -1.535770e-19 -1.278170e-19 -3.628682e-20 1.464436e-19 4.356049e-19 #>  [8,] -7.547952e-16 -6.281909e-16 -1.783413e-16 7.197365e-16 2.140898e-15 #>  [9,] -1.364702e-12 -1.135796e-12 -3.224487e-13 1.301314e-12 3.870834e-12 #> [10,] -9.077200e-10 -7.554650e-10 -2.144740e-10 8.655582e-10 2.574653e-09 #> [11,] -2.221118e-07 -1.848562e-07 -5.248006e-08 2.117951e-07 6.299967e-07 #> [12,] -1.999386e-05 -1.664022e-05 -4.724105e-06 1.906519e-05 5.671050e-05 #> [13,] -6.621059e-04 -5.510485e-04 -1.564409e-04 6.313523e-04 1.877994e-03 #> [14,] -8.066100e-03 -6.713146e-03 -1.905840e-03 7.691446e-03 2.287865e-02 #> [15,] -3.614976e-02 -3.008623e-02 -8.541382e-03 3.447067e-02 1.025350e-01 #> [16,] -5.960087e-02 -4.960381e-02 -1.408236e-02 5.683253e-02 1.690516e-01 #> [17,] -3.614976e-02 -3.008623e-02 -8.541382e-03 3.447067e-02 1.025350e-01 #> [18,] -8.066100e-03 -6.713146e-03 -1.905840e-03 7.691446e-03 2.287865e-02 #> [19,] -6.621059e-04 -5.510485e-04 -1.564409e-04 6.313523e-04 1.877994e-03 #> [20,] -1.999386e-05 -1.664022e-05 -4.724105e-06 1.906519e-05 5.671050e-05 #> [21,] -2.221118e-07 -1.848562e-07 -5.248006e-08 2.117951e-07 6.299967e-07 #> [22,] -9.077200e-10 -7.554650e-10 -2.144740e-10 8.655582e-10 2.574653e-09 #> [23,] -1.364702e-12 -1.135796e-12 -3.224487e-13 1.301314e-12 3.870834e-12 #> [24,] -7.547952e-16 -6.281909e-16 -1.783413e-16 7.197365e-16 2.140898e-15 #> [25,] -1.535770e-19 -1.278170e-19 -3.628682e-20 1.464436e-19 4.356049e-19 #> [26,] -1.149552e-23 -9.567334e-24 -2.716135e-24 1.096157e-23 3.260583e-23 #> [27,] -3.165457e-28 -2.634504e-28 -7.479270e-29 3.018428e-28 8.978487e-28 #> [28,] -3.206638e-33 -2.668777e-33 -7.576571e-34 3.057696e-33 9.095291e-33 #> [29,] -1.195003e-38 -9.945608e-39 -2.823525e-39 1.139497e-38 3.389500e-38 #> [30,] -1.681558e-44 -1.401298e-44 -4.203895e-45 1.541428e-44 4.624285e-44 #> [31,]  0.000000e+00  0.000000e+00  0.000000e+00 0.000000e+00 0.000000e+00 #>              [,11]        [,12]        [,13]        [,14]        [,15] #>  [1,] 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 #>  [2,] 8.828180e-44 1.373272e-43 1.877740e-43 2.326155e-43 2.634441e-43 #>  [3,] 6.432728e-38 1.003091e-37 1.374552e-37 1.700859e-37 1.925077e-37 #>  [4,] 1.726141e-32 2.691668e-32 3.688436e-32 4.564039e-32 5.165699e-32 #>  [5,] 1.703973e-27 2.657101e-27 3.641068e-27 4.505426e-27 5.099360e-27 #>  [6,] 6.188064e-23 9.649394e-23 1.322272e-22 1.636168e-22 1.851858e-22 #>  [7,] 8.267084e-19 1.289133e-18 1.766520e-18 2.185876e-18 2.474032e-18 #>  [8,] 4.063081e-15 6.335789e-15 8.682036e-15 1.074307e-14 1.215930e-14 #>  [9,] 7.346223e-12 1.145538e-11 1.569749e-11 1.942393e-11 2.198452e-11 #> [10,] 4.886278e-09 7.619447e-09 1.044105e-08 1.291967e-08 1.462282e-08 #> [11,] 1.195633e-06 1.864417e-06 2.554842e-06 3.161338e-06 3.578086e-06 #> [12,] 1.076274e-04 1.678295e-04 2.299795e-04 2.845746e-04 3.220891e-04 #> [13,] 3.564131e-03 5.557749e-03 7.615875e-03 9.423818e-03 1.066612e-02 #> [14,] 4.342001e-02 6.770725e-02 9.278036e-02 1.148056e-01 1.299400e-01 #> [15,] 1.945950e-01 3.034428e-01 4.158127e-01 5.145230e-01 5.823507e-01 #> [16,] 3.208329e-01 5.002927e-01 6.855593e-01 8.483050e-01 9.601340e-01 #> [17,] 1.945950e-01 3.034428e-01 4.158127e-01 5.145230e-01 5.823507e-01 #> [18,] 4.342001e-02 6.770725e-02 9.278036e-02 1.148056e-01 1.299400e-01 #> [19,] 3.564131e-03 5.557749e-03 7.615875e-03 9.423818e-03 1.066612e-02 #> [20,] 1.076274e-04 1.678295e-04 2.299795e-04 2.845746e-04 3.220891e-04 #> [21,] 1.195633e-06 1.864417e-06 2.554842e-06 3.161338e-06 3.578086e-06 #> [22,] 4.886278e-09 7.619447e-09 1.044105e-08 1.291967e-08 1.462282e-08 #> [23,] 7.346223e-12 1.145538e-11 1.569749e-11 1.942393e-11 2.198452e-11 #> [24,] 4.063081e-15 6.335789e-15 8.682036e-15 1.074307e-14 1.215930e-14 #> [25,] 8.267084e-19 1.289133e-18 1.766520e-18 2.185876e-18 2.474032e-18 #> [26,] 6.188064e-23 9.649394e-23 1.322272e-22 1.636168e-22 1.851858e-22 #> [27,] 1.703973e-27 2.657101e-27 3.641068e-27 4.505426e-27 5.099360e-27 #> [28,] 1.726141e-32 2.691668e-32 3.688436e-32 4.564039e-32 5.165699e-32 #> [29,] 6.432728e-38 1.003091e-37 1.374552e-37 1.700859e-37 1.925077e-37 #> [30,] 8.828180e-44 1.373272e-43 1.877740e-43 2.326155e-43 2.634441e-43 #> [31,] 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 #>              [,16]        [,17]        [,18]        [,19]        [,20] #>  [1,] 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 #>  [2,] 2.746545e-43 2.634441e-43 2.326155e-43 1.877740e-43 1.373272e-43 #>  [3,] 2.005009e-37 1.925077e-37 1.700859e-37 1.374552e-37 1.003091e-37 #>  [4,] 5.380186e-32 5.165699e-32 4.564039e-32 3.688436e-32 2.691668e-32 #>  [5,] 5.311092e-27 5.099360e-27 4.505426e-27 3.641068e-27 2.657101e-27 #>  [6,] 1.928750e-22 1.851858e-22 1.636168e-22 1.322272e-22 9.649394e-23 #>  [7,] 2.576757e-18 2.474032e-18 2.185876e-18 1.766520e-18 1.289133e-18 #>  [8,] 1.266417e-14 1.215930e-14 1.074307e-14 8.682036e-15 6.335789e-15 #>  [9,] 2.289735e-11 2.198452e-11 1.942393e-11 1.569749e-11 1.145538e-11 #> [10,] 1.522998e-08 1.462282e-08 1.291967e-08 1.044105e-08 7.619447e-09 #> [11,] 3.726653e-06 3.578086e-06 3.161338e-06 2.554842e-06 1.864417e-06 #> [12,] 3.354626e-04 3.220891e-04 2.845746e-04 2.299795e-04 1.678295e-04 #> [13,] 1.110900e-02 1.066612e-02 9.423818e-03 7.615875e-03 5.557749e-03 #> [14,] 1.353353e-01 1.299400e-01 1.148056e-01 9.278036e-02 6.770725e-02 #> [15,] 6.065307e-01 5.823507e-01 5.145230e-01 4.158127e-01 3.034428e-01 #> [16,] 1.000000e+00 9.601340e-01 8.483050e-01 6.855593e-01 5.002927e-01 #> [17,] 6.065307e-01 5.823507e-01 5.145230e-01 4.158127e-01 3.034428e-01 #> [18,] 1.353353e-01 1.299400e-01 1.148056e-01 9.278036e-02 6.770725e-02 #> [19,] 1.110900e-02 1.066612e-02 9.423818e-03 7.615875e-03 5.557749e-03 #> [20,] 3.354626e-04 3.220891e-04 2.845746e-04 2.299795e-04 1.678295e-04 #> [21,] 3.726653e-06 3.578086e-06 3.161338e-06 2.554842e-06 1.864417e-06 #> [22,] 1.522998e-08 1.462282e-08 1.291967e-08 1.044105e-08 7.619447e-09 #> [23,] 2.289735e-11 2.198452e-11 1.942393e-11 1.569749e-11 1.145538e-11 #> [24,] 1.266417e-14 1.215930e-14 1.074307e-14 8.682036e-15 6.335789e-15 #> [25,] 2.576757e-18 2.474032e-18 2.185876e-18 1.766520e-18 1.289133e-18 #> [26,] 1.928750e-22 1.851858e-22 1.636168e-22 1.322272e-22 9.649394e-23 #> [27,] 5.311092e-27 5.099360e-27 4.505426e-27 3.641068e-27 2.657101e-27 #> [28,] 5.380186e-32 5.165699e-32 4.564039e-32 3.688436e-32 2.691668e-32 #> [29,] 2.005009e-37 1.925077e-37 1.700859e-37 1.374552e-37 1.003091e-37 #> [30,] 2.746545e-43 2.634441e-43 2.326155e-43 1.877740e-43 1.373272e-43 #> [31,] 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 #>              [,21]        [,22]        [,23]         [,24]         [,25] #>  [1,] 0.000000e+00 0.000000e+00 0.000000e+00  0.000000e+00  0.000000e+00 #>  [2,] 8.828180e-44 4.624285e-44 1.541428e-44 -4.203895e-45 -1.401298e-44 #>  [3,] 6.432728e-38 3.389500e-38 1.139497e-38 -2.823525e-39 -9.945608e-39 #>  [4,] 1.726141e-32 9.095291e-33 3.057696e-33 -7.576571e-34 -2.668777e-33 #>  [5,] 1.703973e-27 8.978487e-28 3.018428e-28 -7.479270e-29 -2.634504e-28 #>  [6,] 6.188064e-23 3.260583e-23 1.096157e-23 -2.716135e-24 -9.567334e-24 #>  [7,] 8.267084e-19 4.356049e-19 1.464436e-19 -3.628682e-20 -1.278170e-19 #>  [8,] 4.063081e-15 2.140898e-15 7.197365e-16 -1.783413e-16 -6.281909e-16 #>  [9,] 7.346223e-12 3.870834e-12 1.301314e-12 -3.224487e-13 -1.135796e-12 #> [10,] 4.886278e-09 2.574653e-09 8.655582e-10 -2.144740e-10 -7.554650e-10 #> [11,] 1.195633e-06 6.299967e-07 2.117951e-07 -5.248006e-08 -1.848562e-07 #> [12,] 1.076274e-04 5.671050e-05 1.906519e-05 -4.724105e-06 -1.664022e-05 #> [13,] 3.564131e-03 1.877994e-03 6.313523e-04 -1.564409e-04 -5.510485e-04 #> [14,] 4.342001e-02 2.287865e-02 7.691446e-03 -1.905840e-03 -6.713146e-03 #> [15,] 1.945950e-01 1.025350e-01 3.447067e-02 -8.541382e-03 -3.008623e-02 #> [16,] 3.208329e-01 1.690516e-01 5.683253e-02 -1.408236e-02 -4.960381e-02 #> [17,] 1.945950e-01 1.025350e-01 3.447067e-02 -8.541382e-03 -3.008623e-02 #> [18,] 4.342001e-02 2.287865e-02 7.691446e-03 -1.905840e-03 -6.713146e-03 #> [19,] 3.564131e-03 1.877994e-03 6.313523e-04 -1.564409e-04 -5.510485e-04 #> [20,] 1.076274e-04 5.671050e-05 1.906519e-05 -4.724105e-06 -1.664022e-05 #> [21,] 1.195633e-06 6.299967e-07 2.117951e-07 -5.248006e-08 -1.848562e-07 #> [22,] 4.886278e-09 2.574653e-09 8.655582e-10 -2.144740e-10 -7.554650e-10 #> [23,] 7.346223e-12 3.870834e-12 1.301314e-12 -3.224487e-13 -1.135796e-12 #> [24,] 4.063081e-15 2.140898e-15 7.197365e-16 -1.783413e-16 -6.281909e-16 #> [25,] 8.267084e-19 4.356049e-19 1.464436e-19 -3.628682e-20 -1.278170e-19 #> [26,] 6.188064e-23 3.260583e-23 1.096157e-23 -2.716135e-24 -9.567334e-24 #> [27,] 1.703973e-27 8.978487e-28 3.018428e-28 -7.479270e-29 -2.634504e-28 #> [28,] 1.726141e-32 9.095291e-33 3.057696e-33 -7.576571e-34 -2.668777e-33 #> [29,] 6.432728e-38 3.389500e-38 1.139497e-38 -2.823525e-39 -9.945608e-39 #> [30,] 8.828180e-44 4.624285e-44 1.541428e-44 -4.203895e-45 -1.401298e-44 #> [31,] 0.000000e+00 0.000000e+00 0.000000e+00  0.000000e+00  0.000000e+00 #>               [,26]         [,27]         [,28]         [,29]         [,30] #>  [1,]  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00 #>  [2,] -1.681558e-44 -1.541428e-44 -1.121039e-44 -8.407791e-45 -5.605194e-45 #>  [3,] -1.195003e-38 -1.091315e-38 -8.539876e-39 -5.968766e-39 -3.795715e-39 #>  [4,] -3.206638e-33 -2.928406e-33 -2.291567e-33 -1.601642e-33 -1.018532e-33 #>  [5,] -3.165457e-28 -2.890798e-28 -2.262138e-28 -1.581074e-28 -1.005452e-28 #>  [6,] -1.149552e-23 -1.049808e-23 -8.215068e-24 -5.741749e-24 -3.651349e-24 #>  [7,] -1.535770e-19 -1.402515e-19 -1.097511e-19 -7.670819e-20 -4.878102e-20 #>  [8,] -7.547952e-16 -6.893036e-16 -5.394011e-16 -3.770031e-16 -2.397474e-16 #>  [9,] -1.364702e-12 -1.246290e-12 -9.752600e-13 -6.816375e-13 -4.334735e-13 #> [10,] -9.077200e-10 -8.289595e-10 -6.486860e-10 -4.533855e-10 -2.883213e-10 #> [11,] -2.221118e-07 -2.028397e-07 -1.587282e-07 -1.109398e-07 -7.054989e-08 #> [12,] -1.999386e-05 -1.825905e-05 -1.428826e-05 -9.986480e-06 -6.350699e-06 #> [13,] -6.621059e-04 -6.046566e-04 -4.731622e-04 -3.307068e-04 -2.103063e-04 #> [14,] -8.066100e-03 -7.366226e-03 -5.764296e-03 -4.028833e-03 -2.562055e-03 #> [15,] -3.614976e-02 -3.301313e-02 -2.583378e-02 -1.805598e-02 -1.148233e-02 #> [16,] -5.960087e-02 -5.442945e-02 -4.259271e-02 -2.976928e-02 -1.893117e-02 #> [17,] -3.614976e-02 -3.301313e-02 -2.583378e-02 -1.805598e-02 -1.148233e-02 #> [18,] -8.066100e-03 -7.366226e-03 -5.764296e-03 -4.028833e-03 -2.562055e-03 #> [19,] -6.621059e-04 -6.046566e-04 -4.731622e-04 -3.307068e-04 -2.103063e-04 #> [20,] -1.999386e-05 -1.825905e-05 -1.428826e-05 -9.986480e-06 -6.350699e-06 #> [21,] -2.221118e-07 -2.028397e-07 -1.587282e-07 -1.109398e-07 -7.054989e-08 #> [22,] -9.077200e-10 -8.289595e-10 -6.486860e-10 -4.533855e-10 -2.883213e-10 #> [23,] -1.364702e-12 -1.246290e-12 -9.752600e-13 -6.816375e-13 -4.334735e-13 #> [24,] -7.547952e-16 -6.893036e-16 -5.394011e-16 -3.770031e-16 -2.397474e-16 #> [25,] -1.535770e-19 -1.402515e-19 -1.097511e-19 -7.670819e-20 -4.878102e-20 #> [26,] -1.149552e-23 -1.049808e-23 -8.215068e-24 -5.741749e-24 -3.651349e-24 #> [27,] -3.165457e-28 -2.890798e-28 -2.262138e-28 -1.581074e-28 -1.005452e-28 #> [28,] -3.206638e-33 -2.928406e-33 -2.291567e-33 -1.601642e-33 -1.018532e-33 #> [29,] -1.195003e-38 -1.091315e-38 -8.539876e-39 -5.968766e-39 -3.795715e-39 #> [30,] -1.681558e-44 -1.541428e-44 -1.121039e-44 -8.407791e-45 -5.605194e-45 #> [31,]  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00 #>               [,31] #>  [1,]  0.000000e+00 #>  [2,] -2.802597e-45 #>  [3,] -2.215936e-39 #>  [4,] -5.946182e-34 #>  [5,] -5.869819e-29 #>  [6,] -2.131654e-24 #>  [7,] -2.847832e-20 #>  [8,] -1.399644e-16 #>  [9,] -2.530615e-13 #> [10,] -1.683217e-10 #> [11,] -4.118697e-08 #> [12,] -3.707533e-06 #> [13,] -1.227766e-04 #> [14,] -1.495725e-03 #> [15,] -6.703377e-03 #> [16,] -1.105200e-02 #> [17,] -6.703377e-03 #> [18,] -1.495725e-03 #> [19,] -1.227766e-04 #> [20,] -3.707533e-06 #> [21,] -4.118697e-08 #> [22,] -1.683217e-10 #> [23,] -2.530615e-13 #> [24,] -1.399644e-16 #> [25,] -2.847832e-20 #> [26,] -2.131654e-24 #> [27,] -5.869819e-29 #> [28,] -5.946182e-34 #> [29,] -2.215936e-39 #> [30,] -2.802597e-45 #> [31,]  0.000000e+00"},{"path":"https://swarm-lab.github.io/Rvision/reference/getOptimalNewCameraMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Camera Matrix Correction Using the Free Scaling Parameter — getOptimalNewCameraMatrix","title":"Camera Matrix Correction Using the Free Scaling Parameter — getOptimalNewCameraMatrix","text":"getOptimalNewCameraMatrix computes returns optimal  new camera intrinsic matrix based free scaling parameter alpha.  varying parameter, may retrieve sensible pixels  alpha = 0 , keep original image pixels valuable  information corners alpha = 1, get something .  alpha > 0, undistorted result likely black  pixels corresponding \"virtual\" pixels outside captured distorted  image.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/getOptimalNewCameraMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Camera Matrix Correction Using the Free Scaling Parameter — getOptimalNewCameraMatrix","text":"","code":"getOptimalNewCameraMatrix(   camera_matrix,   dist_coefs,   nrow,   ncol,   alpha = 0,   center_principal_point = FALSE )"},{"path":"https://swarm-lab.github.io/Rvision/reference/getOptimalNewCameraMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Camera Matrix Correction Using the Free Scaling Parameter — getOptimalNewCameraMatrix","text":"camera_matrix 3x3 camera intrinsic matrix returned calibrateCamera. dist_coefs single row matrix 4, 5, 8, 12 14 elements returned calibrateCamera. nrow, ncol number rows columns image undistort. alpha numeric value corresponding free scaling parameter 0 (valid pixels source image retained undistorted image; default) 1 (source image pixels retained undistorted image). center_principal_point boolean indicates whether new camera intrinsic matrix principal point image center (default). principal point chosen best fit subset source image (determined alpha) corrected image.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/getOptimalNewCameraMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Camera Matrix Correction Using the Free Scaling Parameter — getOptimalNewCameraMatrix","text":"list:  camera_matrix:new 3x3 camera intrinsic matrix. roi:4-element list defining rectangle outlines    -valid-pixels region undistorted image.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/getOptimalNewCameraMatrix.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Camera Matrix Correction Using the Free Scaling Parameter — getOptimalNewCameraMatrix","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/getOptimalNewCameraMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Camera Matrix Correction Using the Free Scaling Parameter — getOptimalNewCameraMatrix","text":"","code":"# See the help vignette: if (FALSE)  vignette(\"z8_calib\", package = \"Rvision\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/getPerspectiveTransform.html","id":null,"dir":"Reference","previous_headings":"","what":"Perspective Transform — getPerspectiveTransform","title":"Perspective Transform — getPerspectiveTransform","text":"getPerspectiveTransform computes matrix perspective  transform 4 pairs corresponding points source destination  image.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/getPerspectiveTransform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perspective Transform — getPerspectiveTransform","text":"","code":"getPerspectiveTransform(from, to, from_dim, to_dim = from_dim)"},{"path":"https://swarm-lab.github.io/Rvision/reference/getPerspectiveTransform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perspective Transform — getPerspectiveTransform","text":"4x2 matrix indicating location (x, y) 4 points source image. 4x2 matrix indicating location (x, y) 4 points destination image. order points must correspond order . from_dim vector first two elements indicate number rows columns source image. to_dim vector first two elements indicate number rows columns destination image. specified, from_dim used default.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/getPerspectiveTransform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perspective Transform — getPerspectiveTransform","text":"3x3 matrix.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/getPerspectiveTransform.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Perspective Transform — getPerspectiveTransform","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/getPerspectiveTransform.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perspective Transform — getPerspectiveTransform","text":"","code":"from <- matrix(c(1, 1, 2, 5, 6, 5, 5, 1), nrow = 4, byrow = TRUE) to <- matrix(c(1, 1, 1, 5, 5, 5, 5, 1), nrow = 4, byrow = TRUE) getPerspectiveTransform(from, to, c(1080, 1920), c(1080, 1920)) #>               [,1]         [,2]          [,3] #> [1,]  1.000000e+00 2.500000e-01 -2.697500e+02 #> [2,]  3.023970e-14 1.000000e+00 -8.048597e-12 #> [3,] -1.972152e-31 6.938894e-18  1.000000e+00"},{"path":"https://swarm-lab.github.io/Rvision/reference/getStructuringElement.html","id":null,"dir":"Reference","previous_headings":"","what":"Structuring Elements — getStructuringElement","title":"Structuring Elements — getStructuringElement","text":"getStructuringElement convenience function create  structuring elements defined shapes can used filter images  filter2D.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/getStructuringElement.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Structuring Elements — getStructuringElement","text":"","code":"getStructuringElement(   k_shape = \"rectangle\",   k_height = 5,   k_width = 5,   anchor = c(-1, -1) )"},{"path":"https://swarm-lab.github.io/Rvision/reference/getStructuringElement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Structuring Elements — getStructuringElement","text":"k_shape string corresponding shape structuring element. Valid kernel shapes : \"rectangle\" (default): \"cross\" \"ellipse\" k_height half-height pixels structuring element. k_width half-width pixels structuring element. anchor 2-element numeric vector defining anchor position within cross-shaped structuring element. default value (−1,−1) means anchor center. Note shape cross-shaped kernel depends anchor position.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/getStructuringElement.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Structuring Elements — getStructuringElement","text":"matrix 0s 1s.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/getStructuringElement.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Structuring Elements — getStructuringElement","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/getStructuringElement.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Structuring Elements — getStructuringElement","text":"","code":"getStructuringElement() #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] #>  [1,]    1    1    1    1    1    1    1    1    1     1     1 #>  [2,]    1    1    1    1    1    1    1    1    1     1     1 #>  [3,]    1    1    1    1    1    1    1    1    1     1     1 #>  [4,]    1    1    1    1    1    1    1    1    1     1     1 #>  [5,]    1    1    1    1    1    1    1    1    1     1     1 #>  [6,]    1    1    1    1    1    1    1    1    1     1     1 #>  [7,]    1    1    1    1    1    1    1    1    1     1     1 #>  [8,]    1    1    1    1    1    1    1    1    1     1     1 #>  [9,]    1    1    1    1    1    1    1    1    1     1     1 #> [10,]    1    1    1    1    1    1    1    1    1     1     1 #> [11,]    1    1    1    1    1    1    1    1    1     1     1"},{"path":"https://swarm-lab.github.io/Rvision/reference/getTextSize.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Height and Width of a Text String — getTextSize","title":"Calculate the Height and Width of a Text String — getTextSize","text":"getTextSize calculates size box contains  specified text string, tight box surrounding , baseline.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/getTextSize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Height and Width of a Text String — getTextSize","text":"","code":"getTextSize(   text,   font_face = \"simplex\",   font_scale = 1,   italic = FALSE,   thickness = 1 )"},{"path":"https://swarm-lab.github.io/Rvision/reference/getTextSize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Height and Width of a Text String — getTextSize","text":"text character string representing text drawn. font_face character string representing font type text (default: \"simplex\"). See notes list available font types. font_scale numeric value representing scale factor font-specific base size multiplied (default: 1). italic logical specifying whether text italicized (default: FALSE). thickness numeric value representing thickness pixels line (default: 1).","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/getTextSize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Height and Width of a Text String — getTextSize","text":"two-element vector corresponding height width  text string.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/getTextSize.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate the Height and Width of a Text String — getTextSize","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/getTextSize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the Height and Width of a Text String — getTextSize","text":"","code":"getTextSize(\"I'm a balloon\") #> [1]  22 209"},{"path":"https://swarm-lab.github.io/Rvision/reference/goodFeaturesToTrack.html","id":null,"dir":"Reference","previous_headings":"","what":"Good Features to Track — goodFeaturesToTrack","title":"Good Features to Track — goodFeaturesToTrack","text":"goodFeaturesToTrack finds prominent corners  image specified region image.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/goodFeaturesToTrack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Good Features to Track — goodFeaturesToTrack","text":"","code":"goodFeaturesToTrack(   image,   max_corners,   quality_level,   min_distance,   mask = NULL,   block_size = 3,   gradient_size = 3,   use_harris = FALSE,   k = 0.04 )"},{"path":"https://swarm-lab.github.io/Rvision/reference/goodFeaturesToTrack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Good Features to Track — goodFeaturesToTrack","text":"image 8-bit (8U) single-channel (GRAY) binary Image object. max_corners maximum number corners return. max_corners <= 0 implies limit maximum set detected corners returned. quality_level minimal accepted quality image corners. parameter value multiplied best corner quality measure, minimal eigenvalue (use_harris = FALSE) Harris function response (use_harris = TRUE). corners quality measure lower product rejected. example, best corner quality measure 1500, quality_level = 0.01, corners quality measure lower 15 rejected. min_distance minimum possible Euclidean distance returned corners. mask single-channel (GRAY) 8-bit (8U) Image object dimensions image. can used mask pixels considered searching corners (pixels set 0 mask ignored search). block_size Size average block computing derivative covariation matrix pixel neighborhood (default: 3). gradient_size Aperture parameter Sobel operator used derivatives computation (default: 3). use_harris logical indicating whether corners detected using Harris method eigenvalue method (default: FALSE). k free parameter Harris detector (ignored use_harris = FALSE.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/goodFeaturesToTrack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Good Features to Track — goodFeaturesToTrack","text":"matrix 2 columns corresponding x y coordinates  detected points.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/goodFeaturesToTrack.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Good Features to Track — goodFeaturesToTrack","text":"Shi, J., & Tomasi. (1994). Good features track. 1994  Proceedings IEEE Conference Computer Vision Pattern Recognition,  593–600. https://doi.org/10.1109/CVPR.1994.323794","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/goodFeaturesToTrack.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Good Features to Track — goodFeaturesToTrack","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/goodFeaturesToTrack.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Good Features to Track — goodFeaturesToTrack","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) balloon_gray <- changeColorSpace(balloon, \"GRAY\") corners <- goodFeaturesToTrack(balloon_gray, 100, 0.01, 10)"},{"path":"https://swarm-lab.github.io/Rvision/reference/grabCut.html","id":null,"dir":"Reference","previous_headings":"","what":"Segmentation with GrabCut Algorithm — grabCut","title":"Segmentation with GrabCut Algorithm — grabCut","text":"grabCut performs image segmentation (.e., partition  image coherent regions) using GrabCut method.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/grabCut.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Segmentation with GrabCut Algorithm — grabCut","text":"","code":"grabCut(   image,   mask,   rect = rep(1, 4),   bgdModel,   fgdModel,   iter = 1,   mode = \"EVAL\" )"},{"path":"https://swarm-lab.github.io/Rvision/reference/grabCut.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Segmentation with GrabCut Algorithm — grabCut","text":"image 8-bit (8U), 3-channel Image object segment. mask 8-bit (8U), single-channel Image object. pixel can take following 4 values: 0: obvious background pixels. 1: obvious foreground (object) pixel. 2: possible background pixel. 3: possible foreground pixel. rect vector defining region interest containing segmented object. pixels outside region interest marked \"obvious background\". rect must 4-element numeric vector elements correspond - order - x y coordinates bottom left corner region interest, width height. parameter used mode=\"RECT\" (default: rep(1, 4)). bgdModel 1x65, single-channel, 64-bit (64F) Image object set store parameters background model. fgdModel 1x65, single-channel, 64-bit (64F) Image object set store parameters foreground model. iter Number iterations (default: 1) algorithm make returning result. Note result can refined calls mode=\"MASK\" mode=\"MASK\". mode character string indicating operation mode function. can following: \"RECT\": function initializes state mask using     provided rect. runs iter iterations     algorithm. \"MASK\":function initializes state using provided     mask. \"EVAL\":value means function just resume. \"FREEZE\":value means function just run     grabCut algorithm (single iteration) fixed model.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/grabCut.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Segmentation with GrabCut Algorithm — grabCut","text":"function returns nothing. modifies place mask,  bgdModel, fgdModel.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/grabCut.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Segmentation with GrabCut Algorithm — grabCut","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/grabCut.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Segmentation with GrabCut Algorithm — grabCut","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) mask <- zeros(nrow(balloon), ncol(balloon), 1) bgdModel <- zeros(1, 65, 1, \"64F\") fgdModel <- zeros(1, 65, 1, \"64F\") grabCut(balloon, mask, c(290, 170, 160, 160), bgdModel, fgdModel, iter = 5, mode = \"RECT\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/histEq.html","id":null,"dir":"Reference","previous_headings":"","what":"Histogram Equalization — histEq","title":"Histogram Equalization — histEq","text":"histEq performs histogram equalization image.  function equalizes histogram input image using following  algorithm: Calculate histogram image. Normalize histogram sum histogram bins 255. Compute integral histogram. Transform image using integral histogram look-   table.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/histEq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Histogram Equalization — histEq","text":"","code":"histEq(image, target = \"new\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/histEq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Histogram Equalization — histEq","text":"image 8-bit (8U) Image object transform. target location results stored. can take 3 values: \"new\":new Image object created results   stored inside (default). \"self\":results stored back image (faster   destructive). Image object:results stored another   existing Image object. fast replace   content image replace target. Note   target dimensions, number channels,   bit depth image, nothing stored.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/histEq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Histogram Equalization — histEq","text":"target=\"new\", function returns Image object. target=\"self\", function returns nothing modifies  image place. target Image object,  function returns nothing modifies Image object  place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/histEq.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Histogram Equalization — histEq","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/histEq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Histogram Equalization — histEq","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) balloon_eq <- histEq(balloon)"},{"path":"https://swarm-lab.github.io/Rvision/reference/histmatch.html","id":null,"dir":"Reference","previous_headings":"","what":"Histogram Matching/Specification — histmatch","title":"Histogram Matching/Specification — histmatch","text":"histmatch transforms Image object  histogram matches (approximately) another  Image object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/histmatch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Histogram Matching/Specification — histmatch","text":"","code":"histmatch(image, reference, target = \"new\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/histmatch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Histogram Matching/Specification — histmatch","text":"image 8-bit (8U) Image object transform. reference 8-bit (8U) Image object histogram used reference transform image. target location results stored. can take 3 values: \"new\":new Image object created results   stored inside (default). \"self\":results stored back image (faster   destructive). Image object:results stored another   existing Image object. fast replace   content image replace target. Note   target dimensions, number channels,   bit depth image, nothing stored.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/histmatch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Histogram Matching/Specification — histmatch","text":"target=\"new\", function returns Image object. target=\"self\", function returns nothing modifies  image place. target Image object,  function returns nothing modifies Image object  place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/histmatch.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Histogram Matching/Specification — histmatch","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/histmatch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Histogram Matching/Specification — histmatch","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) dots <- image(system.file(\"sample_img/dots.jpg\", package = \"Rvision\")) dots_matched <- histmatch(dots, balloon)"},{"path":"https://swarm-lab.github.io/Rvision/reference/houghCircles.html","id":null,"dir":"Reference","previous_headings":"","what":"Hough Circle Detector — houghCircles","title":"Hough Circle Detector — houghCircles","text":"houghCircles finds circles grayscale image using  Hough transform.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/houghCircles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hough Circle Detector — houghCircles","text":"","code":"houghCircles(   image,   method,   dp,   min_dist,   param1 = 100,   param2 = 100,   min_radius = 0,   max_radius = 0 )"},{"path":"https://swarm-lab.github.io/Rvision/reference/houghCircles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hough Circle Detector — houghCircles","text":"image 8-bit (8U) single-channel (GRAY) Image object. method character string indicating detection method used. available methods \"GRADIENT\" \"ALT\" (generally accurate). dp Inverse ratio accumulator resolution image resolution. example, dp = 1, accumulator resolution input image. dp = 2, accumulator half resolution. Etc. method = \"GRADIENT\" recommended value dp = 1.5, unless small circles need detected. min_dist Minimum distance centers detected circles. parameter small, multiple neighbor circles may falsely detected. large, circles may missed. param1 First method-specific parameter. case, higher threshold two passed Canny edge detector (lower one twice smaller). default value 100 note method = \"ALT\" uses Scharr algorithm compute image derivatives , therefore, threshold value normally higher, 300 normally exposed contrasty images. param2 Second method-specific parameter. case method = \"GRADIENT\", accumulator threshold circle centers detection stage. smaller , false circles may detected. Circles corresponding larger accumulator values returned first. case method = \"ALT\", circle \"perfectness\" measure. closer 1, better shaped circles algorithm select. cases 0.9 fine. want get better detection small circles, may decrease 0.85, 0.8 even less. also try limit search range [min_radius, max_radius] avoid many false circles. min_radius minimum acceptable circle radius. max_radius maximum acceptable circle radius. max_radius <= 0, function uses maximum image dimension. max_radius < 0  method = \"GRADIENT\", function returns centers without radiuses.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/houghCircles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hough Circle Detector — houghCircles","text":"matrix 5 columns corresponding unique id circle,  x y coordinates centers, estimates radius,  estimated relative reliability detected circles (\"votes\").","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/houghCircles.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Hough Circle Detector — houghCircles","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/houghCircles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hough Circle Detector — houghCircles","text":"","code":"dots <- image(system.file(\"sample_img/dots.jpg\", package = \"Rvision\")) dots_gray <- changeColorSpace(dots, \"GRAY\") circ <- houghCircles(dots_gray, \"ALT\", 1.5, 25, 300, 0.9)"},{"path":"https://swarm-lab.github.io/Rvision/reference/houghLinesP.html","id":null,"dir":"Reference","previous_headings":"","what":"Probabilistic Hough Line Detector — houghLinesP","title":"Probabilistic Hough Line Detector — houghLinesP","text":"houghLinesP finds line segments binary image using  probabilistic Hough transform.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/houghLinesP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probabilistic Hough Line Detector — houghLinesP","text":"","code":"houghLinesP(   image,   rho,   theta,   threshold,   min_line_length = 0,   max_line_gap = 0 )"},{"path":"https://swarm-lab.github.io/Rvision/reference/houghLinesP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probabilistic Hough Line Detector — houghLinesP","text":"image 8-bit (8U) single-channel (GRAY) binary Image object. rho distance resolution accumulator pixels. theta angle resolution accumulator radians. threshold accumulator threshold parameter. lines get votes threshold returned. min_line_length minimum line length. Line segments shorter rejected. max_line_gap maximum allowed gap points line segment link .","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/houghLinesP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probabilistic Hough Line Detector — houghLinesP","text":"matrix 4 columns corresponding x y coordinates  extremities detected line.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/houghLinesP.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Probabilistic Hough Line Detector — houghLinesP","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/houghLinesP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probabilistic Hough Line Detector — houghLinesP","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) balloon_canny <- canny(balloon, 50, 50) lines <- houghLinesP(balloon_canny, 1, pi / 180, 80, 0, 50)"},{"path":"https://swarm-lab.github.io/Rvision/reference/huInvariants.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Seven Hu Moments Invariants — huInvariants","title":"Calculate Seven Hu Moments Invariants — huInvariants","text":"huInvariants calculates seven original Hu moments  invariants plus additional one discovered Suk & Flusser (2011),  moments polygon rasterized shape.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/huInvariants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Seven Hu Moments Invariants — huInvariants","text":"","code":"huInvariants(moments)"},{"path":"https://swarm-lab.github.io/Rvision/reference/huInvariants.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Seven Hu Moments Invariants — huInvariants","text":"moments data frame produced moments.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/huInvariants.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Seven Hu Moments Invariants — huInvariants","text":"data frame 2 columns:  \"invariant\": name invariant See Note . \"value\": value invariant.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/huInvariants.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate Seven Hu Moments Invariants — huInvariants","text":"Hu invariants defined : \\(\\texttt{Hu1}= \\eta _{20}+ \\eta _{02}\\) \\(\\texttt{Hu2}= ( \\eta _{20}- \\eta _{02})^{2}+4 \\eta _{11}^{2}\\) \\(\\texttt{Hu3}= ( \\eta _{30}-3 \\eta _{12})^{2}+ (3 \\eta _{21}- \\eta _{03})^{2}\\) \\(\\texttt{Hu4}= ( \\eta _{30}+ \\eta _{12})^{2}+ ( \\eta _{21}+ \\eta _{03})^{2}\\) \\(\\texttt{Hu5}= ( \\eta _{30}-3 \\eta _{12})( \\eta _{30}+ \\eta _{12})[( \\eta _{30}+ \\eta _{12})^{2}-3( \\eta _{21}+ \\eta _{03})^{2}]+(3 \\eta _{21}- \\eta _{03})( \\eta _{21}+ \\eta _{03})[3( \\eta _{30}+ \\eta _{12})^{2}-( \\eta _{21}+ \\eta _{03})^{2}]\\) \\(\\texttt{Hu6}= ( \\eta _{20}- \\eta _{02})[( \\eta _{30}+ \\eta _{12})^{2}- ( \\eta _{21}+ \\eta _{03})^{2}]+4 \\eta _{11}( \\eta _{30}+ \\eta _{12})( \\eta _{21}+ \\eta _{03})\\) \\(\\texttt{Hu7}= (3 \\eta _{21}- \\eta _{03})( \\eta _{21}+ \\eta _{03})[3( \\eta _{30}+ \\eta _{12})^{2}-( \\eta _{21}+ \\eta _{03})^{2}]-( \\eta _{30}-3 \\eta _{12})( \\eta _{21}+ \\eta _{03})[3( \\eta _{30}+ \\eta _{12})^{2}-( \\eta _{21}+ \\eta _{03})^{2}]\\) \\(\\texttt{Hu8}= \\eta_ {11}[(\\eta_ {30}+ \\eta_ {12})^{2}-(\\eta_ {03}+ \\eta_ {21})^{2}]- (\\eta_ {20}+ \\eta_ {02})(\\eta_ {30}+ \\eta_ {12})(\\eta_ {03}+ \\eta_ {21}) \\) \\(\\eta_{ji}\\) corresponds normalized central moments  computed moments.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/huInvariants.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate Seven Hu Moments Invariants — huInvariants","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/huInvariants.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Seven Hu Moments Invariants — huInvariants","text":"","code":"dots <- image(system.file(\"sample_img/dots.jpg\", package = \"Rvision\")) dots_gray <- changeColorSpace(dots, \"GRAY\") dots_bin <- dots_gray < 200 contours <- findContours(dots_bin) contour0 <- contours$contours[contours$contours[, 1] == 0, 2:3] m <- moments(contour0) huInvariants(m) #>   invariant        value #> 1       Hu1 1.597929e-01 #> 2       Hu2 1.250640e-04 #> 3       Hu3 7.013610e-06 #> 4       Hu4 2.823565e-08 #> 5       Hu5 7.706373e-15 #> 6       Hu6 3.083771e-10 #> 7       Hu7 6.697342e-15 #> 8       Hu8 2.173912e-09"},{"path":"https://swarm-lab.github.io/Rvision/reference/imageArithmetic.html","id":null,"dir":"Reference","previous_headings":"","what":"Arithmetic Functions for Images — imageArithmetic","title":"Arithmetic Functions for Images — imageArithmetic","text":"Arithmetic Functions Images","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/imageArithmetic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arithmetic Functions for Images — imageArithmetic","text":"","code":"add(e1, e2, target)  subtract(e1, e2, target)  multiply(e1, e2, target)  divide(e1, e2, target)  absdiff(e1, e2, target)"},{"path":"https://swarm-lab.github.io/Rvision/reference/imageArithmetic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arithmetic Functions for Images — imageArithmetic","text":"e1, e2 Either 2 Image objects 1 Image object 1 numeric value/vector. vector length less number channels image, recycled match . target location results stored. can take 3 values: \"new\":new Image object created results   stored inside (default). \"self\":results stored back e1   Image object, otherwise e2 (faster   destructive). Image object:results stored another   existing Image object. fast replace   content e1 e2 replace target.   Note target dimensions, number   channels, bit depth e1 (e1 Image   object, e2 otherwise), error thrown.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/imageArithmetic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Arithmetic Functions for Images — imageArithmetic","text":"target=\"new\", function returns Image object. target=\"self\", function returns nothing modifies  e1 place Image object, otherwise  modifies e2 place. target Image object, function returns nothing modifies Image object place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/imageArithmetic.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Arithmetic Functions for Images — imageArithmetic","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/imageArithmetic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Arithmetic Functions for Images — imageArithmetic","text":"","code":"balloon1 <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) balloon2 <- image(system.file(\"sample_img/balloon2.png\", package = \"Rvision\")) balloon_sum <- add(balloon1, balloon2) balloon_absdiff <- absdiff(balloon1, balloon2)"},{"path":"https://swarm-lab.github.io/Rvision/reference/imageLogic.html","id":null,"dir":"Reference","previous_headings":"","what":"Logical Functions for Images — imageLogic","title":"Logical Functions for Images — imageLogic","text":"Logical Functions Images","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/imageLogic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logical Functions for Images — imageLogic","text":"","code":"bitAnd(e1, e2, target)  bitOr(e1, e2, target)  bitNot(e1, target)"},{"path":"https://swarm-lab.github.io/Rvision/reference/imageLogic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logical Functions for Images — imageLogic","text":"e1, e2 Either 2 Image objects 1 Image object 1 numeric value/vector. vector length less number channels image, recycled match . target location results stored. can take 3 values: \"new\":new Image object created results   stored inside (default). \"self\":results stored back e1   Image object, otherwise e2 (faster   destructive). Image object:results stored another   existing Image object. fast replace   content e1 e2 replace target.   Note target dimensions, number   channels, bit depth e1 (e1 Image   object, e2 otherwise), error thrown.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/imageLogic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logical Functions for Images — imageLogic","text":"target=\"new\", function returns Image object. target=\"self\", function returns nothing modifies  e1 place Image object, otherwise  modifies e2 place. target Image object, function returns nothing modifies Image object place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/imageLogic.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Logical Functions for Images — imageLogic","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/imageLogic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Logical Functions for Images — imageLogic","text":"","code":"balloon1 <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) balloon2 <- image(system.file(\"sample_img/balloon2.png\", package = \"Rvision\"))"},{"path":"https://swarm-lab.github.io/Rvision/reference/imageMinMax.html","id":null,"dir":"Reference","previous_headings":"","what":"Element-Wise Minimums and Maximums — imageMinMax","title":"Element-Wise Minimums and Maximums — imageMinMax","text":"functions calculates per-element minimum maximum  2 Image objects 1 Image object 1  numeric value/vector.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/imageMinMax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Element-Wise Minimums and Maximums — imageMinMax","text":"","code":"bitMin(e1, e2, target)  bitMax(e1, e2, target)"},{"path":"https://swarm-lab.github.io/Rvision/reference/imageMinMax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Element-Wise Minimums and Maximums — imageMinMax","text":"e1, e2 Either 2 Image objects 1 Image object 1 numeric value/vector. vector length less number channels image, recycled match . target location results stored. can take 3 values: \"new\":new Image object created results   stored inside (default). \"self\":results stored back e1   Image object, otherwise e2 (faster   destructive). Image object:results stored another   existing Image object. fast replace   content e1 e2 replace target.   Note target dimensions, number   channels, bit depth e1 (e1 Image   object, e2 otherwise), error thrown.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/imageMinMax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Element-Wise Minimums and Maximums — imageMinMax","text":"target=\"new\", function returns Image object. target=\"self\", function returns nothing modifies  e1 place Image object, otherwise  modifies e2 place. target Image object, function returns nothing modifies Image object place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/imageMinMax.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Element-Wise Minimums and Maximums — imageMinMax","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/imageMinMax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Element-Wise Minimums and Maximums — imageMinMax","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) bitMax(balloon, c(0, 0, 127), \"self\") bitMin(balloon, c(127, 255, 255), \"self\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/imhist.html","id":null,"dir":"Reference","previous_headings":"","what":"Multichannel Histogram of an Image — imhist","title":"Multichannel Histogram of an Image — imhist","text":"imhist computes (plots) multichannel histogram  Image object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/imhist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multichannel Histogram of an Image — imhist","text":"","code":"imhist(   image,   nbins = 257,   range = c(0, 256),   mask = NULL,   plot = FALSE,   col = c(\"blue\", \"green\", \"red\", \"black\"),   xlab = \"Pixel value\",   ylab = \"Counts\",   lty = 1,   ... )"},{"path":"https://swarm-lab.github.io/Rvision/reference/imhist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multichannel Histogram of an Image — imhist","text":"image Image object. nbins integer indicating number bins histogram (default: 256). range range pixel values include histogram (default: c(0, 256)). lower boundary inclusive higher one exclusive. mask single-channel (GRAY) 8-bit (8U) Image object dimensions image. can used mask pixels considered calculating histogram (pixels set 0 mask ignored histogram calculation). plot logical indicating whether plot histogram (default: FALSE). col value vector kind R color specification compatible col2rgb representing color histogram image channel (default: c(\"blue\", \"green\", \"red\", \"black\")). xlab, ylab Character strings axis labels (default: \"Pixel value\" x axis \"Counts\" y axis). lty vector line types, see par. ... arguments passed matplot.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/imhist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multichannel Histogram of an Image — imhist","text":"plot=FALSE, function returns m x n matrix,  m = nbins n equal number channels  image + 1. first column corresponds bin values.  plot=TRUE, function plots histogram returned  aforementioned matrix silently.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/imhist.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Multichannel Histogram of an Image — imhist","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/imhist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multichannel Histogram of an Image — imhist","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) imhist(balloon, plot = TRUE)"},{"path":"https://swarm-lab.github.io/Rvision/reference/improfile.html","id":null,"dir":"Reference","previous_headings":"","what":"Pixel Values Along a Line Segment — improfile","title":"Pixel Values Along a Line Segment — improfile","text":"improfile finds pixels intersected line segment  returns coordinates color values.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/improfile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pixel Values Along a Line Segment — improfile","text":"","code":"improfile(image, xi, yi, connectivity = 8, left_to_right = FALSE)"},{"path":"https://swarm-lab.github.io/Rvision/reference/improfile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pixel Values Along a Line Segment — improfile","text":"image Image object. xi, yi Two-element vectors containing x y coordinates start end points line segment. points can lie outside image boundaries line clipped image boundaries. connectivity connectivity neighborhood decide whether 2 pixels contiguous. parameter can take two values: 4: neighborhood pixel four pixels located   (north), (south), left (west) right (east) pixel. 8 (default): neighborhood pixel includes four   4-neighbors four pixels along diagonal directions (northeast,   northwest, southeast, southwest). left_to_right `TRUE`, line segment traversed leftmost endpoint rightmost endpoint, regardless order specified xi yi. Otherwise (default), line traversed order points specified xi yi.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/improfile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pixel Values Along a Line Segment — improfile","text":"matrix first two columns indicate coordinates  points traversed line segment, columns indicate  color values location.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/improfile.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Pixel Values Along a Line Segment — improfile","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/improfile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pixel Values Along a Line Segment — improfile","text":"","code":"dots <- image(system.file(\"sample_img/dots.jpg\", package = \"Rvision\")) improfile(dots, c(1, ncol(dots)), c(nrow(dots) / 2, nrow(dots) / 2)) #>            X   Y   B   G   R #>    [1,]    1 640 255 255 255 #>    [2,]    2 640 255 255 255 #>    [3,]    3 640 255 255 255 #>    [4,]    4 640 255 255 255 #>    [5,]    5 640 255 255 255 #>    [6,]    6 640 255 255 255 #>    [7,]    7 640 255 255 255 #>    [8,]    8 640 255 255 255 #>    [9,]    9 640 255 255 255 #>   [10,]   10 640 255 255 255 #>   [11,]   11 640 255 255 255 #>   [12,]   12 640 255 255 255 #>   [13,]   13 640 255 255 255 #>   [14,]   14 640 255 255 255 #>   [15,]   15 640 255 255 255 #>   [16,]   16 640 255 255 255 #>   [17,]   17 640 255 255 255 #>   [18,]   18 640 255 255 255 #>   [19,]   19 640 255 255 255 #>   [20,]   20 640 255 255 255 #>   [21,]   21 640 255 255 255 #>   [22,]   22 640 255 255 255 #>   [23,]   23 640 255 255 255 #>   [24,]   24 640 255 255 255 #>   [25,]   25 640 255 255 255 #>   [26,]   26 640 255 255 255 #>   [27,]   27 640 255 255 255 #>   [28,]   28 640 255 255 255 #>   [29,]   29 640 255 255 255 #>   [30,]   30 640 255 255 255 #>   [31,]   31 640 255 255 255 #>   [32,]   32 640 255 255 255 #>   [33,]   33 640 255 255 255 #>   [34,]   34 640 255 255 255 #>   [35,]   35 640 255 255 255 #>   [36,]   36 640 255 255 255 #>   [37,]   37 640 255 255 255 #>   [38,]   38 640 255 255 255 #>   [39,]   39 640 255 255 255 #>   [40,]   40 640 255 255 255 #>   [41,]   41 640 255 255 255 #>   [42,]   42 640 255 255 255 #>   [43,]   43 640 255 255 255 #>   [44,]   44 640 255 255 255 #>   [45,]   45 640 255 255 255 #>   [46,]   46 640 255 255 255 #>   [47,]   47 640 255 255 255 #>   [48,]   48 640 255 255 255 #>   [49,]   49 640 255 255 255 #>   [50,]   50 640 255 255 255 #>   [51,]   51 640 255 255 255 #>   [52,]   52 640 255 255 255 #>   [53,]   53 640 255 255 255 #>   [54,]   54 640 255 255 255 #>   [55,]   55 640 255 255 255 #>   [56,]   56 640 255 255 255 #>   [57,]   57 640 255 255 255 #>   [58,]   58 640 255 255 255 #>   [59,]   59 640 255 255 255 #>   [60,]   60 640 255 255 255 #>   [61,]   61 640 255 255 255 #>   [62,]   62 640 255 255 255 #>   [63,]   63 640 255 255 255 #>   [64,]   64 640 255 255 255 #>   [65,]   65 640 255 255 255 #>   [66,]   66 640 255 255 255 #>   [67,]   67 640 255 255 255 #>   [68,]   68 640 255 255 255 #>   [69,]   69 640 255 255 255 #>   [70,]   70 640 255 255 255 #>   [71,]   71 640 255 255 255 #>   [72,]   72 640 255 255 255 #>   [73,]   73 640 255 255 255 #>   [74,]   74 640 255 255 255 #>   [75,]   75 640 255 255 255 #>   [76,]   76 640 255 255 255 #>   [77,]   77 640 255 255 255 #>   [78,]   78 640 255 255 255 #>   [79,]   79 640 254 254 254 #>   [80,]   80 640 255 255 255 #>   [81,]   81 640 255 255 255 #>   [82,]   82 640 255 255 255 #>   [83,]   83 640 255 255 255 #>   [84,]   84 640 255 255 255 #>   [85,]   85 640 255 255 255 #>   [86,]   86 640 255 255 255 #>   [87,]   87 640 255 255 255 #>   [88,]   88 640 255 255 255 #>   [89,]   89 640 255 255 255 #>   [90,]   90 640 255 255 255 #>   [91,]   91 640 255 255 255 #>   [92,]   92 640 255 255 255 #>   [93,]   93 640 255 255 255 #>   [94,]   94 640 255 255 255 #>   [95,]   95 640 255 255 255 #>   [96,]   96 640 255 255 255 #>   [97,]   97 640 255 255 255 #>   [98,]   98 640 255 255 255 #>   [99,]   99 640 255 255 255 #>  [100,]  100 640 255 255 255 #>  [101,]  101 640 255 255 255 #>  [102,]  102 640 255 255 255 #>  [103,]  103 640 255 255 255 #>  [104,]  104 640 255 255 255 #>  [105,]  105 640 255 255 255 #>  [106,]  106 640 255 255 255 #>  [107,]  107 640 255 255 255 #>  [108,]  108 640 255 255 255 #>  [109,]  109 640 255 255 255 #>  [110,]  110 640 255 255 255 #>  [111,]  111 640 255 255 255 #>  [112,]  112 640 255 255 255 #>  [113,]  113 640 255 255 255 #>  [114,]  114 640 255 255 255 #>  [115,]  115 640 255 255 255 #>  [116,]  116 640 255 255 255 #>  [117,]  117 640 255 255 255 #>  [118,]  118 640 255 255 255 #>  [119,]  119 640 255 255 255 #>  [120,]  120 640 255 255 255 #>  [121,]  121 640 255 255 255 #>  [122,]  122 640 255 255 255 #>  [123,]  123 640 255 255 255 #>  [124,]  124 640 255 255 255 #>  [125,]  125 640 255 255 255 #>  [126,]  126 640 255 255 255 #>  [127,]  127 640 255 255 255 #>  [128,]  128 640 255 255 255 #>  [129,]  129 640 255 255 255 #>  [130,]  130 640 255 255 255 #>  [131,]  131 640 255 255 255 #>  [132,]  132 640 255 255 255 #>  [133,]  133 640 255 255 255 #>  [134,]  134 640 255 255 255 #>  [135,]  135 640 255 255 255 #>  [136,]  136 640 255 255 255 #>  [137,]  137 640 255 255 255 #>  [138,]  138 640 255 255 255 #>  [139,]  139 640 255 255 255 #>  [140,]  140 640 255 255 255 #>  [141,]  141 640 255 255 255 #>  [142,]  142 640 255 255 255 #>  [143,]  143 640 255 255 255 #>  [144,]  144 640 255 255 255 #>  [145,]  145 640 250 254 255 #>  [146,]  146 640 251 255 255 #>  [147,]  147 640 253 255 255 #>  [148,]  148 640 253 255 255 #>  [149,]  149 640 253 255 255 #>  [150,]  150 640 253 255 255 #>  [151,]  151 640 255 255 255 #>  [152,]  152 640 255 255 255 #>  [153,]  153 640 255 255 255 #>  [154,]  154 640 255 255 255 #>  [155,]  155 640 255 255 255 #>  [156,]  156 640 255 255 255 #>  [157,]  157 640 255 255 255 #>  [158,]  158 640 255 255 255 #>  [159,]  159 640 255 255 255 #>  [160,]  160 640 255 255 255 #>  [161,]  161 640 247 252 251 #>  [162,]  162 640 250 255 254 #>  [163,]  163 640 244 252 251 #>  [164,]  164 640 246 251 250 #>  [165,]  165 640 242 255 253 #>  [166,]  166 640 238 252 248 #>  [167,]  167 640 240 251 248 #>  [168,]  168 640 242 245 243 #>  [169,]  169 640 253 254 252 #>  [170,]  170 640 255 244 245 #>  [171,]  171 640 126  70  75 #>  [172,]  172 640  72   5  12 #>  [173,]  173 640 100  32  39 #>  [174,]  174 640 105  32  40 #>  [175,]  175 640  90  32  37 #>  [176,]  176 640  88  30  35 #>  [177,]  177 640  99  33  38 #>  [178,]  178 640  99  33  38 #>  [179,]  179 640  98  32  37 #>  [180,]  180 640  98  32  37 #>  [181,]  181 640  99  32  37 #>  [182,]  182 640 100  33  38 #>  [183,]  183 640 100  33  38 #>  [184,]  184 640 101  34  39 #>  [185,]  185 640 101  34  39 #>  [186,]  186 640 102  35  40 #>  [187,]  187 640 102  35  40 #>  [188,]  188 640 102  35  40 #>  [189,]  189 640 104  34  40 #>  [190,]  190 640 104  34  40 #>  [191,]  191 640 104  34  40 #>  [192,]  192 640 104  34  40 #>  [193,]  193 640 103  36  41 #>  [194,]  194 640 102  35  40 #>  [195,]  195 640 102  35  40 #>  [196,]  196 640 102  35  40 #>  [197,]  197 640 102  35  38 #>  [198,]  198 640 102  35  38 #>  [199,]  199 640 105  36  39 #>  [200,]  200 640 105  36  39 #>  [201,]  201 640 105  36  39 #>  [202,]  202 640 105  36  39 #>  [203,]  203 640 106  38  39 #>  [204,]  204 640 106  38  39 #>  [205,]  205 640 107  39  40 #>  [206,]  206 640 108  40  41 #>  [207,]  207 640 109  41  42 #>  [208,]  208 640 106  38  39 #>  [209,]  209 640 107  39  40 #>  [210,]  210 640 108  40  41 #>  [211,]  211 640 109  41  42 #>  [212,]  212 640 109  41  42 #>  [213,]  213 640 108  40  41 #>  [214,]  214 640 108  40  41 #>  [215,]  215 640 110  40  40 #>  [216,]  216 640 111  41  41 #>  [217,]  217 640 113  41  41 #>  [218,]  218 640 111  39  39 #>  [219,]  219 640 112  40  40 #>  [220,]  220 640 113  41  41 #>  [221,]  221 640 115  41  41 #>  [222,]  222 640 115  41  41 #>  [223,]  223 640 116  42  42 #>  [224,]  224 640 118  44  44 #>  [225,]  225 640 114  43  40 #>  [226,]  226 640 115  44  41 #>  [227,]  227 640 116  45  42 #>  [228,]  228 640 116  45  42 #>  [229,]  229 640 117  43  41 #>  [230,]  230 640 117  43  41 #>  [231,]  231 640 117  43  41 #>  [232,]  232 640 118  44  42 #>  [233,]  233 640 118  43  41 #>  [234,]  234 640 118  43  41 #>  [235,]  235 640 118  43  41 #>  [236,]  236 640 118  43  41 #>  [237,]  237 640 121  44  41 #>  [238,]  238 640 122  45  42 #>  [239,]  239 640 121  44  41 #>  [240,]  240 640 120  43  40 #>  [241,]  241 640 114  46  41 #>  [242,]  242 640 111  42  39 #>  [243,]  243 640 119  47  40 #>  [244,]  244 640 121  43  36 #>  [245,]  245 640 140  49  44 #>  [246,]  246 640 126  35  30 #>  [247,]  247 640  90  38  31 #>  [248,]  248 640 217 191 185 #>  [249,]  249 640 252 255 251 #>  [250,]  250 640 237 245 244 #>  [251,]  251 640 254 250 255 #>  [252,]  252 640 255 251 253 #>  [253,]  253 640 255 250 255 #>  [254,]  254 640 255 254 254 #>  [255,]  255 640 242 254 254 #>  [256,]  256 640 242 255 253 #>  [257,]  257 640 254 254 254 #>  [258,]  258 640 254 254 254 #>  [259,]  259 640 254 254 254 #>  [260,]  260 640 255 255 255 #>  [261,]  261 640 255 255 255 #>  [262,]  262 640 255 255 255 #>  [263,]  263 640 255 255 255 #>  [264,]  264 640 255 255 255 #>  [265,]  265 640 255 255 255 #>  [266,]  266 640 255 255 255 #>  [267,]  267 640 255 255 255 #>  [268,]  268 640 255 255 255 #>  [269,]  269 640 255 255 255 #>  [270,]  270 640 254 254 254 #>  [271,]  271 640 254 254 254 #>  [272,]  272 640 254 254 254 #>  [273,]  273 640 254 254 254 #>  [274,]  274 640 254 254 254 #>  [275,]  275 640 254 254 254 #>  [276,]  276 640 255 255 255 #>  [277,]  277 640 255 255 255 #>  [278,]  278 640 255 255 255 #>  [279,]  279 640 255 255 255 #>  [280,]  280 640 255 255 255 #>  [281,]  281 640 255 255 255 #>  [282,]  282 640 255 255 255 #>  [283,]  283 640 255 255 255 #>  [284,]  284 640 255 255 255 #>  [285,]  285 640 255 255 255 #>  [286,]  286 640 254 254 254 #>  [287,]  287 640 254 254 254 #>  [288,]  288 640 254 254 254 #>  [289,]  289 640 254 254 254 #>  [290,]  290 640 254 254 254 #>  [291,]  291 640 254 254 254 #>  [292,]  292 640 255 255 255 #>  [293,]  293 640 255 255 255 #>  [294,]  294 640 255 255 255 #>  [295,]  295 640 255 255 255 #>  [296,]  296 640 255 255 255 #>  [297,]  297 640 252 252 252 #>  [298,]  298 640 255 255 255 #>  [299,]  299 640 251 251 251 #>  [300,]  300 640 255 255 255 #>  [301,]  301 640 251 251 251 #>  [302,]  302 640 251 249 249 #>  [303,]  303 640 255 255 255 #>  [304,]  304 640 159 157 157 #>  [305,]  305 640  95  32  18 #>  [306,]  306 640 139  67  49 #>  [307,]  307 640 132  60  43 #>  [308,]  308 640 139  56  41 #>  [309,]  309 640 144  55  34 #>  [310,]  310 640 154  63  42 #>  [311,]  311 640 145  53  36 #>  [312,]  312 640 156  60  44 #>  [313,]  313 640 142  62  45 #>  [314,]  314 640 143  61  44 #>  [315,]  315 640 142  63  44 #>  [316,]  316 640 143  63  46 #>  [317,]  317 640 154  62  43 #>  [318,]  318 640 156  61  45 #>  [319,]  319 640 158  60  44 #>  [320,]  320 640 157  59  43 #>  [321,]  321 640 154  63  42 #>  [322,]  322 640 153  62  41 #>  [323,]  323 640 150  61  40 #>  [324,]  324 640 152  63  42 #>  [325,]  325 640 150  64  40 #>  [326,]  326 640 152  64  40 #>  [327,]  327 640 156  64  39 #>  [328,]  328 640 158  65  40 #>  [329,]  329 640 157  64  38 #>  [330,]  330 640 157  64  38 #>  [331,]  331 640 158  65  39 #>  [332,]  332 640 157  66  39 #>  [333,]  333 640 156  67  40 #>  [334,]  334 640 152  68  40 #>  [335,]  335 640 152  69  41 #>  [336,]  336 640 152  69  41 #>  [337,]  337 640 155  68  42 #>  [338,]  338 640 155  68  42 #>  [339,]  339 640 155  68  42 #>  [340,]  340 640 154  69  43 #>  [341,]  341 640 154  69  43 #>  [342,]  342 640 154  69  43 #>  [343,]  343 640 154  68  44 #>  [344,]  344 640 154  68  44 #>  [345,]  345 640 155  70  44 #>  [346,]  346 640 155  70  44 #>  [347,]  347 640 157  72  46 #>  [348,]  348 640 156  72  46 #>  [349,]  349 640 156  73  45 #>  [350,]  350 640 156  73  45 #>  [351,]  351 640 156  73  45 #>  [352,]  352 640 156  73  45 #>  [353,]  353 640 163  71  46 #>  [354,]  354 640 164  72  47 #>  [355,]  355 640 167  74  49 #>  [356,]  356 640 166  74  49 #>  [357,]  357 640 162  75  49 #>  [358,]  358 640 159  75  49 #>  [359,]  359 640 157  76  49 #>  [360,]  360 640 157  76  49 #>  [361,]  361 640 153  77  48 #>  [362,]  362 640 156  78  49 #>  [363,]  363 640 156  79  47 #>  [364,]  364 640 158  80  44 #>  [365,]  365 640 156  81  43 #>  [366,]  366 640 160  80  43 #>  [367,]  367 640 160  80  43 #>  [368,]  368 640 161  81  44 #>  [369,]  369 640 162  75  49 #>  [370,]  370 640 167  76  49 #>  [371,]  371 640 158  81  48 #>  [372,]  372 640 154  85  46 #>  [373,]  373 640 155  85  45 #>  [374,]  374 640 153  84  44 #>  [375,]  375 640 162  83  44 #>  [376,]  376 640 170  82  46 #>  [377,]  377 640 168  78  47 #>  [378,]  378 640 176  84  59 #>  [379,]  379 640 167  80  54 #>  [380,]  380 640 157  73  48 #>  [381,]  381 640 162  83  56 #>  [382,]  382 640 156  87  54 #>  [383,]  383 640 153  86  47 #>  [384,]  384 640 136  74  34 #>  [385,]  385 640 120 117 113 #>  [386,]  386 640 253 250 246 #>  [387,]  387 640 255 255 251 #>  [388,]  388 640 248 247 243 #>  [389,]  389 640 250 251 247 #>  [390,]  390 640 254 255 253 #>  [391,]  391 640 252 255 253 #>  [392,]  392 640 252 254 254 #>  [393,]  393 640 252 255 253 #>  [394,]  394 640 252 255 253 #>  [395,]  395 640 252 254 254 #>  [396,]  396 640 252 254 254 #>  [397,]  397 640 254 254 254 #>  [398,]  398 640 255 254 254 #>  [399,]  399 640 255 254 254 #>  [400,]  400 640 255 254 254 #>  [401,]  401 640 254 254 254 #>  [402,]  402 640 254 254 254 #>  [403,]  403 640 254 254 254 #>  [404,]  404 640 254 254 254 #>  [405,]  405 640 254 254 254 #>  [406,]  406 640 255 255 255 #>  [407,]  407 640 255 255 255 #>  [408,]  408 640 255 255 255 #>  [409,]  409 640 255 255 255 #>  [410,]  410 640 255 255 255 #>  [411,]  411 640 255 255 255 #>  [412,]  412 640 254 254 254 #>  [413,]  413 640 254 254 254 #>  [414,]  414 640 254 254 254 #>  [415,]  415 640 254 254 254 #>  [416,]  416 640 254 254 254 #>  [417,]  417 640 254 254 254 #>  [418,]  418 640 254 254 254 #>  [419,]  419 640 254 254 254 #>  [420,]  420 640 254 254 254 #>  [421,]  421 640 254 254 254 #>  [422,]  422 640 255 255 255 #>  [423,]  423 640 255 255 255 #>  [424,]  424 640 255 255 255 #>  [425,]  425 640 255 255 255 #>  [426,]  426 640 255 255 255 #>  [427,]  427 640 255 255 255 #>  [428,]  428 640 254 254 254 #>  [429,]  429 640 254 254 254 #>  [430,]  430 640 254 254 254 #>  [431,]  431 640 254 254 254 #>  [432,]  432 640 254 254 254 #>  [433,]  433 640 254 254 254 #>  [434,]  434 640 254 254 254 #>  [435,]  435 640 254 254 254 #>  [436,]  436 640 254 254 254 #>  [437,]  437 640 254 254 254 #>  [438,]  438 640 255 255 255 #>  [439,]  439 640 255 255 255 #>  [440,]  440 640 255 255 255 #>  [441,]  441 640 255 255 255 #>  [442,]  442 640 255 255 255 #>  [443,]  443 640 255 255 255 #>  [444,]  444 640 254 254 254 #>  [445,]  445 640 254 254 254 #>  [446,]  446 640 254 254 254 #>  [447,]  447 640 254 254 254 #>  [448,]  448 640 254 254 254 #>  [449,]  449 640 254 254 254 #>  [450,]  450 640 254 254 254 #>  [451,]  451 640 254 254 254 #>  [452,]  452 640 254 254 254 #>  [453,]  453 640 254 254 254 #>  [454,]  454 640 255 255 255 #>  [455,]  455 640 255 255 255 #>  [456,]  456 640 255 255 255 #>  [457,]  457 640 255 255 255 #>  [458,]  458 640 255 255 255 #>  [459,]  459 640 255 255 255 #>  [460,]  460 640 254 254 254 #>  [461,]  461 640 254 254 254 #>  [462,]  462 640 254 254 254 #>  [463,]  463 640 254 254 254 #>  [464,]  464 640 254 254 254 #>  [465,]  465 640 254 254 254 #>  [466,]  466 640 254 254 254 #>  [467,]  467 640 254 254 254 #>  [468,]  468 640 254 254 254 #>  [469,]  469 640 254 254 254 #>  [470,]  470 640 255 255 255 #>  [471,]  471 640 255 255 255 #>  [472,]  472 640 255 255 255 #>  [473,]  473 640 255 255 255 #>  [474,]  474 640 255 255 255 #>  [475,]  475 640 255 255 255 #>  [476,]  476 640 254 254 254 #>  [477,]  477 640 254 254 254 #>  [478,]  478 640 254 254 254 #>  [479,]  479 640 254 254 254 #>  [480,]  480 640 254 254 254 #>  [481,]  481 640 255 255 255 #>  [482,]  482 640 254 253 255 #>  [483,]  483 640 245 255 254 #>  [484,]  484 640 245 255 255 #>  [485,]  485 640 254 253 255 #>  [486,]  486 640 255 254 254 #>  [487,]  487 640 253 253 253 #>  [488,]  488 640 255 253 253 #>  [489,]  489 640 247 254 251 #>  [490,]  490 640 249 254 252 #>  [491,]  491 640 252 255 251 #>  [492,]  492 640 249 254 253 #>  [493,]  493 640 248 253 254 #>  [494,]  494 640 248 252 253 #>  [495,]  495 640 233 250 253 #>  [496,]  496 640 241 255 254 #>  [497,]  497 640 251 249 239 #>  [498,]  498 640 253 255 234 #>  [499,]  499 640 254 237 210 #>  [500,]  500 640 175 130  96 #>  [501,]  501 640 168 108  62 #>  [502,]  502 640 203 131  77 #>  [503,]  503 640 205 129  70 #>  [504,]  504 640 206 128  69 #>  [505,]  505 640 196 130  71 #>  [506,]  506 640 192 129  71 #>  [507,]  507 640 187 130  75 #>  [508,]  508 640 187 132  75 #>  [509,]  509 640 187 131  72 #>  [510,]  510 640 193 130  72 #>  [511,]  511 640 194 131  70 #>  [512,]  512 640 198 133  72 #>  [513,]  513 640 193 134  72 #>  [514,]  514 640 193 134  72 #>  [515,]  515 640 193 134  72 #>  [516,]  516 640 193 134  72 #>  [517,]  517 640 193 135  70 #>  [518,]  518 640 194 136  71 #>  [519,]  519 640 196 138  73 #>  [520,]  520 640 197 139  74 #>  [521,]  521 640 195 137  72 #>  [522,]  522 640 195 137  72 #>  [523,]  523 640 194 139  72 #>  [524,]  524 640 194 139  72 #>  [525,]  525 640 195 140  73 #>  [526,]  526 640 195 140  73 #>  [527,]  527 640 195 140  73 #>  [528,]  528 640 195 140  73 #>  [529,]  529 640 194 141  74 #>  [530,]  530 640 195 142  75 #>  [531,]  531 640 195 142  75 #>  [532,]  532 640 196 143  76 #>  [533,]  533 640 196 143  76 #>  [534,]  534 640 197 144  77 #>  [535,]  535 640 200 145  78 #>  [536,]  536 640 200 145  78 #>  [537,]  537 640 200 145  78 #>  [538,]  538 640 200 145  78 #>  [539,]  539 640 200 145  78 #>  [540,]  540 640 201 146  79 #>  [541,]  541 640 201 146  79 #>  [542,]  542 640 201 146  79 #>  [543,]  543 640 202 147  80 #>  [544,]  544 640 202 147  80 #>  [545,]  545 640 200 148  78 #>  [546,]  546 640 200 148  78 #>  [547,]  547 640 201 149  79 #>  [548,]  548 640 202 150  80 #>  [549,]  549 640 203 151  80 #>  [550,]  550 640 203 151  80 #>  [551,]  551 640 203 151  80 #>  [552,]  552 640 203 151  80 #>  [553,]  553 640 204 154  82 #>  [554,]  554 640 203 153  81 #>  [555,]  555 640 203 154  80 #>  [556,]  556 640 203 154  80 #>  [557,]  557 640 203 154  80 #>  [558,]  558 640 204 155  81 #>  [559,]  559 640 206 157  83 #>  [560,]  560 640 206 157  83 #>  [561,]  561 640 205 158  72 #>  [562,]  562 640 205 159  75 #>  [563,]  563 640 206 158  80 #>  [564,]  564 640 205 157  85 #>  [565,]  565 640 205 155  89 #>  [566,]  566 640 204 156  90 #>  [567,]  567 640 206 157  87 #>  [568,]  568 640 209 158  85 #>  [569,]  569 640 209 161  79 #>  [570,]  570 640 212 165  81 #>  [571,]  571 640 209 169  94 #>  [572,]  572 640 179 147  74 #>  [573,]  573 640 192 163 106 #>  [574,]  574 640 249 230 187 #>  [575,]  575 640 255 255 226 #>  [576,]  576 640 255 251 233 #>  [577,]  577 640 240 246 251 #>  [578,]  578 640 248 253 254 #>  [579,]  579 640 251 250 246 #>  [580,]  580 640 255 254 253 #>  [581,]  581 640 243 251 251 #>  [582,]  582 640 248 255 255 #>  [583,]  583 640 244 249 252 #>  [584,]  584 640 249 253 254 #>  [585,]  585 640 254 255 246 #>  [586,]  586 640 255 255 246 #>  [587,]  587 640 255 254 250 #>  [588,]  588 640 254 255 253 #>  [589,]  589 640 249 253 254 #>  [590,]  590 640 249 252 255 #>  [591,]  591 640 252 255 251 #>  [592,]  592 640 255 255 251 #>  [593,]  593 640 254 254 254 #>  [594,]  594 640 254 254 254 #>  [595,]  595 640 254 254 254 #>  [596,]  596 640 254 254 254 #>  [597,]  597 640 254 254 254 #>  [598,]  598 640 255 255 255 #>  [599,]  599 640 255 255 255 #>  [600,]  600 640 255 255 255 #>  [601,]  601 640 255 255 255 #>  [602,]  602 640 255 255 255 #>  [603,]  603 640 255 255 255 #>  [604,]  604 640 254 254 254 #>  [605,]  605 640 254 254 254 #>  [606,]  606 640 254 254 254 #>  [607,]  607 640 254 254 254 #>  [608,]  608 640 254 254 254 #>  [609,]  609 640 254 254 254 #>  [610,]  610 640 254 254 254 #>  [611,]  611 640 254 254 254 #>  [612,]  612 640 254 254 254 #>  [613,]  613 640 254 254 254 #>  [614,]  614 640 255 255 255 #>  [615,]  615 640 255 255 255 #>  [616,]  616 640 255 255 255 #>  [617,]  617 640 255 255 255 #>  [618,]  618 640 255 255 255 #>  [619,]  619 640 255 255 255 #>  [620,]  620 640 254 254 254 #>  [621,]  621 640 254 254 254 #>  [622,]  622 640 254 254 254 #>  [623,]  623 640 254 254 254 #>  [624,]  624 640 254 254 254 #>  [625,]  625 640 253 252 254 #>  [626,]  626 640 253 252 255 #>  [627,]  627 640 253 255 243 #>  [628,]  628 640 255 255 243 #>  [629,]  629 640 252 254 254 #>  [630,]  630 640 250 252 253 #>  [631,]  631 640 254 251 247 #>  [632,]  632 640 253 252 238 #>  [633,]  633 640 211 202 138 #>  [634,]  634 640 213 198 106 #>  [635,]  635 640 234 205  97 #>  [636,]  636 640 228 200  92 #>  [637,]  637 640 226 197  99 #>  [638,]  638 640 235 200 110 #>  [639,]  639 640 212 200  98 #>  [640,]  640 640 218 204 102 #>  [641,]  641 640 226 203 104 #>  [642,]  642 640 224 203 104 #>  [643,]  643 640 223 202 103 #>  [644,]  644 640 221 200 101 #>  [645,]  645 640 222 201 102 #>  [646,]  646 640 224 201 102 #>  [647,]  647 640 222 198 102 #>  [648,]  648 640 219 195  99 #>  [649,]  649 640 221 197 101 #>  [650,]  650 640 221 197 101 #>  [651,]  651 640 221 196 102 #>  [652,]  652 640 221 195 101 #>  [653,]  653 640 221 195 101 #>  [654,]  654 640 219 193  99 #>  [655,]  655 640 220 194 100 #>  [656,]  656 640 220 194 100 #>  [657,]  657 640 222 193 102 #>  [658,]  658 640 221 192 101 #>  [659,]  659 640 220 191 100 #>  [660,]  660 640 220 191 100 #>  [661,]  661 640 220 191 100 #>  [662,]  662 640 220 191 100 #>  [663,]  663 640 221 189 100 #>  [664,]  664 640 220 188  99 #>  [665,]  665 640 219 187  98 #>  [666,]  666 640 219 187  98 #>  [667,]  667 640 218 186  97 #>  [668,]  668 640 218 186  97 #>  [669,]  669 640 219 184  98 #>  [670,]  670 640 219 184  98 #>  [671,]  671 640 218 183  97 #>  [672,]  672 640 218 183  97 #>  [673,]  673 640 215 183  94 #>  [674,]  674 640 215 183  94 #>  [675,]  675 640 215 182  96 #>  [676,]  676 640 214 181  95 #>  [677,]  677 640 214 181  95 #>  [678,]  678 640 213 180  94 #>  [679,]  679 640 212 179  93 #>  [680,]  680 640 212 179  93 #>  [681,]  681 640 211 177  93 #>  [682,]  682 640 211 177  93 #>  [683,]  683 640 213 177  93 #>  [684,]  684 640 213 177  93 #>  [685,]  685 640 214 177  93 #>  [686,]  686 640 212 174  92 #>  [687,]  687 640 213 175  93 #>  [688,]  688 640 212 174  92 #>  [689,]  689 640 210 173  89 #>  [690,]  690 640 212 175  91 #>  [691,]  691 640 213 176  92 #>  [692,]  692 640 211 174  90 #>  [693,]  693 640 210 173  89 #>  [694,]  694 640 210 173  89 #>  [695,]  695 640 211 171  88 #>  [696,]  696 640 210 170  87 #>  [697,]  697 640 209 169  86 #>  [698,]  698 640 209 169  86 #>  [699,]  699 640 208 168  86 #>  [700,]  700 640 208 168  86 #>  [701,]  701 640 210 167  88 #>  [702,]  702 640 209 166  87 #>  [703,]  703 640 209 166  87 #>  [704,]  704 640 209 166  87 #>  [705,]  705 640 209 166  87 #>  [706,]  706 640 208 165  86 #>  [707,]  707 640 205 164  85 #>  [708,]  708 640 207 164  85 #>  [709,]  709 640 209 163  85 #>  [710,]  710 640 209 163  85 #>  [711,]  711 640 208 162  85 #>  [712,]  712 640 208 162  85 #>  [713,]  713 640 207 161  84 #>  [714,]  714 640 207 161  84 #>  [715,]  715 640 207 161  84 #>  [716,]  716 640 206 160  83 #>  [717,]  717 640 206 160  83 #>  [718,]  718 640 205 159  82 #>  [719,]  719 640 203 159  82 #>  [720,]  720 640 202 158  81 #>  [721,]  721 640 197 161  77 #>  [722,]  722 640 196 163  77 #>  [723,]  723 640 214 153  87 #>  [724,]  724 640 213 152  84 #>  [725,]  725 640 209 152  83 #>  [726,]  726 640 212 153  84 #>  [727,]  727 640 195 158  78 #>  [728,]  728 640 194 157  77 #>  [729,]  729 640 209 160  74 #>  [730,]  730 640 203 154  68 #>  [731,]  731 640 197 150  88 #>  [732,]  732 640 194 147  86 #>  [733,]  733 640 204 152  82 #>  [734,]  734 640 196 145  72 #>  [735,]  735 640 167 150 111 #>  [736,]  736 640 255 251 232 #>  [737,]  737 640 254 254 254 #>  [738,]  738 640 255 255 255 #>  [739,]  739 640 255 255 255 #>  [740,]  740 640 253 253 253 #>  [741,]  741 640 252 252 252 #>  [742,]  742 640 253 253 253 #>  [743,]  743 640 254 254 254 #>  [744,]  744 640 255 255 255 #>  [745,]  745 640 254 254 254 #>  [746,]  746 640 254 254 254 #>  [747,]  747 640 254 254 254 #>  [748,]  748 640 254 254 254 #>  [749,]  749 640 254 254 254 #>  [750,]  750 640 254 254 254 #>  [751,]  751 640 254 254 254 #>  [752,]  752 640 254 254 254 #>  [753,]  753 640 254 254 254 #>  [754,]  754 640 254 254 254 #>  [755,]  755 640 254 254 254 #>  [756,]  756 640 254 254 254 #>  [757,]  757 640 254 254 254 #>  [758,]  758 640 254 254 254 #>  [759,]  759 640 254 254 254 #>  [760,]  760 640 254 254 254 #>  [761,]  761 640 254 254 254 #>  [762,]  762 640 254 254 254 #>  [763,]  763 640 254 254 254 #>  [764,]  764 640 254 254 254 #>  [765,]  765 640 254 254 254 #>  [766,]  766 640 254 254 254 #>  [767,]  767 640 254 254 254 #>  [768,]  768 640 254 254 254 #>  [769,]  769 640 254 254 254 #>  [770,]  770 640 254 254 254 #>  [771,]  771 640 254 254 254 #>  [772,]  772 640 254 254 254 #>  [773,]  773 640 254 254 254 #>  [774,]  774 640 254 254 254 #>  [775,]  775 640 254 254 254 #>  [776,]  776 640 254 254 254 #>  [777,]  777 640 254 254 254 #>  [778,]  778 640 254 254 254 #>  [779,]  779 640 254 254 254 #>  [780,]  780 640 254 254 254 #>  [781,]  781 640 254 254 254 #>  [782,]  782 640 254 254 254 #>  [783,]  783 640 254 254 254 #>  [784,]  784 640 254 254 254 #>  [785,]  785 640 254 254 254 #>  [786,]  786 640 254 254 254 #>  [787,]  787 640 254 254 254 #>  [788,]  788 640 254 254 254 #>  [789,]  789 640 254 254 254 #>  [790,]  790 640 254 254 254 #>  [791,]  791 640 254 254 254 #>  [792,]  792 640 254 254 254 #>  [793,]  793 640 254 254 254 #>  [794,]  794 640 254 254 254 #>  [795,]  795 640 254 254 254 #>  [796,]  796 640 254 254 254 #>  [797,]  797 640 254 254 254 #>  [798,]  798 640 254 254 254 #>  [799,]  799 640 254 254 254 #>  [800,]  800 640 254 254 254 #>  [801,]  801 640 254 254 254 #>  [802,]  802 640 254 254 254 #>  [803,]  803 640 254 254 254 #>  [804,]  804 640 254 254 254 #>  [805,]  805 640 254 254 254 #>  [806,]  806 640 254 254 254 #>  [807,]  807 640 254 254 254 #>  [808,]  808 640 254 254 254 #>  [809,]  809 640 254 254 254 #>  [810,]  810 640 254 254 254 #>  [811,]  811 640 254 254 254 #>  [812,]  812 640 254 254 254 #>  [813,]  813 640 254 254 254 #>  [814,]  814 640 254 254 254 #>  [815,]  815 640 254 254 254 #>  [816,]  816 640 254 254 254 #>  [817,]  817 640 254 255 253 #>  [818,]  818 640 254 255 253 #>  [819,]  819 640 254 255 253 #>  [820,]  820 640 254 255 253 #>  [821,]  821 640 254 255 253 #>  [822,]  822 640 254 255 253 #>  [823,]  823 640 254 255 253 #>  [824,]  824 640 254 255 253 #>  [825,]  825 640 254 255 253 #>  [826,]  826 640 254 255 253 #>  [827,]  827 640 255 255 254 #>  [828,]  828 640 255 255 254 #>  [829,]  829 640 255 255 254 #>  [830,]  830 640 255 255 254 #>  [831,]  831 640 255 255 254 #>  [832,]  832 640 255 255 254 #>  [833,]  833 640 254 255 253 #>  [834,]  834 640 255 255 254 #>  [835,]  835 640 255 255 254 #>  [836,]  836 640 255 255 254 #>  [837,]  837 640 255 255 254 #>  [838,]  838 640 254 255 253 #>  [839,]  839 640 254 255 253 #>  [840,]  840 640 254 255 253 #>  [841,]  841 640 253 254 252 #>  [842,]  842 640 253 254 252 #>  [843,]  843 640 253 254 252 #>  [844,]  844 640 253 254 252 #>  [845,]  845 640 253 254 252 #>  [846,]  846 640 253 254 252 #>  [847,]  847 640 253 254 252 #>  [848,]  848 640 253 254 252 #>  [849,]  849 640 254 254 254 #>  [850,]  850 640 254 254 254 #>  [851,]  851 640 254 254 254 #>  [852,]  852 640 254 254 254 #>  [853,]  853 640 254 254 254 #>  [854,]  854 640 254 254 254 #>  [855,]  855 640 254 254 254 #>  [856,]  856 640 254 254 254 #>  [857,]  857 640 254 254 254 #>  [858,]  858 640 254 254 254 #>  [859,]  859 640 254 254 254 #>  [860,]  860 640 254 254 254 #>  [861,]  861 640 254 254 254 #>  [862,]  862 640 254 254 254 #>  [863,]  863 640 254 254 254 #>  [864,]  864 640 254 254 254 #>  [865,]  865 640 254 254 254 #>  [866,]  866 640 254 254 254 #>  [867,]  867 640 254 254 254 #>  [868,]  868 640 254 254 254 #>  [869,]  869 640 254 254 254 #>  [870,]  870 640 254 254 254 #>  [871,]  871 640 254 254 254 #>  [872,]  872 640 254 254 254 #>  [873,]  873 640 254 254 254 #>  [874,]  874 640 254 254 254 #>  [875,]  875 640 254 254 254 #>  [876,]  876 640 254 254 254 #>  [877,]  877 640 254 254 254 #>  [878,]  878 640 254 254 254 #>  [879,]  879 640 254 254 254 #>  [880,]  880 640 254 254 254 #>  [881,]  881 640 254 254 254 #>  [882,]  882 640 254 254 254 #>  [883,]  883 640 254 254 254 #>  [884,]  884 640 254 254 254 #>  [885,]  885 640 254 254 254 #>  [886,]  886 640 254 254 254 #>  [887,]  887 640 254 254 254 #>  [888,]  888 640 254 254 254 #>  [889,]  889 640 254 254 254 #>  [890,]  890 640 254 254 254 #>  [891,]  891 640 254 254 254 #>  [892,]  892 640 254 254 254 #>  [893,]  893 640 254 254 254 #>  [894,]  894 640 254 254 254 #>  [895,]  895 640 254 254 254 #>  [896,]  896 640 254 254 254 #>  [897,]  897 640 254 254 254 #>  [898,]  898 640 254 254 254 #>  [899,]  899 640 254 254 254 #>  [900,]  900 640 254 254 254 #>  [901,]  901 640 254 254 254 #>  [902,]  902 640 254 254 254 #>  [903,]  903 640 254 254 254 #>  [904,]  904 640 254 254 254 #>  [905,]  905 640 254 254 254 #>  [906,]  906 640 254 254 254 #>  [907,]  907 640 254 254 254 #>  [908,]  908 640 254 254 254 #>  [909,]  909 640 254 254 254 #>  [910,]  910 640 254 254 254 #>  [911,]  911 640 254 254 254 #>  [912,]  912 640 254 254 254 #>  [913,]  913 640 254 254 254 #>  [914,]  914 640 254 254 254 #>  [915,]  915 640 254 254 254 #>  [916,]  916 640 254 254 254 #>  [917,]  917 640 254 254 254 #>  [918,]  918 640 254 254 254 #>  [919,]  919 640 254 254 254 #>  [920,]  920 640 254 254 254 #>  [921,]  921 640 254 254 254 #>  [922,]  922 640 254 254 254 #>  [923,]  923 640 254 254 254 #>  [924,]  924 640 254 254 254 #>  [925,]  925 640 254 254 254 #>  [926,]  926 640 254 254 254 #>  [927,]  927 640 254 254 254 #>  [928,]  928 640 254 254 254 #>  [929,]  929 640 254 254 254 #>  [930,]  930 640 254 254 254 #>  [931,]  931 640 254 254 254 #>  [932,]  932 640 254 254 254 #>  [933,]  933 640 254 254 254 #>  [934,]  934 640 254 254 254 #>  [935,]  935 640 254 254 254 #>  [936,]  936 640 254 254 254 #>  [937,]  937 640 254 254 254 #>  [938,]  938 640 254 254 254 #>  [939,]  939 640 254 254 254 #>  [940,]  940 640 254 254 254 #>  [941,]  941 640 254 254 254 #>  [942,]  942 640 254 254 254 #>  [943,]  943 640 254 254 254 #>  [944,]  944 640 254 254 254 #>  [945,]  945 640 254 254 254 #>  [946,]  946 640 254 254 254 #>  [947,]  947 640 254 254 254 #>  [948,]  948 640 254 254 254 #>  [949,]  949 640 254 254 254 #>  [950,]  950 640 254 254 254 #>  [951,]  951 640 254 254 254 #>  [952,]  952 640 254 254 254 #>  [953,]  953 640 254 254 254 #>  [954,]  954 640 254 254 254 #>  [955,]  955 640 254 254 254 #>  [956,]  956 640 254 254 254 #>  [957,]  957 640 254 254 254 #>  [958,]  958 640 254 254 254 #>  [959,]  959 640 254 254 254 #>  [960,]  960 640 254 254 254 #>  [961,]  961 640 247 252 253 #>  [962,]  962 640 248 255 255 #>  [963,]  963 640 244 249 247 #>  [964,]  964 640 248 255 250 #>  [965,]  965 640 255 254 254 #>  [966,]  966 640 252 248 253 #>  [967,]  967 640 244 253 255 #>  [968,]  968 640 242 251 255 #>  [969,]  969 640 244 246 247 #>  [970,]  970 640 255 253 245 #>  [971,]  971 640 255 253 229 #>  [972,]  972 640 179 116  96 #>  [973,]  973 640 108  41  18 #>  [974,]  974 640 140  61  40 #>  [975,]  975 640 151  55  42 #>  [976,]  976 640 149  57  44 #>  [977,]  977 640 145  59  41 #>  [978,]  978 640 146  60  42 #>  [979,]  979 640 145  59  41 #>  [980,]  980 640 146  60  42 #>  [981,]  981 640 147  61  43 #>  [982,]  982 640 147  61  43 #>  [983,]  983 640 143  59  41 #>  [984,]  984 640 142  58  40 #>  [985,]  985 640 142  58  40 #>  [986,]  986 640 142  58  40 #>  [987,]  987 640 142  58  40 #>  [988,]  988 640 142  58  40 #>  [989,]  989 640 141  56  40 #>  [990,]  990 640 140  55  39 #>  [991,]  991 640 140  55  39 #>  [992,]  992 640 141  56  40 #>  [993,]  993 640 139  56  41 #>  [994,]  994 640 139  56  41 #>  [995,]  995 640 138  55  40 #>  [996,]  996 640 138  55  40 #>  [997,]  997 640 136  54  42 #>  [998,]  998 640 136  54  42 #>  [999,]  999 640 136  54  42 #> [1000,] 1000 640 136  54  42 #> [1001,] 1001 640 136  54  42 #> [1002,] 1002 640 136  54  43 #> [1003,] 1003 640 134  54  43 #> [1004,] 1004 640 134  54  43 #> [1005,] 1005 640 133  53  42 #> [1006,] 1006 640 132  52  41 #> [1007,] 1007 640 132  52  41 #> [1008,] 1008 640 131  51  40 #> [1009,] 1009 640 131  50  42 #> [1010,] 1010 640 133  52  44 #> [1011,] 1011 640 132  53  44 #> [1012,] 1012 640 131  52  43 #> [1013,] 1013 640 131  52  43 #> [1014,] 1014 640 130  51  42 #> [1015,] 1015 640 131  52  43 #> [1016,] 1016 640 131  52  43 #> [1017,] 1017 640 128  51  42 #> [1018,] 1018 640 127  50  41 #> [1019,] 1019 640 127  50  41 #> [1020,] 1020 640 127  50  41 #> [1021,] 1021 640 127  50  41 #> [1022,] 1022 640 127  50  41 #> [1023,] 1023 640 124  49  40 #> [1024,] 1024 640 123  48  39 #> [1025,] 1025 640 123  48  40 #> [1026,] 1026 640 123  48  40 #> [1027,] 1027 640 123  48  40 #> [1028,] 1028 640 123  48  40 #> [1029,] 1029 640 123  48  40 #> [1030,] 1030 640 123  48  40 #> [1031,] 1031 640 122  47  39 #> [1032,] 1032 640 122  47  39 #> [1033,] 1033 640 119  47  39 #> [1034,] 1034 640 120  47  39 #> [1035,] 1035 640 121  47  41 #> [1036,] 1036 640 121  47  41 #> [1037,] 1037 640 121  47  41 #> [1038,] 1038 640 121  47  41 #> [1039,] 1039 640 120  46  40 #> [1040,] 1040 640 121  47  41 #> [1041,] 1041 640 122  51  47 #> [1042,] 1042 640  87  15  15 #> [1043,] 1043 640 163 125 120 #> [1044,] 1044 640 255 249 242 #> [1045,] 1045 640 253 255 249 #> [1046,] 1046 640 246 253 248 #> [1047,] 1047 640 245 255 249 #> [1048,] 1048 640 246 251 252 #> [1049,] 1049 640 247 247 247 #> [1050,] 1050 640 252 252 252 #> [1051,] 1051 640 255 255 255 #> [1052,] 1052 640 251 253 253 #> [1053,] 1053 640 249 254 252 #> [1054,] 1054 640 250 255 254 #> [1055,] 1055 640 251 255 255 #> [1056,] 1056 640 251 254 252 #> [1057,] 1057 640 254 254 254 #> [1058,] 1058 640 254 254 254 #> [1059,] 1059 640 254 254 254 #> [1060,] 1060 640 254 254 254 #> [1061,] 1061 640 254 254 254 #> [1062,] 1062 640 254 254 254 #> [1063,] 1063 640 254 254 254 #> [1064,] 1064 640 254 254 254 #> [1065,] 1065 640 254 254 254 #> [1066,] 1066 640 254 254 254 #> [1067,] 1067 640 254 254 254 #> [1068,] 1068 640 254 254 254 #> [1069,] 1069 640 254 254 254 #> [1070,] 1070 640 254 254 254 #> [1071,] 1071 640 254 254 254 #> [1072,] 1072 640 254 254 254 #> [1073,] 1073 640 254 254 254 #> [1074,] 1074 640 254 254 254 #> [1075,] 1075 640 254 254 254 #> [1076,] 1076 640 254 254 254 #> [1077,] 1077 640 254 254 254 #> [1078,] 1078 640 254 254 254 #> [1079,] 1079 640 254 254 254 #> [1080,] 1080 640 254 254 254 #> [1081,] 1081 640 254 254 254 #> [1082,] 1082 640 254 254 254 #> [1083,] 1083 640 254 254 254 #> [1084,] 1084 640 254 254 254 #> [1085,] 1085 640 254 254 254 #> [1086,] 1086 640 254 254 254 #> [1087,] 1087 640 254 254 254 #> [1088,] 1088 640 254 254 254 #> [1089,] 1089 640 250 255 254 #> [1090,] 1090 640 250 255 254 #> [1091,] 1091 640 249 255 253 #> [1092,] 1092 640 247 254 251 #> [1093,] 1093 640 252 254 254 #> [1094,] 1094 640 255 255 254 #> [1095,] 1095 640 254 255 251 #> [1096,] 1096 640 242 230 228 #> [1097,] 1097 640 104  50  55 #> [1098,] 1098 640  92  28  34 #> [1099,] 1099 640 100  39  43 #> [1100,] 1100 640  98  32  37 #> [1101,] 1101 640 102  36  41 #> [1102,] 1102 640  96  30  35 #> [1103,] 1103 640  98  33  35 #> [1104,] 1104 640  96  32  32 #> [1105,] 1105 640  98  32  37 #> [1106,] 1106 640  98  32  37 #> [1107,] 1107 640  98  32  37 #> [1108,] 1108 640  98  32  37 #> [1109,] 1109 640  96  32  37 #> [1110,] 1110 640  96  32  38 #> [1111,] 1111 640  95  31  37 #> [1112,] 1112 640  95  31  37 #> [1113,] 1113 640  94  30  36 #> [1114,] 1114 640  94  30  36 #> [1115,] 1115 640  94  30  36 #> [1116,] 1116 640  94  30  36 #> [1117,] 1117 640  94  30  36 #> [1118,] 1118 640  93  29  35 #> [1119,] 1119 640  93  29  35 #> [1120,] 1120 640  92  28  34 #> [1121,] 1121 640  93  29  35 #> [1122,] 1122 640  91  27  33 #> [1123,] 1123 640  93  29  35 #> [1124,] 1124 640  95  31  37 #> [1125,] 1125 640  91  29  35 #> [1126,] 1126 640  91  29  35 #> [1127,] 1127 640  90  30  36 #> [1128,] 1128 640  90  30  36 #> [1129,] 1129 640  89  31  36 #> [1130,] 1130 640  89  31  36 #> [1131,] 1131 640  89  31  36 #> [1132,] 1132 640  88  30  35 #> [1133,] 1133 640  86  30  35 #> [1134,] 1134 640  85  29  34 #> [1135,] 1135 640  85  29  34 #> [1136,] 1136 640  85  29  34 #> [1137,] 1137 640  84  30  35 #> [1138,] 1138 640  84  30  35 #> [1139,] 1139 640  84  30  35 #> [1140,] 1140 640  84  30  35 #> [1141,] 1141 640  82  31  35 #> [1142,] 1142 640  81  30  34 #> [1143,] 1143 640  80  29  33 #> [1144,] 1144 640  80  29  33 #> [1145,] 1145 640  80  29  33 #> [1146,] 1146 640  80  29  33 #> [1147,] 1147 640  80  29  33 #> [1148,] 1148 640  80  29  33 #> [1149,] 1149 640  80  29  33 #> [1150,] 1150 640  80  29  33 #> [1151,] 1151 640  80  29  33 #> [1152,] 1152 640  80  29  33 #> [1153,] 1153 640  79  29  33 #> [1154,] 1154 640  79  29  33 #> [1155,] 1155 640  79  29  33 #> [1156,] 1156 640  79  29  33 #> [1157,] 1157 640  77  30  33 #> [1158,] 1158 640  77  30  33 #> [1159,] 1159 640  75  30  33 #> [1160,] 1160 640  75  30  33 #> [1161,] 1161 640  73  30  33 #> [1162,] 1162 640  72  29  32 #> [1163,] 1163 640  70  30  32 #> [1164,] 1164 640  70  30  32 #> [1165,] 1165 640  71  31  33 #> [1166,] 1166 640  71  31  33 #> [1167,] 1167 640  71  31  33 #> [1168,] 1168 640  70  30  32 #> [1169,] 1169 640  64  30  31 #> [1170,] 1170 640  64  30  31 #> [1171,] 1171 640  66  29  31 #> [1172,] 1172 640  68  29  31 #> [1173,] 1173 640  69  29  31 #> [1174,] 1174 640  69  29  31 #> [1175,] 1175 640  68  28  30 #> [1176,] 1176 640  67  28  30 #> [1177,] 1177 640  67  28  30 #> [1178,] 1178 640  63  29  30 #> [1179,] 1179 640  62  30  31 #> [1180,] 1180 640  61  30  31 #> [1181,] 1181 640  61  29  30 #> [1182,] 1182 640  61  29  30 #> [1183,] 1183 640  61  29  30 #> [1184,] 1184 640  60  28  29 #> [1185,] 1185 640  62  27  31 #> [1186,] 1186 640  66  31  35 #> [1187,] 1187 640  28   7   9 #> [1188,] 1188 640 171 157 158 #> [1189,] 1189 640 255 253 252 #> [1190,] 1190 640 248 251 249 #> [1191,] 1191 640 250 255 254 #> [1192,] 1192 640 249 255 254 #> [1193,] 1193 640 249 255 253 #> [1194,] 1194 640 254 255 253 #> [1195,] 1195 640 255 254 253 #> [1196,] 1196 640 254 255 253 #> [1197,] 1197 640 255 254 254 #> [1198,] 1198 640 254 254 254 #> [1199,] 1199 640 250 255 254 #> [1200,] 1200 640 250 255 254 #> [1201,] 1201 640 254 254 254 #> [1202,] 1202 640 254 254 254 #> [1203,] 1203 640 254 254 254 #> [1204,] 1204 640 254 254 254 #> [1205,] 1205 640 254 254 254 #> [1206,] 1206 640 254 254 254 #> [1207,] 1207 640 254 254 254 #> [1208,] 1208 640 254 254 254 #> [1209,] 1209 640 254 254 254 #> [1210,] 1210 640 254 254 254 #> [1211,] 1211 640 254 254 254 #> [1212,] 1212 640 254 254 254 #> [1213,] 1213 640 254 254 254 #> [1214,] 1214 640 254 254 254 #> [1215,] 1215 640 254 254 254 #> [1216,] 1216 640 254 254 254 #> [1217,] 1217 640 254 254 254 #> [1218,] 1218 640 254 254 254 #> [1219,] 1219 640 254 254 254 #> [1220,] 1220 640 254 254 254 #> [1221,] 1221 640 254 254 254 #> [1222,] 1222 640 254 254 254 #> [1223,] 1223 640 254 254 254 #> [1224,] 1224 640 254 254 254 #> [1225,] 1225 640 254 254 254 #> [1226,] 1226 640 254 254 254 #> [1227,] 1227 640 254 254 254 #> [1228,] 1228 640 254 254 254 #> [1229,] 1229 640 254 254 254 #> [1230,] 1230 640 254 254 254 #> [1231,] 1231 640 255 255 255 #> [1232,] 1232 640 255 255 255 #> [1233,] 1233 640 255 255 255 #> [1234,] 1234 640 255 255 255 #> [1235,] 1235 640 255 255 255 #> [1236,] 1236 640 255 255 255 #> [1237,] 1237 640 255 255 255 #> [1238,] 1238 640 255 255 255 #> [1239,] 1239 640 255 255 255 #> [1240,] 1240 640 255 255 255 #> [1241,] 1241 640 255 255 255 #> [1242,] 1242 640 255 255 255 #> [1243,] 1243 640 255 255 255 #> [1244,] 1244 640 255 255 255 #> [1245,] 1245 640 255 255 255 #> [1246,] 1246 640 255 255 255 #> [1247,] 1247 640 255 255 255 #> [1248,] 1248 640 255 255 255 #> [1249,] 1249 640 255 255 255 #> [1250,] 1250 640 255 255 255 #> [1251,] 1251 640 255 255 255 #> [1252,] 1252 640 255 255 255 #> [1253,] 1253 640 255 255 255 #> [1254,] 1254 640 255 255 255 #> [1255,] 1255 640 255 255 255 #> [1256,] 1256 640 255 255 255 #> [1257,] 1257 640 255 255 255 #> [1258,] 1258 640 255 255 255 #> [1259,] 1259 640 255 255 255 #> [1260,] 1260 640 255 255 255 #> [1261,] 1261 640 255 255 255 #> [1262,] 1262 640 255 255 255 #> [1263,] 1263 640 255 255 255 #> [1264,] 1264 640 255 255 255 #> [1265,] 1265 640 255 255 255 #> [1266,] 1266 640 255 255 255 #> [1267,] 1267 640 255 255 255 #> [1268,] 1268 640 255 255 255 #> [1269,] 1269 640 255 255 255 #> [1270,] 1270 640 255 255 255 #> [1271,] 1271 640 255 255 255 #> [1272,] 1272 640 255 255 255 #> [1273,] 1273 640 255 255 255 #> [1274,] 1274 640 255 255 255 #> [1275,] 1275 640 255 255 255 #> [1276,] 1276 640 255 255 255 #> [1277,] 1277 640 255 255 255 #> [1278,] 1278 640 255 255 255 #> [1279,] 1279 640 255 255 255 #> [1280,] 1280 640 255 255 255"},{"path":"https://swarm-lab.github.io/Rvision/reference/inPlaceArithmetic.html","id":null,"dir":"Reference","previous_headings":"","what":"In Place Arithmetic Operators for Images — inPlaceArithmetic","title":"In Place Arithmetic Operators for Images — inPlaceArithmetic","text":"Place Arithmetic Operators Images","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/inPlaceArithmetic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"In Place Arithmetic Operators for Images — inPlaceArithmetic","text":"","code":"e1 %i+% e2  e1 %i-% e2  e1 %i*% e2  e1 %i/% e2  e1 %i^% e2"},{"path":"https://swarm-lab.github.io/Rvision/reference/inPlaceArithmetic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"In Place Arithmetic Operators for Images — inPlaceArithmetic","text":"e1, e2 Either 2 Image objects 1 Image object 1 numeric value/vector. vector length less number channels image, recycled match .","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/inPlaceArithmetic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"In Place Arithmetic Operators for Images — inPlaceArithmetic","text":"operators return anything. modify image  place (destructive operation). 2 images passed operators,  one left side operator modified; left  untouched.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/inPlaceArithmetic.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"In Place Arithmetic Operators for Images — inPlaceArithmetic","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/inPlaceArithmetic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"In Place Arithmetic Operators for Images — inPlaceArithmetic","text":"","code":"balloon1 <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) balloon2 <- image(system.file(\"sample_img/balloon2.png\", package = \"Rvision\")) balloon1 %i+% balloon2"},{"path":"https://swarm-lab.github.io/Rvision/reference/inPlaceComparison.html","id":null,"dir":"Reference","previous_headings":"","what":"In Place Comparison Operators for Images — inPlaceComparison","title":"In Place Comparison Operators for Images — inPlaceComparison","text":"Place Comparison Operators Images","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/inPlaceComparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"In Place Comparison Operators for Images — inPlaceComparison","text":"","code":"e1 %i>% e2  e1 %i<% e2  e1 %i>=% e2  e1 %i<=% e2  e1 %i==% e2  e1 %i!=% e2"},{"path":"https://swarm-lab.github.io/Rvision/reference/inPlaceComparison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"In Place Comparison Operators for Images — inPlaceComparison","text":"e1, e2 Either 2 Image objects 1 Image object 1 numeric value/vector. vector length less number channels image, recycled match .","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/inPlaceComparison.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"In Place Comparison Operators for Images — inPlaceComparison","text":"operators return anything. modify image  place (destructive operation). 2 images passed operators,  one left side operator modified; left  untouched.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/inPlaceComparison.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"In Place Comparison Operators for Images — inPlaceComparison","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/inPlaceComparison.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"In Place Comparison Operators for Images — inPlaceComparison","text":"","code":"balloon1 <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) balloon2 <- image(system.file(\"sample_img/balloon2.png\", package = \"Rvision\")) balloon1 %i>% balloon2"},{"path":"https://swarm-lab.github.io/Rvision/reference/inPlaceLogical.html","id":null,"dir":"Reference","previous_headings":"","what":"In Place Logical Operators for Images — inPlaceLogical","title":"In Place Logical Operators for Images — inPlaceLogical","text":"Place Logical Operators Images","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/inPlaceLogical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"In Place Logical Operators for Images — inPlaceLogical","text":"","code":"e1 %i&% e2  e1 %i|% e2  not(image, target = \"new\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/inPlaceLogical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"In Place Logical Operators for Images — inPlaceLogical","text":"e1, e2 Either 2 Image objects 1 Image object 1 numeric value/vector. vector length less number channels image, recycled match . image Image object. target location results stored. can take 3 values: \"new\":new Image object created results   stored inside (default). \"self\":results stored back image (faster   destructive). Image object:results stored another   existing Image object. fast replace   content image replace target. Note   target dimensions, number channels,   bit depth image, error may thrown.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/inPlaceLogical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"In Place Logical Operators for Images — inPlaceLogical","text":"operators return anything. modify image place  (destructive operation). 2 images passed operators,  one left side operator modified; left untouched. target=\"new\", returns Image object.  target=\"self\", returns nothing modifies image place. target Image object, returns nothing modifies Image object place.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/inPlaceLogical.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"In Place Logical Operators for Images — inPlaceLogical","text":"R support creation custom unary operators.  !-like operator function instead.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/inPlaceLogical.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"In Place Logical Operators for Images — inPlaceLogical","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/inPlaceLogical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"In Place Logical Operators for Images — inPlaceLogical","text":"","code":"balloon1 <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) balloon2 <- image(system.file(\"sample_img/balloon2.png\", package = \"Rvision\")) balloon1 %i|% balloon2 not(balloon2) #> Class: image.  #> Dimensions: 640x360. #> Type: BGR, 3-channel, 8U. #> GPU: FALSE."},{"path":"https://swarm-lab.github.io/Rvision/reference/inRange.html","id":null,"dir":"Reference","previous_headings":"","what":"Range Thresholding — inRange","title":"Range Thresholding — inRange","text":"inRange performs range thresholding  Image object. Pixels values within desired  range turned white pixels values outside turned  black. operation performed separately channel  multi-channel images.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/inRange.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Range Thresholding — inRange","text":"","code":"inRange(image, low = 0, up = 255, target = \"new\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/inRange.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Range Thresholding — inRange","text":"image Image object. low vector indicating inclusive lower end thresholding range. can many elements number channels image. less elements number channels, recycled match number channels. elements number channels, extra elements ignored without warning (default: 0). vector indicating inclusive upper end thresholding range. Itcan many elements number channels image. less elements number channels, recycled match number channels. elements number channels, extra elements ignored without warning (default: 255). target location results stored. can take 2 values: \"new\":new Image object created results   stored inside (default). Image object:results stored another   existing Image object. case, target must   single channel image 8U bit depth. Note replace   content target.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/inRange.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Range Thresholding — inRange","text":"target=\"new\", function returns Image object. target Image object, function  returns nothing modifies Image object place. Image object.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/inRange.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Range Thresholding — inRange","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/inRange.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Range Thresholding — inRange","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) bw <- inRange(balloon, low = c(10, 20, 30), up = c(120, 130, 140))"},{"path":"https://swarm-lab.github.io/Rvision/reference/inpaint.html","id":null,"dir":"Reference","previous_headings":"","what":"Reconstruct Image Region from Region Neighborhood — inpaint","title":"Reconstruct Image Region from Region Neighborhood — inpaint","text":"inpaint reconstructs selected image area  pixel near area boundary. function may used remove dust  scratches scanned photo, remove undesirable objects still  images videos.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/inpaint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reconstruct Image Region from Region Neighborhood — inpaint","text":"","code":"inpaint(   image,   mask,   radius = 5,   method = \"NS\",   target = \"new\",   in_place = NULL )"},{"path":"https://swarm-lab.github.io/Rvision/reference/inpaint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reconstruct Image Region from Region Neighborhood — inpaint","text":"image Image object. mask 8-bit single-channel Image object. region reconstructed white. radius Radius circular neighborhood point inpainted considered algorithm (default: 5). method inpainting method used. can one following: \"NS\": Navier-Stokes based method (default). \"Telea\": Alexandru Telea's method. target location results stored. can take 3 values: \"new\":new Image object created results   stored inside (default). \"self\":results stored back image (faster   destructive). Image object:results stored another   existing Image object. fast replace   content image replace target. Note   target must dimensions, number channels, bit   depth,  image, otherwise error thrown. in_place Deprecated. Use target instead.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/inpaint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reconstruct Image Region from Region Neighborhood — inpaint","text":"target=\"new\", function returns Image object. target=\"self\", function returns nothing modifies  image place. target Image object,  function returns nothing modifies Image object  place.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/inpaint.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Reconstruct Image Region from Region Neighborhood — inpaint","text":"Telea, . (2004). image inpainting technique based fast  marching method. Journal graphics tools. doi: 10.1080/10867651.2004.10487596.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/inpaint.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Reconstruct Image Region from Region Neighborhood — inpaint","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/inpaint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reconstruct Image Region from Region Neighborhood — inpaint","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) mask <- zeros(nrow(balloon), ncol(balloon), 3) poly <- data.frame(x = c(290, 290, 440, 440), y = c(170, 325, 325, 170)) fillPoly(mask, poly, color = \"white\") changeColorSpace(mask, \"GRAY\", in_place = TRUE) #> Warning: in_place is deprecated. Use target='self' instead. balloon_inpait <- inpaint(balloon, mask)"},{"path":"https://swarm-lab.github.io/Rvision/reference/insertChannel.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert Single Channel into Image — insertChannel","title":"Insert Single Channel into Image — insertChannel","text":"insertChannel insert single color channel  target image.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/insertChannel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert Single Channel into Image — insertChannel","text":"","code":"insertChannel(image, channel, insert)"},{"path":"https://swarm-lab.github.io/Rvision/reference/insertChannel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert Single Channel into Image — insertChannel","text":"image Image object. channel integer specifying index channel replaced insert insert single-channel Image object bit depth image.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/insertChannel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Insert Single Channel into Image — insertChannel","text":"function returns nothing modifies image place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/insertChannel.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Insert Single Channel into Image — insertChannel","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/insertChannel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Insert Single Channel into Image — insertChannel","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) red <- extractChannel(balloon, 3) insertChannel(balloon, 1, red)"},{"path":"https://swarm-lab.github.io/Rvision/reference/invert.html","id":null,"dir":"Reference","previous_headings":"","what":"Invert Colors — invert","title":"Invert Colors — invert","text":"invert returns image colors linear  inverse original image.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/invert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Invert Colors — invert","text":"","code":"invert(image, target = \"new\", in_place = NULL)"},{"path":"https://swarm-lab.github.io/Rvision/reference/invert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Invert Colors — invert","text":"image Image object. target location results stored. can take 3 values: \"new\":new Image object created results   stored inside (default). \"self\":results stored back image (faster   destructive). Image object:results stored another   existing Image object. fast replace   content image replace target. Note   target dimensions, number channels,   bit depth image, error may thrown. in_place Deprecated. Use target instead.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/invert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Invert Colors — invert","text":"target=\"new\", function returns Image object. target=\"self\", function returns nothing modifies  image place. target Image object,  function returns nothing modifies Image object  place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/invert.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Invert Colors — invert","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/invert.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Invert Colors — invert","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) balloon_inv <- invert(balloon)"},{"path":"https://swarm-lab.github.io/Rvision/reference/invertFourcc.html","id":null,"dir":"Reference","previous_headings":"","what":"FOURCC Code to Codec Name — invertFourcc","title":"FOURCC Code to Codec Name — invertFourcc","text":"invertFourcc translates  FOURCC code 4-character  name corresponding video codec.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/invertFourcc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FOURCC Code to Codec Name — invertFourcc","text":"","code":"invertFourcc(x)"},{"path":"https://swarm-lab.github.io/Rvision/reference/invertFourcc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FOURCC Code to Codec Name — invertFourcc","text":"x integer.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/invertFourcc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FOURCC Code to Codec Name — invertFourcc","text":"4-character strings corresponding video codec.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/invertFourcc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"FOURCC Code to Codec Name — invertFourcc","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/invertFourcc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FOURCC Code to Codec Name — invertFourcc","text":"","code":"invertFourcc(1684633208) #> [1] \"xvid\""},{"path":"https://swarm-lab.github.io/Rvision/reference/isBlob.html","id":null,"dir":"Reference","previous_headings":"","what":"Test for a Blob Object — isBlob","title":"Test for a Blob Object — isBlob","text":"Tests whether object class blob.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/isBlob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test for a Blob Object — isBlob","text":"","code":"isBlob(object)"},{"path":"https://swarm-lab.github.io/Rvision/reference/isBlob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test for a Blob Object — isBlob","text":"object R object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/isBlob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test for a Blob Object — isBlob","text":"logical indicating whether object class  blob (TRUE) (FALSE).","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/isBlob.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Test for a Blob Object — isBlob","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/isBlob.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test for a Blob Object — isBlob","text":"","code":"dots <- image(system.file(\"sample_img/dots.jpg\", package = \"Rvision\")) blobs <- simpleBlobDetector(invert(dots), min_threshold = 25, max_threshold = 220,                             filter_by_area = TRUE, min_area = 200, max_area = Inf,                             filter_by_color = FALSE) isBlob(blobs) #> [1] TRUE"},{"path":"https://swarm-lab.github.io/Rvision/reference/isImage.html","id":null,"dir":"Reference","previous_headings":"","what":"Test for an Image Object — isImage","title":"Test for an Image Object — isImage","text":"Tests whether object class Image","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/isImage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test for an Image Object — isImage","text":"","code":"isImage(object)"},{"path":"https://swarm-lab.github.io/Rvision/reference/isImage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test for an Image Object — isImage","text":"object R object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/isImage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test for an Image Object — isImage","text":"logical indicating whether object class  Image (TRUE) (FALSE).","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/isImage.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Test for an Image Object — isImage","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/isImage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test for an Image Object — isImage","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) isImage(balloon) #> [1] TRUE"},{"path":"https://swarm-lab.github.io/Rvision/reference/isQueue.html","id":null,"dir":"Reference","previous_headings":"","what":"Test for a Queue object — isQueue","title":"Test for a Queue object — isQueue","text":"Tests whether object class Queue.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/isQueue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test for a Queue object — isQueue","text":"","code":"isQueue(object)"},{"path":"https://swarm-lab.github.io/Rvision/reference/isQueue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test for a Queue object — isQueue","text":"object R object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/isQueue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test for a Queue object — isQueue","text":"logical indicating whether object class  Queue (TRUE) (FALSE).","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/isQueue.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Test for a Queue object — isQueue","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/isQueue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test for a Queue object — isQueue","text":"","code":"balloon <- video(system.file(\"sample_vid/Balloon.mp4\", package = \"Rvision\")) #> Error: Could not open the video. buf <- queue(balloon) #> Error in eval(expr, envir, enclos): object 'balloon' not found isQueue(buf) #> Error in eval(expr, envir, enclos): object 'buf' not found"},{"path":"https://swarm-lab.github.io/Rvision/reference/isStream.html","id":null,"dir":"Reference","previous_headings":"","what":"Test for a Stream Object — isStream","title":"Test for a Stream Object — isStream","text":"Tests whether object class Stream.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/isStream.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test for a Stream Object — isStream","text":"","code":"isStream(object)"},{"path":"https://swarm-lab.github.io/Rvision/reference/isStream.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test for a Stream Object — isStream","text":"object R object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/isStream.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test for a Stream Object — isStream","text":"logical indicating whether object class  Stream (TRUE) (FALSE).","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/isStream.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Test for a Stream Object — isStream","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/isStream.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test for a Stream Object — isStream","text":"","code":"if (FALSE) { live <- stream(0) isStream(live) release(live) }"},{"path":"https://swarm-lab.github.io/Rvision/reference/isVideo.html","id":null,"dir":"Reference","previous_headings":"","what":"Test for a Video Object — isVideo","title":"Test for a Video Object — isVideo","text":"Tests whether object class Video.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/isVideo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test for a Video Object — isVideo","text":"","code":"isVideo(object)"},{"path":"https://swarm-lab.github.io/Rvision/reference/isVideo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test for a Video Object — isVideo","text":"object R object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/isVideo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test for a Video Object — isVideo","text":"logical indicating whether object class  Video (TRUE) (FALSE).","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/isVideo.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Test for a Video Object — isVideo","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/isVideo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test for a Video Object — isVideo","text":"","code":"balloon <- video(system.file(\"sample_vid/Balloon.mp4\", package = \"Rvision\")) #> Error: Could not open the video. isVideo(balloon) #> Error in eval(expr, envir, enclos): object 'balloon' not found"},{"path":"https://swarm-lab.github.io/Rvision/reference/isVideoStack.html","id":null,"dir":"Reference","previous_headings":"","what":"Test for a VideoStack Object — isVideoStack","title":"Test for a VideoStack Object — isVideoStack","text":"Tests whether object class VideoStack.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/isVideoStack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test for a VideoStack Object — isVideoStack","text":"","code":"isVideoStack(object)"},{"path":"https://swarm-lab.github.io/Rvision/reference/isVideoStack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test for a VideoStack Object — isVideoStack","text":"object R object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/isVideoStack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test for a VideoStack Object — isVideoStack","text":"logical indicating whether object class  VideoStack (TRUE) (FALSE).","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/isVideoStack.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Test for a VideoStack Object — isVideoStack","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/isVideoStack.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test for a VideoStack Object — isVideoStack","text":"","code":"path <- system.file(\"sample_vid/Balloon.mp4\", package = \"Rvision\") balloonStack <- videoStack(path, path) #> Error: Could not open the video. isVideoStack(balloonStack) #> Error in eval(expr, envir, enclos): object 'balloonStack' not found"},{"path":"https://swarm-lab.github.io/Rvision/reference/isVideoWriter.html","id":null,"dir":"Reference","previous_headings":"","what":"Test for a VideoWriter Object — isVideoWriter","title":"Test for a VideoWriter Object — isVideoWriter","text":"Tests whether object class VideoWriter","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/isVideoWriter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test for a VideoWriter Object — isVideoWriter","text":"","code":"isVideoWriter(object)"},{"path":"https://swarm-lab.github.io/Rvision/reference/isVideoWriter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test for a VideoWriter Object — isVideoWriter","text":"object R object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/isVideoWriter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test for a VideoWriter Object — isVideoWriter","text":"logical indicating whether object class  VideoWriter (TRUE) (FALSE).","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/isVideoWriter.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Test for a VideoWriter Object — isVideoWriter","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/isVideoWriter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test for a VideoWriter Object — isVideoWriter","text":"","code":"if (FALSE) { writer <- videoWriter(\"test.mp4\", \"H264\", 25, 1080, 1920) isVideoWriter(writer) release(writer) }"},{"path":"https://swarm-lab.github.io/Rvision/reference/laplacian.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the Laplacian of an Image — laplacian","title":"Calculates the Laplacian of an Image — laplacian","text":"laplacian calculates Laplacian source image  adding second x y derivatives calculated using Sobel operator.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/laplacian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the Laplacian of an Image — laplacian","text":"","code":"laplacian(image, k_size = 5, scale = 1, target = \"new\", in_place = NULL)"},{"path":"https://swarm-lab.github.io/Rvision/reference/laplacian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the Laplacian of an Image — laplacian","text":"image Image object. k_size half-size pixels kernel (default: 5). scale scale factor computed Laplacian values (default: 1). target location results stored. can take 3 values: \"new\":new Image object created results   stored inside (default). \"self\":results stored back image (faster   destructive). Image object:results stored another   existing Image object. fast replace   content image replace target. Note   target dimensions, number channels,   bit depth image, error may thrown. in_place Deprecated. Use target instead.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/laplacian.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the Laplacian of an Image — laplacian","text":"target=\"new\", function returns Image object. target=\"self\", function returns nothing modifies  image place. target Image object,  function returns nothing modifies Image object  place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/laplacian.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculates the Laplacian of an Image — laplacian","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/laplacian.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the Laplacian of an Image — laplacian","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) balloon_laplacian <- laplacian(balloon, 5)"},{"path":"https://swarm-lab.github.io/Rvision/reference/log.html","id":null,"dir":"Reference","previous_headings":"","what":"Logarithm Generic for Image objects — log","title":"Logarithm Generic for Image objects — log","text":"Overloaded log handle Image  objects.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logarithm Generic for Image objects — log","text":"","code":"log(x, target = \"new\", ...)"},{"path":"https://swarm-lab.github.io/Rvision/reference/log.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logarithm Generic for Image objects — log","text":"x 32- 64-bit (32F 64F) Image object. target location results stored passing sum images function. can take 3 values: \"new\":new Image object created results   stored inside (default). \"self\":results stored back x (faster   destructive). Image object:results stored another   existing Image object. fast replace   content target. Note target   dimensions, bitdepth, number channels x, otherwise   error thrown. ... Ignored.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/log.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logarithm Generic for Image objects — log","text":"target=\"new\", function returns Image object. target=\"self\", function returns nothing modifies  x place. target Image object,  function returns nothing modifies Image object  place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/log.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Logarithm Generic for Image objects — log","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/log.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Logarithm Generic for Image objects — log","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) changeBitDepth(balloon, \"32F\", 1 , \"self\") log(balloon) #> Class: image.  #> Dimensions: 640x360. #> Type: BGR, 3-channel, 32F. #> GPU: FALSE."},{"path":"https://swarm-lab.github.io/Rvision/reference/matchKeypoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Match Keypoints — matchKeypoints","title":"Match Keypoints — matchKeypoints","text":"matchKeypoints matches keypoints detected two separate  images. useful find common features image registration,  instance.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/matchKeypoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match Keypoints — matchKeypoints","text":"","code":"matchKeypoints(   source,   target,   descriptor_matcher = \"BruteForce-Hamming\",   match_frac = 0.15 )"},{"path":"https://swarm-lab.github.io/Rvision/reference/matchKeypoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match Keypoints — matchKeypoints","text":"source, target Single-channel Image objects containing BRIEF descriptors source target images, produced ORBkeypoints. descriptor_matcher character string indicating type descriptor matcher use. can one followings: \"BruteForce\", \"BruteForce-L1\", \"BruteForce-Hamming\" (default), \"BruteForce-Hamming(2)\", \"FlannBased\". match_frac fraction top matches keep (default: 0.15).","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/matchKeypoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match Keypoints — matchKeypoints","text":"three-column matrix identities keypoints matched  source target images, distance (lower  distance indicates better match).","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/matchKeypoints.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Match Keypoints — matchKeypoints","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/matchKeypoints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Match Keypoints — matchKeypoints","text":"","code":"balloon1 <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) balloon2 <- image(system.file(\"sample_img/balloon2.png\", package = \"Rvision\")) kp1 <- ORBkeypoints(balloon1, n_features = 40000) kp2 <- ORBkeypoints(balloon2, n_features = 40000) matchKeypoints(kp1$descriptors, kp2$descriptors, match_frac = 1) #>        source target distance #>   [1,]      2     10       16 #>   [2,]      7     11       16 #>   [3,]      5      9       22 #>   [4,]     34     33       27 #>   [5,]     33     31       29 #>   [6,]     40     35       31 #>   [7,]     28     30       33 #>   [8,]     91    102       34 #>   [9,]     95    105       35 #>  [10,]      8     15       35 #>  [11,]     41     60       38 #>  [12,]     78     94       38 #>  [13,]     43     61       40 #>  [14,]     16     36       42 #>  [15,]     54     40       42 #>  [16,]     59     40       42 #>  [17,]      4     98       42 #>  [18,]     45     64       43 #>  [19,]     38     33       43 #>  [20,]     56     76       43 #>  [21,]     96      5       44 #>  [22,]     35     33       44 #>  [23,]     79     94       44 #>  [24,]     81    100       44 #>  [25,]      6     24       45 #>  [26,]     44     63       46 #>  [27,]     88    101       46 #>  [28,]     50     70       48 #>  [29,]     21     56       48 #>  [30,]    103     19       48 #>  [31,]     65     79       48 #>  [32,]     92     96       49 #>  [33,]     64     19       49 #>  [34,]     52     79       49 #>  [35,]     66     19       50 #>  [36,]     26     60       50 #>  [37,]     47     41       51 #>  [38,]     83     83       52 #>  [39,]     32     43       52 #>  [40,]     76     93       53 #>  [41,]     60     43       54 #>  [42,]     51     24       56 #>  [43,]     42     34       56 #>  [44,]     46     40       56 #>  [45,]     68      4       57 #>  [46,]     53     43       58 #>  [47,]     19     25       58 #>  [48,]     80     59       58 #>  [49,]     75     88       60 #>  [50,]     67     81       60 #>  [51,]     36    106       62 #>  [52,]     22     56       62 #>  [53,]     12     89       62 #>  [54,]     17     24       62 #>  [55,]     74     88       62 #>  [56,]     85     90       63 #>  [57,]     27    127       63 #>  [58,]     93    121       63 #>  [59,]     14     37       63 #>  [60,]    102     19       64 #>  [61,]    117    126       65 #>  [62,]     39     99       65 #>  [63,]    115     10       65 #>  [64,]     18     24       65 #>  [65,]     94     98       65 #>  [66,]     89     95       66 #>  [67,]     61     75       66 #>  [68,]     63     76       66 #>  [69,]      3     27       66 #>  [70,]     58     17       66 #>  [71,]     97     45       67 #>  [72,]     20     27       67 #>  [73,]     29     93       67 #>  [74,]     30     41       67 #>  [75,]     70     86       67 #>  [76,]    104     17       68 #>  [77,]     84     90       68 #>  [78,]     86     92       68 #>  [79,]     62     41       69 #>  [80,]    107     40       69 #>  [81,]     10     89       69 #>  [82,]     37     99       69 #>  [83,]     23     25       69 #>  [84,]     98     76       69 #>  [85,]     25     18       69 #>  [86,]     57     76       70 #>  [87,]    105     98       70 #>  [88,]     11     54       70 #>  [89,]     90     30       70 #>  [90,]     31     90       71 #>  [91,]     99     17       71 #>  [92,]    119     61       72 #>  [93,]      9     26       72 #>  [94,]    112     13       73 #>  [95,]    120     26       73 #>  [96,]     15     37       73 #>  [97,]     24     43       73 #>  [98,]     72     40       73 #>  [99,]      1     40       73 #> [100,]    118    127       74 #> [101,]    100     30       74 #> [102,]     48      4       74 #> [103,]     73     62       75 #> [104,]    106    127       75 #> [105,]     69     29       77 #> [106,]     55    100       77 #> [107,]    114     10       79 #> [108,]    116    125       79 #> [109,]     13    109       79 #> [110,]     49     77       80 #> [111,]     77     23       81 #> [112,]    111     35       83 #> [113,]    113      3       83 #> [114,]    108     17       84 #> [115,]     87     29       84 #> [116,]    109     93       85 #> [117,]     71     14       85 #> [118,]     82      1       87 #> [119,]    110    122       88 #> [120,]    101     33       89"},{"path":"https://swarm-lab.github.io/Rvision/reference/matchShapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare Two Shapes — matchShapes","title":"Compare Two Shapes — matchShapes","text":"matchShapes computes difference two shapes  using Hu invariants.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/matchShapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare Two Shapes — matchShapes","text":"","code":"matchShapes(x1, x2, method = \"I1\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/matchShapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare Two Shapes — matchShapes","text":"x1 Either Nx2 matrix X-Y coordinates polygon (e.g., contour produced findContours), single-channel Image object. x2 Either Nx2 matrix X-Y coordinates polygon (e.g., contour produced findContours), single-channel Image object. method comparison method compute difference two shapes (see Notes; default: \"I1\").","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/matchShapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare Two Shapes — matchShapes","text":"numerical value.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/matchShapes.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Compare Two Shapes — matchShapes","text":"available shape matching methods defined follows: \\(I_1(,B) = \\sum _{=1...7} \\left | \\frac{1}{m^A_i} - \\frac{1}{m^B_i} \\right |\\) \\(I_2(,B) = \\sum _{=1...7} \\left | m^A_i - m^B_i \\right |\\) \\(I_3(,B) = \\max _{=1...7} \\frac{ \\left| m^A_i - m^B_i \\right| }{ \\left| m^A_i \\right| }\\) \\(\\) denotes x1, \\(B\\) denotes x2. \\(m^A_i = \\mathrm{sign} (h^A_i) \\cdot \\log{h^A_i}\\) \\(m^B_i = \\mathrm{sign} (h^B_i) \\cdot \\log{h^B_i}\\) \\(h^A_i, h^B_i\\) Hu invariants \\(\\) \\(B\\), respectively.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/matchShapes.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compare Two Shapes — matchShapes","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/matchShapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare Two Shapes — matchShapes","text":"","code":"dots <- image(system.file(\"sample_img/dots.jpg\", package = \"Rvision\")) dots_gray <- changeColorSpace(dots, \"GRAY\") dots_bin <- dots_gray < 200 contours <- findContours(dots_bin) contour0 <- contours$contours[contours$contours[, 1] == 0, 2:3] contour1 <- contours$contours[contours$contours[, 1] == 1, 2:3] matchShapes(contour0, contour1) #> [1] 0.1503717"},{"path":"https://swarm-lab.github.io/Rvision/reference/matchTemplate.html","id":null,"dir":"Reference","previous_headings":"","what":"Template Matching — matchTemplate","title":"Template Matching — matchTemplate","text":"matchTemplate compares template overlapping  image regions using specified method. function finishes  comparison, best matches can found global minimums ( methods \"SQDIFF\" \"SQDIFF_NORMED\" used) maximums (methods  \"CCORR\", \"CCORR_NORMED\", \"CCOEFF\" \"CCOEF_NORMED\" used) using  minMaxLoc function.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/matchTemplate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Template Matching — matchTemplate","text":"","code":"matchTemplate(image, template, method, mask = NULL, target = \"new\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/matchTemplate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Template Matching — matchTemplate","text":"image Image object. template Image object  number channels bit depth image. template greater image dimension. method string indicating comparison method use. can following (see https://bit.ly/2RjELvJ full description comparison method): \"SQDIFF\" \"SQDIFF_NORMED\" \"CCORR\" \"CCORR_NORMED\" \"CCOEFF\" \"CCOEFF_NORMED\" mask Image object dimensions template (default: NULL). can either one channel number channels template. can 8U 32F Image object. 8U, interpreted binary mask,  meaning elements mask nonzero used kept unchanged  independent actual mask value. 32F, mask values used  weights. mask supported method='CCOEFF_NORMED'. target location results stored. can take 2 values: \"new\":new Image object created results   stored inside (default). Image object:results stored another   existing Image object. fast replace   content target. Note target must single-channel,   32F Image object (R-r+1) rows (C-c+1)   columns, CxR cxr dimensions image   template, respectively.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/matchTemplate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Template Matching — matchTemplate","text":"target=\"new\", function returns Image object (R-r+1) rows (C-c+1) columns, CxR cxr dimensions image template,  respectively. target Image object,  function returns nothing modifies Image object  place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/matchTemplate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Template Matching — matchTemplate","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/matchTemplate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Template Matching — matchTemplate","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) sub <- subImage(balloon, 290, 170, 150, 150) match <- matchTemplate(balloon, sub, method = \"SQDIFF\") mm <- minMaxLoc(match)"},{"path":"https://swarm-lab.github.io/Rvision/reference/mean.Rcpp_Image.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean Value of the Pixels in an Image — mean.Rcpp_Image","title":"Mean Value of the Pixels in an Image — mean.Rcpp_Image","text":"Returns mean pixel values Image  object. Image object one channel,  returns mean channel.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/mean.Rcpp_Image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean Value of the Pixels in an Image — mean.Rcpp_Image","text":"","code":"# S3 method for Rcpp_Image mean(x, ..., mask = NA)"},{"path":"https://swarm-lab.github.io/Rvision/reference/mean.Rcpp_Image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean Value of the Pixels in an Image — mean.Rcpp_Image","text":"x Image object. ... Unused moment. mask single-channel (GRAY) 8-bit (8U) Image object dimensions x. can used mask pixels considered calculating mean (pixels set 0 mask ignored mean calculation).","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/mean.Rcpp_Image.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mean Value of the Pixels in an Image — mean.Rcpp_Image","text":"numeric value (single-channel images) vector numeric  values (multi-channel images).","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/mean.Rcpp_Image.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Mean Value of the Pixels in an Image — mean.Rcpp_Image","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/mean.Rcpp_Image.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mean Value of the Pixels in an Image — mean.Rcpp_Image","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) mean(balloon) #>        B        G        R  #> 164.7881 149.6252 128.1291"},{"path":"https://swarm-lab.github.io/Rvision/reference/mean.list.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean of Images in a List — mean.list","title":"Mean of Images in a List — mean.list","text":"Returns pixelwise mean Image objects stored  list.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/mean.list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean of Images in a List — mean.list","text":"","code":"# S3 method for list mean(x, target = \"new\", ...)"},{"path":"https://swarm-lab.github.io/Rvision/reference/mean.list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean of Images in a List — mean.list","text":"x list Image objects. images must dimensions, number channels, bit depth. target location results stored passing list images function. can take 3 values: \"new\":new Image object created results   stored inside (default). Image object:results stored another   existing Image object. fast replace   content target. Note target   dimensions number channels images list, otherwise   error thrown. ... arguments passed summary methods. Unused x list images.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/mean.list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mean of Images in a List — mean.list","text":" target=\"new\", function returns Image object. target Image object, function  returns nothing modifies Image object place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/mean.list.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Mean of Images in a List — mean.list","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/mean.list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mean of Images in a List — mean.list","text":"","code":"balloon <- video(system.file(\"sample_vid/Balloon.mp4\", package = \"Rvision\")) #> Error: Could not open the video. img_list <- lapply(1:10, function(x) readNext(balloon)) #> Error in FUN(X[[i]], ...): object 'balloon' not found mean_img <- mean(img_list) #> Error in eval(expr, envir, enclos): object 'img_list' not found"},{"path":"https://swarm-lab.github.io/Rvision/reference/medianBlur.html","id":null,"dir":"Reference","previous_headings":"","what":"Blurs an Image Using a Median Filter — medianBlur","title":"Blurs an Image Using a Median Filter — medianBlur","text":"medianBlur smoothes image using median filter, .e.  value pixel replaced median value pixels  neighborhood.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/medianBlur.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Blurs an Image Using a Median Filter — medianBlur","text":"","code":"medianBlur(image, k_size = 5, target = \"new\", in_place = NULL)"},{"path":"https://swarm-lab.github.io/Rvision/reference/medianBlur.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Blurs an Image Using a Median Filter — medianBlur","text":"image 8-bit (8U) Image object. k_size half-size pixels kernel (default: 5). target location results stored. can take 3 values: \"new\":new Image object created results   stored inside (default). \"self\":results stored back image (faster   destructive). Image object:results stored another   existing Image object. fast replace   content image replace target. Note   target dimensions, number channels,   bit depth image, error may thrown. in_place Deprecated. Use target instead.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/medianBlur.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Blurs an Image Using a Median Filter — medianBlur","text":"target=\"new\", function returns Image object. target=\"self\", function returns nothing modifies  image place. target Image object,  function returns nothing modifies Image object  place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/medianBlur.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Blurs an Image Using a Median Filter — medianBlur","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/medianBlur.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Blurs an Image Using a Median Filter — medianBlur","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) balloon_blur <- medianBlur(balloon, 11)"},{"path":"https://swarm-lab.github.io/Rvision/reference/merge.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge Separate Channels into an Image — merge","title":"Merge Separate Channels into an Image — merge","text":"merge returns image combination grayscale  images corresponding single channels (green, blue, red, alpha).","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/merge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge Separate Channels into an Image — merge","text":"","code":"merge(x, target = \"new\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/merge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge Separate Channels into an Image — merge","text":"x list single channel (grayscale) Image objects. target location results stored. can take 2 values: \"new\":new Image object created results   stored inside (default). Image object:results stored another   existing Image object. fast replace   content target. Note target   dimensions images x number channels   number images x, error thrown.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/merge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge Separate Channels into an Image — merge","text":"target=\"new\", function returns Image object. target Image object, function  returns nothing modifies Image object place.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/merge.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Merge Separate Channels into an Image — merge","text":"Color images usually represented 3 channels (possibly 4)  following order: green (1), blue (2), red (3), possibly alpha (4).","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/merge.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Merge Separate Channels into an Image — merge","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/merge.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge Separate Channels into an Image — merge","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) balloon_chan <- split(balloon) balloon_merged <- merge(balloon_chan)"},{"path":"https://swarm-lab.github.io/Rvision/reference/min.Rcpp_Image.html","id":null,"dir":"Reference","previous_headings":"","what":"Maxima and Minima of an Image — min.Rcpp_Image","title":"Maxima and Minima of an Image — min.Rcpp_Image","text":"Returns maximum minimum pixel values  Image object. Image object  one channel, returns maximum minimum channel.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/min.Rcpp_Image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maxima and Minima of an Image — min.Rcpp_Image","text":"","code":"# S3 method for Rcpp_Image min(x, ...)  # S3 method for Rcpp_Image max(x, ...)  # S3 method for Rcpp_Image range(x, ...)"},{"path":"https://swarm-lab.github.io/Rvision/reference/min.Rcpp_Image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maxima and Minima of an Image — min.Rcpp_Image","text":"x Image object. ... Unused moment.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/min.Rcpp_Image.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maxima and Minima of an Image — min.Rcpp_Image","text":"min max return matrix 1 row nchan(x) columns. range returns matrix 2 rows nchan(x) columns.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/min.Rcpp_Image.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Maxima and Minima of an Image — min.Rcpp_Image","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/min.Rcpp_Image.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Maxima and Minima of an Image — min.Rcpp_Image","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) min(balloon) #>     B  G  R #> min 0 15 17 max(balloon) #>       B   G   R #> max 255 248 254"},{"path":"https://swarm-lab.github.io/Rvision/reference/minAreaRect.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a Rectangle Around a Set of 2D Points — minAreaRect","title":"Fit a Rectangle Around a Set of 2D Points — minAreaRect","text":"minAreaRect calculates minimum area enclosing  rectangle fits set 2D points.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/minAreaRect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a Rectangle Around a Set of 2D Points — minAreaRect","text":"","code":"minAreaRect(x, y)"},{"path":"https://swarm-lab.github.io/Rvision/reference/minAreaRect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a Rectangle Around a Set of 2D Points — minAreaRect","text":"x vector x coordinates. y vector y coordinates lenght x.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/minAreaRect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a Rectangle Around a Set of 2D Points — minAreaRect","text":"list containing height width (pixels) ellipse,  angle (degrees) main axis respect x axis,  x y coordinates center.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/minAreaRect.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit a Rectangle Around a Set of 2D Points — minAreaRect","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/minAreaRect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a Rectangle Around a Set of 2D Points — minAreaRect","text":"","code":"minAreaRect(rnorm(100), rnorm(100)) #> $angle #> [1] 9.195665 #>  #> $height #> [1] 4.968313 #>  #> $width #> [1] 4.189914 #>  #> $center #> [1] 0.08377385 0.24417567 #>"},{"path":"https://swarm-lab.github.io/Rvision/reference/minMaxLoc.html","id":null,"dir":"Reference","previous_headings":"","what":"Coordinates of the Maxima and Minima of an Image — minMaxLoc","title":"Coordinates of the Maxima and Minima of an Image — minMaxLoc","text":"minMaxLoc returns maximum minimum pixel values  Image object, well coordinates image.  Image object one channel, returns  values channel.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/minMaxLoc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coordinates of the Maxima and Minima of an Image — minMaxLoc","text":"","code":"minMaxLoc(x, mask = NULL)"},{"path":"https://swarm-lab.github.io/Rvision/reference/minMaxLoc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coordinates of the Maxima and Minima of an Image — minMaxLoc","text":"x Image object. mask single-channel (GRAY) 8-bit (8U) Image object dimensions x. can used mask pixels considered calculating minima maxima (pixels set 0 mask ignored calculation).","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/minMaxLoc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coordinates of the Maxima and Minima of an Image — minMaxLoc","text":"matrix (list matrices multi-channels images).","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/minMaxLoc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Coordinates of the Maxima and Minima of an Image — minMaxLoc","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/minMaxLoc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coordinates of the Maxima and Minima of an Image — minMaxLoc","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) minMaxLoc(balloon) #> $B #>     val   x   y #> min   0 406 295 #> max 255 306 304 #>  #> $G #>     val   x   y #> min  15 395 249 #> max 248 343 306 #>  #> $R #>     val   x   y #> min  17 398 244 #> max 254 343 307 #>"},{"path":"https://swarm-lab.github.io/Rvision/reference/moments.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Moments of a Shape — moments","title":"Calculate the Moments of a Shape — moments","text":"moments calculates moments third  order polygon rasterized shape.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/moments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Moments of a Shape — moments","text":"","code":"moments(x, binary = FALSE)"},{"path":"https://swarm-lab.github.io/Rvision/reference/moments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Moments of a Shape — moments","text":"x Either Nx2 matrix X-Y coordinates polygon (e.g., contour produced findContours), single-channel Image object. binary set TRUE (default: FALSE), non-zero image pixels treated 1's. parameter used images .","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/moments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Moments of a Shape — moments","text":"data frame 2 columns:  \"moment\": name moment. See Note . \"value\": value moment.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/moments.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate the Moments of a Shape — moments","text":"spatial moments \\(m_{ji}\\) computed :  $$m_{ji}= \\sum _{x,y} \\left ( \\texttt{contour} (x,y) \\cdot x^j \\cdot y^\\right )$$ central moments \\(\\mu_{ji}\\) computed :  $${\\mu_{ji}}= \\sum _{x,y} \\left ( \\texttt{contour} (x,y) \\cdot (x - \\bar{x} )^j \\cdot (y - \\bar{y} )^\\right )$$ \\((\\bar{x}, \\bar{y})\\) mass center:  $$\\bar{x} = \\frac{m_{10}}{m_{00}} , \\; \\bar{y} = \\frac{m_{01}}{m_{00}}$$ normalized central moments \\(\\eta_{ji}\\) computed :  $$\\eta_{ji}= \\frac{\\mu_{ji}}{m_{00}^{(+j)/2+1}} .$$","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/moments.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate the Moments of a Shape — moments","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/moments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the Moments of a Shape — moments","text":"","code":"dots <- image(system.file(\"sample_img/dots.jpg\", package = \"Rvision\")) dots_gray <- changeColorSpace(dots, \"GRAY\") dots_bin <- dots_gray < 200 contours <- findContours(dots_bin) contour0 <- contours$contours[contours$contours[, 1] == 0, 2:3] moments(contour0) #>    moment         value #> 1     m00  8.958500e+03 #> 2     m10  5.043943e+06 #> 3     m01  4.582793e+05 #> 4     m20  2.846367e+09 #> 5     m11  2.575802e+08 #> 6     m02  2.981324e+07 #> 7     m30  1.609871e+12 #> 8     m21  1.450999e+11 #> 9     m12  1.674067e+10 #> 10    m03  2.181108e+09 #> 11   mu20  6.454539e+06 #> 12   mu11 -4.467378e+05 #> 13   mu02  6.369592e+06 #> 14   mu30  3.439845e+05 #> 15   mu21 -5.259778e+06 #> 16   mu12  5.018900e+05 #> 17   mu03  4.303903e+06 #> 18   nu20  8.042566e-02 #> 19   nu11 -5.566499e-03 #> 20   nu02  7.936719e-02 #> 21   nu30  4.528461e-05 #> 22   nu21 -6.924352e-04 #> 23   nu12  6.607243e-05 #> 24   nu03  5.665970e-04"},{"path":"https://swarm-lab.github.io/Rvision/reference/morph.html","id":null,"dir":"Reference","previous_headings":"","what":"Morphological Operations — morph","title":"Morphological Operations — morph","text":"morph applies various morphological operations (see Note)  Image object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/morph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Morphological Operations — morph","text":"","code":"morph(   image,   operation,   kernel = NULL,   k_shape = \"rectangle\",   k_height = 5,   k_width = 5,   iterations = 1,   target = \"new\",   in_place = NULL )"},{"path":"https://swarm-lab.github.io/Rvision/reference/morph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Morphological Operations — morph","text":"image Image object. operation string corresponding name morphological operation apply image (see Note). kernel binary matrix. k_shape string corresponding shape kernel morphological operation (see Note; default: \"rectangle\"). Ignored custom kernel provided. k_height half-height pixels kernel. Ignored custom kernel provided. k_width half-width pixels kernel. Ignored custom kernel provided. iterations number times morphological operations applied. target location results stored. can take 3 values: \"new\":new Image object created results   stored inside (default). \"self\":results stored back image (faster   destructive). Image object:results stored another   existing Image object. fast replace   content image replace target. Note   target dimensions, number channels,   bit depth image, error thrown. in_place Deprecated. Use target instead.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/morph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Morphological Operations — morph","text":"target=\"new\", function returns Image object. target=\"self\", function returns nothing modifies  image place. target Image object,  function returns nothing modifies Image object  place.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/morph.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Morphological Operations — morph","text":"8 types morphological operations can achieved  function: \"erode\":point, returns minimum points     neighborhood, neighborhood defined kernel. \"dilate\":point, returns maximum points     neighborhood, neighborhood defined kernel. \"open\":erosion followed dilation. \"close\":dilation followed erosion. \"gradient\":difference dilation erosion     image. \"tophat\":difference input image opening. \"blackhat\":difference closing input image. \"hitmiss\":(1) erodes image kernel > 0; (2) erodes     complement image kernel < 0; (3) returns     intersection () step 1 step 2. hit--miss transform     basis advanced morphological operations thinning     pruning. 3 types predetermined kernel shapes can used  function custom kernel provided: \"rectangle\" (default): \"cross\" \"ellipse\"","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/morph.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Morphological Operations — morph","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/morph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Morphological Operations — morph","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) balloon_eroded <- morph(balloon, \"erode\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/newDisplay.html","id":null,"dir":"Reference","previous_headings":"","what":"Open New Image Display — newDisplay","title":"Open New Image Display — newDisplay","text":"newDisplay creates window display Image  objects.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/newDisplay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open New Image Display — newDisplay","text":"","code":"newDisplay(window_name = \"Display\", height = 480, width = 640)"},{"path":"https://swarm-lab.github.io/Rvision/reference/newDisplay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open New Image Display — newDisplay","text":"window_name character string representing name display window (default: \"Display\"). height integer representing height pixels display window. width integer representing width pixels display window.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/newDisplay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open New Image Display — newDisplay","text":"function return anything.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/newDisplay.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Open New Image Display — newDisplay","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/newDisplay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Open New Image Display — newDisplay","text":"","code":"if (FALSE) { newDisplay() }"},{"path":"https://swarm-lab.github.io/Rvision/reference/niBlackThreshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Niblack Thresholding — niBlackThreshold","title":"Niblack Thresholding — niBlackThreshold","text":"niBlackThreshold performs thresholding  Image object using Niblack's technique popular  variations inspired.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/niBlackThreshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Niblack Thresholding — niBlackThreshold","text":"","code":"niBlackThreshold(   image,   max_value = 255,   threshold_type = \"binary\",   block_size = 31,   k = 0.5,   method = \"Niblack\",   r = 128,   target = \"new\" )"},{"path":"https://swarm-lab.github.io/Rvision/reference/niBlackThreshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Niblack Thresholding — niBlackThreshold","text":"image 8-bit (8U) single-channel Image object. max_value Non-zero value assigned pixels condition satisfied (default: 255). used threshold_type set \"binary\" \"inverse\". threshold_type name threshold type use. can following: \"binary\":pixel replaced `max_value` value   threshold, zero otherwise (default). \"inverse\":pixel replaced zero value   threshold, `max_value` otherwise. \"truncate\":pixel replaced `threshold` value   threshold, unchanged otherwise. \"to_zero\":pixel replaced zero value  threshold, unchanged otherwise. \"to_zero_inverse\":pixel replaced zero value   threshold, unchanged otherwise. block_size Size pixel neighborhood used calculate threshold value pixel (default: 31). must odd number greater 1. k user-adjustable parameter used Niblack inspired techniques. Niblack, normally value 0 1 multiplied standard deviation subtracted mean. method string indicating binarization method use. can following: \"Niblack (default)\" \"Sauvola\" \"Wolf\" \"Nick\" r user-adjustable parameter used Sauvola's technique. dynamic range standard deviation. target location results stored. can take 3 values: \"new\":new Image object created results   stored inside (default). \"self\":results stored back image (faster   destructive). Image object:results stored another   existing Image object. fast replace   content image replace target. Note   target dimensions, number channels,   bit depth image, error may thrown.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/niBlackThreshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Niblack Thresholding — niBlackThreshold","text":"target=\"new\", function returns Image object. target=\"self\", function returns nothing modifies  image place. target Image object,  function returns nothing modifies Image object  place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/niBlackThreshold.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Niblack Thresholding — niBlackThreshold","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/niBlackThreshold.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Niblack Thresholding — niBlackThreshold","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) balloon_gray <- changeColorSpace(balloon, \"GRAY\") balloon_th <- niBlackThreshold(balloon_gray)"},{"path":"https://swarm-lab.github.io/Rvision/reference/nrow.Rcpp_Image.html","id":null,"dir":"Reference","previous_headings":"","what":"The Number of Rows/Columns/Channels of an Image — nrow.Rcpp_Image","title":"The Number of Rows/Columns/Channels of an Image — nrow.Rcpp_Image","text":"nrow, ncol nchan return number rows, columns  channels present Image object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/nrow.Rcpp_Image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Number of Rows/Columns/Channels of an Image — nrow.Rcpp_Image","text":"","code":"nrow.Rcpp_Image(x) ncol.Rcpp_Image(x) nchan(x)"},{"path":"https://swarm-lab.github.io/Rvision/reference/nrow.Rcpp_Image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Number of Rows/Columns/Channels of an Image — nrow.Rcpp_Image","text":"x Image object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/nrow.Rcpp_Image.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Number of Rows/Columns/Channels of an Image — nrow.Rcpp_Image","text":"numeric value.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/nrow.Rcpp_Image.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The Number of Rows/Columns/Channels of an Image — nrow.Rcpp_Image","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/nrow.Rcpp_Image.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Number of Rows/Columns/Channels of an Image — nrow.Rcpp_Image","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) nrow(balloon) #> [1] 360 ncol(balloon) #> [1] 640 nchan(balloon) #> [1] 3"},{"path":"https://swarm-lab.github.io/Rvision/reference/ones.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a One-Filled Image — ones","title":"Create a One-Filled Image — ones","text":"ones creates Image object filled  ones.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/ones.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a One-Filled Image — ones","text":"","code":"ones(nrow, ncol, nchan = 3, bitdepth = \"8U\", colorspace = \"BGR\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/ones.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a One-Filled Image — ones","text":"nrow integer indicating desired number rows image. ncol integer indicating desired number columns image. nchan integer indicating desired number channels image. bitdepth string indicating desired bit depth image. Options \"8U\" (default), \"8S\", \"16U\", \"16S\", \"32S\", \"32F\", \"64F\". colorspace string indicating desired color space image.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/ones.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a One-Filled Image — ones","text":"Image object.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/ones.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a One-Filled Image — ones","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/ones.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a One-Filled Image — ones","text":"","code":"one <- ones(100, 100)"},{"path":"https://swarm-lab.github.io/Rvision/reference/pget.html","id":null,"dir":"Reference","previous_headings":"","what":"Return Pixel Value at Specified Locations — pget","title":"Return Pixel Value at Specified Locations — pget","text":"pget returns values pixels specified x  y coordinates image.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/pget.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return Pixel Value at Specified Locations — pget","text":"","code":"pget(image, x, y)"},{"path":"https://swarm-lab.github.io/Rvision/reference/pget.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return Pixel Value at Specified Locations — pget","text":"image Image object. x vector x locations (columns) image. y vector y locations (rows) image.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/pget.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return Pixel Value at Specified Locations — pget","text":"matrix. number columns matrix depends number  channels image. row corresponds pair x/y coordinates.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/pget.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Return Pixel Value at Specified Locations — pget","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/pget.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return Pixel Value at Specified Locations — pget","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) pget(balloon, c(1, 100, 200), c(200, 100, 1)) #>   [,1] [,2] [,3] #> B  152  198  148 #> G  132  183  132 #> R  115  170  117"},{"path":"https://swarm-lab.github.io/Rvision/reference/pixelsInContour.html","id":null,"dir":"Reference","previous_headings":"","what":"Which Pixels are Inside a Contour — pixelsInContour","title":"Which Pixels are Inside a Contour — pixelsInContour","text":"pixelsInContour determines pixels inside  specified contour.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/pixelsInContour.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Which Pixels are Inside a Contour — pixelsInContour","text":"","code":"pixelsInContour(contours, id = NULL)"},{"path":"https://swarm-lab.github.io/Rvision/reference/pixelsInContour.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Which Pixels are Inside a Contour — pixelsInContour","text":"contours list two matrices produced findContours. id optional vector indicating identity specific contours run function.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/pixelsInContour.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Which Pixels are Inside a Contour — pixelsInContour","text":"matrix 3 columns:  \"id\": contour identity (indicates set points belonging     contour). \"x\": x coordinates points inside contour. \"y\": y coordinates points inside contour.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/pixelsInContour.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Which Pixels are Inside a Contour — pixelsInContour","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/pixelsInContour.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Which Pixels are Inside a Contour — pixelsInContour","text":"","code":"dots <- image(system.file(\"sample_img/dots.jpg\", package = \"Rvision\")) dots_gray <- changeColorSpace(dots, \"GRAY\") dots_bin <- dots_gray < 200 contours <- findContours(dots_bin) pixelsInContour(contours, id = c(3, 5)) #>          id    x   y #>     [1,]  3  700 150 #>     [2,]  3  701 150 #>     [3,]  3  702 150 #>     [4,]  3  703 150 #>     [5,]  3  704 150 #>     [6,]  3  705 150 #>     [7,]  3  693 149 #>     [8,]  3  694 149 #>     [9,]  3  695 149 #>    [10,]  3  696 149 #>    [11,]  3  697 149 #>    [12,]  3  698 149 #>    [13,]  3  699 149 #>    [14,]  3  700 149 #>    [15,]  3  701 149 #>    [16,]  3  702 149 #>    [17,]  3  703 149 #>    [18,]  3  704 149 #>    [19,]  3  705 149 #>    [20,]  3  706 149 #>    [21,]  3  707 149 #>    [22,]  3  708 149 #>    [23,]  3  709 149 #>    [24,]  3  710 149 #>    [25,]  3  711 149 #>    [26,]  3  712 149 #>    [27,]  3  713 149 #>    [28,]  3  690 148 #>    [29,]  3  691 148 #>    [30,]  3  692 148 #>    [31,]  3  693 148 #>    [32,]  3  694 148 #>    [33,]  3  695 148 #>    [34,]  3  696 148 #>    [35,]  3  697 148 #>    [36,]  3  698 148 #>    [37,]  3  699 148 #>    [38,]  3  700 148 #>    [39,]  3  701 148 #>    [40,]  3  702 148 #>    [41,]  3  703 148 #>    [42,]  3  704 148 #>    [43,]  3  705 148 #>    [44,]  3  706 148 #>    [45,]  3  707 148 #>    [46,]  3  708 148 #>    [47,]  3  709 148 #>    [48,]  3  710 148 #>    [49,]  3  711 148 #>    [50,]  3  712 148 #>    [51,]  3  713 148 #>    [52,]  3  714 148 #>    [53,]  3  715 148 #>    [54,]  3  716 148 #>    [55,]  3  687 147 #>    [56,]  3  688 147 #>    [57,]  3  689 147 #>    [58,]  3  690 147 #>    [59,]  3  691 147 #>    [60,]  3  692 147 #>    [61,]  3  693 147 #>    [62,]  3  694 147 #>    [63,]  3  695 147 #>    [64,]  3  696 147 #>    [65,]  3  697 147 #>    [66,]  3  698 147 #>    [67,]  3  699 147 #>    [68,]  3  700 147 #>    [69,]  3  701 147 #>    [70,]  3  702 147 #>    [71,]  3  703 147 #>    [72,]  3  704 147 #>    [73,]  3  705 147 #>    [74,]  3  706 147 #>    [75,]  3  707 147 #>    [76,]  3  708 147 #>    [77,]  3  709 147 #>    [78,]  3  710 147 #>    [79,]  3  711 147 #>    [80,]  3  712 147 #>    [81,]  3  713 147 #>    [82,]  3  714 147 #>    [83,]  3  715 147 #>    [84,]  3  716 147 #>    [85,]  3  717 147 #>    [86,]  3  718 147 #>    [87,]  3  719 147 #>    [88,]  3  684 146 #>    [89,]  3  685 146 #>    [90,]  3  686 146 #>    [91,]  3  687 146 #>    [92,]  3  688 146 #>    [93,]  3  689 146 #>    [94,]  3  690 146 #>    [95,]  3  691 146 #>    [96,]  3  692 146 #>    [97,]  3  693 146 #>    [98,]  3  694 146 #>    [99,]  3  695 146 #>   [100,]  3  696 146 #>   [101,]  3  697 146 #>   [102,]  3  698 146 #>   [103,]  3  699 146 #>   [104,]  3  700 146 #>   [105,]  3  701 146 #>   [106,]  3  702 146 #>   [107,]  3  703 146 #>   [108,]  3  704 146 #>   [109,]  3  705 146 #>   [110,]  3  706 146 #>   [111,]  3  707 146 #>   [112,]  3  708 146 #>   [113,]  3  709 146 #>   [114,]  3  710 146 #>   [115,]  3  711 146 #>   [116,]  3  712 146 #>   [117,]  3  713 146 #>   [118,]  3  714 146 #>   [119,]  3  715 146 #>   [120,]  3  716 146 #>   [121,]  3  717 146 #>   [122,]  3  718 146 #>   [123,]  3  719 146 #>   [124,]  3  720 146 #>   [125,]  3  721 146 #>   [126,]  3  682 145 #>   [127,]  3  683 145 #>   [128,]  3  684 145 #>   [129,]  3  685 145 #>   [130,]  3  686 145 #>   [131,]  3  687 145 #>   [132,]  3  688 145 #>   [133,]  3  689 145 #>   [134,]  3  690 145 #>   [135,]  3  691 145 #>   [136,]  3  692 145 #>   [137,]  3  693 145 #>   [138,]  3  694 145 #>   [139,]  3  695 145 #>   [140,]  3  696 145 #>   [141,]  3  697 145 #>   [142,]  3  698 145 #>   [143,]  3  699 145 #>   [144,]  3  700 145 #>   [145,]  3  701 145 #>   [146,]  3  702 145 #>   [147,]  3  703 145 #>   [148,]  3  704 145 #>   [149,]  3  705 145 #>   [150,]  3  706 145 #>   [151,]  3  707 145 #>   [152,]  3  708 145 #>   [153,]  3  709 145 #>   [154,]  3  710 145 #>   [155,]  3  711 145 #>   [156,]  3  712 145 #>   [157,]  3  713 145 #>   [158,]  3  714 145 #>   [159,]  3  715 145 #>   [160,]  3  716 145 #>   [161,]  3  717 145 #>   [162,]  3  718 145 #>   [163,]  3  719 145 #>   [164,]  3  720 145 #>   [165,]  3  721 145 #>   [166,]  3  722 145 #>   [167,]  3  723 145 #>   [168,]  3  724 145 #>   [169,]  3  681 144 #>   [170,]  3  682 144 #>   [171,]  3  683 144 #>   [172,]  3  684 144 #>   [173,]  3  685 144 #>   [174,]  3  686 144 #>   [175,]  3  687 144 #>   [176,]  3  688 144 #>   [177,]  3  689 144 #>   [178,]  3  690 144 #>   [179,]  3  691 144 #>   [180,]  3  692 144 #>   [181,]  3  693 144 #>   [182,]  3  694 144 #>   [183,]  3  695 144 #>   [184,]  3  696 144 #>   [185,]  3  697 144 #>   [186,]  3  698 144 #>   [187,]  3  699 144 #>   [188,]  3  700 144 #>   [189,]  3  701 144 #>   [190,]  3  702 144 #>   [191,]  3  703 144 #>   [192,]  3  704 144 #>   [193,]  3  705 144 #>   [194,]  3  706 144 #>   [195,]  3  707 144 #>   [196,]  3  708 144 #>   [197,]  3  709 144 #>   [198,]  3  710 144 #>   [199,]  3  711 144 #>   [200,]  3  712 144 #>   [201,]  3  713 144 #>   [202,]  3  714 144 #>   [203,]  3  715 144 #>   [204,]  3  716 144 #>   [205,]  3  717 144 #>   [206,]  3  718 144 #>   [207,]  3  719 144 #>   [208,]  3  720 144 #>   [209,]  3  721 144 #>   [210,]  3  722 144 #>   [211,]  3  723 144 #>   [212,]  3  724 144 #>   [213,]  3  725 144 #>   [214,]  3  726 144 #>   [215,]  3  679 143 #>   [216,]  3  680 143 #>   [217,]  3  681 143 #>   [218,]  3  682 143 #>   [219,]  3  683 143 #>   [220,]  3  684 143 #>   [221,]  3  685 143 #>   [222,]  3  686 143 #>   [223,]  3  687 143 #>   [224,]  3  688 143 #>   [225,]  3  689 143 #>   [226,]  3  690 143 #>   [227,]  3  691 143 #>   [228,]  3  692 143 #>   [229,]  3  693 143 #>   [230,]  3  694 143 #>   [231,]  3  695 143 #>   [232,]  3  696 143 #>   [233,]  3  697 143 #>   [234,]  3  698 143 #>   [235,]  3  699 143 #>   [236,]  3  700 143 #>   [237,]  3  701 143 #>   [238,]  3  702 143 #>   [239,]  3  703 143 #>   [240,]  3  704 143 #>   [241,]  3  705 143 #>   [242,]  3  706 143 #>   [243,]  3  707 143 #>   [244,]  3  708 143 #>   [245,]  3  709 143 #>   [246,]  3  710 143 #>   [247,]  3  711 143 #>   [248,]  3  712 143 #>   [249,]  3  713 143 #>   [250,]  3  714 143 #>   [251,]  3  715 143 #>   [252,]  3  716 143 #>   [253,]  3  717 143 #>   [254,]  3  718 143 #>   [255,]  3  719 143 #>   [256,]  3  720 143 #>   [257,]  3  721 143 #>   [258,]  3  722 143 #>   [259,]  3  723 143 #>   [260,]  3  724 143 #>   [261,]  3  725 143 #>   [262,]  3  726 143 #>   [263,]  3  727 143 #>   [264,]  3  677 142 #>   [265,]  3  678 142 #>   [266,]  3  679 142 #>   [267,]  3  680 142 #>   [268,]  3  681 142 #>   [269,]  3  682 142 #>   [270,]  3  683 142 #>   [271,]  3  684 142 #>   [272,]  3  685 142 #>   [273,]  3  686 142 #>   [274,]  3  687 142 #>   [275,]  3  688 142 #>   [276,]  3  689 142 #>   [277,]  3  690 142 #>   [278,]  3  691 142 #>   [279,]  3  692 142 #>   [280,]  3  693 142 #>   [281,]  3  694 142 #>   [282,]  3  695 142 #>   [283,]  3  696 142 #>   [284,]  3  697 142 #>   [285,]  3  698 142 #>   [286,]  3  699 142 #>   [287,]  3  700 142 #>   [288,]  3  701 142 #>   [289,]  3  702 142 #>   [290,]  3  703 142 #>   [291,]  3  704 142 #>   [292,]  3  705 142 #>   [293,]  3  706 142 #>   [294,]  3  707 142 #>   [295,]  3  708 142 #>   [296,]  3  709 142 #>   [297,]  3  710 142 #>   [298,]  3  711 142 #>   [299,]  3  712 142 #>   [300,]  3  713 142 #>   [301,]  3  714 142 #>   [302,]  3  715 142 #>   [303,]  3  716 142 #>   [304,]  3  717 142 #>   [305,]  3  718 142 #>   [306,]  3  719 142 #>   [307,]  3  720 142 #>   [308,]  3  721 142 #>   [309,]  3  722 142 #>   [310,]  3  723 142 #>   [311,]  3  724 142 #>   [312,]  3  725 142 #>   [313,]  3  726 142 #>   [314,]  3  727 142 #>   [315,]  3  728 142 #>   [316,]  3  729 142 #>   [317,]  3  676 141 #>   [318,]  3  677 141 #>   [319,]  3  678 141 #>   [320,]  3  679 141 #>   [321,]  3  680 141 #>   [322,]  3  681 141 #>   [323,]  3  682 141 #>   [324,]  3  683 141 #>   [325,]  3  684 141 #>   [326,]  3  685 141 #>   [327,]  3  686 141 #>   [328,]  3  687 141 #>   [329,]  3  688 141 #>   [330,]  3  689 141 #>   [331,]  3  690 141 #>   [332,]  3  691 141 #>   [333,]  3  692 141 #>   [334,]  3  693 141 #>   [335,]  3  694 141 #>   [336,]  3  695 141 #>   [337,]  3  696 141 #>   [338,]  3  697 141 #>   [339,]  3  698 141 #>   [340,]  3  699 141 #>   [341,]  3  700 141 #>   [342,]  3  701 141 #>   [343,]  3  702 141 #>   [344,]  3  703 141 #>   [345,]  3  704 141 #>   [346,]  3  705 141 #>   [347,]  3  706 141 #>   [348,]  3  707 141 #>   [349,]  3  708 141 #>   [350,]  3  709 141 #>   [351,]  3  710 141 #>   [352,]  3  711 141 #>   [353,]  3  712 141 #>   [354,]  3  713 141 #>   [355,]  3  714 141 #>   [356,]  3  715 141 #>   [357,]  3  716 141 #>   [358,]  3  717 141 #>   [359,]  3  718 141 #>   [360,]  3  719 141 #>   [361,]  3  720 141 #>   [362,]  3  721 141 #>   [363,]  3  722 141 #>   [364,]  3  723 141 #>   [365,]  3  724 141 #>   [366,]  3  725 141 #>   [367,]  3  726 141 #>   [368,]  3  727 141 #>   [369,]  3  728 141 #>   [370,]  3  729 141 #>   [371,]  3  730 141 #>   [372,]  3  675 140 #>   [373,]  3  676 140 #>   [374,]  3  677 140 #>   [375,]  3  678 140 #>   [376,]  3  679 140 #>   [377,]  3  680 140 #>   [378,]  3  681 140 #>   [379,]  3  682 140 #>   [380,]  3  683 140 #>   [381,]  3  684 140 #>   [382,]  3  685 140 #>   [383,]  3  686 140 #>   [384,]  3  687 140 #>   [385,]  3  688 140 #>   [386,]  3  689 140 #>   [387,]  3  690 140 #>   [388,]  3  691 140 #>   [389,]  3  692 140 #>   [390,]  3  693 140 #>   [391,]  3  694 140 #>   [392,]  3  695 140 #>   [393,]  3  696 140 #>   [394,]  3  697 140 #>   [395,]  3  698 140 #>   [396,]  3  699 140 #>   [397,]  3  700 140 #>   [398,]  3  701 140 #>   [399,]  3  702 140 #>   [400,]  3  703 140 #>   [401,]  3  704 140 #>   [402,]  3  705 140 #>   [403,]  3  706 140 #>   [404,]  3  707 140 #>   [405,]  3  708 140 #>   [406,]  3  709 140 #>   [407,]  3  710 140 #>   [408,]  3  711 140 #>   [409,]  3  712 140 #>   [410,]  3  713 140 #>   [411,]  3  714 140 #>   [412,]  3  715 140 #>   [413,]  3  716 140 #>   [414,]  3  717 140 #>   [415,]  3  718 140 #>   [416,]  3  719 140 #>   [417,]  3  720 140 #>   [418,]  3  721 140 #>   [419,]  3  722 140 #>   [420,]  3  723 140 #>   [421,]  3  724 140 #>   [422,]  3  725 140 #>   [423,]  3  726 140 #>   [424,]  3  727 140 #>   [425,]  3  728 140 #>   [426,]  3  729 140 #>   [427,]  3  730 140 #>   [428,]  3  731 140 #>   [429,]  3  732 140 #>   [430,]  3  673 139 #>   [431,]  3  674 139 #>   [432,]  3  675 139 #>   [433,]  3  676 139 #>   [434,]  3  677 139 #>   [435,]  3  678 139 #>   [436,]  3  679 139 #>   [437,]  3  680 139 #>   [438,]  3  681 139 #>   [439,]  3  682 139 #>   [440,]  3  683 139 #>   [441,]  3  684 139 #>   [442,]  3  685 139 #>   [443,]  3  686 139 #>   [444,]  3  687 139 #>   [445,]  3  688 139 #>   [446,]  3  689 139 #>   [447,]  3  690 139 #>   [448,]  3  691 139 #>   [449,]  3  692 139 #>   [450,]  3  693 139 #>   [451,]  3  694 139 #>   [452,]  3  695 139 #>   [453,]  3  696 139 #>   [454,]  3  697 139 #>   [455,]  3  698 139 #>   [456,]  3  699 139 #>   [457,]  3  700 139 #>   [458,]  3  701 139 #>   [459,]  3  702 139 #>   [460,]  3  703 139 #>   [461,]  3  704 139 #>   [462,]  3  705 139 #>   [463,]  3  706 139 #>   [464,]  3  707 139 #>   [465,]  3  708 139 #>   [466,]  3  709 139 #>   [467,]  3  710 139 #>   [468,]  3  711 139 #>   [469,]  3  712 139 #>   [470,]  3  713 139 #>   [471,]  3  714 139 #>   [472,]  3  715 139 #>   [473,]  3  716 139 #>   [474,]  3  717 139 #>   [475,]  3  718 139 #>   [476,]  3  719 139 #>   [477,]  3  720 139 #>   [478,]  3  721 139 #>   [479,]  3  722 139 #>   [480,]  3  723 139 #>   [481,]  3  724 139 #>   [482,]  3  725 139 #>   [483,]  3  726 139 #>   [484,]  3  727 139 #>   [485,]  3  728 139 #>   [486,]  3  729 139 #>   [487,]  3  730 139 #>   [488,]  3  731 139 #>   [489,]  3  732 139 #>   [490,]  3  733 139 #>   [491,]  3  672 138 #>   [492,]  3  673 138 #>   [493,]  3  674 138 #>   [494,]  3  675 138 #>   [495,]  3  676 138 #>   [496,]  3  677 138 #>   [497,]  3  678 138 #>   [498,]  3  679 138 #>   [499,]  3  680 138 #>   [500,]  3  681 138 #>   [501,]  3  682 138 #>   [502,]  3  683 138 #>   [503,]  3  684 138 #>   [504,]  3  685 138 #>   [505,]  3  686 138 #>   [506,]  3  687 138 #>   [507,]  3  688 138 #>   [508,]  3  689 138 #>   [509,]  3  690 138 #>   [510,]  3  691 138 #>   [511,]  3  692 138 #>   [512,]  3  693 138 #>   [513,]  3  694 138 #>   [514,]  3  695 138 #>   [515,]  3  696 138 #>   [516,]  3  697 138 #>   [517,]  3  698 138 #>   [518,]  3  699 138 #>   [519,]  3  700 138 #>   [520,]  3  701 138 #>   [521,]  3  702 138 #>   [522,]  3  703 138 #>   [523,]  3  704 138 #>   [524,]  3  705 138 #>   [525,]  3  706 138 #>   [526,]  3  707 138 #>   [527,]  3  708 138 #>   [528,]  3  709 138 #>   [529,]  3  710 138 #>   [530,]  3  711 138 #>   [531,]  3  712 138 #>   [532,]  3  713 138 #>   [533,]  3  714 138 #>   [534,]  3  715 138 #>   [535,]  3  716 138 #>   [536,]  3  717 138 #>   [537,]  3  718 138 #>   [538,]  3  719 138 #>   [539,]  3  720 138 #>   [540,]  3  721 138 #>   [541,]  3  722 138 #>   [542,]  3  723 138 #>   [543,]  3  724 138 #>   [544,]  3  725 138 #>   [545,]  3  726 138 #>   [546,]  3  727 138 #>   [547,]  3  728 138 #>   [548,]  3  729 138 #>   [549,]  3  730 138 #>   [550,]  3  731 138 #>   [551,]  3  732 138 #>   [552,]  3  733 138 #>   [553,]  3  734 138 #>   [554,]  3  671 137 #>   [555,]  3  672 137 #>   [556,]  3  673 137 #>   [557,]  3  674 137 #>   [558,]  3  675 137 #>   [559,]  3  676 137 #>   [560,]  3  677 137 #>   [561,]  3  678 137 #>   [562,]  3  679 137 #>   [563,]  3  680 137 #>   [564,]  3  681 137 #>   [565,]  3  682 137 #>   [566,]  3  683 137 #>   [567,]  3  684 137 #>   [568,]  3  685 137 #>   [569,]  3  686 137 #>   [570,]  3  687 137 #>   [571,]  3  688 137 #>   [572,]  3  689 137 #>   [573,]  3  690 137 #>   [574,]  3  691 137 #>   [575,]  3  692 137 #>   [576,]  3  693 137 #>   [577,]  3  694 137 #>   [578,]  3  695 137 #>   [579,]  3  696 137 #>   [580,]  3  697 137 #>   [581,]  3  698 137 #>   [582,]  3  699 137 #>   [583,]  3  700 137 #>   [584,]  3  701 137 #>   [585,]  3  702 137 #>   [586,]  3  703 137 #>   [587,]  3  704 137 #>   [588,]  3  705 137 #>   [589,]  3  706 137 #>   [590,]  3  707 137 #>   [591,]  3  708 137 #>   [592,]  3  709 137 #>   [593,]  3  710 137 #>   [594,]  3  711 137 #>   [595,]  3  712 137 #>   [596,]  3  713 137 #>   [597,]  3  714 137 #>   [598,]  3  715 137 #>   [599,]  3  716 137 #>   [600,]  3  717 137 #>   [601,]  3  718 137 #>   [602,]  3  719 137 #>   [603,]  3  720 137 #>   [604,]  3  721 137 #>   [605,]  3  722 137 #>   [606,]  3  723 137 #>   [607,]  3  724 137 #>   [608,]  3  725 137 #>   [609,]  3  726 137 #>   [610,]  3  727 137 #>   [611,]  3  728 137 #>   [612,]  3  729 137 #>   [613,]  3  730 137 #>   [614,]  3  731 137 #>   [615,]  3  732 137 #>   [616,]  3  733 137 #>   [617,]  3  734 137 #>   [618,]  3  735 137 #>   [619,]  3  670 136 #>   [620,]  3  671 136 #>   [621,]  3  672 136 #>   [622,]  3  673 136 #>   [623,]  3  674 136 #>   [624,]  3  675 136 #>   [625,]  3  676 136 #>   [626,]  3  677 136 #>   [627,]  3  678 136 #>   [628,]  3  679 136 #>   [629,]  3  680 136 #>   [630,]  3  681 136 #>   [631,]  3  682 136 #>   [632,]  3  683 136 #>   [633,]  3  684 136 #>   [634,]  3  685 136 #>   [635,]  3  686 136 #>   [636,]  3  687 136 #>   [637,]  3  688 136 #>   [638,]  3  689 136 #>   [639,]  3  690 136 #>   [640,]  3  691 136 #>   [641,]  3  692 136 #>   [642,]  3  693 136 #>   [643,]  3  694 136 #>   [644,]  3  695 136 #>   [645,]  3  696 136 #>   [646,]  3  697 136 #>   [647,]  3  698 136 #>   [648,]  3  699 136 #>   [649,]  3  700 136 #>   [650,]  3  701 136 #>   [651,]  3  702 136 #>   [652,]  3  703 136 #>   [653,]  3  704 136 #>   [654,]  3  705 136 #>   [655,]  3  706 136 #>   [656,]  3  707 136 #>   [657,]  3  708 136 #>   [658,]  3  709 136 #>   [659,]  3  710 136 #>   [660,]  3  711 136 #>   [661,]  3  712 136 #>   [662,]  3  713 136 #>   [663,]  3  714 136 #>   [664,]  3  715 136 #>   [665,]  3  716 136 #>   [666,]  3  717 136 #>   [667,]  3  718 136 #>   [668,]  3  719 136 #>   [669,]  3  720 136 #>   [670,]  3  721 136 #>   [671,]  3  722 136 #>   [672,]  3  723 136 #>   [673,]  3  724 136 #>   [674,]  3  725 136 #>   [675,]  3  726 136 #>   [676,]  3  727 136 #>   [677,]  3  728 136 #>   [678,]  3  729 136 #>   [679,]  3  730 136 #>   [680,]  3  731 136 #>   [681,]  3  732 136 #>   [682,]  3  733 136 #>   [683,]  3  734 136 #>   [684,]  3  735 136 #>   [685,]  3  736 136 #>   [686,]  3  669 135 #>   [687,]  3  670 135 #>   [688,]  3  671 135 #>   [689,]  3  672 135 #>   [690,]  3  673 135 #>   [691,]  3  674 135 #>   [692,]  3  675 135 #>   [693,]  3  676 135 #>   [694,]  3  677 135 #>   [695,]  3  678 135 #>   [696,]  3  679 135 #>   [697,]  3  680 135 #>   [698,]  3  681 135 #>   [699,]  3  682 135 #>   [700,]  3  683 135 #>   [701,]  3  684 135 #>   [702,]  3  685 135 #>   [703,]  3  686 135 #>   [704,]  3  687 135 #>   [705,]  3  688 135 #>   [706,]  3  689 135 #>   [707,]  3  690 135 #>   [708,]  3  691 135 #>   [709,]  3  692 135 #>   [710,]  3  693 135 #>   [711,]  3  694 135 #>   [712,]  3  695 135 #>   [713,]  3  696 135 #>   [714,]  3  697 135 #>   [715,]  3  698 135 #>   [716,]  3  699 135 #>   [717,]  3  700 135 #>   [718,]  3  701 135 #>   [719,]  3  702 135 #>   [720,]  3  703 135 #>   [721,]  3  704 135 #>   [722,]  3  705 135 #>   [723,]  3  706 135 #>   [724,]  3  707 135 #>   [725,]  3  708 135 #>   [726,]  3  709 135 #>   [727,]  3  710 135 #>   [728,]  3  711 135 #>   [729,]  3  712 135 #>   [730,]  3  713 135 #>   [731,]  3  714 135 #>   [732,]  3  715 135 #>   [733,]  3  716 135 #>   [734,]  3  717 135 #>   [735,]  3  718 135 #>   [736,]  3  719 135 #>   [737,]  3  720 135 #>   [738,]  3  721 135 #>   [739,]  3  722 135 #>   [740,]  3  723 135 #>   [741,]  3  724 135 #>   [742,]  3  725 135 #>   [743,]  3  726 135 #>   [744,]  3  727 135 #>   [745,]  3  728 135 #>   [746,]  3  729 135 #>   [747,]  3  730 135 #>   [748,]  3  731 135 #>   [749,]  3  732 135 #>   [750,]  3  733 135 #>   [751,]  3  734 135 #>   [752,]  3  735 135 #>   [753,]  3  736 135 #>   [754,]  3  737 135 #>   [755,]  3  668 134 #>   [756,]  3  669 134 #>   [757,]  3  670 134 #>   [758,]  3  671 134 #>   [759,]  3  672 134 #>   [760,]  3  673 134 #>   [761,]  3  674 134 #>   [762,]  3  675 134 #>   [763,]  3  676 134 #>   [764,]  3  677 134 #>   [765,]  3  678 134 #>   [766,]  3  679 134 #>   [767,]  3  680 134 #>   [768,]  3  681 134 #>   [769,]  3  682 134 #>   [770,]  3  683 134 #>   [771,]  3  684 134 #>   [772,]  3  685 134 #>   [773,]  3  686 134 #>   [774,]  3  687 134 #>   [775,]  3  688 134 #>   [776,]  3  689 134 #>   [777,]  3  690 134 #>   [778,]  3  691 134 #>   [779,]  3  692 134 #>   [780,]  3  693 134 #>   [781,]  3  694 134 #>   [782,]  3  695 134 #>   [783,]  3  696 134 #>   [784,]  3  697 134 #>   [785,]  3  698 134 #>   [786,]  3  699 134 #>   [787,]  3  700 134 #>   [788,]  3  701 134 #>   [789,]  3  702 134 #>   [790,]  3  703 134 #>   [791,]  3  704 134 #>   [792,]  3  705 134 #>   [793,]  3  706 134 #>   [794,]  3  707 134 #>   [795,]  3  708 134 #>   [796,]  3  709 134 #>   [797,]  3  710 134 #>   [798,]  3  711 134 #>   [799,]  3  712 134 #>   [800,]  3  713 134 #>   [801,]  3  714 134 #>   [802,]  3  715 134 #>   [803,]  3  716 134 #>   [804,]  3  717 134 #>   [805,]  3  718 134 #>   [806,]  3  719 134 #>   [807,]  3  720 134 #>   [808,]  3  721 134 #>   [809,]  3  722 134 #>   [810,]  3  723 134 #>   [811,]  3  724 134 #>   [812,]  3  725 134 #>   [813,]  3  726 134 #>   [814,]  3  727 134 #>   [815,]  3  728 134 #>   [816,]  3  729 134 #>   [817,]  3  730 134 #>   [818,]  3  731 134 #>   [819,]  3  732 134 #>   [820,]  3  733 134 #>   [821,]  3  734 134 #>   [822,]  3  735 134 #>   [823,]  3  736 134 #>   [824,]  3  737 134 #>   [825,]  3  738 134 #>   [826,]  3  668 133 #>   [827,]  3  669 133 #>   [828,]  3  670 133 #>   [829,]  3  671 133 #>   [830,]  3  672 133 #>   [831,]  3  673 133 #>   [832,]  3  674 133 #>   [833,]  3  675 133 #>   [834,]  3  676 133 #>   [835,]  3  677 133 #>   [836,]  3  678 133 #>   [837,]  3  679 133 #>   [838,]  3  680 133 #>   [839,]  3  681 133 #>   [840,]  3  682 133 #>   [841,]  3  683 133 #>   [842,]  3  684 133 #>   [843,]  3  685 133 #>   [844,]  3  686 133 #>   [845,]  3  687 133 #>   [846,]  3  688 133 #>   [847,]  3  689 133 #>   [848,]  3  690 133 #>   [849,]  3  691 133 #>   [850,]  3  692 133 #>   [851,]  3  693 133 #>   [852,]  3  694 133 #>   [853,]  3  695 133 #>   [854,]  3  696 133 #>   [855,]  3  697 133 #>   [856,]  3  698 133 #>   [857,]  3  699 133 #>   [858,]  3  700 133 #>   [859,]  3  701 133 #>   [860,]  3  702 133 #>   [861,]  3  703 133 #>   [862,]  3  704 133 #>   [863,]  3  705 133 #>   [864,]  3  706 133 #>   [865,]  3  707 133 #>   [866,]  3  708 133 #>   [867,]  3  709 133 #>   [868,]  3  710 133 #>   [869,]  3  711 133 #>   [870,]  3  712 133 #>   [871,]  3  713 133 #>   [872,]  3  714 133 #>   [873,]  3  715 133 #>   [874,]  3  716 133 #>   [875,]  3  717 133 #>   [876,]  3  718 133 #>   [877,]  3  719 133 #>   [878,]  3  720 133 #>   [879,]  3  721 133 #>   [880,]  3  722 133 #>   [881,]  3  723 133 #>   [882,]  3  724 133 #>   [883,]  3  725 133 #>   [884,]  3  726 133 #>   [885,]  3  727 133 #>   [886,]  3  728 133 #>   [887,]  3  729 133 #>   [888,]  3  730 133 #>   [889,]  3  731 133 #>   [890,]  3  732 133 #>   [891,]  3  733 133 #>   [892,]  3  734 133 #>   [893,]  3  735 133 #>   [894,]  3  736 133 #>   [895,]  3  737 133 #>   [896,]  3  738 133 #>   [897,]  3  739 133 #>   [898,]  3  667 132 #>   [899,]  3  668 132 #>   [900,]  3  669 132 #>   [901,]  3  670 132 #>   [902,]  3  671 132 #>   [903,]  3  672 132 #>   [904,]  3  673 132 #>   [905,]  3  674 132 #>   [906,]  3  675 132 #>   [907,]  3  676 132 #>   [908,]  3  677 132 #>   [909,]  3  678 132 #>   [910,]  3  679 132 #>   [911,]  3  680 132 #>   [912,]  3  681 132 #>   [913,]  3  682 132 #>   [914,]  3  683 132 #>   [915,]  3  684 132 #>   [916,]  3  685 132 #>   [917,]  3  686 132 #>   [918,]  3  687 132 #>   [919,]  3  688 132 #>   [920,]  3  689 132 #>   [921,]  3  690 132 #>   [922,]  3  691 132 #>   [923,]  3  692 132 #>   [924,]  3  693 132 #>   [925,]  3  694 132 #>   [926,]  3  695 132 #>   [927,]  3  696 132 #>   [928,]  3  697 132 #>   [929,]  3  698 132 #>   [930,]  3  699 132 #>   [931,]  3  700 132 #>   [932,]  3  701 132 #>   [933,]  3  702 132 #>   [934,]  3  703 132 #>   [935,]  3  704 132 #>   [936,]  3  705 132 #>   [937,]  3  706 132 #>   [938,]  3  707 132 #>   [939,]  3  708 132 #>   [940,]  3  709 132 #>   [941,]  3  710 132 #>   [942,]  3  711 132 #>   [943,]  3  712 132 #>   [944,]  3  713 132 #>   [945,]  3  714 132 #>   [946,]  3  715 132 #>   [947,]  3  716 132 #>   [948,]  3  717 132 #>   [949,]  3  718 132 #>   [950,]  3  719 132 #>   [951,]  3  720 132 #>   [952,]  3  721 132 #>   [953,]  3  722 132 #>   [954,]  3  723 132 #>   [955,]  3  724 132 #>   [956,]  3  725 132 #>   [957,]  3  726 132 #>   [958,]  3  727 132 #>   [959,]  3  728 132 #>   [960,]  3  729 132 #>   [961,]  3  730 132 #>   [962,]  3  731 132 #>   [963,]  3  732 132 #>   [964,]  3  733 132 #>   [965,]  3  734 132 #>   [966,]  3  735 132 #>   [967,]  3  736 132 #>   [968,]  3  737 132 #>   [969,]  3  738 132 #>   [970,]  3  739 132 #>   [971,]  3  740 132 #>   [972,]  3  666 131 #>   [973,]  3  667 131 #>   [974,]  3  668 131 #>   [975,]  3  669 131 #>   [976,]  3  670 131 #>   [977,]  3  671 131 #>   [978,]  3  672 131 #>   [979,]  3  673 131 #>   [980,]  3  674 131 #>   [981,]  3  675 131 #>   [982,]  3  676 131 #>   [983,]  3  677 131 #>   [984,]  3  678 131 #>   [985,]  3  679 131 #>   [986,]  3  680 131 #>   [987,]  3  681 131 #>   [988,]  3  682 131 #>   [989,]  3  683 131 #>   [990,]  3  684 131 #>   [991,]  3  685 131 #>   [992,]  3  686 131 #>   [993,]  3  687 131 #>   [994,]  3  688 131 #>   [995,]  3  689 131 #>   [996,]  3  690 131 #>   [997,]  3  691 131 #>   [998,]  3  692 131 #>   [999,]  3  693 131 #>  [1000,]  3  694 131 #>  [1001,]  3  695 131 #>  [1002,]  3  696 131 #>  [1003,]  3  697 131 #>  [1004,]  3  698 131 #>  [1005,]  3  699 131 #>  [1006,]  3  700 131 #>  [1007,]  3  701 131 #>  [1008,]  3  702 131 #>  [1009,]  3  703 131 #>  [1010,]  3  704 131 #>  [1011,]  3  705 131 #>  [1012,]  3  706 131 #>  [1013,]  3  707 131 #>  [1014,]  3  708 131 #>  [1015,]  3  709 131 #>  [1016,]  3  710 131 #>  [1017,]  3  711 131 #>  [1018,]  3  712 131 #>  [1019,]  3  713 131 #>  [1020,]  3  714 131 #>  [1021,]  3  715 131 #>  [1022,]  3  716 131 #>  [1023,]  3  717 131 #>  [1024,]  3  718 131 #>  [1025,]  3  719 131 #>  [1026,]  3  720 131 #>  [1027,]  3  721 131 #>  [1028,]  3  722 131 #>  [1029,]  3  723 131 #>  [1030,]  3  724 131 #>  [1031,]  3  725 131 #>  [1032,]  3  726 131 #>  [1033,]  3  727 131 #>  [1034,]  3  728 131 #>  [1035,]  3  729 131 #>  [1036,]  3  730 131 #>  [1037,]  3  731 131 #>  [1038,]  3  732 131 #>  [1039,]  3  733 131 #>  [1040,]  3  734 131 #>  [1041,]  3  735 131 #>  [1042,]  3  736 131 #>  [1043,]  3  737 131 #>  [1044,]  3  738 131 #>  [1045,]  3  739 131 #>  [1046,]  3  740 131 #>  [1047,]  3  741 131 #>  [1048,]  3  665 130 #>  [1049,]  3  666 130 #>  [1050,]  3  667 130 #>  [1051,]  3  668 130 #>  [1052,]  3  669 130 #>  [1053,]  3  670 130 #>  [1054,]  3  671 130 #>  [1055,]  3  672 130 #>  [1056,]  3  673 130 #>  [1057,]  3  674 130 #>  [1058,]  3  675 130 #>  [1059,]  3  676 130 #>  [1060,]  3  677 130 #>  [1061,]  3  678 130 #>  [1062,]  3  679 130 #>  [1063,]  3  680 130 #>  [1064,]  3  681 130 #>  [1065,]  3  682 130 #>  [1066,]  3  683 130 #>  [1067,]  3  684 130 #>  [1068,]  3  685 130 #>  [1069,]  3  686 130 #>  [1070,]  3  687 130 #>  [1071,]  3  688 130 #>  [1072,]  3  689 130 #>  [1073,]  3  690 130 #>  [1074,]  3  691 130 #>  [1075,]  3  692 130 #>  [1076,]  3  693 130 #>  [1077,]  3  694 130 #>  [1078,]  3  695 130 #>  [1079,]  3  696 130 #>  [1080,]  3  697 130 #>  [1081,]  3  698 130 #>  [1082,]  3  699 130 #>  [1083,]  3  700 130 #>  [1084,]  3  701 130 #>  [1085,]  3  702 130 #>  [1086,]  3  703 130 #>  [1087,]  3  704 130 #>  [1088,]  3  705 130 #>  [1089,]  3  706 130 #>  [1090,]  3  707 130 #>  [1091,]  3  708 130 #>  [1092,]  3  709 130 #>  [1093,]  3  710 130 #>  [1094,]  3  711 130 #>  [1095,]  3  712 130 #>  [1096,]  3  713 130 #>  [1097,]  3  714 130 #>  [1098,]  3  715 130 #>  [1099,]  3  716 130 #>  [1100,]  3  717 130 #>  [1101,]  3  718 130 #>  [1102,]  3  719 130 #>  [1103,]  3  720 130 #>  [1104,]  3  721 130 #>  [1105,]  3  722 130 #>  [1106,]  3  723 130 #>  [1107,]  3  724 130 #>  [1108,]  3  725 130 #>  [1109,]  3  726 130 #>  [1110,]  3  727 130 #>  [1111,]  3  728 130 #>  [1112,]  3  729 130 #>  [1113,]  3  730 130 #>  [1114,]  3  731 130 #>  [1115,]  3  732 130 #>  [1116,]  3  733 130 #>  [1117,]  3  734 130 #>  [1118,]  3  735 130 #>  [1119,]  3  736 130 #>  [1120,]  3  737 130 #>  [1121,]  3  738 130 #>  [1122,]  3  739 130 #>  [1123,]  3  740 130 #>  [1124,]  3  741 130 #>  [1125,]  3  742 130 #>  [1126,]  3  665 129 #>  [1127,]  3  666 129 #>  [1128,]  3  667 129 #>  [1129,]  3  668 129 #>  [1130,]  3  669 129 #>  [1131,]  3  670 129 #>  [1132,]  3  671 129 #>  [1133,]  3  672 129 #>  [1134,]  3  673 129 #>  [1135,]  3  674 129 #>  [1136,]  3  675 129 #>  [1137,]  3  676 129 #>  [1138,]  3  677 129 #>  [1139,]  3  678 129 #>  [1140,]  3  679 129 #>  [1141,]  3  680 129 #>  [1142,]  3  681 129 #>  [1143,]  3  682 129 #>  [1144,]  3  683 129 #>  [1145,]  3  684 129 #>  [1146,]  3  685 129 #>  [1147,]  3  686 129 #>  [1148,]  3  687 129 #>  [1149,]  3  688 129 #>  [1150,]  3  689 129 #>  [1151,]  3  690 129 #>  [1152,]  3  691 129 #>  [1153,]  3  692 129 #>  [1154,]  3  693 129 #>  [1155,]  3  694 129 #>  [1156,]  3  695 129 #>  [1157,]  3  696 129 #>  [1158,]  3  697 129 #>  [1159,]  3  698 129 #>  [1160,]  3  699 129 #>  [1161,]  3  700 129 #>  [1162,]  3  701 129 #>  [1163,]  3  702 129 #>  [1164,]  3  703 129 #>  [1165,]  3  704 129 #>  [1166,]  3  705 129 #>  [1167,]  3  706 129 #>  [1168,]  3  707 129 #>  [1169,]  3  708 129 #>  [1170,]  3  709 129 #>  [1171,]  3  710 129 #>  [1172,]  3  711 129 #>  [1173,]  3  712 129 #>  [1174,]  3  713 129 #>  [1175,]  3  714 129 #>  [1176,]  3  715 129 #>  [1177,]  3  716 129 #>  [1178,]  3  717 129 #>  [1179,]  3  718 129 #>  [1180,]  3  719 129 #>  [1181,]  3  720 129 #>  [1182,]  3  721 129 #>  [1183,]  3  722 129 #>  [1184,]  3  723 129 #>  [1185,]  3  724 129 #>  [1186,]  3  725 129 #>  [1187,]  3  726 129 #>  [1188,]  3  727 129 #>  [1189,]  3  728 129 #>  [1190,]  3  729 129 #>  [1191,]  3  730 129 #>  [1192,]  3  731 129 #>  [1193,]  3  732 129 #>  [1194,]  3  733 129 #>  [1195,]  3  734 129 #>  [1196,]  3  735 129 #>  [1197,]  3  736 129 #>  [1198,]  3  737 129 #>  [1199,]  3  738 129 #>  [1200,]  3  739 129 #>  [1201,]  3  740 129 #>  [1202,]  3  741 129 #>  [1203,]  3  742 129 #>  [1204,]  3  743 129 #>  [1205,]  3  664 128 #>  [1206,]  3  665 128 #>  [1207,]  3  666 128 #>  [1208,]  3  667 128 #>  [1209,]  3  668 128 #>  [1210,]  3  669 128 #>  [1211,]  3  670 128 #>  [1212,]  3  671 128 #>  [1213,]  3  672 128 #>  [1214,]  3  673 128 #>  [1215,]  3  674 128 #>  [1216,]  3  675 128 #>  [1217,]  3  676 128 #>  [1218,]  3  677 128 #>  [1219,]  3  678 128 #>  [1220,]  3  679 128 #>  [1221,]  3  680 128 #>  [1222,]  3  681 128 #>  [1223,]  3  682 128 #>  [1224,]  3  683 128 #>  [1225,]  3  684 128 #>  [1226,]  3  685 128 #>  [1227,]  3  686 128 #>  [1228,]  3  687 128 #>  [1229,]  3  688 128 #>  [1230,]  3  689 128 #>  [1231,]  3  690 128 #>  [1232,]  3  691 128 #>  [1233,]  3  692 128 #>  [1234,]  3  693 128 #>  [1235,]  3  694 128 #>  [1236,]  3  695 128 #>  [1237,]  3  696 128 #>  [1238,]  3  697 128 #>  [1239,]  3  698 128 #>  [1240,]  3  699 128 #>  [1241,]  3  700 128 #>  [1242,]  3  701 128 #>  [1243,]  3  702 128 #>  [1244,]  3  703 128 #>  [1245,]  3  704 128 #>  [1246,]  3  705 128 #>  [1247,]  3  706 128 #>  [1248,]  3  707 128 #>  [1249,]  3  708 128 #>  [1250,]  3  709 128 #>  [1251,]  3  710 128 #>  [1252,]  3  711 128 #>  [1253,]  3  712 128 #>  [1254,]  3  713 128 #>  [1255,]  3  714 128 #>  [1256,]  3  715 128 #>  [1257,]  3  716 128 #>  [1258,]  3  717 128 #>  [1259,]  3  718 128 #>  [1260,]  3  719 128 #>  [1261,]  3  720 128 #>  [1262,]  3  721 128 #>  [1263,]  3  722 128 #>  [1264,]  3  723 128 #>  [1265,]  3  724 128 #>  [1266,]  3  725 128 #>  [1267,]  3  726 128 #>  [1268,]  3  727 128 #>  [1269,]  3  728 128 #>  [1270,]  3  729 128 #>  [1271,]  3  730 128 #>  [1272,]  3  731 128 #>  [1273,]  3  732 128 #>  [1274,]  3  733 128 #>  [1275,]  3  734 128 #>  [1276,]  3  735 128 #>  [1277,]  3  736 128 #>  [1278,]  3  737 128 #>  [1279,]  3  738 128 #>  [1280,]  3  739 128 #>  [1281,]  3  740 128 #>  [1282,]  3  741 128 #>  [1283,]  3  742 128 #>  [1284,]  3  743 128 #>  [1285,]  3  663 127 #>  [1286,]  3  664 127 #>  [1287,]  3  665 127 #>  [1288,]  3  666 127 #>  [1289,]  3  667 127 #>  [1290,]  3  668 127 #>  [1291,]  3  669 127 #>  [1292,]  3  670 127 #>  [1293,]  3  671 127 #>  [1294,]  3  672 127 #>  [1295,]  3  673 127 #>  [1296,]  3  674 127 #>  [1297,]  3  675 127 #>  [1298,]  3  676 127 #>  [1299,]  3  677 127 #>  [1300,]  3  678 127 #>  [1301,]  3  679 127 #>  [1302,]  3  680 127 #>  [1303,]  3  681 127 #>  [1304,]  3  682 127 #>  [1305,]  3  683 127 #>  [1306,]  3  684 127 #>  [1307,]  3  685 127 #>  [1308,]  3  686 127 #>  [1309,]  3  687 127 #>  [1310,]  3  688 127 #>  [1311,]  3  689 127 #>  [1312,]  3  690 127 #>  [1313,]  3  691 127 #>  [1314,]  3  692 127 #>  [1315,]  3  693 127 #>  [1316,]  3  694 127 #>  [1317,]  3  695 127 #>  [1318,]  3  696 127 #>  [1319,]  3  697 127 #>  [1320,]  3  698 127 #>  [1321,]  3  699 127 #>  [1322,]  3  700 127 #>  [1323,]  3  701 127 #>  [1324,]  3  702 127 #>  [1325,]  3  703 127 #>  [1326,]  3  704 127 #>  [1327,]  3  705 127 #>  [1328,]  3  706 127 #>  [1329,]  3  707 127 #>  [1330,]  3  708 127 #>  [1331,]  3  709 127 #>  [1332,]  3  710 127 #>  [1333,]  3  711 127 #>  [1334,]  3  712 127 #>  [1335,]  3  713 127 #>  [1336,]  3  714 127 #>  [1337,]  3  715 127 #>  [1338,]  3  716 127 #>  [1339,]  3  717 127 #>  [1340,]  3  718 127 #>  [1341,]  3  719 127 #>  [1342,]  3  720 127 #>  [1343,]  3  721 127 #>  [1344,]  3  722 127 #>  [1345,]  3  723 127 #>  [1346,]  3  724 127 #>  [1347,]  3  725 127 #>  [1348,]  3  726 127 #>  [1349,]  3  727 127 #>  [1350,]  3  728 127 #>  [1351,]  3  729 127 #>  [1352,]  3  730 127 #>  [1353,]  3  731 127 #>  [1354,]  3  732 127 #>  [1355,]  3  733 127 #>  [1356,]  3  734 127 #>  [1357,]  3  735 127 #>  [1358,]  3  736 127 #>  [1359,]  3  737 127 #>  [1360,]  3  738 127 #>  [1361,]  3  739 127 #>  [1362,]  3  740 127 #>  [1363,]  3  741 127 #>  [1364,]  3  742 127 #>  [1365,]  3  743 127 #>  [1366,]  3  744 127 #>  [1367,]  3  663 126 #>  [1368,]  3  664 126 #>  [1369,]  3  665 126 #>  [1370,]  3  666 126 #>  [1371,]  3  667 126 #>  [1372,]  3  668 126 #>  [1373,]  3  669 126 #>  [1374,]  3  670 126 #>  [1375,]  3  671 126 #>  [1376,]  3  672 126 #>  [1377,]  3  673 126 #>  [1378,]  3  674 126 #>  [1379,]  3  675 126 #>  [1380,]  3  676 126 #>  [1381,]  3  677 126 #>  [1382,]  3  678 126 #>  [1383,]  3  679 126 #>  [1384,]  3  680 126 #>  [1385,]  3  681 126 #>  [1386,]  3  682 126 #>  [1387,]  3  683 126 #>  [1388,]  3  684 126 #>  [1389,]  3  685 126 #>  [1390,]  3  686 126 #>  [1391,]  3  687 126 #>  [1392,]  3  688 126 #>  [1393,]  3  689 126 #>  [1394,]  3  690 126 #>  [1395,]  3  691 126 #>  [1396,]  3  692 126 #>  [1397,]  3  693 126 #>  [1398,]  3  694 126 #>  [1399,]  3  695 126 #>  [1400,]  3  696 126 #>  [1401,]  3  697 126 #>  [1402,]  3  698 126 #>  [1403,]  3  699 126 #>  [1404,]  3  700 126 #>  [1405,]  3  701 126 #>  [1406,]  3  702 126 #>  [1407,]  3  703 126 #>  [1408,]  3  704 126 #>  [1409,]  3  705 126 #>  [1410,]  3  706 126 #>  [1411,]  3  707 126 #>  [1412,]  3  708 126 #>  [1413,]  3  709 126 #>  [1414,]  3  710 126 #>  [1415,]  3  711 126 #>  [1416,]  3  712 126 #>  [1417,]  3  713 126 #>  [1418,]  3  714 126 #>  [1419,]  3  715 126 #>  [1420,]  3  716 126 #>  [1421,]  3  717 126 #>  [1422,]  3  718 126 #>  [1423,]  3  719 126 #>  [1424,]  3  720 126 #>  [1425,]  3  721 126 #>  [1426,]  3  722 126 #>  [1427,]  3  723 126 #>  [1428,]  3  724 126 #>  [1429,]  3  725 126 #>  [1430,]  3  726 126 #>  [1431,]  3  727 126 #>  [1432,]  3  728 126 #>  [1433,]  3  729 126 #>  [1434,]  3  730 126 #>  [1435,]  3  731 126 #>  [1436,]  3  732 126 #>  [1437,]  3  733 126 #>  [1438,]  3  734 126 #>  [1439,]  3  735 126 #>  [1440,]  3  736 126 #>  [1441,]  3  737 126 #>  [1442,]  3  738 126 #>  [1443,]  3  739 126 #>  [1444,]  3  740 126 #>  [1445,]  3  741 126 #>  [1446,]  3  742 126 #>  [1447,]  3  743 126 #>  [1448,]  3  744 126 #>  [1449,]  3  745 126 #>  [1450,]  3  662 125 #>  [1451,]  3  663 125 #>  [1452,]  3  664 125 #>  [1453,]  3  665 125 #>  [1454,]  3  666 125 #>  [1455,]  3  667 125 #>  [1456,]  3  668 125 #>  [1457,]  3  669 125 #>  [1458,]  3  670 125 #>  [1459,]  3  671 125 #>  [1460,]  3  672 125 #>  [1461,]  3  673 125 #>  [1462,]  3  674 125 #>  [1463,]  3  675 125 #>  [1464,]  3  676 125 #>  [1465,]  3  677 125 #>  [1466,]  3  678 125 #>  [1467,]  3  679 125 #>  [1468,]  3  680 125 #>  [1469,]  3  681 125 #>  [1470,]  3  682 125 #>  [1471,]  3  683 125 #>  [1472,]  3  684 125 #>  [1473,]  3  685 125 #>  [1474,]  3  686 125 #>  [1475,]  3  687 125 #>  [1476,]  3  688 125 #>  [1477,]  3  689 125 #>  [1478,]  3  690 125 #>  [1479,]  3  691 125 #>  [1480,]  3  692 125 #>  [1481,]  3  693 125 #>  [1482,]  3  694 125 #>  [1483,]  3  695 125 #>  [1484,]  3  696 125 #>  [1485,]  3  697 125 #>  [1486,]  3  698 125 #>  [1487,]  3  699 125 #>  [1488,]  3  700 125 #>  [1489,]  3  701 125 #>  [1490,]  3  702 125 #>  [1491,]  3  703 125 #>  [1492,]  3  704 125 #>  [1493,]  3  705 125 #>  [1494,]  3  706 125 #>  [1495,]  3  707 125 #>  [1496,]  3  708 125 #>  [1497,]  3  709 125 #>  [1498,]  3  710 125 #>  [1499,]  3  711 125 #>  [1500,]  3  712 125 #>  [1501,]  3  713 125 #>  [1502,]  3  714 125 #>  [1503,]  3  715 125 #>  [1504,]  3  716 125 #>  [1505,]  3  717 125 #>  [1506,]  3  718 125 #>  [1507,]  3  719 125 #>  [1508,]  3  720 125 #>  [1509,]  3  721 125 #>  [1510,]  3  722 125 #>  [1511,]  3  723 125 #>  [1512,]  3  724 125 #>  [1513,]  3  725 125 #>  [1514,]  3  726 125 #>  [1515,]  3  727 125 #>  [1516,]  3  728 125 #>  [1517,]  3  729 125 #>  [1518,]  3  730 125 #>  [1519,]  3  731 125 #>  [1520,]  3  732 125 #>  [1521,]  3  733 125 #>  [1522,]  3  734 125 #>  [1523,]  3  735 125 #>  [1524,]  3  736 125 #>  [1525,]  3  737 125 #>  [1526,]  3  738 125 #>  [1527,]  3  739 125 #>  [1528,]  3  740 125 #>  [1529,]  3  741 125 #>  [1530,]  3  742 125 #>  [1531,]  3  743 125 #>  [1532,]  3  744 125 #>  [1533,]  3  745 125 #>  [1534,]  3  662 124 #>  [1535,]  3  663 124 #>  [1536,]  3  664 124 #>  [1537,]  3  665 124 #>  [1538,]  3  666 124 #>  [1539,]  3  667 124 #>  [1540,]  3  668 124 #>  [1541,]  3  669 124 #>  [1542,]  3  670 124 #>  [1543,]  3  671 124 #>  [1544,]  3  672 124 #>  [1545,]  3  673 124 #>  [1546,]  3  674 124 #>  [1547,]  3  675 124 #>  [1548,]  3  676 124 #>  [1549,]  3  677 124 #>  [1550,]  3  678 124 #>  [1551,]  3  679 124 #>  [1552,]  3  680 124 #>  [1553,]  3  681 124 #>  [1554,]  3  682 124 #>  [1555,]  3  683 124 #>  [1556,]  3  684 124 #>  [1557,]  3  685 124 #>  [1558,]  3  686 124 #>  [1559,]  3  687 124 #>  [1560,]  3  688 124 #>  [1561,]  3  689 124 #>  [1562,]  3  690 124 #>  [1563,]  3  691 124 #>  [1564,]  3  692 124 #>  [1565,]  3  693 124 #>  [1566,]  3  694 124 #>  [1567,]  3  695 124 #>  [1568,]  3  696 124 #>  [1569,]  3  697 124 #>  [1570,]  3  698 124 #>  [1571,]  3  699 124 #>  [1572,]  3  700 124 #>  [1573,]  3  701 124 #>  [1574,]  3  702 124 #>  [1575,]  3  703 124 #>  [1576,]  3  704 124 #>  [1577,]  3  705 124 #>  [1578,]  3  706 124 #>  [1579,]  3  707 124 #>  [1580,]  3  708 124 #>  [1581,]  3  709 124 #>  [1582,]  3  710 124 #>  [1583,]  3  711 124 #>  [1584,]  3  712 124 #>  [1585,]  3  713 124 #>  [1586,]  3  714 124 #>  [1587,]  3  715 124 #>  [1588,]  3  716 124 #>  [1589,]  3  717 124 #>  [1590,]  3  718 124 #>  [1591,]  3  719 124 #>  [1592,]  3  720 124 #>  [1593,]  3  721 124 #>  [1594,]  3  722 124 #>  [1595,]  3  723 124 #>  [1596,]  3  724 124 #>  [1597,]  3  725 124 #>  [1598,]  3  726 124 #>  [1599,]  3  727 124 #>  [1600,]  3  728 124 #>  [1601,]  3  729 124 #>  [1602,]  3  730 124 #>  [1603,]  3  731 124 #>  [1604,]  3  732 124 #>  [1605,]  3  733 124 #>  [1606,]  3  734 124 #>  [1607,]  3  735 124 #>  [1608,]  3  736 124 #>  [1609,]  3  737 124 #>  [1610,]  3  738 124 #>  [1611,]  3  739 124 #>  [1612,]  3  740 124 #>  [1613,]  3  741 124 #>  [1614,]  3  742 124 #>  [1615,]  3  743 124 #>  [1616,]  3  744 124 #>  [1617,]  3  745 124 #>  [1618,]  3  746 124 #>  [1619,]  3  661 123 #>  [1620,]  3  662 123 #>  [1621,]  3  663 123 #>  [1622,]  3  664 123 #>  [1623,]  3  665 123 #>  [1624,]  3  666 123 #>  [1625,]  3  667 123 #>  [1626,]  3  668 123 #>  [1627,]  3  669 123 #>  [1628,]  3  670 123 #>  [1629,]  3  671 123 #>  [1630,]  3  672 123 #>  [1631,]  3  673 123 #>  [1632,]  3  674 123 #>  [1633,]  3  675 123 #>  [1634,]  3  676 123 #>  [1635,]  3  677 123 #>  [1636,]  3  678 123 #>  [1637,]  3  679 123 #>  [1638,]  3  680 123 #>  [1639,]  3  681 123 #>  [1640,]  3  682 123 #>  [1641,]  3  683 123 #>  [1642,]  3  684 123 #>  [1643,]  3  685 123 #>  [1644,]  3  686 123 #>  [1645,]  3  687 123 #>  [1646,]  3  688 123 #>  [1647,]  3  689 123 #>  [1648,]  3  690 123 #>  [1649,]  3  691 123 #>  [1650,]  3  692 123 #>  [1651,]  3  693 123 #>  [1652,]  3  694 123 #>  [1653,]  3  695 123 #>  [1654,]  3  696 123 #>  [1655,]  3  697 123 #>  [1656,]  3  698 123 #>  [1657,]  3  699 123 #>  [1658,]  3  700 123 #>  [1659,]  3  701 123 #>  [1660,]  3  702 123 #>  [1661,]  3  703 123 #>  [1662,]  3  704 123 #>  [1663,]  3  705 123 #>  [1664,]  3  706 123 #>  [1665,]  3  707 123 #>  [1666,]  3  708 123 #>  [1667,]  3  709 123 #>  [1668,]  3  710 123 #>  [1669,]  3  711 123 #>  [1670,]  3  712 123 #>  [1671,]  3  713 123 #>  [1672,]  3  714 123 #>  [1673,]  3  715 123 #>  [1674,]  3  716 123 #>  [1675,]  3  717 123 #>  [1676,]  3  718 123 #>  [1677,]  3  719 123 #>  [1678,]  3  720 123 #>  [1679,]  3  721 123 #>  [1680,]  3  722 123 #>  [1681,]  3  723 123 #>  [1682,]  3  724 123 #>  [1683,]  3  725 123 #>  [1684,]  3  726 123 #>  [1685,]  3  727 123 #>  [1686,]  3  728 123 #>  [1687,]  3  729 123 #>  [1688,]  3  730 123 #>  [1689,]  3  731 123 #>  [1690,]  3  732 123 #>  [1691,]  3  733 123 #>  [1692,]  3  734 123 #>  [1693,]  3  735 123 #>  [1694,]  3  736 123 #>  [1695,]  3  737 123 #>  [1696,]  3  738 123 #>  [1697,]  3  739 123 #>  [1698,]  3  740 123 #>  [1699,]  3  741 123 #>  [1700,]  3  742 123 #>  [1701,]  3  743 123 #>  [1702,]  3  744 123 #>  [1703,]  3  745 123 #>  [1704,]  3  746 123 #>  [1705,]  3  747 123 #>  [1706,]  3  661 122 #>  [1707,]  3  662 122 #>  [1708,]  3  663 122 #>  [1709,]  3  664 122 #>  [1710,]  3  665 122 #>  [1711,]  3  666 122 #>  [1712,]  3  667 122 #>  [1713,]  3  668 122 #>  [1714,]  3  669 122 #>  [1715,]  3  670 122 #>  [1716,]  3  671 122 #>  [1717,]  3  672 122 #>  [1718,]  3  673 122 #>  [1719,]  3  674 122 #>  [1720,]  3  675 122 #>  [1721,]  3  676 122 #>  [1722,]  3  677 122 #>  [1723,]  3  678 122 #>  [1724,]  3  679 122 #>  [1725,]  3  680 122 #>  [1726,]  3  681 122 #>  [1727,]  3  682 122 #>  [1728,]  3  683 122 #>  [1729,]  3  684 122 #>  [1730,]  3  685 122 #>  [1731,]  3  686 122 #>  [1732,]  3  687 122 #>  [1733,]  3  688 122 #>  [1734,]  3  689 122 #>  [1735,]  3  690 122 #>  [1736,]  3  691 122 #>  [1737,]  3  692 122 #>  [1738,]  3  693 122 #>  [1739,]  3  694 122 #>  [1740,]  3  695 122 #>  [1741,]  3  696 122 #>  [1742,]  3  697 122 #>  [1743,]  3  698 122 #>  [1744,]  3  699 122 #>  [1745,]  3  700 122 #>  [1746,]  3  701 122 #>  [1747,]  3  702 122 #>  [1748,]  3  703 122 #>  [1749,]  3  704 122 #>  [1750,]  3  705 122 #>  [1751,]  3  706 122 #>  [1752,]  3  707 122 #>  [1753,]  3  708 122 #>  [1754,]  3  709 122 #>  [1755,]  3  710 122 #>  [1756,]  3  711 122 #>  [1757,]  3  712 122 #>  [1758,]  3  713 122 #>  [1759,]  3  714 122 #>  [1760,]  3  715 122 #>  [1761,]  3  716 122 #>  [1762,]  3  717 122 #>  [1763,]  3  718 122 #>  [1764,]  3  719 122 #>  [1765,]  3  720 122 #>  [1766,]  3  721 122 #>  [1767,]  3  722 122 #>  [1768,]  3  723 122 #>  [1769,]  3  724 122 #>  [1770,]  3  725 122 #>  [1771,]  3  726 122 #>  [1772,]  3  727 122 #>  [1773,]  3  728 122 #>  [1774,]  3  729 122 #>  [1775,]  3  730 122 #>  [1776,]  3  731 122 #>  [1777,]  3  732 122 #>  [1778,]  3  733 122 #>  [1779,]  3  734 122 #>  [1780,]  3  735 122 #>  [1781,]  3  736 122 #>  [1782,]  3  737 122 #>  [1783,]  3  738 122 #>  [1784,]  3  739 122 #>  [1785,]  3  740 122 #>  [1786,]  3  741 122 #>  [1787,]  3  742 122 #>  [1788,]  3  743 122 #>  [1789,]  3  744 122 #>  [1790,]  3  745 122 #>  [1791,]  3  746 122 #>  [1792,]  3  747 122 #>  [1793,]  3  660 121 #>  [1794,]  3  661 121 #>  [1795,]  3  662 121 #>  [1796,]  3  663 121 #>  [1797,]  3  664 121 #>  [1798,]  3  665 121 #>  [1799,]  3  666 121 #>  [1800,]  3  667 121 #>  [1801,]  3  668 121 #>  [1802,]  3  669 121 #>  [1803,]  3  670 121 #>  [1804,]  3  671 121 #>  [1805,]  3  672 121 #>  [1806,]  3  673 121 #>  [1807,]  3  674 121 #>  [1808,]  3  675 121 #>  [1809,]  3  676 121 #>  [1810,]  3  677 121 #>  [1811,]  3  678 121 #>  [1812,]  3  679 121 #>  [1813,]  3  680 121 #>  [1814,]  3  681 121 #>  [1815,]  3  682 121 #>  [1816,]  3  683 121 #>  [1817,]  3  684 121 #>  [1818,]  3  685 121 #>  [1819,]  3  686 121 #>  [1820,]  3  687 121 #>  [1821,]  3  688 121 #>  [1822,]  3  689 121 #>  [1823,]  3  690 121 #>  [1824,]  3  691 121 #>  [1825,]  3  692 121 #>  [1826,]  3  693 121 #>  [1827,]  3  694 121 #>  [1828,]  3  695 121 #>  [1829,]  3  696 121 #>  [1830,]  3  697 121 #>  [1831,]  3  698 121 #>  [1832,]  3  699 121 #>  [1833,]  3  700 121 #>  [1834,]  3  701 121 #>  [1835,]  3  702 121 #>  [1836,]  3  703 121 #>  [1837,]  3  704 121 #>  [1838,]  3  705 121 #>  [1839,]  3  706 121 #>  [1840,]  3  707 121 #>  [1841,]  3  708 121 #>  [1842,]  3  709 121 #>  [1843,]  3  710 121 #>  [1844,]  3  711 121 #>  [1845,]  3  712 121 #>  [1846,]  3  713 121 #>  [1847,]  3  714 121 #>  [1848,]  3  715 121 #>  [1849,]  3  716 121 #>  [1850,]  3  717 121 #>  [1851,]  3  718 121 #>  [1852,]  3  719 121 #>  [1853,]  3  720 121 #>  [1854,]  3  721 121 #>  [1855,]  3  722 121 #>  [1856,]  3  723 121 #>  [1857,]  3  724 121 #>  [1858,]  3  725 121 #>  [1859,]  3  726 121 #>  [1860,]  3  727 121 #>  [1861,]  3  728 121 #>  [1862,]  3  729 121 #>  [1863,]  3  730 121 #>  [1864,]  3  731 121 #>  [1865,]  3  732 121 #>  [1866,]  3  733 121 #>  [1867,]  3  734 121 #>  [1868,]  3  735 121 #>  [1869,]  3  736 121 #>  [1870,]  3  737 121 #>  [1871,]  3  738 121 #>  [1872,]  3  739 121 #>  [1873,]  3  740 121 #>  [1874,]  3  741 121 #>  [1875,]  3  742 121 #>  [1876,]  3  743 121 #>  [1877,]  3  744 121 #>  [1878,]  3  745 121 #>  [1879,]  3  746 121 #>  [1880,]  3  747 121 #>  [1881,]  3  748 121 #>  [1882,]  3  660 120 #>  [1883,]  3  661 120 #>  [1884,]  3  662 120 #>  [1885,]  3  663 120 #>  [1886,]  3  664 120 #>  [1887,]  3  665 120 #>  [1888,]  3  666 120 #>  [1889,]  3  667 120 #>  [1890,]  3  668 120 #>  [1891,]  3  669 120 #>  [1892,]  3  670 120 #>  [1893,]  3  671 120 #>  [1894,]  3  672 120 #>  [1895,]  3  673 120 #>  [1896,]  3  674 120 #>  [1897,]  3  675 120 #>  [1898,]  3  676 120 #>  [1899,]  3  677 120 #>  [1900,]  3  678 120 #>  [1901,]  3  679 120 #>  [1902,]  3  680 120 #>  [1903,]  3  681 120 #>  [1904,]  3  682 120 #>  [1905,]  3  683 120 #>  [1906,]  3  684 120 #>  [1907,]  3  685 120 #>  [1908,]  3  686 120 #>  [1909,]  3  687 120 #>  [1910,]  3  688 120 #>  [1911,]  3  689 120 #>  [1912,]  3  690 120 #>  [1913,]  3  691 120 #>  [1914,]  3  692 120 #>  [1915,]  3  693 120 #>  [1916,]  3  694 120 #>  [1917,]  3  695 120 #>  [1918,]  3  696 120 #>  [1919,]  3  697 120 #>  [1920,]  3  698 120 #>  [1921,]  3  699 120 #>  [1922,]  3  700 120 #>  [1923,]  3  701 120 #>  [1924,]  3  702 120 #>  [1925,]  3  703 120 #>  [1926,]  3  704 120 #>  [1927,]  3  705 120 #>  [1928,]  3  706 120 #>  [1929,]  3  707 120 #>  [1930,]  3  708 120 #>  [1931,]  3  709 120 #>  [1932,]  3  710 120 #>  [1933,]  3  711 120 #>  [1934,]  3  712 120 #>  [1935,]  3  713 120 #>  [1936,]  3  714 120 #>  [1937,]  3  715 120 #>  [1938,]  3  716 120 #>  [1939,]  3  717 120 #>  [1940,]  3  718 120 #>  [1941,]  3  719 120 #>  [1942,]  3  720 120 #>  [1943,]  3  721 120 #>  [1944,]  3  722 120 #>  [1945,]  3  723 120 #>  [1946,]  3  724 120 #>  [1947,]  3  725 120 #>  [1948,]  3  726 120 #>  [1949,]  3  727 120 #>  [1950,]  3  728 120 #>  [1951,]  3  729 120 #>  [1952,]  3  730 120 #>  [1953,]  3  731 120 #>  [1954,]  3  732 120 #>  [1955,]  3  733 120 #>  [1956,]  3  734 120 #>  [1957,]  3  735 120 #>  [1958,]  3  736 120 #>  [1959,]  3  737 120 #>  [1960,]  3  738 120 #>  [1961,]  3  739 120 #>  [1962,]  3  740 120 #>  [1963,]  3  741 120 #>  [1964,]  3  742 120 #>  [1965,]  3  743 120 #>  [1966,]  3  744 120 #>  [1967,]  3  745 120 #>  [1968,]  3  746 120 #>  [1969,]  3  747 120 #>  [1970,]  3  748 120 #>  [1971,]  3  660 119 #>  [1972,]  3  661 119 #>  [1973,]  3  662 119 #>  [1974,]  3  663 119 #>  [1975,]  3  664 119 #>  [1976,]  3  665 119 #>  [1977,]  3  666 119 #>  [1978,]  3  667 119 #>  [1979,]  3  668 119 #>  [1980,]  3  669 119 #>  [1981,]  3  670 119 #>  [1982,]  3  671 119 #>  [1983,]  3  672 119 #>  [1984,]  3  673 119 #>  [1985,]  3  674 119 #>  [1986,]  3  675 119 #>  [1987,]  3  676 119 #>  [1988,]  3  677 119 #>  [1989,]  3  678 119 #>  [1990,]  3  679 119 #>  [1991,]  3  680 119 #>  [1992,]  3  681 119 #>  [1993,]  3  682 119 #>  [1994,]  3  683 119 #>  [1995,]  3  684 119 #>  [1996,]  3  685 119 #>  [1997,]  3  686 119 #>  [1998,]  3  687 119 #>  [1999,]  3  688 119 #>  [2000,]  3  689 119 #>  [2001,]  3  690 119 #>  [2002,]  3  691 119 #>  [2003,]  3  692 119 #>  [2004,]  3  693 119 #>  [2005,]  3  694 119 #>  [2006,]  3  695 119 #>  [2007,]  3  696 119 #>  [2008,]  3  697 119 #>  [2009,]  3  698 119 #>  [2010,]  3  699 119 #>  [2011,]  3  700 119 #>  [2012,]  3  701 119 #>  [2013,]  3  702 119 #>  [2014,]  3  703 119 #>  [2015,]  3  704 119 #>  [2016,]  3  705 119 #>  [2017,]  3  706 119 #>  [2018,]  3  707 119 #>  [2019,]  3  708 119 #>  [2020,]  3  709 119 #>  [2021,]  3  710 119 #>  [2022,]  3  711 119 #>  [2023,]  3  712 119 #>  [2024,]  3  713 119 #>  [2025,]  3  714 119 #>  [2026,]  3  715 119 #>  [2027,]  3  716 119 #>  [2028,]  3  717 119 #>  [2029,]  3  718 119 #>  [2030,]  3  719 119 #>  [2031,]  3  720 119 #>  [2032,]  3  721 119 #>  [2033,]  3  722 119 #>  [2034,]  3  723 119 #>  [2035,]  3  724 119 #>  [2036,]  3  725 119 #>  [2037,]  3  726 119 #>  [2038,]  3  727 119 #>  [2039,]  3  728 119 #>  [2040,]  3  729 119 #>  [2041,]  3  730 119 #>  [2042,]  3  731 119 #>  [2043,]  3  732 119 #>  [2044,]  3  733 119 #>  [2045,]  3  734 119 #>  [2046,]  3  735 119 #>  [2047,]  3  736 119 #>  [2048,]  3  737 119 #>  [2049,]  3  738 119 #>  [2050,]  3  739 119 #>  [2051,]  3  740 119 #>  [2052,]  3  741 119 #>  [2053,]  3  742 119 #>  [2054,]  3  743 119 #>  [2055,]  3  744 119 #>  [2056,]  3  745 119 #>  [2057,]  3  746 119 #>  [2058,]  3  747 119 #>  [2059,]  3  748 119 #>  [2060,]  3  749 119 #>  [2061,]  3  659 118 #>  [2062,]  3  660 118 #>  [2063,]  3  661 118 #>  [2064,]  3  662 118 #>  [2065,]  3  663 118 #>  [2066,]  3  664 118 #>  [2067,]  3  665 118 #>  [2068,]  3  666 118 #>  [2069,]  3  667 118 #>  [2070,]  3  668 118 #>  [2071,]  3  669 118 #>  [2072,]  3  670 118 #>  [2073,]  3  671 118 #>  [2074,]  3  672 118 #>  [2075,]  3  673 118 #>  [2076,]  3  674 118 #>  [2077,]  3  675 118 #>  [2078,]  3  676 118 #>  [2079,]  3  677 118 #>  [2080,]  3  678 118 #>  [2081,]  3  679 118 #>  [2082,]  3  680 118 #>  [2083,]  3  681 118 #>  [2084,]  3  682 118 #>  [2085,]  3  683 118 #>  [2086,]  3  684 118 #>  [2087,]  3  685 118 #>  [2088,]  3  686 118 #>  [2089,]  3  687 118 #>  [2090,]  3  688 118 #>  [2091,]  3  689 118 #>  [2092,]  3  690 118 #>  [2093,]  3  691 118 #>  [2094,]  3  692 118 #>  [2095,]  3  693 118 #>  [2096,]  3  694 118 #>  [2097,]  3  695 118 #>  [2098,]  3  696 118 #>  [2099,]  3  697 118 #>  [2100,]  3  698 118 #>  [2101,]  3  699 118 #>  [2102,]  3  700 118 #>  [2103,]  3  701 118 #>  [2104,]  3  702 118 #>  [2105,]  3  703 118 #>  [2106,]  3  704 118 #>  [2107,]  3  705 118 #>  [2108,]  3  706 118 #>  [2109,]  3  707 118 #>  [2110,]  3  708 118 #>  [2111,]  3  709 118 #>  [2112,]  3  710 118 #>  [2113,]  3  711 118 #>  [2114,]  3  712 118 #>  [2115,]  3  713 118 #>  [2116,]  3  714 118 #>  [2117,]  3  715 118 #>  [2118,]  3  716 118 #>  [2119,]  3  717 118 #>  [2120,]  3  718 118 #>  [2121,]  3  719 118 #>  [2122,]  3  720 118 #>  [2123,]  3  721 118 #>  [2124,]  3  722 118 #>  [2125,]  3  723 118 #>  [2126,]  3  724 118 #>  [2127,]  3  725 118 #>  [2128,]  3  726 118 #>  [2129,]  3  727 118 #>  [2130,]  3  728 118 #>  [2131,]  3  729 118 #>  [2132,]  3  730 118 #>  [2133,]  3  731 118 #>  [2134,]  3  732 118 #>  [2135,]  3  733 118 #>  [2136,]  3  734 118 #>  [2137,]  3  735 118 #>  [2138,]  3  736 118 #>  [2139,]  3  737 118 #>  [2140,]  3  738 118 #>  [2141,]  3  739 118 #>  [2142,]  3  740 118 #>  [2143,]  3  741 118 #>  [2144,]  3  742 118 #>  [2145,]  3  743 118 #>  [2146,]  3  744 118 #>  [2147,]  3  745 118 #>  [2148,]  3  746 118 #>  [2149,]  3  747 118 #>  [2150,]  3  748 118 #>  [2151,]  3  749 118 #>  [2152,]  3  659 117 #>  [2153,]  3  660 117 #>  [2154,]  3  661 117 #>  [2155,]  3  662 117 #>  [2156,]  3  663 117 #>  [2157,]  3  664 117 #>  [2158,]  3  665 117 #>  [2159,]  3  666 117 #>  [2160,]  3  667 117 #>  [2161,]  3  668 117 #>  [2162,]  3  669 117 #>  [2163,]  3  670 117 #>  [2164,]  3  671 117 #>  [2165,]  3  672 117 #>  [2166,]  3  673 117 #>  [2167,]  3  674 117 #>  [2168,]  3  675 117 #>  [2169,]  3  676 117 #>  [2170,]  3  677 117 #>  [2171,]  3  678 117 #>  [2172,]  3  679 117 #>  [2173,]  3  680 117 #>  [2174,]  3  681 117 #>  [2175,]  3  682 117 #>  [2176,]  3  683 117 #>  [2177,]  3  684 117 #>  [2178,]  3  685 117 #>  [2179,]  3  686 117 #>  [2180,]  3  687 117 #>  [2181,]  3  688 117 #>  [2182,]  3  689 117 #>  [2183,]  3  690 117 #>  [2184,]  3  691 117 #>  [2185,]  3  692 117 #>  [2186,]  3  693 117 #>  [2187,]  3  694 117 #>  [2188,]  3  695 117 #>  [2189,]  3  696 117 #>  [2190,]  3  697 117 #>  [2191,]  3  698 117 #>  [2192,]  3  699 117 #>  [2193,]  3  700 117 #>  [2194,]  3  701 117 #>  [2195,]  3  702 117 #>  [2196,]  3  703 117 #>  [2197,]  3  704 117 #>  [2198,]  3  705 117 #>  [2199,]  3  706 117 #>  [2200,]  3  707 117 #>  [2201,]  3  708 117 #>  [2202,]  3  709 117 #>  [2203,]  3  710 117 #>  [2204,]  3  711 117 #>  [2205,]  3  712 117 #>  [2206,]  3  713 117 #>  [2207,]  3  714 117 #>  [2208,]  3  715 117 #>  [2209,]  3  716 117 #>  [2210,]  3  717 117 #>  [2211,]  3  718 117 #>  [2212,]  3  719 117 #>  [2213,]  3  720 117 #>  [2214,]  3  721 117 #>  [2215,]  3  722 117 #>  [2216,]  3  723 117 #>  [2217,]  3  724 117 #>  [2218,]  3  725 117 #>  [2219,]  3  726 117 #>  [2220,]  3  727 117 #>  [2221,]  3  728 117 #>  [2222,]  3  729 117 #>  [2223,]  3  730 117 #>  [2224,]  3  731 117 #>  [2225,]  3  732 117 #>  [2226,]  3  733 117 #>  [2227,]  3  734 117 #>  [2228,]  3  735 117 #>  [2229,]  3  736 117 #>  [2230,]  3  737 117 #>  [2231,]  3  738 117 #>  [2232,]  3  739 117 #>  [2233,]  3  740 117 #>  [2234,]  3  741 117 #>  [2235,]  3  742 117 #>  [2236,]  3  743 117 #>  [2237,]  3  744 117 #>  [2238,]  3  745 117 #>  [2239,]  3  746 117 #>  [2240,]  3  747 117 #>  [2241,]  3  748 117 #>  [2242,]  3  749 117 #>  [2243,]  3  659 116 #>  [2244,]  3  660 116 #>  [2245,]  3  661 116 #>  [2246,]  3  662 116 #>  [2247,]  3  663 116 #>  [2248,]  3  664 116 #>  [2249,]  3  665 116 #>  [2250,]  3  666 116 #>  [2251,]  3  667 116 #>  [2252,]  3  668 116 #>  [2253,]  3  669 116 #>  [2254,]  3  670 116 #>  [2255,]  3  671 116 #>  [2256,]  3  672 116 #>  [2257,]  3  673 116 #>  [2258,]  3  674 116 #>  [2259,]  3  675 116 #>  [2260,]  3  676 116 #>  [2261,]  3  677 116 #>  [2262,]  3  678 116 #>  [2263,]  3  679 116 #>  [2264,]  3  680 116 #>  [2265,]  3  681 116 #>  [2266,]  3  682 116 #>  [2267,]  3  683 116 #>  [2268,]  3  684 116 #>  [2269,]  3  685 116 #>  [2270,]  3  686 116 #>  [2271,]  3  687 116 #>  [2272,]  3  688 116 #>  [2273,]  3  689 116 #>  [2274,]  3  690 116 #>  [2275,]  3  691 116 #>  [2276,]  3  692 116 #>  [2277,]  3  693 116 #>  [2278,]  3  694 116 #>  [2279,]  3  695 116 #>  [2280,]  3  696 116 #>  [2281,]  3  697 116 #>  [2282,]  3  698 116 #>  [2283,]  3  699 116 #>  [2284,]  3  700 116 #>  [2285,]  3  701 116 #>  [2286,]  3  702 116 #>  [2287,]  3  703 116 #>  [2288,]  3  704 116 #>  [2289,]  3  705 116 #>  [2290,]  3  706 116 #>  [2291,]  3  707 116 #>  [2292,]  3  708 116 #>  [2293,]  3  709 116 #>  [2294,]  3  710 116 #>  [2295,]  3  711 116 #>  [2296,]  3  712 116 #>  [2297,]  3  713 116 #>  [2298,]  3  714 116 #>  [2299,]  3  715 116 #>  [2300,]  3  716 116 #>  [2301,]  3  717 116 #>  [2302,]  3  718 116 #>  [2303,]  3  719 116 #>  [2304,]  3  720 116 #>  [2305,]  3  721 116 #>  [2306,]  3  722 116 #>  [2307,]  3  723 116 #>  [2308,]  3  724 116 #>  [2309,]  3  725 116 #>  [2310,]  3  726 116 #>  [2311,]  3  727 116 #>  [2312,]  3  728 116 #>  [2313,]  3  729 116 #>  [2314,]  3  730 116 #>  [2315,]  3  731 116 #>  [2316,]  3  732 116 #>  [2317,]  3  733 116 #>  [2318,]  3  734 116 #>  [2319,]  3  735 116 #>  [2320,]  3  736 116 #>  [2321,]  3  737 116 #>  [2322,]  3  738 116 #>  [2323,]  3  739 116 #>  [2324,]  3  740 116 #>  [2325,]  3  741 116 #>  [2326,]  3  742 116 #>  [2327,]  3  743 116 #>  [2328,]  3  744 116 #>  [2329,]  3  745 116 #>  [2330,]  3  746 116 #>  [2331,]  3  747 116 #>  [2332,]  3  748 116 #>  [2333,]  3  749 116 #>  [2334,]  3  750 116 #>  [2335,]  3  658 115 #>  [2336,]  3  659 115 #>  [2337,]  3  660 115 #>  [2338,]  3  661 115 #>  [2339,]  3  662 115 #>  [2340,]  3  663 115 #>  [2341,]  3  664 115 #>  [2342,]  3  665 115 #>  [2343,]  3  666 115 #>  [2344,]  3  667 115 #>  [2345,]  3  668 115 #>  [2346,]  3  669 115 #>  [2347,]  3  670 115 #>  [2348,]  3  671 115 #>  [2349,]  3  672 115 #>  [2350,]  3  673 115 #>  [2351,]  3  674 115 #>  [2352,]  3  675 115 #>  [2353,]  3  676 115 #>  [2354,]  3  677 115 #>  [2355,]  3  678 115 #>  [2356,]  3  679 115 #>  [2357,]  3  680 115 #>  [2358,]  3  681 115 #>  [2359,]  3  682 115 #>  [2360,]  3  683 115 #>  [2361,]  3  684 115 #>  [2362,]  3  685 115 #>  [2363,]  3  686 115 #>  [2364,]  3  687 115 #>  [2365,]  3  688 115 #>  [2366,]  3  689 115 #>  [2367,]  3  690 115 #>  [2368,]  3  691 115 #>  [2369,]  3  692 115 #>  [2370,]  3  693 115 #>  [2371,]  3  694 115 #>  [2372,]  3  695 115 #>  [2373,]  3  696 115 #>  [2374,]  3  697 115 #>  [2375,]  3  698 115 #>  [2376,]  3  699 115 #>  [2377,]  3  700 115 #>  [2378,]  3  701 115 #>  [2379,]  3  702 115 #>  [2380,]  3  703 115 #>  [2381,]  3  704 115 #>  [2382,]  3  705 115 #>  [2383,]  3  706 115 #>  [2384,]  3  707 115 #>  [2385,]  3  708 115 #>  [2386,]  3  709 115 #>  [2387,]  3  710 115 #>  [2388,]  3  711 115 #>  [2389,]  3  712 115 #>  [2390,]  3  713 115 #>  [2391,]  3  714 115 #>  [2392,]  3  715 115 #>  [2393,]  3  716 115 #>  [2394,]  3  717 115 #>  [2395,]  3  718 115 #>  [2396,]  3  719 115 #>  [2397,]  3  720 115 #>  [2398,]  3  721 115 #>  [2399,]  3  722 115 #>  [2400,]  3  723 115 #>  [2401,]  3  724 115 #>  [2402,]  3  725 115 #>  [2403,]  3  726 115 #>  [2404,]  3  727 115 #>  [2405,]  3  728 115 #>  [2406,]  3  729 115 #>  [2407,]  3  730 115 #>  [2408,]  3  731 115 #>  [2409,]  3  732 115 #>  [2410,]  3  733 115 #>  [2411,]  3  734 115 #>  [2412,]  3  735 115 #>  [2413,]  3  736 115 #>  [2414,]  3  737 115 #>  [2415,]  3  738 115 #>  [2416,]  3  739 115 #>  [2417,]  3  740 115 #>  [2418,]  3  741 115 #>  [2419,]  3  742 115 #>  [2420,]  3  743 115 #>  [2421,]  3  744 115 #>  [2422,]  3  745 115 #>  [2423,]  3  746 115 #>  [2424,]  3  747 115 #>  [2425,]  3  748 115 #>  [2426,]  3  749 115 #>  [2427,]  3  750 115 #>  [2428,]  3  658 114 #>  [2429,]  3  659 114 #>  [2430,]  3  660 114 #>  [2431,]  3  661 114 #>  [2432,]  3  662 114 #>  [2433,]  3  663 114 #>  [2434,]  3  664 114 #>  [2435,]  3  665 114 #>  [2436,]  3  666 114 #>  [2437,]  3  667 114 #>  [2438,]  3  668 114 #>  [2439,]  3  669 114 #>  [2440,]  3  670 114 #>  [2441,]  3  671 114 #>  [2442,]  3  672 114 #>  [2443,]  3  673 114 #>  [2444,]  3  674 114 #>  [2445,]  3  675 114 #>  [2446,]  3  676 114 #>  [2447,]  3  677 114 #>  [2448,]  3  678 114 #>  [2449,]  3  679 114 #>  [2450,]  3  680 114 #>  [2451,]  3  681 114 #>  [2452,]  3  682 114 #>  [2453,]  3  683 114 #>  [2454,]  3  684 114 #>  [2455,]  3  685 114 #>  [2456,]  3  686 114 #>  [2457,]  3  687 114 #>  [2458,]  3  688 114 #>  [2459,]  3  689 114 #>  [2460,]  3  690 114 #>  [2461,]  3  691 114 #>  [2462,]  3  692 114 #>  [2463,]  3  693 114 #>  [2464,]  3  694 114 #>  [2465,]  3  695 114 #>  [2466,]  3  696 114 #>  [2467,]  3  697 114 #>  [2468,]  3  698 114 #>  [2469,]  3  699 114 #>  [2470,]  3  700 114 #>  [2471,]  3  701 114 #>  [2472,]  3  702 114 #>  [2473,]  3  703 114 #>  [2474,]  3  704 114 #>  [2475,]  3  705 114 #>  [2476,]  3  706 114 #>  [2477,]  3  707 114 #>  [2478,]  3  708 114 #>  [2479,]  3  709 114 #>  [2480,]  3  710 114 #>  [2481,]  3  711 114 #>  [2482,]  3  712 114 #>  [2483,]  3  713 114 #>  [2484,]  3  714 114 #>  [2485,]  3  715 114 #>  [2486,]  3  716 114 #>  [2487,]  3  717 114 #>  [2488,]  3  718 114 #>  [2489,]  3  719 114 #>  [2490,]  3  720 114 #>  [2491,]  3  721 114 #>  [2492,]  3  722 114 #>  [2493,]  3  723 114 #>  [2494,]  3  724 114 #>  [2495,]  3  725 114 #>  [2496,]  3  726 114 #>  [2497,]  3  727 114 #>  [2498,]  3  728 114 #>  [2499,]  3  729 114 #>  [2500,]  3  730 114 #>  [2501,]  3  731 114 #>  [2502,]  3  732 114 #>  [2503,]  3  733 114 #>  [2504,]  3  734 114 #>  [2505,]  3  735 114 #>  [2506,]  3  736 114 #>  [2507,]  3  737 114 #>  [2508,]  3  738 114 #>  [2509,]  3  739 114 #>  [2510,]  3  740 114 #>  [2511,]  3  741 114 #>  [2512,]  3  742 114 #>  [2513,]  3  743 114 #>  [2514,]  3  744 114 #>  [2515,]  3  745 114 #>  [2516,]  3  746 114 #>  [2517,]  3  747 114 #>  [2518,]  3  748 114 #>  [2519,]  3  749 114 #>  [2520,]  3  750 114 #>  [2521,]  3  751 114 #>  [2522,]  3  658 113 #>  [2523,]  3  659 113 #>  [2524,]  3  660 113 #>  [2525,]  3  661 113 #>  [2526,]  3  662 113 #>  [2527,]  3  663 113 #>  [2528,]  3  664 113 #>  [2529,]  3  665 113 #>  [2530,]  3  666 113 #>  [2531,]  3  667 113 #>  [2532,]  3  668 113 #>  [2533,]  3  669 113 #>  [2534,]  3  670 113 #>  [2535,]  3  671 113 #>  [2536,]  3  672 113 #>  [2537,]  3  673 113 #>  [2538,]  3  674 113 #>  [2539,]  3  675 113 #>  [2540,]  3  676 113 #>  [2541,]  3  677 113 #>  [2542,]  3  678 113 #>  [2543,]  3  679 113 #>  [2544,]  3  680 113 #>  [2545,]  3  681 113 #>  [2546,]  3  682 113 #>  [2547,]  3  683 113 #>  [2548,]  3  684 113 #>  [2549,]  3  685 113 #>  [2550,]  3  686 113 #>  [2551,]  3  687 113 #>  [2552,]  3  688 113 #>  [2553,]  3  689 113 #>  [2554,]  3  690 113 #>  [2555,]  3  691 113 #>  [2556,]  3  692 113 #>  [2557,]  3  693 113 #>  [2558,]  3  694 113 #>  [2559,]  3  695 113 #>  [2560,]  3  696 113 #>  [2561,]  3  697 113 #>  [2562,]  3  698 113 #>  [2563,]  3  699 113 #>  [2564,]  3  700 113 #>  [2565,]  3  701 113 #>  [2566,]  3  702 113 #>  [2567,]  3  703 113 #>  [2568,]  3  704 113 #>  [2569,]  3  705 113 #>  [2570,]  3  706 113 #>  [2571,]  3  707 113 #>  [2572,]  3  708 113 #>  [2573,]  3  709 113 #>  [2574,]  3  710 113 #>  [2575,]  3  711 113 #>  [2576,]  3  712 113 #>  [2577,]  3  713 113 #>  [2578,]  3  714 113 #>  [2579,]  3  715 113 #>  [2580,]  3  716 113 #>  [2581,]  3  717 113 #>  [2582,]  3  718 113 #>  [2583,]  3  719 113 #>  [2584,]  3  720 113 #>  [2585,]  3  721 113 #>  [2586,]  3  722 113 #>  [2587,]  3  723 113 #>  [2588,]  3  724 113 #>  [2589,]  3  725 113 #>  [2590,]  3  726 113 #>  [2591,]  3  727 113 #>  [2592,]  3  728 113 #>  [2593,]  3  729 113 #>  [2594,]  3  730 113 #>  [2595,]  3  731 113 #>  [2596,]  3  732 113 #>  [2597,]  3  733 113 #>  [2598,]  3  734 113 #>  [2599,]  3  735 113 #>  [2600,]  3  736 113 #>  [2601,]  3  737 113 #>  [2602,]  3  738 113 #>  [2603,]  3  739 113 #>  [2604,]  3  740 113 #>  [2605,]  3  741 113 #>  [2606,]  3  742 113 #>  [2607,]  3  743 113 #>  [2608,]  3  744 113 #>  [2609,]  3  745 113 #>  [2610,]  3  746 113 #>  [2611,]  3  747 113 #>  [2612,]  3  748 113 #>  [2613,]  3  749 113 #>  [2614,]  3  750 113 #>  [2615,]  3  751 113 #>  [2616,]  3  657 112 #>  [2617,]  3  658 112 #>  [2618,]  3  659 112 #>  [2619,]  3  660 112 #>  [2620,]  3  661 112 #>  [2621,]  3  662 112 #>  [2622,]  3  663 112 #>  [2623,]  3  664 112 #>  [2624,]  3  665 112 #>  [2625,]  3  666 112 #>  [2626,]  3  667 112 #>  [2627,]  3  668 112 #>  [2628,]  3  669 112 #>  [2629,]  3  670 112 #>  [2630,]  3  671 112 #>  [2631,]  3  672 112 #>  [2632,]  3  673 112 #>  [2633,]  3  674 112 #>  [2634,]  3  675 112 #>  [2635,]  3  676 112 #>  [2636,]  3  677 112 #>  [2637,]  3  678 112 #>  [2638,]  3  679 112 #>  [2639,]  3  680 112 #>  [2640,]  3  681 112 #>  [2641,]  3  682 112 #>  [2642,]  3  683 112 #>  [2643,]  3  684 112 #>  [2644,]  3  685 112 #>  [2645,]  3  686 112 #>  [2646,]  3  687 112 #>  [2647,]  3  688 112 #>  [2648,]  3  689 112 #>  [2649,]  3  690 112 #>  [2650,]  3  691 112 #>  [2651,]  3  692 112 #>  [2652,]  3  693 112 #>  [2653,]  3  694 112 #>  [2654,]  3  695 112 #>  [2655,]  3  696 112 #>  [2656,]  3  697 112 #>  [2657,]  3  698 112 #>  [2658,]  3  699 112 #>  [2659,]  3  700 112 #>  [2660,]  3  701 112 #>  [2661,]  3  702 112 #>  [2662,]  3  703 112 #>  [2663,]  3  704 112 #>  [2664,]  3  705 112 #>  [2665,]  3  706 112 #>  [2666,]  3  707 112 #>  [2667,]  3  708 112 #>  [2668,]  3  709 112 #>  [2669,]  3  710 112 #>  [2670,]  3  711 112 #>  [2671,]  3  712 112 #>  [2672,]  3  713 112 #>  [2673,]  3  714 112 #>  [2674,]  3  715 112 #>  [2675,]  3  716 112 #>  [2676,]  3  717 112 #>  [2677,]  3  718 112 #>  [2678,]  3  719 112 #>  [2679,]  3  720 112 #>  [2680,]  3  721 112 #>  [2681,]  3  722 112 #>  [2682,]  3  723 112 #>  [2683,]  3  724 112 #>  [2684,]  3  725 112 #>  [2685,]  3  726 112 #>  [2686,]  3  727 112 #>  [2687,]  3  728 112 #>  [2688,]  3  729 112 #>  [2689,]  3  730 112 #>  [2690,]  3  731 112 #>  [2691,]  3  732 112 #>  [2692,]  3  733 112 #>  [2693,]  3  734 112 #>  [2694,]  3  735 112 #>  [2695,]  3  736 112 #>  [2696,]  3  737 112 #>  [2697,]  3  738 112 #>  [2698,]  3  739 112 #>  [2699,]  3  740 112 #>  [2700,]  3  741 112 #>  [2701,]  3  742 112 #>  [2702,]  3  743 112 #>  [2703,]  3  744 112 #>  [2704,]  3  745 112 #>  [2705,]  3  746 112 #>  [2706,]  3  747 112 #>  [2707,]  3  748 112 #>  [2708,]  3  749 112 #>  [2709,]  3  750 112 #>  [2710,]  3  751 112 #>  [2711,]  3  657 111 #>  [2712,]  3  658 111 #>  [2713,]  3  659 111 #>  [2714,]  3  660 111 #>  [2715,]  3  661 111 #>  [2716,]  3  662 111 #>  [2717,]  3  663 111 #>  [2718,]  3  664 111 #>  [2719,]  3  665 111 #>  [2720,]  3  666 111 #>  [2721,]  3  667 111 #>  [2722,]  3  668 111 #>  [2723,]  3  669 111 #>  [2724,]  3  670 111 #>  [2725,]  3  671 111 #>  [2726,]  3  672 111 #>  [2727,]  3  673 111 #>  [2728,]  3  674 111 #>  [2729,]  3  675 111 #>  [2730,]  3  676 111 #>  [2731,]  3  677 111 #>  [2732,]  3  678 111 #>  [2733,]  3  679 111 #>  [2734,]  3  680 111 #>  [2735,]  3  681 111 #>  [2736,]  3  682 111 #>  [2737,]  3  683 111 #>  [2738,]  3  684 111 #>  [2739,]  3  685 111 #>  [2740,]  3  686 111 #>  [2741,]  3  687 111 #>  [2742,]  3  688 111 #>  [2743,]  3  689 111 #>  [2744,]  3  690 111 #>  [2745,]  3  691 111 #>  [2746,]  3  692 111 #>  [2747,]  3  693 111 #>  [2748,]  3  694 111 #>  [2749,]  3  695 111 #>  [2750,]  3  696 111 #>  [2751,]  3  697 111 #>  [2752,]  3  698 111 #>  [2753,]  3  699 111 #>  [2754,]  3  700 111 #>  [2755,]  3  701 111 #>  [2756,]  3  702 111 #>  [2757,]  3  703 111 #>  [2758,]  3  704 111 #>  [2759,]  3  705 111 #>  [2760,]  3  706 111 #>  [2761,]  3  707 111 #>  [2762,]  3  708 111 #>  [2763,]  3  709 111 #>  [2764,]  3  710 111 #>  [2765,]  3  711 111 #>  [2766,]  3  712 111 #>  [2767,]  3  713 111 #>  [2768,]  3  714 111 #>  [2769,]  3  715 111 #>  [2770,]  3  716 111 #>  [2771,]  3  717 111 #>  [2772,]  3  718 111 #>  [2773,]  3  719 111 #>  [2774,]  3  720 111 #>  [2775,]  3  721 111 #>  [2776,]  3  722 111 #>  [2777,]  3  723 111 #>  [2778,]  3  724 111 #>  [2779,]  3  725 111 #>  [2780,]  3  726 111 #>  [2781,]  3  727 111 #>  [2782,]  3  728 111 #>  [2783,]  3  729 111 #>  [2784,]  3  730 111 #>  [2785,]  3  731 111 #>  [2786,]  3  732 111 #>  [2787,]  3  733 111 #>  [2788,]  3  734 111 #>  [2789,]  3  735 111 #>  [2790,]  3  736 111 #>  [2791,]  3  737 111 #>  [2792,]  3  738 111 #>  [2793,]  3  739 111 #>  [2794,]  3  740 111 #>  [2795,]  3  741 111 #>  [2796,]  3  742 111 #>  [2797,]  3  743 111 #>  [2798,]  3  744 111 #>  [2799,]  3  745 111 #>  [2800,]  3  746 111 #>  [2801,]  3  747 111 #>  [2802,]  3  748 111 #>  [2803,]  3  749 111 #>  [2804,]  3  750 111 #>  [2805,]  3  751 111 #>  [2806,]  3  752 111 #>  [2807,]  3  657 110 #>  [2808,]  3  658 110 #>  [2809,]  3  659 110 #>  [2810,]  3  660 110 #>  [2811,]  3  661 110 #>  [2812,]  3  662 110 #>  [2813,]  3  663 110 #>  [2814,]  3  664 110 #>  [2815,]  3  665 110 #>  [2816,]  3  666 110 #>  [2817,]  3  667 110 #>  [2818,]  3  668 110 #>  [2819,]  3  669 110 #>  [2820,]  3  670 110 #>  [2821,]  3  671 110 #>  [2822,]  3  672 110 #>  [2823,]  3  673 110 #>  [2824,]  3  674 110 #>  [2825,]  3  675 110 #>  [2826,]  3  676 110 #>  [2827,]  3  677 110 #>  [2828,]  3  678 110 #>  [2829,]  3  679 110 #>  [2830,]  3  680 110 #>  [2831,]  3  681 110 #>  [2832,]  3  682 110 #>  [2833,]  3  683 110 #>  [2834,]  3  684 110 #>  [2835,]  3  685 110 #>  [2836,]  3  686 110 #>  [2837,]  3  687 110 #>  [2838,]  3  688 110 #>  [2839,]  3  689 110 #>  [2840,]  3  690 110 #>  [2841,]  3  691 110 #>  [2842,]  3  692 110 #>  [2843,]  3  693 110 #>  [2844,]  3  694 110 #>  [2845,]  3  695 110 #>  [2846,]  3  696 110 #>  [2847,]  3  697 110 #>  [2848,]  3  698 110 #>  [2849,]  3  699 110 #>  [2850,]  3  700 110 #>  [2851,]  3  701 110 #>  [2852,]  3  702 110 #>  [2853,]  3  703 110 #>  [2854,]  3  704 110 #>  [2855,]  3  705 110 #>  [2856,]  3  706 110 #>  [2857,]  3  707 110 #>  [2858,]  3  708 110 #>  [2859,]  3  709 110 #>  [2860,]  3  710 110 #>  [2861,]  3  711 110 #>  [2862,]  3  712 110 #>  [2863,]  3  713 110 #>  [2864,]  3  714 110 #>  [2865,]  3  715 110 #>  [2866,]  3  716 110 #>  [2867,]  3  717 110 #>  [2868,]  3  718 110 #>  [2869,]  3  719 110 #>  [2870,]  3  720 110 #>  [2871,]  3  721 110 #>  [2872,]  3  722 110 #>  [2873,]  3  723 110 #>  [2874,]  3  724 110 #>  [2875,]  3  725 110 #>  [2876,]  3  726 110 #>  [2877,]  3  727 110 #>  [2878,]  3  728 110 #>  [2879,]  3  729 110 #>  [2880,]  3  730 110 #>  [2881,]  3  731 110 #>  [2882,]  3  732 110 #>  [2883,]  3  733 110 #>  [2884,]  3  734 110 #>  [2885,]  3  735 110 #>  [2886,]  3  736 110 #>  [2887,]  3  737 110 #>  [2888,]  3  738 110 #>  [2889,]  3  739 110 #>  [2890,]  3  740 110 #>  [2891,]  3  741 110 #>  [2892,]  3  742 110 #>  [2893,]  3  743 110 #>  [2894,]  3  744 110 #>  [2895,]  3  745 110 #>  [2896,]  3  746 110 #>  [2897,]  3  747 110 #>  [2898,]  3  748 110 #>  [2899,]  3  749 110 #>  [2900,]  3  750 110 #>  [2901,]  3  751 110 #>  [2902,]  3  752 110 #>  [2903,]  3  657 109 #>  [2904,]  3  658 109 #>  [2905,]  3  659 109 #>  [2906,]  3  660 109 #>  [2907,]  3  661 109 #>  [2908,]  3  662 109 #>  [2909,]  3  663 109 #>  [2910,]  3  664 109 #>  [2911,]  3  665 109 #>  [2912,]  3  666 109 #>  [2913,]  3  667 109 #>  [2914,]  3  668 109 #>  [2915,]  3  669 109 #>  [2916,]  3  670 109 #>  [2917,]  3  671 109 #>  [2918,]  3  672 109 #>  [2919,]  3  673 109 #>  [2920,]  3  674 109 #>  [2921,]  3  675 109 #>  [2922,]  3  676 109 #>  [2923,]  3  677 109 #>  [2924,]  3  678 109 #>  [2925,]  3  679 109 #>  [2926,]  3  680 109 #>  [2927,]  3  681 109 #>  [2928,]  3  682 109 #>  [2929,]  3  683 109 #>  [2930,]  3  684 109 #>  [2931,]  3  685 109 #>  [2932,]  3  686 109 #>  [2933,]  3  687 109 #>  [2934,]  3  688 109 #>  [2935,]  3  689 109 #>  [2936,]  3  690 109 #>  [2937,]  3  691 109 #>  [2938,]  3  692 109 #>  [2939,]  3  693 109 #>  [2940,]  3  694 109 #>  [2941,]  3  695 109 #>  [2942,]  3  696 109 #>  [2943,]  3  697 109 #>  [2944,]  3  698 109 #>  [2945,]  3  699 109 #>  [2946,]  3  700 109 #>  [2947,]  3  701 109 #>  [2948,]  3  702 109 #>  [2949,]  3  703 109 #>  [2950,]  3  704 109 #>  [2951,]  3  705 109 #>  [2952,]  3  706 109 #>  [2953,]  3  707 109 #>  [2954,]  3  708 109 #>  [2955,]  3  709 109 #>  [2956,]  3  710 109 #>  [2957,]  3  711 109 #>  [2958,]  3  712 109 #>  [2959,]  3  713 109 #>  [2960,]  3  714 109 #>  [2961,]  3  715 109 #>  [2962,]  3  716 109 #>  [2963,]  3  717 109 #>  [2964,]  3  718 109 #>  [2965,]  3  719 109 #>  [2966,]  3  720 109 #>  [2967,]  3  721 109 #>  [2968,]  3  722 109 #>  [2969,]  3  723 109 #>  [2970,]  3  724 109 #>  [2971,]  3  725 109 #>  [2972,]  3  726 109 #>  [2973,]  3  727 109 #>  [2974,]  3  728 109 #>  [2975,]  3  729 109 #>  [2976,]  3  730 109 #>  [2977,]  3  731 109 #>  [2978,]  3  732 109 #>  [2979,]  3  733 109 #>  [2980,]  3  734 109 #>  [2981,]  3  735 109 #>  [2982,]  3  736 109 #>  [2983,]  3  737 109 #>  [2984,]  3  738 109 #>  [2985,]  3  739 109 #>  [2986,]  3  740 109 #>  [2987,]  3  741 109 #>  [2988,]  3  742 109 #>  [2989,]  3  743 109 #>  [2990,]  3  744 109 #>  [2991,]  3  745 109 #>  [2992,]  3  746 109 #>  [2993,]  3  747 109 #>  [2994,]  3  748 109 #>  [2995,]  3  749 109 #>  [2996,]  3  750 109 #>  [2997,]  3  751 109 #>  [2998,]  3  752 109 #>  [2999,]  3  657 108 #>  [3000,]  3  658 108 #>  [3001,]  3  659 108 #>  [3002,]  3  660 108 #>  [3003,]  3  661 108 #>  [3004,]  3  662 108 #>  [3005,]  3  663 108 #>  [3006,]  3  664 108 #>  [3007,]  3  665 108 #>  [3008,]  3  666 108 #>  [3009,]  3  667 108 #>  [3010,]  3  668 108 #>  [3011,]  3  669 108 #>  [3012,]  3  670 108 #>  [3013,]  3  671 108 #>  [3014,]  3  672 108 #>  [3015,]  3  673 108 #>  [3016,]  3  674 108 #>  [3017,]  3  675 108 #>  [3018,]  3  676 108 #>  [3019,]  3  677 108 #>  [3020,]  3  678 108 #>  [3021,]  3  679 108 #>  [3022,]  3  680 108 #>  [3023,]  3  681 108 #>  [3024,]  3  682 108 #>  [3025,]  3  683 108 #>  [3026,]  3  684 108 #>  [3027,]  3  685 108 #>  [3028,]  3  686 108 #>  [3029,]  3  687 108 #>  [3030,]  3  688 108 #>  [3031,]  3  689 108 #>  [3032,]  3  690 108 #>  [3033,]  3  691 108 #>  [3034,]  3  692 108 #>  [3035,]  3  693 108 #>  [3036,]  3  694 108 #>  [3037,]  3  695 108 #>  [3038,]  3  696 108 #>  [3039,]  3  697 108 #>  [3040,]  3  698 108 #>  [3041,]  3  699 108 #>  [3042,]  3  700 108 #>  [3043,]  3  701 108 #>  [3044,]  3  702 108 #>  [3045,]  3  703 108 #>  [3046,]  3  704 108 #>  [3047,]  3  705 108 #>  [3048,]  3  706 108 #>  [3049,]  3  707 108 #>  [3050,]  3  708 108 #>  [3051,]  3  709 108 #>  [3052,]  3  710 108 #>  [3053,]  3  711 108 #>  [3054,]  3  712 108 #>  [3055,]  3  713 108 #>  [3056,]  3  714 108 #>  [3057,]  3  715 108 #>  [3058,]  3  716 108 #>  [3059,]  3  717 108 #>  [3060,]  3  718 108 #>  [3061,]  3  719 108 #>  [3062,]  3  720 108 #>  [3063,]  3  721 108 #>  [3064,]  3  722 108 #>  [3065,]  3  723 108 #>  [3066,]  3  724 108 #>  [3067,]  3  725 108 #>  [3068,]  3  726 108 #>  [3069,]  3  727 108 #>  [3070,]  3  728 108 #>  [3071,]  3  729 108 #>  [3072,]  3  730 108 #>  [3073,]  3  731 108 #>  [3074,]  3  732 108 #>  [3075,]  3  733 108 #>  [3076,]  3  734 108 #>  [3077,]  3  735 108 #>  [3078,]  3  736 108 #>  [3079,]  3  737 108 #>  [3080,]  3  738 108 #>  [3081,]  3  739 108 #>  [3082,]  3  740 108 #>  [3083,]  3  741 108 #>  [3084,]  3  742 108 #>  [3085,]  3  743 108 #>  [3086,]  3  744 108 #>  [3087,]  3  745 108 #>  [3088,]  3  746 108 #>  [3089,]  3  747 108 #>  [3090,]  3  748 108 #>  [3091,]  3  749 108 #>  [3092,]  3  750 108 #>  [3093,]  3  751 108 #>  [3094,]  3  752 108 #>  [3095,]  3  657 107 #>  [3096,]  3  658 107 #>  [3097,]  3  659 107 #>  [3098,]  3  660 107 #>  [3099,]  3  661 107 #>  [3100,]  3  662 107 #>  [3101,]  3  663 107 #>  [3102,]  3  664 107 #>  [3103,]  3  665 107 #>  [3104,]  3  666 107 #>  [3105,]  3  667 107 #>  [3106,]  3  668 107 #>  [3107,]  3  669 107 #>  [3108,]  3  670 107 #>  [3109,]  3  671 107 #>  [3110,]  3  672 107 #>  [3111,]  3  673 107 #>  [3112,]  3  674 107 #>  [3113,]  3  675 107 #>  [3114,]  3  676 107 #>  [3115,]  3  677 107 #>  [3116,]  3  678 107 #>  [3117,]  3  679 107 #>  [3118,]  3  680 107 #>  [3119,]  3  681 107 #>  [3120,]  3  682 107 #>  [3121,]  3  683 107 #>  [3122,]  3  684 107 #>  [3123,]  3  685 107 #>  [3124,]  3  686 107 #>  [3125,]  3  687 107 #>  [3126,]  3  688 107 #>  [3127,]  3  689 107 #>  [3128,]  3  690 107 #>  [3129,]  3  691 107 #>  [3130,]  3  692 107 #>  [3131,]  3  693 107 #>  [3132,]  3  694 107 #>  [3133,]  3  695 107 #>  [3134,]  3  696 107 #>  [3135,]  3  697 107 #>  [3136,]  3  698 107 #>  [3137,]  3  699 107 #>  [3138,]  3  700 107 #>  [3139,]  3  701 107 #>  [3140,]  3  702 107 #>  [3141,]  3  703 107 #>  [3142,]  3  704 107 #>  [3143,]  3  705 107 #>  [3144,]  3  706 107 #>  [3145,]  3  707 107 #>  [3146,]  3  708 107 #>  [3147,]  3  709 107 #>  [3148,]  3  710 107 #>  [3149,]  3  711 107 #>  [3150,]  3  712 107 #>  [3151,]  3  713 107 #>  [3152,]  3  714 107 #>  [3153,]  3  715 107 #>  [3154,]  3  716 107 #>  [3155,]  3  717 107 #>  [3156,]  3  718 107 #>  [3157,]  3  719 107 #>  [3158,]  3  720 107 #>  [3159,]  3  721 107 #>  [3160,]  3  722 107 #>  [3161,]  3  723 107 #>  [3162,]  3  724 107 #>  [3163,]  3  725 107 #>  [3164,]  3  726 107 #>  [3165,]  3  727 107 #>  [3166,]  3  728 107 #>  [3167,]  3  729 107 #>  [3168,]  3  730 107 #>  [3169,]  3  731 107 #>  [3170,]  3  732 107 #>  [3171,]  3  733 107 #>  [3172,]  3  734 107 #>  [3173,]  3  735 107 #>  [3174,]  3  736 107 #>  [3175,]  3  737 107 #>  [3176,]  3  738 107 #>  [3177,]  3  739 107 #>  [3178,]  3  740 107 #>  [3179,]  3  741 107 #>  [3180,]  3  742 107 #>  [3181,]  3  743 107 #>  [3182,]  3  744 107 #>  [3183,]  3  745 107 #>  [3184,]  3  746 107 #>  [3185,]  3  747 107 #>  [3186,]  3  748 107 #>  [3187,]  3  749 107 #>  [3188,]  3  750 107 #>  [3189,]  3  751 107 #>  [3190,]  3  752 107 #>  [3191,]  3  753 107 #>  [3192,]  3  656 106 #>  [3193,]  3  657 106 #>  [3194,]  3  658 106 #>  [3195,]  3  659 106 #>  [3196,]  3  660 106 #>  [3197,]  3  661 106 #>  [3198,]  3  662 106 #>  [3199,]  3  663 106 #>  [3200,]  3  664 106 #>  [3201,]  3  665 106 #>  [3202,]  3  666 106 #>  [3203,]  3  667 106 #>  [3204,]  3  668 106 #>  [3205,]  3  669 106 #>  [3206,]  3  670 106 #>  [3207,]  3  671 106 #>  [3208,]  3  672 106 #>  [3209,]  3  673 106 #>  [3210,]  3  674 106 #>  [3211,]  3  675 106 #>  [3212,]  3  676 106 #>  [3213,]  3  677 106 #>  [3214,]  3  678 106 #>  [3215,]  3  679 106 #>  [3216,]  3  680 106 #>  [3217,]  3  681 106 #>  [3218,]  3  682 106 #>  [3219,]  3  683 106 #>  [3220,]  3  684 106 #>  [3221,]  3  685 106 #>  [3222,]  3  686 106 #>  [3223,]  3  687 106 #>  [3224,]  3  688 106 #>  [3225,]  3  689 106 #>  [3226,]  3  690 106 #>  [3227,]  3  691 106 #>  [3228,]  3  692 106 #>  [3229,]  3  693 106 #>  [3230,]  3  694 106 #>  [3231,]  3  695 106 #>  [3232,]  3  696 106 #>  [3233,]  3  697 106 #>  [3234,]  3  698 106 #>  [3235,]  3  699 106 #>  [3236,]  3  700 106 #>  [3237,]  3  701 106 #>  [3238,]  3  702 106 #>  [3239,]  3  703 106 #>  [3240,]  3  704 106 #>  [3241,]  3  705 106 #>  [3242,]  3  706 106 #>  [3243,]  3  707 106 #>  [3244,]  3  708 106 #>  [3245,]  3  709 106 #>  [3246,]  3  710 106 #>  [3247,]  3  711 106 #>  [3248,]  3  712 106 #>  [3249,]  3  713 106 #>  [3250,]  3  714 106 #>  [3251,]  3  715 106 #>  [3252,]  3  716 106 #>  [3253,]  3  717 106 #>  [3254,]  3  718 106 #>  [3255,]  3  719 106 #>  [3256,]  3  720 106 #>  [3257,]  3  721 106 #>  [3258,]  3  722 106 #>  [3259,]  3  723 106 #>  [3260,]  3  724 106 #>  [3261,]  3  725 106 #>  [3262,]  3  726 106 #>  [3263,]  3  727 106 #>  [3264,]  3  728 106 #>  [3265,]  3  729 106 #>  [3266,]  3  730 106 #>  [3267,]  3  731 106 #>  [3268,]  3  732 106 #>  [3269,]  3  733 106 #>  [3270,]  3  734 106 #>  [3271,]  3  735 106 #>  [3272,]  3  736 106 #>  [3273,]  3  737 106 #>  [3274,]  3  738 106 #>  [3275,]  3  739 106 #>  [3276,]  3  740 106 #>  [3277,]  3  741 106 #>  [3278,]  3  742 106 #>  [3279,]  3  743 106 #>  [3280,]  3  744 106 #>  [3281,]  3  745 106 #>  [3282,]  3  746 106 #>  [3283,]  3  747 106 #>  [3284,]  3  748 106 #>  [3285,]  3  749 106 #>  [3286,]  3  750 106 #>  [3287,]  3  751 106 #>  [3288,]  3  752 106 #>  [3289,]  3  753 106 #>  [3290,]  3  656 105 #>  [3291,]  3  657 105 #>  [3292,]  3  658 105 #>  [3293,]  3  659 105 #>  [3294,]  3  660 105 #>  [3295,]  3  661 105 #>  [3296,]  3  662 105 #>  [3297,]  3  663 105 #>  [3298,]  3  664 105 #>  [3299,]  3  665 105 #>  [3300,]  3  666 105 #>  [3301,]  3  667 105 #>  [3302,]  3  668 105 #>  [3303,]  3  669 105 #>  [3304,]  3  670 105 #>  [3305,]  3  671 105 #>  [3306,]  3  672 105 #>  [3307,]  3  673 105 #>  [3308,]  3  674 105 #>  [3309,]  3  675 105 #>  [3310,]  3  676 105 #>  [3311,]  3  677 105 #>  [3312,]  3  678 105 #>  [3313,]  3  679 105 #>  [3314,]  3  680 105 #>  [3315,]  3  681 105 #>  [3316,]  3  682 105 #>  [3317,]  3  683 105 #>  [3318,]  3  684 105 #>  [3319,]  3  685 105 #>  [3320,]  3  686 105 #>  [3321,]  3  687 105 #>  [3322,]  3  688 105 #>  [3323,]  3  689 105 #>  [3324,]  3  690 105 #>  [3325,]  3  691 105 #>  [3326,]  3  692 105 #>  [3327,]  3  693 105 #>  [3328,]  3  694 105 #>  [3329,]  3  695 105 #>  [3330,]  3  696 105 #>  [3331,]  3  697 105 #>  [3332,]  3  698 105 #>  [3333,]  3  699 105 #>  [3334,]  3  700 105 #>  [3335,]  3  701 105 #>  [3336,]  3  702 105 #>  [3337,]  3  703 105 #>  [3338,]  3  704 105 #>  [3339,]  3  705 105 #>  [3340,]  3  706 105 #>  [3341,]  3  707 105 #>  [3342,]  3  708 105 #>  [3343,]  3  709 105 #>  [3344,]  3  710 105 #>  [3345,]  3  711 105 #>  [3346,]  3  712 105 #>  [3347,]  3  713 105 #>  [3348,]  3  714 105 #>  [3349,]  3  715 105 #>  [3350,]  3  716 105 #>  [3351,]  3  717 105 #>  [3352,]  3  718 105 #>  [3353,]  3  719 105 #>  [3354,]  3  720 105 #>  [3355,]  3  721 105 #>  [3356,]  3  722 105 #>  [3357,]  3  723 105 #>  [3358,]  3  724 105 #>  [3359,]  3  725 105 #>  [3360,]  3  726 105 #>  [3361,]  3  727 105 #>  [3362,]  3  728 105 #>  [3363,]  3  729 105 #>  [3364,]  3  730 105 #>  [3365,]  3  731 105 #>  [3366,]  3  732 105 #>  [3367,]  3  733 105 #>  [3368,]  3  734 105 #>  [3369,]  3  735 105 #>  [3370,]  3  736 105 #>  [3371,]  3  737 105 #>  [3372,]  3  738 105 #>  [3373,]  3  739 105 #>  [3374,]  3  740 105 #>  [3375,]  3  741 105 #>  [3376,]  3  742 105 #>  [3377,]  3  743 105 #>  [3378,]  3  744 105 #>  [3379,]  3  745 105 #>  [3380,]  3  746 105 #>  [3381,]  3  747 105 #>  [3382,]  3  748 105 #>  [3383,]  3  749 105 #>  [3384,]  3  750 105 #>  [3385,]  3  751 105 #>  [3386,]  3  752 105 #>  [3387,]  3  753 105 #>  [3388,]  3  656 104 #>  [3389,]  3  657 104 #>  [3390,]  3  658 104 #>  [3391,]  3  659 104 #>  [3392,]  3  660 104 #>  [3393,]  3  661 104 #>  [3394,]  3  662 104 #>  [3395,]  3  663 104 #>  [3396,]  3  664 104 #>  [3397,]  3  665 104 #>  [3398,]  3  666 104 #>  [3399,]  3  667 104 #>  [3400,]  3  668 104 #>  [3401,]  3  669 104 #>  [3402,]  3  670 104 #>  [3403,]  3  671 104 #>  [3404,]  3  672 104 #>  [3405,]  3  673 104 #>  [3406,]  3  674 104 #>  [3407,]  3  675 104 #>  [3408,]  3  676 104 #>  [3409,]  3  677 104 #>  [3410,]  3  678 104 #>  [3411,]  3  679 104 #>  [3412,]  3  680 104 #>  [3413,]  3  681 104 #>  [3414,]  3  682 104 #>  [3415,]  3  683 104 #>  [3416,]  3  684 104 #>  [3417,]  3  685 104 #>  [3418,]  3  686 104 #>  [3419,]  3  687 104 #>  [3420,]  3  688 104 #>  [3421,]  3  689 104 #>  [3422,]  3  690 104 #>  [3423,]  3  691 104 #>  [3424,]  3  692 104 #>  [3425,]  3  693 104 #>  [3426,]  3  694 104 #>  [3427,]  3  695 104 #>  [3428,]  3  696 104 #>  [3429,]  3  697 104 #>  [3430,]  3  698 104 #>  [3431,]  3  699 104 #>  [3432,]  3  700 104 #>  [3433,]  3  701 104 #>  [3434,]  3  702 104 #>  [3435,]  3  703 104 #>  [3436,]  3  704 104 #>  [3437,]  3  705 104 #>  [3438,]  3  706 104 #>  [3439,]  3  707 104 #>  [3440,]  3  708 104 #>  [3441,]  3  709 104 #>  [3442,]  3  710 104 #>  [3443,]  3  711 104 #>  [3444,]  3  712 104 #>  [3445,]  3  713 104 #>  [3446,]  3  714 104 #>  [3447,]  3  715 104 #>  [3448,]  3  716 104 #>  [3449,]  3  717 104 #>  [3450,]  3  718 104 #>  [3451,]  3  719 104 #>  [3452,]  3  720 104 #>  [3453,]  3  721 104 #>  [3454,]  3  722 104 #>  [3455,]  3  723 104 #>  [3456,]  3  724 104 #>  [3457,]  3  725 104 #>  [3458,]  3  726 104 #>  [3459,]  3  727 104 #>  [3460,]  3  728 104 #>  [3461,]  3  729 104 #>  [3462,]  3  730 104 #>  [3463,]  3  731 104 #>  [3464,]  3  732 104 #>  [3465,]  3  733 104 #>  [3466,]  3  734 104 #>  [3467,]  3  735 104 #>  [3468,]  3  736 104 #>  [3469,]  3  737 104 #>  [3470,]  3  738 104 #>  [3471,]  3  739 104 #>  [3472,]  3  740 104 #>  [3473,]  3  741 104 #>  [3474,]  3  742 104 #>  [3475,]  3  743 104 #>  [3476,]  3  744 104 #>  [3477,]  3  745 104 #>  [3478,]  3  746 104 #>  [3479,]  3  747 104 #>  [3480,]  3  748 104 #>  [3481,]  3  749 104 #>  [3482,]  3  750 104 #>  [3483,]  3  751 104 #>  [3484,]  3  752 104 #>  [3485,]  3  753 104 #>  [3486,]  3  656 103 #>  [3487,]  3  657 103 #>  [3488,]  3  658 103 #>  [3489,]  3  659 103 #>  [3490,]  3  660 103 #>  [3491,]  3  661 103 #>  [3492,]  3  662 103 #>  [3493,]  3  663 103 #>  [3494,]  3  664 103 #>  [3495,]  3  665 103 #>  [3496,]  3  666 103 #>  [3497,]  3  667 103 #>  [3498,]  3  668 103 #>  [3499,]  3  669 103 #>  [3500,]  3  670 103 #>  [3501,]  3  671 103 #>  [3502,]  3  672 103 #>  [3503,]  3  673 103 #>  [3504,]  3  674 103 #>  [3505,]  3  675 103 #>  [3506,]  3  676 103 #>  [3507,]  3  677 103 #>  [3508,]  3  678 103 #>  [3509,]  3  679 103 #>  [3510,]  3  680 103 #>  [3511,]  3  681 103 #>  [3512,]  3  682 103 #>  [3513,]  3  683 103 #>  [3514,]  3  684 103 #>  [3515,]  3  685 103 #>  [3516,]  3  686 103 #>  [3517,]  3  687 103 #>  [3518,]  3  688 103 #>  [3519,]  3  689 103 #>  [3520,]  3  690 103 #>  [3521,]  3  691 103 #>  [3522,]  3  692 103 #>  [3523,]  3  693 103 #>  [3524,]  3  694 103 #>  [3525,]  3  695 103 #>  [3526,]  3  696 103 #>  [3527,]  3  697 103 #>  [3528,]  3  698 103 #>  [3529,]  3  699 103 #>  [3530,]  3  700 103 #>  [3531,]  3  701 103 #>  [3532,]  3  702 103 #>  [3533,]  3  703 103 #>  [3534,]  3  704 103 #>  [3535,]  3  705 103 #>  [3536,]  3  706 103 #>  [3537,]  3  707 103 #>  [3538,]  3  708 103 #>  [3539,]  3  709 103 #>  [3540,]  3  710 103 #>  [3541,]  3  711 103 #>  [3542,]  3  712 103 #>  [3543,]  3  713 103 #>  [3544,]  3  714 103 #>  [3545,]  3  715 103 #>  [3546,]  3  716 103 #>  [3547,]  3  717 103 #>  [3548,]  3  718 103 #>  [3549,]  3  719 103 #>  [3550,]  3  720 103 #>  [3551,]  3  721 103 #>  [3552,]  3  722 103 #>  [3553,]  3  723 103 #>  [3554,]  3  724 103 #>  [3555,]  3  725 103 #>  [3556,]  3  726 103 #>  [3557,]  3  727 103 #>  [3558,]  3  728 103 #>  [3559,]  3  729 103 #>  [3560,]  3  730 103 #>  [3561,]  3  731 103 #>  [3562,]  3  732 103 #>  [3563,]  3  733 103 #>  [3564,]  3  734 103 #>  [3565,]  3  735 103 #>  [3566,]  3  736 103 #>  [3567,]  3  737 103 #>  [3568,]  3  738 103 #>  [3569,]  3  739 103 #>  [3570,]  3  740 103 #>  [3571,]  3  741 103 #>  [3572,]  3  742 103 #>  [3573,]  3  743 103 #>  [3574,]  3  744 103 #>  [3575,]  3  745 103 #>  [3576,]  3  746 103 #>  [3577,]  3  747 103 #>  [3578,]  3  748 103 #>  [3579,]  3  749 103 #>  [3580,]  3  750 103 #>  [3581,]  3  751 103 #>  [3582,]  3  752 103 #>  [3583,]  3  753 103 #>  [3584,]  3  656 102 #>  [3585,]  3  657 102 #>  [3586,]  3  658 102 #>  [3587,]  3  659 102 #>  [3588,]  3  660 102 #>  [3589,]  3  661 102 #>  [3590,]  3  662 102 #>  [3591,]  3  663 102 #>  [3592,]  3  664 102 #>  [3593,]  3  665 102 #>  [3594,]  3  666 102 #>  [3595,]  3  667 102 #>  [3596,]  3  668 102 #>  [3597,]  3  669 102 #>  [3598,]  3  670 102 #>  [3599,]  3  671 102 #>  [3600,]  3  672 102 #>  [3601,]  3  673 102 #>  [3602,]  3  674 102 #>  [3603,]  3  675 102 #>  [3604,]  3  676 102 #>  [3605,]  3  677 102 #>  [3606,]  3  678 102 #>  [3607,]  3  679 102 #>  [3608,]  3  680 102 #>  [3609,]  3  681 102 #>  [3610,]  3  682 102 #>  [3611,]  3  683 102 #>  [3612,]  3  684 102 #>  [3613,]  3  685 102 #>  [3614,]  3  686 102 #>  [3615,]  3  687 102 #>  [3616,]  3  688 102 #>  [3617,]  3  689 102 #>  [3618,]  3  690 102 #>  [3619,]  3  691 102 #>  [3620,]  3  692 102 #>  [3621,]  3  693 102 #>  [3622,]  3  694 102 #>  [3623,]  3  695 102 #>  [3624,]  3  696 102 #>  [3625,]  3  697 102 #>  [3626,]  3  698 102 #>  [3627,]  3  699 102 #>  [3628,]  3  700 102 #>  [3629,]  3  701 102 #>  [3630,]  3  702 102 #>  [3631,]  3  703 102 #>  [3632,]  3  704 102 #>  [3633,]  3  705 102 #>  [3634,]  3  706 102 #>  [3635,]  3  707 102 #>  [3636,]  3  708 102 #>  [3637,]  3  709 102 #>  [3638,]  3  710 102 #>  [3639,]  3  711 102 #>  [3640,]  3  712 102 #>  [3641,]  3  713 102 #>  [3642,]  3  714 102 #>  [3643,]  3  715 102 #>  [3644,]  3  716 102 #>  [3645,]  3  717 102 #>  [3646,]  3  718 102 #>  [3647,]  3  719 102 #>  [3648,]  3  720 102 #>  [3649,]  3  721 102 #>  [3650,]  3  722 102 #>  [3651,]  3  723 102 #>  [3652,]  3  724 102 #>  [3653,]  3  725 102 #>  [3654,]  3  726 102 #>  [3655,]  3  727 102 #>  [3656,]  3  728 102 #>  [3657,]  3  729 102 #>  [3658,]  3  730 102 #>  [3659,]  3  731 102 #>  [3660,]  3  732 102 #>  [3661,]  3  733 102 #>  [3662,]  3  734 102 #>  [3663,]  3  735 102 #>  [3664,]  3  736 102 #>  [3665,]  3  737 102 #>  [3666,]  3  738 102 #>  [3667,]  3  739 102 #>  [3668,]  3  740 102 #>  [3669,]  3  741 102 #>  [3670,]  3  742 102 #>  [3671,]  3  743 102 #>  [3672,]  3  744 102 #>  [3673,]  3  745 102 #>  [3674,]  3  746 102 #>  [3675,]  3  747 102 #>  [3676,]  3  748 102 #>  [3677,]  3  749 102 #>  [3678,]  3  750 102 #>  [3679,]  3  751 102 #>  [3680,]  3  752 102 #>  [3681,]  3  753 102 #>  [3682,]  3  754 102 #>  [3683,]  3  656 101 #>  [3684,]  3  657 101 #>  [3685,]  3  658 101 #>  [3686,]  3  659 101 #>  [3687,]  3  660 101 #>  [3688,]  3  661 101 #>  [3689,]  3  662 101 #>  [3690,]  3  663 101 #>  [3691,]  3  664 101 #>  [3692,]  3  665 101 #>  [3693,]  3  666 101 #>  [3694,]  3  667 101 #>  [3695,]  3  668 101 #>  [3696,]  3  669 101 #>  [3697,]  3  670 101 #>  [3698,]  3  671 101 #>  [3699,]  3  672 101 #>  [3700,]  3  673 101 #>  [3701,]  3  674 101 #>  [3702,]  3  675 101 #>  [3703,]  3  676 101 #>  [3704,]  3  677 101 #>  [3705,]  3  678 101 #>  [3706,]  3  679 101 #>  [3707,]  3  680 101 #>  [3708,]  3  681 101 #>  [3709,]  3  682 101 #>  [3710,]  3  683 101 #>  [3711,]  3  684 101 #>  [3712,]  3  685 101 #>  [3713,]  3  686 101 #>  [3714,]  3  687 101 #>  [3715,]  3  688 101 #>  [3716,]  3  689 101 #>  [3717,]  3  690 101 #>  [3718,]  3  691 101 #>  [3719,]  3  692 101 #>  [3720,]  3  693 101 #>  [3721,]  3  694 101 #>  [3722,]  3  695 101 #>  [3723,]  3  696 101 #>  [3724,]  3  697 101 #>  [3725,]  3  698 101 #>  [3726,]  3  699 101 #>  [3727,]  3  700 101 #>  [3728,]  3  701 101 #>  [3729,]  3  702 101 #>  [3730,]  3  703 101 #>  [3731,]  3  704 101 #>  [3732,]  3  705 101 #>  [3733,]  3  706 101 #>  [3734,]  3  707 101 #>  [3735,]  3  708 101 #>  [3736,]  3  709 101 #>  [3737,]  3  710 101 #>  [3738,]  3  711 101 #>  [3739,]  3  712 101 #>  [3740,]  3  713 101 #>  [3741,]  3  714 101 #>  [3742,]  3  715 101 #>  [3743,]  3  716 101 #>  [3744,]  3  717 101 #>  [3745,]  3  718 101 #>  [3746,]  3  719 101 #>  [3747,]  3  720 101 #>  [3748,]  3  721 101 #>  [3749,]  3  722 101 #>  [3750,]  3  723 101 #>  [3751,]  3  724 101 #>  [3752,]  3  725 101 #>  [3753,]  3  726 101 #>  [3754,]  3  727 101 #>  [3755,]  3  728 101 #>  [3756,]  3  729 101 #>  [3757,]  3  730 101 #>  [3758,]  3  731 101 #>  [3759,]  3  732 101 #>  [3760,]  3  733 101 #>  [3761,]  3  734 101 #>  [3762,]  3  735 101 #>  [3763,]  3  736 101 #>  [3764,]  3  737 101 #>  [3765,]  3  738 101 #>  [3766,]  3  739 101 #>  [3767,]  3  740 101 #>  [3768,]  3  741 101 #>  [3769,]  3  742 101 #>  [3770,]  3  743 101 #>  [3771,]  3  744 101 #>  [3772,]  3  745 101 #>  [3773,]  3  746 101 #>  [3774,]  3  747 101 #>  [3775,]  3  748 101 #>  [3776,]  3  749 101 #>  [3777,]  3  750 101 #>  [3778,]  3  751 101 #>  [3779,]  3  752 101 #>  [3780,]  3  753 101 #>  [3781,]  3  754 101 #>  [3782,]  3  656 100 #>  [3783,]  3  657 100 #>  [3784,]  3  658 100 #>  [3785,]  3  659 100 #>  [3786,]  3  660 100 #>  [3787,]  3  661 100 #>  [3788,]  3  662 100 #>  [3789,]  3  663 100 #>  [3790,]  3  664 100 #>  [3791,]  3  665 100 #>  [3792,]  3  666 100 #>  [3793,]  3  667 100 #>  [3794,]  3  668 100 #>  [3795,]  3  669 100 #>  [3796,]  3  670 100 #>  [3797,]  3  671 100 #>  [3798,]  3  672 100 #>  [3799,]  3  673 100 #>  [3800,]  3  674 100 #>  [3801,]  3  675 100 #>  [3802,]  3  676 100 #>  [3803,]  3  677 100 #>  [3804,]  3  678 100 #>  [3805,]  3  679 100 #>  [3806,]  3  680 100 #>  [3807,]  3  681 100 #>  [3808,]  3  682 100 #>  [3809,]  3  683 100 #>  [3810,]  3  684 100 #>  [3811,]  3  685 100 #>  [3812,]  3  686 100 #>  [3813,]  3  687 100 #>  [3814,]  3  688 100 #>  [3815,]  3  689 100 #>  [3816,]  3  690 100 #>  [3817,]  3  691 100 #>  [3818,]  3  692 100 #>  [3819,]  3  693 100 #>  [3820,]  3  694 100 #>  [3821,]  3  695 100 #>  [3822,]  3  696 100 #>  [3823,]  3  697 100 #>  [3824,]  3  698 100 #>  [3825,]  3  699 100 #>  [3826,]  3  700 100 #>  [3827,]  3  701 100 #>  [3828,]  3  702 100 #>  [3829,]  3  703 100 #>  [3830,]  3  704 100 #>  [3831,]  3  705 100 #>  [3832,]  3  706 100 #>  [3833,]  3  707 100 #>  [3834,]  3  708 100 #>  [3835,]  3  709 100 #>  [3836,]  3  710 100 #>  [3837,]  3  711 100 #>  [3838,]  3  712 100 #>  [3839,]  3  713 100 #>  [3840,]  3  714 100 #>  [3841,]  3  715 100 #>  [3842,]  3  716 100 #>  [3843,]  3  717 100 #>  [3844,]  3  718 100 #>  [3845,]  3  719 100 #>  [3846,]  3  720 100 #>  [3847,]  3  721 100 #>  [3848,]  3  722 100 #>  [3849,]  3  723 100 #>  [3850,]  3  724 100 #>  [3851,]  3  725 100 #>  [3852,]  3  726 100 #>  [3853,]  3  727 100 #>  [3854,]  3  728 100 #>  [3855,]  3  729 100 #>  [3856,]  3  730 100 #>  [3857,]  3  731 100 #>  [3858,]  3  732 100 #>  [3859,]  3  733 100 #>  [3860,]  3  734 100 #>  [3861,]  3  735 100 #>  [3862,]  3  736 100 #>  [3863,]  3  737 100 #>  [3864,]  3  738 100 #>  [3865,]  3  739 100 #>  [3866,]  3  740 100 #>  [3867,]  3  741 100 #>  [3868,]  3  742 100 #>  [3869,]  3  743 100 #>  [3870,]  3  744 100 #>  [3871,]  3  745 100 #>  [3872,]  3  746 100 #>  [3873,]  3  747 100 #>  [3874,]  3  748 100 #>  [3875,]  3  749 100 #>  [3876,]  3  750 100 #>  [3877,]  3  751 100 #>  [3878,]  3  752 100 #>  [3879,]  3  753 100 #>  [3880,]  3  754 100 #>  [3881,]  3  656  99 #>  [3882,]  3  657  99 #>  [3883,]  3  658  99 #>  [3884,]  3  659  99 #>  [3885,]  3  660  99 #>  [3886,]  3  661  99 #>  [3887,]  3  662  99 #>  [3888,]  3  663  99 #>  [3889,]  3  664  99 #>  [3890,]  3  665  99 #>  [3891,]  3  666  99 #>  [3892,]  3  667  99 #>  [3893,]  3  668  99 #>  [3894,]  3  669  99 #>  [3895,]  3  670  99 #>  [3896,]  3  671  99 #>  [3897,]  3  672  99 #>  [3898,]  3  673  99 #>  [3899,]  3  674  99 #>  [3900,]  3  675  99 #>  [3901,]  3  676  99 #>  [3902,]  3  677  99 #>  [3903,]  3  678  99 #>  [3904,]  3  679  99 #>  [3905,]  3  680  99 #>  [3906,]  3  681  99 #>  [3907,]  3  682  99 #>  [3908,]  3  683  99 #>  [3909,]  3  684  99 #>  [3910,]  3  685  99 #>  [3911,]  3  686  99 #>  [3912,]  3  687  99 #>  [3913,]  3  688  99 #>  [3914,]  3  689  99 #>  [3915,]  3  690  99 #>  [3916,]  3  691  99 #>  [3917,]  3  692  99 #>  [3918,]  3  693  99 #>  [3919,]  3  694  99 #>  [3920,]  3  695  99 #>  [3921,]  3  696  99 #>  [3922,]  3  697  99 #>  [3923,]  3  698  99 #>  [3924,]  3  699  99 #>  [3925,]  3  700  99 #>  [3926,]  3  701  99 #>  [3927,]  3  702  99 #>  [3928,]  3  703  99 #>  [3929,]  3  704  99 #>  [3930,]  3  705  99 #>  [3931,]  3  706  99 #>  [3932,]  3  707  99 #>  [3933,]  3  708  99 #>  [3934,]  3  709  99 #>  [3935,]  3  710  99 #>  [3936,]  3  711  99 #>  [3937,]  3  712  99 #>  [3938,]  3  713  99 #>  [3939,]  3  714  99 #>  [3940,]  3  715  99 #>  [3941,]  3  716  99 #>  [3942,]  3  717  99 #>  [3943,]  3  718  99 #>  [3944,]  3  719  99 #>  [3945,]  3  720  99 #>  [3946,]  3  721  99 #>  [3947,]  3  722  99 #>  [3948,]  3  723  99 #>  [3949,]  3  724  99 #>  [3950,]  3  725  99 #>  [3951,]  3  726  99 #>  [3952,]  3  727  99 #>  [3953,]  3  728  99 #>  [3954,]  3  729  99 #>  [3955,]  3  730  99 #>  [3956,]  3  731  99 #>  [3957,]  3  732  99 #>  [3958,]  3  733  99 #>  [3959,]  3  734  99 #>  [3960,]  3  735  99 #>  [3961,]  3  736  99 #>  [3962,]  3  737  99 #>  [3963,]  3  738  99 #>  [3964,]  3  739  99 #>  [3965,]  3  740  99 #>  [3966,]  3  741  99 #>  [3967,]  3  742  99 #>  [3968,]  3  743  99 #>  [3969,]  3  744  99 #>  [3970,]  3  745  99 #>  [3971,]  3  746  99 #>  [3972,]  3  747  99 #>  [3973,]  3  748  99 #>  [3974,]  3  749  99 #>  [3975,]  3  750  99 #>  [3976,]  3  751  99 #>  [3977,]  3  752  99 #>  [3978,]  3  753  99 #>  [3979,]  3  754  99 #>  [3980,]  3  656  98 #>  [3981,]  3  657  98 #>  [3982,]  3  658  98 #>  [3983,]  3  659  98 #>  [3984,]  3  660  98 #>  [3985,]  3  661  98 #>  [3986,]  3  662  98 #>  [3987,]  3  663  98 #>  [3988,]  3  664  98 #>  [3989,]  3  665  98 #>  [3990,]  3  666  98 #>  [3991,]  3  667  98 #>  [3992,]  3  668  98 #>  [3993,]  3  669  98 #>  [3994,]  3  670  98 #>  [3995,]  3  671  98 #>  [3996,]  3  672  98 #>  [3997,]  3  673  98 #>  [3998,]  3  674  98 #>  [3999,]  3  675  98 #>  [4000,]  3  676  98 #>  [4001,]  3  677  98 #>  [4002,]  3  678  98 #>  [4003,]  3  679  98 #>  [4004,]  3  680  98 #>  [4005,]  3  681  98 #>  [4006,]  3  682  98 #>  [4007,]  3  683  98 #>  [4008,]  3  684  98 #>  [4009,]  3  685  98 #>  [4010,]  3  686  98 #>  [4011,]  3  687  98 #>  [4012,]  3  688  98 #>  [4013,]  3  689  98 #>  [4014,]  3  690  98 #>  [4015,]  3  691  98 #>  [4016,]  3  692  98 #>  [4017,]  3  693  98 #>  [4018,]  3  694  98 #>  [4019,]  3  695  98 #>  [4020,]  3  696  98 #>  [4021,]  3  697  98 #>  [4022,]  3  698  98 #>  [4023,]  3  699  98 #>  [4024,]  3  700  98 #>  [4025,]  3  701  98 #>  [4026,]  3  702  98 #>  [4027,]  3  703  98 #>  [4028,]  3  704  98 #>  [4029,]  3  705  98 #>  [4030,]  3  706  98 #>  [4031,]  3  707  98 #>  [4032,]  3  708  98 #>  [4033,]  3  709  98 #>  [4034,]  3  710  98 #>  [4035,]  3  711  98 #>  [4036,]  3  712  98 #>  [4037,]  3  713  98 #>  [4038,]  3  714  98 #>  [4039,]  3  715  98 #>  [4040,]  3  716  98 #>  [4041,]  3  717  98 #>  [4042,]  3  718  98 #>  [4043,]  3  719  98 #>  [4044,]  3  720  98 #>  [4045,]  3  721  98 #>  [4046,]  3  722  98 #>  [4047,]  3  723  98 #>  [4048,]  3  724  98 #>  [4049,]  3  725  98 #>  [4050,]  3  726  98 #>  [4051,]  3  727  98 #>  [4052,]  3  728  98 #>  [4053,]  3  729  98 #>  [4054,]  3  730  98 #>  [4055,]  3  731  98 #>  [4056,]  3  732  98 #>  [4057,]  3  733  98 #>  [4058,]  3  734  98 #>  [4059,]  3  735  98 #>  [4060,]  3  736  98 #>  [4061,]  3  737  98 #>  [4062,]  3  738  98 #>  [4063,]  3  739  98 #>  [4064,]  3  740  98 #>  [4065,]  3  741  98 #>  [4066,]  3  742  98 #>  [4067,]  3  743  98 #>  [4068,]  3  744  98 #>  [4069,]  3  745  98 #>  [4070,]  3  746  98 #>  [4071,]  3  747  98 #>  [4072,]  3  748  98 #>  [4073,]  3  749  98 #>  [4074,]  3  750  98 #>  [4075,]  3  751  98 #>  [4076,]  3  752  98 #>  [4077,]  3  753  98 #>  [4078,]  3  754  98 #>  [4079,]  3  656  97 #>  [4080,]  3  657  97 #>  [4081,]  3  658  97 #>  [4082,]  3  659  97 #>  [4083,]  3  660  97 #>  [4084,]  3  661  97 #>  [4085,]  3  662  97 #>  [4086,]  3  663  97 #>  [4087,]  3  664  97 #>  [4088,]  3  665  97 #>  [4089,]  3  666  97 #>  [4090,]  3  667  97 #>  [4091,]  3  668  97 #>  [4092,]  3  669  97 #>  [4093,]  3  670  97 #>  [4094,]  3  671  97 #>  [4095,]  3  672  97 #>  [4096,]  3  673  97 #>  [4097,]  3  674  97 #>  [4098,]  3  675  97 #>  [4099,]  3  676  97 #>  [4100,]  3  677  97 #>  [4101,]  3  678  97 #>  [4102,]  3  679  97 #>  [4103,]  3  680  97 #>  [4104,]  3  681  97 #>  [4105,]  3  682  97 #>  [4106,]  3  683  97 #>  [4107,]  3  684  97 #>  [4108,]  3  685  97 #>  [4109,]  3  686  97 #>  [4110,]  3  687  97 #>  [4111,]  3  688  97 #>  [4112,]  3  689  97 #>  [4113,]  3  690  97 #>  [4114,]  3  691  97 #>  [4115,]  3  692  97 #>  [4116,]  3  693  97 #>  [4117,]  3  694  97 #>  [4118,]  3  695  97 #>  [4119,]  3  696  97 #>  [4120,]  3  697  97 #>  [4121,]  3  698  97 #>  [4122,]  3  699  97 #>  [4123,]  3  700  97 #>  [4124,]  3  701  97 #>  [4125,]  3  702  97 #>  [4126,]  3  703  97 #>  [4127,]  3  704  97 #>  [4128,]  3  705  97 #>  [4129,]  3  706  97 #>  [4130,]  3  707  97 #>  [4131,]  3  708  97 #>  [4132,]  3  709  97 #>  [4133,]  3  710  97 #>  [4134,]  3  711  97 #>  [4135,]  3  712  97 #>  [4136,]  3  713  97 #>  [4137,]  3  714  97 #>  [4138,]  3  715  97 #>  [4139,]  3  716  97 #>  [4140,]  3  717  97 #>  [4141,]  3  718  97 #>  [4142,]  3  719  97 #>  [4143,]  3  720  97 #>  [4144,]  3  721  97 #>  [4145,]  3  722  97 #>  [4146,]  3  723  97 #>  [4147,]  3  724  97 #>  [4148,]  3  725  97 #>  [4149,]  3  726  97 #>  [4150,]  3  727  97 #>  [4151,]  3  728  97 #>  [4152,]  3  729  97 #>  [4153,]  3  730  97 #>  [4154,]  3  731  97 #>  [4155,]  3  732  97 #>  [4156,]  3  733  97 #>  [4157,]  3  734  97 #>  [4158,]  3  735  97 #>  [4159,]  3  736  97 #>  [4160,]  3  737  97 #>  [4161,]  3  738  97 #>  [4162,]  3  739  97 #>  [4163,]  3  740  97 #>  [4164,]  3  741  97 #>  [4165,]  3  742  97 #>  [4166,]  3  743  97 #>  [4167,]  3  744  97 #>  [4168,]  3  745  97 #>  [4169,]  3  746  97 #>  [4170,]  3  747  97 #>  [4171,]  3  748  97 #>  [4172,]  3  749  97 #>  [4173,]  3  750  97 #>  [4174,]  3  751  97 #>  [4175,]  3  752  97 #>  [4176,]  3  753  97 #>  [4177,]  3  754  97 #>  [4178,]  3  656  96 #>  [4179,]  3  657  96 #>  [4180,]  3  658  96 #>  [4181,]  3  659  96 #>  [4182,]  3  660  96 #>  [4183,]  3  661  96 #>  [4184,]  3  662  96 #>  [4185,]  3  663  96 #>  [4186,]  3  664  96 #>  [4187,]  3  665  96 #>  [4188,]  3  666  96 #>  [4189,]  3  667  96 #>  [4190,]  3  668  96 #>  [4191,]  3  669  96 #>  [4192,]  3  670  96 #>  [4193,]  3  671  96 #>  [4194,]  3  672  96 #>  [4195,]  3  673  96 #>  [4196,]  3  674  96 #>  [4197,]  3  675  96 #>  [4198,]  3  676  96 #>  [4199,]  3  677  96 #>  [4200,]  3  678  96 #>  [4201,]  3  679  96 #>  [4202,]  3  680  96 #>  [4203,]  3  681  96 #>  [4204,]  3  682  96 #>  [4205,]  3  683  96 #>  [4206,]  3  684  96 #>  [4207,]  3  685  96 #>  [4208,]  3  686  96 #>  [4209,]  3  687  96 #>  [4210,]  3  688  96 #>  [4211,]  3  689  96 #>  [4212,]  3  690  96 #>  [4213,]  3  691  96 #>  [4214,]  3  692  96 #>  [4215,]  3  693  96 #>  [4216,]  3  694  96 #>  [4217,]  3  695  96 #>  [4218,]  3  696  96 #>  [4219,]  3  697  96 #>  [4220,]  3  698  96 #>  [4221,]  3  699  96 #>  [4222,]  3  700  96 #>  [4223,]  3  701  96 #>  [4224,]  3  702  96 #>  [4225,]  3  703  96 #>  [4226,]  3  704  96 #>  [4227,]  3  705  96 #>  [4228,]  3  706  96 #>  [4229,]  3  707  96 #>  [4230,]  3  708  96 #>  [4231,]  3  709  96 #>  [4232,]  3  710  96 #>  [4233,]  3  711  96 #>  [4234,]  3  712  96 #>  [4235,]  3  713  96 #>  [4236,]  3  714  96 #>  [4237,]  3  715  96 #>  [4238,]  3  716  96 #>  [4239,]  3  717  96 #>  [4240,]  3  718  96 #>  [4241,]  3  719  96 #>  [4242,]  3  720  96 #>  [4243,]  3  721  96 #>  [4244,]  3  722  96 #>  [4245,]  3  723  96 #>  [4246,]  3  724  96 #>  [4247,]  3  725  96 #>  [4248,]  3  726  96 #>  [4249,]  3  727  96 #>  [4250,]  3  728  96 #>  [4251,]  3  729  96 #>  [4252,]  3  730  96 #>  [4253,]  3  731  96 #>  [4254,]  3  732  96 #>  [4255,]  3  733  96 #>  [4256,]  3  734  96 #>  [4257,]  3  735  96 #>  [4258,]  3  736  96 #>  [4259,]  3  737  96 #>  [4260,]  3  738  96 #>  [4261,]  3  739  96 #>  [4262,]  3  740  96 #>  [4263,]  3  741  96 #>  [4264,]  3  742  96 #>  [4265,]  3  743  96 #>  [4266,]  3  744  96 #>  [4267,]  3  745  96 #>  [4268,]  3  746  96 #>  [4269,]  3  747  96 #>  [4270,]  3  748  96 #>  [4271,]  3  749  96 #>  [4272,]  3  750  96 #>  [4273,]  3  751  96 #>  [4274,]  3  752  96 #>  [4275,]  3  753  96 #>  [4276,]  3  754  96 #>  [4277,]  3  656  95 #>  [4278,]  3  657  95 #>  [4279,]  3  658  95 #>  [4280,]  3  659  95 #>  [4281,]  3  660  95 #>  [4282,]  3  661  95 #>  [4283,]  3  662  95 #>  [4284,]  3  663  95 #>  [4285,]  3  664  95 #>  [4286,]  3  665  95 #>  [4287,]  3  666  95 #>  [4288,]  3  667  95 #>  [4289,]  3  668  95 #>  [4290,]  3  669  95 #>  [4291,]  3  670  95 #>  [4292,]  3  671  95 #>  [4293,]  3  672  95 #>  [4294,]  3  673  95 #>  [4295,]  3  674  95 #>  [4296,]  3  675  95 #>  [4297,]  3  676  95 #>  [4298,]  3  677  95 #>  [4299,]  3  678  95 #>  [4300,]  3  679  95 #>  [4301,]  3  680  95 #>  [4302,]  3  681  95 #>  [4303,]  3  682  95 #>  [4304,]  3  683  95 #>  [4305,]  3  684  95 #>  [4306,]  3  685  95 #>  [4307,]  3  686  95 #>  [4308,]  3  687  95 #>  [4309,]  3  688  95 #>  [4310,]  3  689  95 #>  [4311,]  3  690  95 #>  [4312,]  3  691  95 #>  [4313,]  3  692  95 #>  [4314,]  3  693  95 #>  [4315,]  3  694  95 #>  [4316,]  3  695  95 #>  [4317,]  3  696  95 #>  [4318,]  3  697  95 #>  [4319,]  3  698  95 #>  [4320,]  3  699  95 #>  [4321,]  3  700  95 #>  [4322,]  3  701  95 #>  [4323,]  3  702  95 #>  [4324,]  3  703  95 #>  [4325,]  3  704  95 #>  [4326,]  3  705  95 #>  [4327,]  3  706  95 #>  [4328,]  3  707  95 #>  [4329,]  3  708  95 #>  [4330,]  3  709  95 #>  [4331,]  3  710  95 #>  [4332,]  3  711  95 #>  [4333,]  3  712  95 #>  [4334,]  3  713  95 #>  [4335,]  3  714  95 #>  [4336,]  3  715  95 #>  [4337,]  3  716  95 #>  [4338,]  3  717  95 #>  [4339,]  3  718  95 #>  [4340,]  3  719  95 #>  [4341,]  3  720  95 #>  [4342,]  3  721  95 #>  [4343,]  3  722  95 #>  [4344,]  3  723  95 #>  [4345,]  3  724  95 #>  [4346,]  3  725  95 #>  [4347,]  3  726  95 #>  [4348,]  3  727  95 #>  [4349,]  3  728  95 #>  [4350,]  3  729  95 #>  [4351,]  3  730  95 #>  [4352,]  3  731  95 #>  [4353,]  3  732  95 #>  [4354,]  3  733  95 #>  [4355,]  3  734  95 #>  [4356,]  3  735  95 #>  [4357,]  3  736  95 #>  [4358,]  3  737  95 #>  [4359,]  3  738  95 #>  [4360,]  3  739  95 #>  [4361,]  3  740  95 #>  [4362,]  3  741  95 #>  [4363,]  3  742  95 #>  [4364,]  3  743  95 #>  [4365,]  3  744  95 #>  [4366,]  3  745  95 #>  [4367,]  3  746  95 #>  [4368,]  3  747  95 #>  [4369,]  3  748  95 #>  [4370,]  3  749  95 #>  [4371,]  3  750  95 #>  [4372,]  3  751  95 #>  [4373,]  3  752  95 #>  [4374,]  3  753  95 #>  [4375,]  3  754  95 #>  [4376,]  3  656  94 #>  [4377,]  3  657  94 #>  [4378,]  3  658  94 #>  [4379,]  3  659  94 #>  [4380,]  3  660  94 #>  [4381,]  3  661  94 #>  [4382,]  3  662  94 #>  [4383,]  3  663  94 #>  [4384,]  3  664  94 #>  [4385,]  3  665  94 #>  [4386,]  3  666  94 #>  [4387,]  3  667  94 #>  [4388,]  3  668  94 #>  [4389,]  3  669  94 #>  [4390,]  3  670  94 #>  [4391,]  3  671  94 #>  [4392,]  3  672  94 #>  [4393,]  3  673  94 #>  [4394,]  3  674  94 #>  [4395,]  3  675  94 #>  [4396,]  3  676  94 #>  [4397,]  3  677  94 #>  [4398,]  3  678  94 #>  [4399,]  3  679  94 #>  [4400,]  3  680  94 #>  [4401,]  3  681  94 #>  [4402,]  3  682  94 #>  [4403,]  3  683  94 #>  [4404,]  3  684  94 #>  [4405,]  3  685  94 #>  [4406,]  3  686  94 #>  [4407,]  3  687  94 #>  [4408,]  3  688  94 #>  [4409,]  3  689  94 #>  [4410,]  3  690  94 #>  [4411,]  3  691  94 #>  [4412,]  3  692  94 #>  [4413,]  3  693  94 #>  [4414,]  3  694  94 #>  [4415,]  3  695  94 #>  [4416,]  3  696  94 #>  [4417,]  3  697  94 #>  [4418,]  3  698  94 #>  [4419,]  3  699  94 #>  [4420,]  3  700  94 #>  [4421,]  3  701  94 #>  [4422,]  3  702  94 #>  [4423,]  3  703  94 #>  [4424,]  3  704  94 #>  [4425,]  3  705  94 #>  [4426,]  3  706  94 #>  [4427,]  3  707  94 #>  [4428,]  3  708  94 #>  [4429,]  3  709  94 #>  [4430,]  3  710  94 #>  [4431,]  3  711  94 #>  [4432,]  3  712  94 #>  [4433,]  3  713  94 #>  [4434,]  3  714  94 #>  [4435,]  3  715  94 #>  [4436,]  3  716  94 #>  [4437,]  3  717  94 #>  [4438,]  3  718  94 #>  [4439,]  3  719  94 #>  [4440,]  3  720  94 #>  [4441,]  3  721  94 #>  [4442,]  3  722  94 #>  [4443,]  3  723  94 #>  [4444,]  3  724  94 #>  [4445,]  3  725  94 #>  [4446,]  3  726  94 #>  [4447,]  3  727  94 #>  [4448,]  3  728  94 #>  [4449,]  3  729  94 #>  [4450,]  3  730  94 #>  [4451,]  3  731  94 #>  [4452,]  3  732  94 #>  [4453,]  3  733  94 #>  [4454,]  3  734  94 #>  [4455,]  3  735  94 #>  [4456,]  3  736  94 #>  [4457,]  3  737  94 #>  [4458,]  3  738  94 #>  [4459,]  3  739  94 #>  [4460,]  3  740  94 #>  [4461,]  3  741  94 #>  [4462,]  3  742  94 #>  [4463,]  3  743  94 #>  [4464,]  3  744  94 #>  [4465,]  3  745  94 #>  [4466,]  3  746  94 #>  [4467,]  3  747  94 #>  [4468,]  3  748  94 #>  [4469,]  3  749  94 #>  [4470,]  3  750  94 #>  [4471,]  3  751  94 #>  [4472,]  3  752  94 #>  [4473,]  3  753  94 #>  [4474,]  3  754  94 #>  [4475,]  3  656  93 #>  [4476,]  3  657  93 #>  [4477,]  3  658  93 #>  [4478,]  3  659  93 #>  [4479,]  3  660  93 #>  [4480,]  3  661  93 #>  [4481,]  3  662  93 #>  [4482,]  3  663  93 #>  [4483,]  3  664  93 #>  [4484,]  3  665  93 #>  [4485,]  3  666  93 #>  [4486,]  3  667  93 #>  [4487,]  3  668  93 #>  [4488,]  3  669  93 #>  [4489,]  3  670  93 #>  [4490,]  3  671  93 #>  [4491,]  3  672  93 #>  [4492,]  3  673  93 #>  [4493,]  3  674  93 #>  [4494,]  3  675  93 #>  [4495,]  3  676  93 #>  [4496,]  3  677  93 #>  [4497,]  3  678  93 #>  [4498,]  3  679  93 #>  [4499,]  3  680  93 #>  [4500,]  3  681  93 #>  [4501,]  3  682  93 #>  [4502,]  3  683  93 #>  [4503,]  3  684  93 #>  [4504,]  3  685  93 #>  [4505,]  3  686  93 #>  [4506,]  3  687  93 #>  [4507,]  3  688  93 #>  [4508,]  3  689  93 #>  [4509,]  3  690  93 #>  [4510,]  3  691  93 #>  [4511,]  3  692  93 #>  [4512,]  3  693  93 #>  [4513,]  3  694  93 #>  [4514,]  3  695  93 #>  [4515,]  3  696  93 #>  [4516,]  3  697  93 #>  [4517,]  3  698  93 #>  [4518,]  3  699  93 #>  [4519,]  3  700  93 #>  [4520,]  3  701  93 #>  [4521,]  3  702  93 #>  [4522,]  3  703  93 #>  [4523,]  3  704  93 #>  [4524,]  3  705  93 #>  [4525,]  3  706  93 #>  [4526,]  3  707  93 #>  [4527,]  3  708  93 #>  [4528,]  3  709  93 #>  [4529,]  3  710  93 #>  [4530,]  3  711  93 #>  [4531,]  3  712  93 #>  [4532,]  3  713  93 #>  [4533,]  3  714  93 #>  [4534,]  3  715  93 #>  [4535,]  3  716  93 #>  [4536,]  3  717  93 #>  [4537,]  3  718  93 #>  [4538,]  3  719  93 #>  [4539,]  3  720  93 #>  [4540,]  3  721  93 #>  [4541,]  3  722  93 #>  [4542,]  3  723  93 #>  [4543,]  3  724  93 #>  [4544,]  3  725  93 #>  [4545,]  3  726  93 #>  [4546,]  3  727  93 #>  [4547,]  3  728  93 #>  [4548,]  3  729  93 #>  [4549,]  3  730  93 #>  [4550,]  3  731  93 #>  [4551,]  3  732  93 #>  [4552,]  3  733  93 #>  [4553,]  3  734  93 #>  [4554,]  3  735  93 #>  [4555,]  3  736  93 #>  [4556,]  3  737  93 #>  [4557,]  3  738  93 #>  [4558,]  3  739  93 #>  [4559,]  3  740  93 #>  [4560,]  3  741  93 #>  [4561,]  3  742  93 #>  [4562,]  3  743  93 #>  [4563,]  3  744  93 #>  [4564,]  3  745  93 #>  [4565,]  3  746  93 #>  [4566,]  3  747  93 #>  [4567,]  3  748  93 #>  [4568,]  3  749  93 #>  [4569,]  3  750  93 #>  [4570,]  3  751  93 #>  [4571,]  3  752  93 #>  [4572,]  3  753  93 #>  [4573,]  3  754  93 #>  [4574,]  3  657  92 #>  [4575,]  3  658  92 #>  [4576,]  3  659  92 #>  [4577,]  3  660  92 #>  [4578,]  3  661  92 #>  [4579,]  3  662  92 #>  [4580,]  3  663  92 #>  [4581,]  3  664  92 #>  [4582,]  3  665  92 #>  [4583,]  3  666  92 #>  [4584,]  3  667  92 #>  [4585,]  3  668  92 #>  [4586,]  3  669  92 #>  [4587,]  3  670  92 #>  [4588,]  3  671  92 #>  [4589,]  3  672  92 #>  [4590,]  3  673  92 #>  [4591,]  3  674  92 #>  [4592,]  3  675  92 #>  [4593,]  3  676  92 #>  [4594,]  3  677  92 #>  [4595,]  3  678  92 #>  [4596,]  3  679  92 #>  [4597,]  3  680  92 #>  [4598,]  3  681  92 #>  [4599,]  3  682  92 #>  [4600,]  3  683  92 #>  [4601,]  3  684  92 #>  [4602,]  3  685  92 #>  [4603,]  3  686  92 #>  [4604,]  3  687  92 #>  [4605,]  3  688  92 #>  [4606,]  3  689  92 #>  [4607,]  3  690  92 #>  [4608,]  3  691  92 #>  [4609,]  3  692  92 #>  [4610,]  3  693  92 #>  [4611,]  3  694  92 #>  [4612,]  3  695  92 #>  [4613,]  3  696  92 #>  [4614,]  3  697  92 #>  [4615,]  3  698  92 #>  [4616,]  3  699  92 #>  [4617,]  3  700  92 #>  [4618,]  3  701  92 #>  [4619,]  3  702  92 #>  [4620,]  3  703  92 #>  [4621,]  3  704  92 #>  [4622,]  3  705  92 #>  [4623,]  3  706  92 #>  [4624,]  3  707  92 #>  [4625,]  3  708  92 #>  [4626,]  3  709  92 #>  [4627,]  3  710  92 #>  [4628,]  3  711  92 #>  [4629,]  3  712  92 #>  [4630,]  3  713  92 #>  [4631,]  3  714  92 #>  [4632,]  3  715  92 #>  [4633,]  3  716  92 #>  [4634,]  3  717  92 #>  [4635,]  3  718  92 #>  [4636,]  3  719  92 #>  [4637,]  3  720  92 #>  [4638,]  3  721  92 #>  [4639,]  3  722  92 #>  [4640,]  3  723  92 #>  [4641,]  3  724  92 #>  [4642,]  3  725  92 #>  [4643,]  3  726  92 #>  [4644,]  3  727  92 #>  [4645,]  3  728  92 #>  [4646,]  3  729  92 #>  [4647,]  3  730  92 #>  [4648,]  3  731  92 #>  [4649,]  3  732  92 #>  [4650,]  3  733  92 #>  [4651,]  3  734  92 #>  [4652,]  3  735  92 #>  [4653,]  3  736  92 #>  [4654,]  3  737  92 #>  [4655,]  3  738  92 #>  [4656,]  3  739  92 #>  [4657,]  3  740  92 #>  [4658,]  3  741  92 #>  [4659,]  3  742  92 #>  [4660,]  3  743  92 #>  [4661,]  3  744  92 #>  [4662,]  3  745  92 #>  [4663,]  3  746  92 #>  [4664,]  3  747  92 #>  [4665,]  3  748  92 #>  [4666,]  3  749  92 #>  [4667,]  3  750  92 #>  [4668,]  3  751  92 #>  [4669,]  3  752  92 #>  [4670,]  3  753  92 #>  [4671,]  3  754  92 #>  [4672,]  3  657  91 #>  [4673,]  3  658  91 #>  [4674,]  3  659  91 #>  [4675,]  3  660  91 #>  [4676,]  3  661  91 #>  [4677,]  3  662  91 #>  [4678,]  3  663  91 #>  [4679,]  3  664  91 #>  [4680,]  3  665  91 #>  [4681,]  3  666  91 #>  [4682,]  3  667  91 #>  [4683,]  3  668  91 #>  [4684,]  3  669  91 #>  [4685,]  3  670  91 #>  [4686,]  3  671  91 #>  [4687,]  3  672  91 #>  [4688,]  3  673  91 #>  [4689,]  3  674  91 #>  [4690,]  3  675  91 #>  [4691,]  3  676  91 #>  [4692,]  3  677  91 #>  [4693,]  3  678  91 #>  [4694,]  3  679  91 #>  [4695,]  3  680  91 #>  [4696,]  3  681  91 #>  [4697,]  3  682  91 #>  [4698,]  3  683  91 #>  [4699,]  3  684  91 #>  [4700,]  3  685  91 #>  [4701,]  3  686  91 #>  [4702,]  3  687  91 #>  [4703,]  3  688  91 #>  [4704,]  3  689  91 #>  [4705,]  3  690  91 #>  [4706,]  3  691  91 #>  [4707,]  3  692  91 #>  [4708,]  3  693  91 #>  [4709,]  3  694  91 #>  [4710,]  3  695  91 #>  [4711,]  3  696  91 #>  [4712,]  3  697  91 #>  [4713,]  3  698  91 #>  [4714,]  3  699  91 #>  [4715,]  3  700  91 #>  [4716,]  3  701  91 #>  [4717,]  3  702  91 #>  [4718,]  3  703  91 #>  [4719,]  3  704  91 #>  [4720,]  3  705  91 #>  [4721,]  3  706  91 #>  [4722,]  3  707  91 #>  [4723,]  3  708  91 #>  [4724,]  3  709  91 #>  [4725,]  3  710  91 #>  [4726,]  3  711  91 #>  [4727,]  3  712  91 #>  [4728,]  3  713  91 #>  [4729,]  3  714  91 #>  [4730,]  3  715  91 #>  [4731,]  3  716  91 #>  [4732,]  3  717  91 #>  [4733,]  3  718  91 #>  [4734,]  3  719  91 #>  [4735,]  3  720  91 #>  [4736,]  3  721  91 #>  [4737,]  3  722  91 #>  [4738,]  3  723  91 #>  [4739,]  3  724  91 #>  [4740,]  3  725  91 #>  [4741,]  3  726  91 #>  [4742,]  3  727  91 #>  [4743,]  3  728  91 #>  [4744,]  3  729  91 #>  [4745,]  3  730  91 #>  [4746,]  3  731  91 #>  [4747,]  3  732  91 #>  [4748,]  3  733  91 #>  [4749,]  3  734  91 #>  [4750,]  3  735  91 #>  [4751,]  3  736  91 #>  [4752,]  3  737  91 #>  [4753,]  3  738  91 #>  [4754,]  3  739  91 #>  [4755,]  3  740  91 #>  [4756,]  3  741  91 #>  [4757,]  3  742  91 #>  [4758,]  3  743  91 #>  [4759,]  3  744  91 #>  [4760,]  3  745  91 #>  [4761,]  3  746  91 #>  [4762,]  3  747  91 #>  [4763,]  3  748  91 #>  [4764,]  3  749  91 #>  [4765,]  3  750  91 #>  [4766,]  3  751  91 #>  [4767,]  3  752  91 #>  [4768,]  3  753  91 #>  [4769,]  3  754  91 #>  [4770,]  3  657  90 #>  [4771,]  3  658  90 #>  [4772,]  3  659  90 #>  [4773,]  3  660  90 #>  [4774,]  3  661  90 #>  [4775,]  3  662  90 #>  [4776,]  3  663  90 #>  [4777,]  3  664  90 #>  [4778,]  3  665  90 #>  [4779,]  3  666  90 #>  [4780,]  3  667  90 #>  [4781,]  3  668  90 #>  [4782,]  3  669  90 #>  [4783,]  3  670  90 #>  [4784,]  3  671  90 #>  [4785,]  3  672  90 #>  [4786,]  3  673  90 #>  [4787,]  3  674  90 #>  [4788,]  3  675  90 #>  [4789,]  3  676  90 #>  [4790,]  3  677  90 #>  [4791,]  3  678  90 #>  [4792,]  3  679  90 #>  [4793,]  3  680  90 #>  [4794,]  3  681  90 #>  [4795,]  3  682  90 #>  [4796,]  3  683  90 #>  [4797,]  3  684  90 #>  [4798,]  3  685  90 #>  [4799,]  3  686  90 #>  [4800,]  3  687  90 #>  [4801,]  3  688  90 #>  [4802,]  3  689  90 #>  [4803,]  3  690  90 #>  [4804,]  3  691  90 #>  [4805,]  3  692  90 #>  [4806,]  3  693  90 #>  [4807,]  3  694  90 #>  [4808,]  3  695  90 #>  [4809,]  3  696  90 #>  [4810,]  3  697  90 #>  [4811,]  3  698  90 #>  [4812,]  3  699  90 #>  [4813,]  3  700  90 #>  [4814,]  3  701  90 #>  [4815,]  3  702  90 #>  [4816,]  3  703  90 #>  [4817,]  3  704  90 #>  [4818,]  3  705  90 #>  [4819,]  3  706  90 #>  [4820,]  3  707  90 #>  [4821,]  3  708  90 #>  [4822,]  3  709  90 #>  [4823,]  3  710  90 #>  [4824,]  3  711  90 #>  [4825,]  3  712  90 #>  [4826,]  3  713  90 #>  [4827,]  3  714  90 #>  [4828,]  3  715  90 #>  [4829,]  3  716  90 #>  [4830,]  3  717  90 #>  [4831,]  3  718  90 #>  [4832,]  3  719  90 #>  [4833,]  3  720  90 #>  [4834,]  3  721  90 #>  [4835,]  3  722  90 #>  [4836,]  3  723  90 #>  [4837,]  3  724  90 #>  [4838,]  3  725  90 #>  [4839,]  3  726  90 #>  [4840,]  3  727  90 #>  [4841,]  3  728  90 #>  [4842,]  3  729  90 #>  [4843,]  3  730  90 #>  [4844,]  3  731  90 #>  [4845,]  3  732  90 #>  [4846,]  3  733  90 #>  [4847,]  3  734  90 #>  [4848,]  3  735  90 #>  [4849,]  3  736  90 #>  [4850,]  3  737  90 #>  [4851,]  3  738  90 #>  [4852,]  3  739  90 #>  [4853,]  3  740  90 #>  [4854,]  3  741  90 #>  [4855,]  3  742  90 #>  [4856,]  3  743  90 #>  [4857,]  3  744  90 #>  [4858,]  3  745  90 #>  [4859,]  3  746  90 #>  [4860,]  3  747  90 #>  [4861,]  3  748  90 #>  [4862,]  3  749  90 #>  [4863,]  3  750  90 #>  [4864,]  3  751  90 #>  [4865,]  3  752  90 #>  [4866,]  3  753  90 #>  [4867,]  3  754  90 #>  [4868,]  3  657  89 #>  [4869,]  3  658  89 #>  [4870,]  3  659  89 #>  [4871,]  3  660  89 #>  [4872,]  3  661  89 #>  [4873,]  3  662  89 #>  [4874,]  3  663  89 #>  [4875,]  3  664  89 #>  [4876,]  3  665  89 #>  [4877,]  3  666  89 #>  [4878,]  3  667  89 #>  [4879,]  3  668  89 #>  [4880,]  3  669  89 #>  [4881,]  3  670  89 #>  [4882,]  3  671  89 #>  [4883,]  3  672  89 #>  [4884,]  3  673  89 #>  [4885,]  3  674  89 #>  [4886,]  3  675  89 #>  [4887,]  3  676  89 #>  [4888,]  3  677  89 #>  [4889,]  3  678  89 #>  [4890,]  3  679  89 #>  [4891,]  3  680  89 #>  [4892,]  3  681  89 #>  [4893,]  3  682  89 #>  [4894,]  3  683  89 #>  [4895,]  3  684  89 #>  [4896,]  3  685  89 #>  [4897,]  3  686  89 #>  [4898,]  3  687  89 #>  [4899,]  3  688  89 #>  [4900,]  3  689  89 #>  [4901,]  3  690  89 #>  [4902,]  3  691  89 #>  [4903,]  3  692  89 #>  [4904,]  3  693  89 #>  [4905,]  3  694  89 #>  [4906,]  3  695  89 #>  [4907,]  3  696  89 #>  [4908,]  3  697  89 #>  [4909,]  3  698  89 #>  [4910,]  3  699  89 #>  [4911,]  3  700  89 #>  [4912,]  3  701  89 #>  [4913,]  3  702  89 #>  [4914,]  3  703  89 #>  [4915,]  3  704  89 #>  [4916,]  3  705  89 #>  [4917,]  3  706  89 #>  [4918,]  3  707  89 #>  [4919,]  3  708  89 #>  [4920,]  3  709  89 #>  [4921,]  3  710  89 #>  [4922,]  3  711  89 #>  [4923,]  3  712  89 #>  [4924,]  3  713  89 #>  [4925,]  3  714  89 #>  [4926,]  3  715  89 #>  [4927,]  3  716  89 #>  [4928,]  3  717  89 #>  [4929,]  3  718  89 #>  [4930,]  3  719  89 #>  [4931,]  3  720  89 #>  [4932,]  3  721  89 #>  [4933,]  3  722  89 #>  [4934,]  3  723  89 #>  [4935,]  3  724  89 #>  [4936,]  3  725  89 #>  [4937,]  3  726  89 #>  [4938,]  3  727  89 #>  [4939,]  3  728  89 #>  [4940,]  3  729  89 #>  [4941,]  3  730  89 #>  [4942,]  3  731  89 #>  [4943,]  3  732  89 #>  [4944,]  3  733  89 #>  [4945,]  3  734  89 #>  [4946,]  3  735  89 #>  [4947,]  3  736  89 #>  [4948,]  3  737  89 #>  [4949,]  3  738  89 #>  [4950,]  3  739  89 #>  [4951,]  3  740  89 #>  [4952,]  3  741  89 #>  [4953,]  3  742  89 #>  [4954,]  3  743  89 #>  [4955,]  3  744  89 #>  [4956,]  3  745  89 #>  [4957,]  3  746  89 #>  [4958,]  3  747  89 #>  [4959,]  3  748  89 #>  [4960,]  3  749  89 #>  [4961,]  3  750  89 #>  [4962,]  3  751  89 #>  [4963,]  3  752  89 #>  [4964,]  3  753  89 #>  [4965,]  3  754  89 #>  [4966,]  3  657  88 #>  [4967,]  3  658  88 #>  [4968,]  3  659  88 #>  [4969,]  3  660  88 #>  [4970,]  3  661  88 #>  [4971,]  3  662  88 #>  [4972,]  3  663  88 #>  [4973,]  3  664  88 #>  [4974,]  3  665  88 #>  [4975,]  3  666  88 #>  [4976,]  3  667  88 #>  [4977,]  3  668  88 #>  [4978,]  3  669  88 #>  [4979,]  3  670  88 #>  [4980,]  3  671  88 #>  [4981,]  3  672  88 #>  [4982,]  3  673  88 #>  [4983,]  3  674  88 #>  [4984,]  3  675  88 #>  [4985,]  3  676  88 #>  [4986,]  3  677  88 #>  [4987,]  3  678  88 #>  [4988,]  3  679  88 #>  [4989,]  3  680  88 #>  [4990,]  3  681  88 #>  [4991,]  3  682  88 #>  [4992,]  3  683  88 #>  [4993,]  3  684  88 #>  [4994,]  3  685  88 #>  [4995,]  3  686  88 #>  [4996,]  3  687  88 #>  [4997,]  3  688  88 #>  [4998,]  3  689  88 #>  [4999,]  3  690  88 #>  [5000,]  3  691  88 #>  [5001,]  3  692  88 #>  [5002,]  3  693  88 #>  [5003,]  3  694  88 #>  [5004,]  3  695  88 #>  [5005,]  3  696  88 #>  [5006,]  3  697  88 #>  [5007,]  3  698  88 #>  [5008,]  3  699  88 #>  [5009,]  3  700  88 #>  [5010,]  3  701  88 #>  [5011,]  3  702  88 #>  [5012,]  3  703  88 #>  [5013,]  3  704  88 #>  [5014,]  3  705  88 #>  [5015,]  3  706  88 #>  [5016,]  3  707  88 #>  [5017,]  3  708  88 #>  [5018,]  3  709  88 #>  [5019,]  3  710  88 #>  [5020,]  3  711  88 #>  [5021,]  3  712  88 #>  [5022,]  3  713  88 #>  [5023,]  3  714  88 #>  [5024,]  3  715  88 #>  [5025,]  3  716  88 #>  [5026,]  3  717  88 #>  [5027,]  3  718  88 #>  [5028,]  3  719  88 #>  [5029,]  3  720  88 #>  [5030,]  3  721  88 #>  [5031,]  3  722  88 #>  [5032,]  3  723  88 #>  [5033,]  3  724  88 #>  [5034,]  3  725  88 #>  [5035,]  3  726  88 #>  [5036,]  3  727  88 #>  [5037,]  3  728  88 #>  [5038,]  3  729  88 #>  [5039,]  3  730  88 #>  [5040,]  3  731  88 #>  [5041,]  3  732  88 #>  [5042,]  3  733  88 #>  [5043,]  3  734  88 #>  [5044,]  3  735  88 #>  [5045,]  3  736  88 #>  [5046,]  3  737  88 #>  [5047,]  3  738  88 #>  [5048,]  3  739  88 #>  [5049,]  3  740  88 #>  [5050,]  3  741  88 #>  [5051,]  3  742  88 #>  [5052,]  3  743  88 #>  [5053,]  3  744  88 #>  [5054,]  3  745  88 #>  [5055,]  3  746  88 #>  [5056,]  3  747  88 #>  [5057,]  3  748  88 #>  [5058,]  3  749  88 #>  [5059,]  3  750  88 #>  [5060,]  3  751  88 #>  [5061,]  3  752  88 #>  [5062,]  3  753  88 #>  [5063,]  3  754  88 #>  [5064,]  3  657  87 #>  [5065,]  3  658  87 #>  [5066,]  3  659  87 #>  [5067,]  3  660  87 #>  [5068,]  3  661  87 #>  [5069,]  3  662  87 #>  [5070,]  3  663  87 #>  [5071,]  3  664  87 #>  [5072,]  3  665  87 #>  [5073,]  3  666  87 #>  [5074,]  3  667  87 #>  [5075,]  3  668  87 #>  [5076,]  3  669  87 #>  [5077,]  3  670  87 #>  [5078,]  3  671  87 #>  [5079,]  3  672  87 #>  [5080,]  3  673  87 #>  [5081,]  3  674  87 #>  [5082,]  3  675  87 #>  [5083,]  3  676  87 #>  [5084,]  3  677  87 #>  [5085,]  3  678  87 #>  [5086,]  3  679  87 #>  [5087,]  3  680  87 #>  [5088,]  3  681  87 #>  [5089,]  3  682  87 #>  [5090,]  3  683  87 #>  [5091,]  3  684  87 #>  [5092,]  3  685  87 #>  [5093,]  3  686  87 #>  [5094,]  3  687  87 #>  [5095,]  3  688  87 #>  [5096,]  3  689  87 #>  [5097,]  3  690  87 #>  [5098,]  3  691  87 #>  [5099,]  3  692  87 #>  [5100,]  3  693  87 #>  [5101,]  3  694  87 #>  [5102,]  3  695  87 #>  [5103,]  3  696  87 #>  [5104,]  3  697  87 #>  [5105,]  3  698  87 #>  [5106,]  3  699  87 #>  [5107,]  3  700  87 #>  [5108,]  3  701  87 #>  [5109,]  3  702  87 #>  [5110,]  3  703  87 #>  [5111,]  3  704  87 #>  [5112,]  3  705  87 #>  [5113,]  3  706  87 #>  [5114,]  3  707  87 #>  [5115,]  3  708  87 #>  [5116,]  3  709  87 #>  [5117,]  3  710  87 #>  [5118,]  3  711  87 #>  [5119,]  3  712  87 #>  [5120,]  3  713  87 #>  [5121,]  3  714  87 #>  [5122,]  3  715  87 #>  [5123,]  3  716  87 #>  [5124,]  3  717  87 #>  [5125,]  3  718  87 #>  [5126,]  3  719  87 #>  [5127,]  3  720  87 #>  [5128,]  3  721  87 #>  [5129,]  3  722  87 #>  [5130,]  3  723  87 #>  [5131,]  3  724  87 #>  [5132,]  3  725  87 #>  [5133,]  3  726  87 #>  [5134,]  3  727  87 #>  [5135,]  3  728  87 #>  [5136,]  3  729  87 #>  [5137,]  3  730  87 #>  [5138,]  3  731  87 #>  [5139,]  3  732  87 #>  [5140,]  3  733  87 #>  [5141,]  3  734  87 #>  [5142,]  3  735  87 #>  [5143,]  3  736  87 #>  [5144,]  3  737  87 #>  [5145,]  3  738  87 #>  [5146,]  3  739  87 #>  [5147,]  3  740  87 #>  [5148,]  3  741  87 #>  [5149,]  3  742  87 #>  [5150,]  3  743  87 #>  [5151,]  3  744  87 #>  [5152,]  3  745  87 #>  [5153,]  3  746  87 #>  [5154,]  3  747  87 #>  [5155,]  3  748  87 #>  [5156,]  3  749  87 #>  [5157,]  3  750  87 #>  [5158,]  3  751  87 #>  [5159,]  3  752  87 #>  [5160,]  3  753  87 #>  [5161,]  3  754  87 #>  [5162,]  3  658  86 #>  [5163,]  3  659  86 #>  [5164,]  3  660  86 #>  [5165,]  3  661  86 #>  [5166,]  3  662  86 #>  [5167,]  3  663  86 #>  [5168,]  3  664  86 #>  [5169,]  3  665  86 #>  [5170,]  3  666  86 #>  [5171,]  3  667  86 #>  [5172,]  3  668  86 #>  [5173,]  3  669  86 #>  [5174,]  3  670  86 #>  [5175,]  3  671  86 #>  [5176,]  3  672  86 #>  [5177,]  3  673  86 #>  [5178,]  3  674  86 #>  [5179,]  3  675  86 #>  [5180,]  3  676  86 #>  [5181,]  3  677  86 #>  [5182,]  3  678  86 #>  [5183,]  3  679  86 #>  [5184,]  3  680  86 #>  [5185,]  3  681  86 #>  [5186,]  3  682  86 #>  [5187,]  3  683  86 #>  [5188,]  3  684  86 #>  [5189,]  3  685  86 #>  [5190,]  3  686  86 #>  [5191,]  3  687  86 #>  [5192,]  3  688  86 #>  [5193,]  3  689  86 #>  [5194,]  3  690  86 #>  [5195,]  3  691  86 #>  [5196,]  3  692  86 #>  [5197,]  3  693  86 #>  [5198,]  3  694  86 #>  [5199,]  3  695  86 #>  [5200,]  3  696  86 #>  [5201,]  3  697  86 #>  [5202,]  3  698  86 #>  [5203,]  3  699  86 #>  [5204,]  3  700  86 #>  [5205,]  3  701  86 #>  [5206,]  3  702  86 #>  [5207,]  3  703  86 #>  [5208,]  3  704  86 #>  [5209,]  3  705  86 #>  [5210,]  3  706  86 #>  [5211,]  3  707  86 #>  [5212,]  3  708  86 #>  [5213,]  3  709  86 #>  [5214,]  3  710  86 #>  [5215,]  3  711  86 #>  [5216,]  3  712  86 #>  [5217,]  3  713  86 #>  [5218,]  3  714  86 #>  [5219,]  3  715  86 #>  [5220,]  3  716  86 #>  [5221,]  3  717  86 #>  [5222,]  3  718  86 #>  [5223,]  3  719  86 #>  [5224,]  3  720  86 #>  [5225,]  3  721  86 #>  [5226,]  3  722  86 #>  [5227,]  3  723  86 #>  [5228,]  3  724  86 #>  [5229,]  3  725  86 #>  [5230,]  3  726  86 #>  [5231,]  3  727  86 #>  [5232,]  3  728  86 #>  [5233,]  3  729  86 #>  [5234,]  3  730  86 #>  [5235,]  3  731  86 #>  [5236,]  3  732  86 #>  [5237,]  3  733  86 #>  [5238,]  3  734  86 #>  [5239,]  3  735  86 #>  [5240,]  3  736  86 #>  [5241,]  3  737  86 #>  [5242,]  3  738  86 #>  [5243,]  3  739  86 #>  [5244,]  3  740  86 #>  [5245,]  3  741  86 #>  [5246,]  3  742  86 #>  [5247,]  3  743  86 #>  [5248,]  3  744  86 #>  [5249,]  3  745  86 #>  [5250,]  3  746  86 #>  [5251,]  3  747  86 #>  [5252,]  3  748  86 #>  [5253,]  3  749  86 #>  [5254,]  3  750  86 #>  [5255,]  3  751  86 #>  [5256,]  3  752  86 #>  [5257,]  3  753  86 #>  [5258,]  3  754  86 #>  [5259,]  3  658  85 #>  [5260,]  3  659  85 #>  [5261,]  3  660  85 #>  [5262,]  3  661  85 #>  [5263,]  3  662  85 #>  [5264,]  3  663  85 #>  [5265,]  3  664  85 #>  [5266,]  3  665  85 #>  [5267,]  3  666  85 #>  [5268,]  3  667  85 #>  [5269,]  3  668  85 #>  [5270,]  3  669  85 #>  [5271,]  3  670  85 #>  [5272,]  3  671  85 #>  [5273,]  3  672  85 #>  [5274,]  3  673  85 #>  [5275,]  3  674  85 #>  [5276,]  3  675  85 #>  [5277,]  3  676  85 #>  [5278,]  3  677  85 #>  [5279,]  3  678  85 #>  [5280,]  3  679  85 #>  [5281,]  3  680  85 #>  [5282,]  3  681  85 #>  [5283,]  3  682  85 #>  [5284,]  3  683  85 #>  [5285,]  3  684  85 #>  [5286,]  3  685  85 #>  [5287,]  3  686  85 #>  [5288,]  3  687  85 #>  [5289,]  3  688  85 #>  [5290,]  3  689  85 #>  [5291,]  3  690  85 #>  [5292,]  3  691  85 #>  [5293,]  3  692  85 #>  [5294,]  3  693  85 #>  [5295,]  3  694  85 #>  [5296,]  3  695  85 #>  [5297,]  3  696  85 #>  [5298,]  3  697  85 #>  [5299,]  3  698  85 #>  [5300,]  3  699  85 #>  [5301,]  3  700  85 #>  [5302,]  3  701  85 #>  [5303,]  3  702  85 #>  [5304,]  3  703  85 #>  [5305,]  3  704  85 #>  [5306,]  3  705  85 #>  [5307,]  3  706  85 #>  [5308,]  3  707  85 #>  [5309,]  3  708  85 #>  [5310,]  3  709  85 #>  [5311,]  3  710  85 #>  [5312,]  3  711  85 #>  [5313,]  3  712  85 #>  [5314,]  3  713  85 #>  [5315,]  3  714  85 #>  [5316,]  3  715  85 #>  [5317,]  3  716  85 #>  [5318,]  3  717  85 #>  [5319,]  3  718  85 #>  [5320,]  3  719  85 #>  [5321,]  3  720  85 #>  [5322,]  3  721  85 #>  [5323,]  3  722  85 #>  [5324,]  3  723  85 #>  [5325,]  3  724  85 #>  [5326,]  3  725  85 #>  [5327,]  3  726  85 #>  [5328,]  3  727  85 #>  [5329,]  3  728  85 #>  [5330,]  3  729  85 #>  [5331,]  3  730  85 #>  [5332,]  3  731  85 #>  [5333,]  3  732  85 #>  [5334,]  3  733  85 #>  [5335,]  3  734  85 #>  [5336,]  3  735  85 #>  [5337,]  3  736  85 #>  [5338,]  3  737  85 #>  [5339,]  3  738  85 #>  [5340,]  3  739  85 #>  [5341,]  3  740  85 #>  [5342,]  3  741  85 #>  [5343,]  3  742  85 #>  [5344,]  3  743  85 #>  [5345,]  3  744  85 #>  [5346,]  3  745  85 #>  [5347,]  3  746  85 #>  [5348,]  3  747  85 #>  [5349,]  3  748  85 #>  [5350,]  3  749  85 #>  [5351,]  3  750  85 #>  [5352,]  3  751  85 #>  [5353,]  3  752  85 #>  [5354,]  3  753  85 #>  [5355,]  3  754  85 #>  [5356,]  3  658  84 #>  [5357,]  3  659  84 #>  [5358,]  3  660  84 #>  [5359,]  3  661  84 #>  [5360,]  3  662  84 #>  [5361,]  3  663  84 #>  [5362,]  3  664  84 #>  [5363,]  3  665  84 #>  [5364,]  3  666  84 #>  [5365,]  3  667  84 #>  [5366,]  3  668  84 #>  [5367,]  3  669  84 #>  [5368,]  3  670  84 #>  [5369,]  3  671  84 #>  [5370,]  3  672  84 #>  [5371,]  3  673  84 #>  [5372,]  3  674  84 #>  [5373,]  3  675  84 #>  [5374,]  3  676  84 #>  [5375,]  3  677  84 #>  [5376,]  3  678  84 #>  [5377,]  3  679  84 #>  [5378,]  3  680  84 #>  [5379,]  3  681  84 #>  [5380,]  3  682  84 #>  [5381,]  3  683  84 #>  [5382,]  3  684  84 #>  [5383,]  3  685  84 #>  [5384,]  3  686  84 #>  [5385,]  3  687  84 #>  [5386,]  3  688  84 #>  [5387,]  3  689  84 #>  [5388,]  3  690  84 #>  [5389,]  3  691  84 #>  [5390,]  3  692  84 #>  [5391,]  3  693  84 #>  [5392,]  3  694  84 #>  [5393,]  3  695  84 #>  [5394,]  3  696  84 #>  [5395,]  3  697  84 #>  [5396,]  3  698  84 #>  [5397,]  3  699  84 #>  [5398,]  3  700  84 #>  [5399,]  3  701  84 #>  [5400,]  3  702  84 #>  [5401,]  3  703  84 #>  [5402,]  3  704  84 #>  [5403,]  3  705  84 #>  [5404,]  3  706  84 #>  [5405,]  3  707  84 #>  [5406,]  3  708  84 #>  [5407,]  3  709  84 #>  [5408,]  3  710  84 #>  [5409,]  3  711  84 #>  [5410,]  3  712  84 #>  [5411,]  3  713  84 #>  [5412,]  3  714  84 #>  [5413,]  3  715  84 #>  [5414,]  3  716  84 #>  [5415,]  3  717  84 #>  [5416,]  3  718  84 #>  [5417,]  3  719  84 #>  [5418,]  3  720  84 #>  [5419,]  3  721  84 #>  [5420,]  3  722  84 #>  [5421,]  3  723  84 #>  [5422,]  3  724  84 #>  [5423,]  3  725  84 #>  [5424,]  3  726  84 #>  [5425,]  3  727  84 #>  [5426,]  3  728  84 #>  [5427,]  3  729  84 #>  [5428,]  3  730  84 #>  [5429,]  3  731  84 #>  [5430,]  3  732  84 #>  [5431,]  3  733  84 #>  [5432,]  3  734  84 #>  [5433,]  3  735  84 #>  [5434,]  3  736  84 #>  [5435,]  3  737  84 #>  [5436,]  3  738  84 #>  [5437,]  3  739  84 #>  [5438,]  3  740  84 #>  [5439,]  3  741  84 #>  [5440,]  3  742  84 #>  [5441,]  3  743  84 #>  [5442,]  3  744  84 #>  [5443,]  3  745  84 #>  [5444,]  3  746  84 #>  [5445,]  3  747  84 #>  [5446,]  3  748  84 #>  [5447,]  3  749  84 #>  [5448,]  3  750  84 #>  [5449,]  3  751  84 #>  [5450,]  3  752  84 #>  [5451,]  3  753  84 #>  [5452,]  3  658  83 #>  [5453,]  3  659  83 #>  [5454,]  3  660  83 #>  [5455,]  3  661  83 #>  [5456,]  3  662  83 #>  [5457,]  3  663  83 #>  [5458,]  3  664  83 #>  [5459,]  3  665  83 #>  [5460,]  3  666  83 #>  [5461,]  3  667  83 #>  [5462,]  3  668  83 #>  [5463,]  3  669  83 #>  [5464,]  3  670  83 #>  [5465,]  3  671  83 #>  [5466,]  3  672  83 #>  [5467,]  3  673  83 #>  [5468,]  3  674  83 #>  [5469,]  3  675  83 #>  [5470,]  3  676  83 #>  [5471,]  3  677  83 #>  [5472,]  3  678  83 #>  [5473,]  3  679  83 #>  [5474,]  3  680  83 #>  [5475,]  3  681  83 #>  [5476,]  3  682  83 #>  [5477,]  3  683  83 #>  [5478,]  3  684  83 #>  [5479,]  3  685  83 #>  [5480,]  3  686  83 #>  [5481,]  3  687  83 #>  [5482,]  3  688  83 #>  [5483,]  3  689  83 #>  [5484,]  3  690  83 #>  [5485,]  3  691  83 #>  [5486,]  3  692  83 #>  [5487,]  3  693  83 #>  [5488,]  3  694  83 #>  [5489,]  3  695  83 #>  [5490,]  3  696  83 #>  [5491,]  3  697  83 #>  [5492,]  3  698  83 #>  [5493,]  3  699  83 #>  [5494,]  3  700  83 #>  [5495,]  3  701  83 #>  [5496,]  3  702  83 #>  [5497,]  3  703  83 #>  [5498,]  3  704  83 #>  [5499,]  3  705  83 #>  [5500,]  3  706  83 #>  [5501,]  3  707  83 #>  [5502,]  3  708  83 #>  [5503,]  3  709  83 #>  [5504,]  3  710  83 #>  [5505,]  3  711  83 #>  [5506,]  3  712  83 #>  [5507,]  3  713  83 #>  [5508,]  3  714  83 #>  [5509,]  3  715  83 #>  [5510,]  3  716  83 #>  [5511,]  3  717  83 #>  [5512,]  3  718  83 #>  [5513,]  3  719  83 #>  [5514,]  3  720  83 #>  [5515,]  3  721  83 #>  [5516,]  3  722  83 #>  [5517,]  3  723  83 #>  [5518,]  3  724  83 #>  [5519,]  3  725  83 #>  [5520,]  3  726  83 #>  [5521,]  3  727  83 #>  [5522,]  3  728  83 #>  [5523,]  3  729  83 #>  [5524,]  3  730  83 #>  [5525,]  3  731  83 #>  [5526,]  3  732  83 #>  [5527,]  3  733  83 #>  [5528,]  3  734  83 #>  [5529,]  3  735  83 #>  [5530,]  3  736  83 #>  [5531,]  3  737  83 #>  [5532,]  3  738  83 #>  [5533,]  3  739  83 #>  [5534,]  3  740  83 #>  [5535,]  3  741  83 #>  [5536,]  3  742  83 #>  [5537,]  3  743  83 #>  [5538,]  3  744  83 #>  [5539,]  3  745  83 #>  [5540,]  3  746  83 #>  [5541,]  3  747  83 #>  [5542,]  3  748  83 #>  [5543,]  3  749  83 #>  [5544,]  3  750  83 #>  [5545,]  3  751  83 #>  [5546,]  3  752  83 #>  [5547,]  3  753  83 #>  [5548,]  3  659  82 #>  [5549,]  3  660  82 #>  [5550,]  3  661  82 #>  [5551,]  3  662  82 #>  [5552,]  3  663  82 #>  [5553,]  3  664  82 #>  [5554,]  3  665  82 #>  [5555,]  3  666  82 #>  [5556,]  3  667  82 #>  [5557,]  3  668  82 #>  [5558,]  3  669  82 #>  [5559,]  3  670  82 #>  [5560,]  3  671  82 #>  [5561,]  3  672  82 #>  [5562,]  3  673  82 #>  [5563,]  3  674  82 #>  [5564,]  3  675  82 #>  [5565,]  3  676  82 #>  [5566,]  3  677  82 #>  [5567,]  3  678  82 #>  [5568,]  3  679  82 #>  [5569,]  3  680  82 #>  [5570,]  3  681  82 #>  [5571,]  3  682  82 #>  [5572,]  3  683  82 #>  [5573,]  3  684  82 #>  [5574,]  3  685  82 #>  [5575,]  3  686  82 #>  [5576,]  3  687  82 #>  [5577,]  3  688  82 #>  [5578,]  3  689  82 #>  [5579,]  3  690  82 #>  [5580,]  3  691  82 #>  [5581,]  3  692  82 #>  [5582,]  3  693  82 #>  [5583,]  3  694  82 #>  [5584,]  3  695  82 #>  [5585,]  3  696  82 #>  [5586,]  3  697  82 #>  [5587,]  3  698  82 #>  [5588,]  3  699  82 #>  [5589,]  3  700  82 #>  [5590,]  3  701  82 #>  [5591,]  3  702  82 #>  [5592,]  3  703  82 #>  [5593,]  3  704  82 #>  [5594,]  3  705  82 #>  [5595,]  3  706  82 #>  [5596,]  3  707  82 #>  [5597,]  3  708  82 #>  [5598,]  3  709  82 #>  [5599,]  3  710  82 #>  [5600,]  3  711  82 #>  [5601,]  3  712  82 #>  [5602,]  3  713  82 #>  [5603,]  3  714  82 #>  [5604,]  3  715  82 #>  [5605,]  3  716  82 #>  [5606,]  3  717  82 #>  [5607,]  3  718  82 #>  [5608,]  3  719  82 #>  [5609,]  3  720  82 #>  [5610,]  3  721  82 #>  [5611,]  3  722  82 #>  [5612,]  3  723  82 #>  [5613,]  3  724  82 #>  [5614,]  3  725  82 #>  [5615,]  3  726  82 #>  [5616,]  3  727  82 #>  [5617,]  3  728  82 #>  [5618,]  3  729  82 #>  [5619,]  3  730  82 #>  [5620,]  3  731  82 #>  [5621,]  3  732  82 #>  [5622,]  3  733  82 #>  [5623,]  3  734  82 #>  [5624,]  3  735  82 #>  [5625,]  3  736  82 #>  [5626,]  3  737  82 #>  [5627,]  3  738  82 #>  [5628,]  3  739  82 #>  [5629,]  3  740  82 #>  [5630,]  3  741  82 #>  [5631,]  3  742  82 #>  [5632,]  3  743  82 #>  [5633,]  3  744  82 #>  [5634,]  3  745  82 #>  [5635,]  3  746  82 #>  [5636,]  3  747  82 #>  [5637,]  3  748  82 #>  [5638,]  3  749  82 #>  [5639,]  3  750  82 #>  [5640,]  3  751  82 #>  [5641,]  3  752  82 #>  [5642,]  3  753  82 #>  [5643,]  3  659  81 #>  [5644,]  3  660  81 #>  [5645,]  3  661  81 #>  [5646,]  3  662  81 #>  [5647,]  3  663  81 #>  [5648,]  3  664  81 #>  [5649,]  3  665  81 #>  [5650,]  3  666  81 #>  [5651,]  3  667  81 #>  [5652,]  3  668  81 #>  [5653,]  3  669  81 #>  [5654,]  3  670  81 #>  [5655,]  3  671  81 #>  [5656,]  3  672  81 #>  [5657,]  3  673  81 #>  [5658,]  3  674  81 #>  [5659,]  3  675  81 #>  [5660,]  3  676  81 #>  [5661,]  3  677  81 #>  [5662,]  3  678  81 #>  [5663,]  3  679  81 #>  [5664,]  3  680  81 #>  [5665,]  3  681  81 #>  [5666,]  3  682  81 #>  [5667,]  3  683  81 #>  [5668,]  3  684  81 #>  [5669,]  3  685  81 #>  [5670,]  3  686  81 #>  [5671,]  3  687  81 #>  [5672,]  3  688  81 #>  [5673,]  3  689  81 #>  [5674,]  3  690  81 #>  [5675,]  3  691  81 #>  [5676,]  3  692  81 #>  [5677,]  3  693  81 #>  [5678,]  3  694  81 #>  [5679,]  3  695  81 #>  [5680,]  3  696  81 #>  [5681,]  3  697  81 #>  [5682,]  3  698  81 #>  [5683,]  3  699  81 #>  [5684,]  3  700  81 #>  [5685,]  3  701  81 #>  [5686,]  3  702  81 #>  [5687,]  3  703  81 #>  [5688,]  3  704  81 #>  [5689,]  3  705  81 #>  [5690,]  3  706  81 #>  [5691,]  3  707  81 #>  [5692,]  3  708  81 #>  [5693,]  3  709  81 #>  [5694,]  3  710  81 #>  [5695,]  3  711  81 #>  [5696,]  3  712  81 #>  [5697,]  3  713  81 #>  [5698,]  3  714  81 #>  [5699,]  3  715  81 #>  [5700,]  3  716  81 #>  [5701,]  3  717  81 #>  [5702,]  3  718  81 #>  [5703,]  3  719  81 #>  [5704,]  3  720  81 #>  [5705,]  3  721  81 #>  [5706,]  3  722  81 #>  [5707,]  3  723  81 #>  [5708,]  3  724  81 #>  [5709,]  3  725  81 #>  [5710,]  3  726  81 #>  [5711,]  3  727  81 #>  [5712,]  3  728  81 #>  [5713,]  3  729  81 #>  [5714,]  3  730  81 #>  [5715,]  3  731  81 #>  [5716,]  3  732  81 #>  [5717,]  3  733  81 #>  [5718,]  3  734  81 #>  [5719,]  3  735  81 #>  [5720,]  3  736  81 #>  [5721,]  3  737  81 #>  [5722,]  3  738  81 #>  [5723,]  3  739  81 #>  [5724,]  3  740  81 #>  [5725,]  3  741  81 #>  [5726,]  3  742  81 #>  [5727,]  3  743  81 #>  [5728,]  3  744  81 #>  [5729,]  3  745  81 #>  [5730,]  3  746  81 #>  [5731,]  3  747  81 #>  [5732,]  3  748  81 #>  [5733,]  3  749  81 #>  [5734,]  3  750  81 #>  [5735,]  3  751  81 #>  [5736,]  3  752  81 #>  [5737,]  3  753  81 #>  [5738,]  3  659  80 #>  [5739,]  3  660  80 #>  [5740,]  3  661  80 #>  [5741,]  3  662  80 #>  [5742,]  3  663  80 #>  [5743,]  3  664  80 #>  [5744,]  3  665  80 #>  [5745,]  3  666  80 #>  [5746,]  3  667  80 #>  [5747,]  3  668  80 #>  [5748,]  3  669  80 #>  [5749,]  3  670  80 #>  [5750,]  3  671  80 #>  [5751,]  3  672  80 #>  [5752,]  3  673  80 #>  [5753,]  3  674  80 #>  [5754,]  3  675  80 #>  [5755,]  3  676  80 #>  [5756,]  3  677  80 #>  [5757,]  3  678  80 #>  [5758,]  3  679  80 #>  [5759,]  3  680  80 #>  [5760,]  3  681  80 #>  [5761,]  3  682  80 #>  [5762,]  3  683  80 #>  [5763,]  3  684  80 #>  [5764,]  3  685  80 #>  [5765,]  3  686  80 #>  [5766,]  3  687  80 #>  [5767,]  3  688  80 #>  [5768,]  3  689  80 #>  [5769,]  3  690  80 #>  [5770,]  3  691  80 #>  [5771,]  3  692  80 #>  [5772,]  3  693  80 #>  [5773,]  3  694  80 #>  [5774,]  3  695  80 #>  [5775,]  3  696  80 #>  [5776,]  3  697  80 #>  [5777,]  3  698  80 #>  [5778,]  3  699  80 #>  [5779,]  3  700  80 #>  [5780,]  3  701  80 #>  [5781,]  3  702  80 #>  [5782,]  3  703  80 #>  [5783,]  3  704  80 #>  [5784,]  3  705  80 #>  [5785,]  3  706  80 #>  [5786,]  3  707  80 #>  [5787,]  3  708  80 #>  [5788,]  3  709  80 #>  [5789,]  3  710  80 #>  [5790,]  3  711  80 #>  [5791,]  3  712  80 #>  [5792,]  3  713  80 #>  [5793,]  3  714  80 #>  [5794,]  3  715  80 #>  [5795,]  3  716  80 #>  [5796,]  3  717  80 #>  [5797,]  3  718  80 #>  [5798,]  3  719  80 #>  [5799,]  3  720  80 #>  [5800,]  3  721  80 #>  [5801,]  3  722  80 #>  [5802,]  3  723  80 #>  [5803,]  3  724  80 #>  [5804,]  3  725  80 #>  [5805,]  3  726  80 #>  [5806,]  3  727  80 #>  [5807,]  3  728  80 #>  [5808,]  3  729  80 #>  [5809,]  3  730  80 #>  [5810,]  3  731  80 #>  [5811,]  3  732  80 #>  [5812,]  3  733  80 #>  [5813,]  3  734  80 #>  [5814,]  3  735  80 #>  [5815,]  3  736  80 #>  [5816,]  3  737  80 #>  [5817,]  3  738  80 #>  [5818,]  3  739  80 #>  [5819,]  3  740  80 #>  [5820,]  3  741  80 #>  [5821,]  3  742  80 #>  [5822,]  3  743  80 #>  [5823,]  3  744  80 #>  [5824,]  3  745  80 #>  [5825,]  3  746  80 #>  [5826,]  3  747  80 #>  [5827,]  3  748  80 #>  [5828,]  3  749  80 #>  [5829,]  3  750  80 #>  [5830,]  3  751  80 #>  [5831,]  3  752  80 #>  [5832,]  3  753  80 #>  [5833,]  3  660  79 #>  [5834,]  3  661  79 #>  [5835,]  3  662  79 #>  [5836,]  3  663  79 #>  [5837,]  3  664  79 #>  [5838,]  3  665  79 #>  [5839,]  3  666  79 #>  [5840,]  3  667  79 #>  [5841,]  3  668  79 #>  [5842,]  3  669  79 #>  [5843,]  3  670  79 #>  [5844,]  3  671  79 #>  [5845,]  3  672  79 #>  [5846,]  3  673  79 #>  [5847,]  3  674  79 #>  [5848,]  3  675  79 #>  [5849,]  3  676  79 #>  [5850,]  3  677  79 #>  [5851,]  3  678  79 #>  [5852,]  3  679  79 #>  [5853,]  3  680  79 #>  [5854,]  3  681  79 #>  [5855,]  3  682  79 #>  [5856,]  3  683  79 #>  [5857,]  3  684  79 #>  [5858,]  3  685  79 #>  [5859,]  3  686  79 #>  [5860,]  3  687  79 #>  [5861,]  3  688  79 #>  [5862,]  3  689  79 #>  [5863,]  3  690  79 #>  [5864,]  3  691  79 #>  [5865,]  3  692  79 #>  [5866,]  3  693  79 #>  [5867,]  3  694  79 #>  [5868,]  3  695  79 #>  [5869,]  3  696  79 #>  [5870,]  3  697  79 #>  [5871,]  3  698  79 #>  [5872,]  3  699  79 #>  [5873,]  3  700  79 #>  [5874,]  3  701  79 #>  [5875,]  3  702  79 #>  [5876,]  3  703  79 #>  [5877,]  3  704  79 #>  [5878,]  3  705  79 #>  [5879,]  3  706  79 #>  [5880,]  3  707  79 #>  [5881,]  3  708  79 #>  [5882,]  3  709  79 #>  [5883,]  3  710  79 #>  [5884,]  3  711  79 #>  [5885,]  3  712  79 #>  [5886,]  3  713  79 #>  [5887,]  3  714  79 #>  [5888,]  3  715  79 #>  [5889,]  3  716  79 #>  [5890,]  3  717  79 #>  [5891,]  3  718  79 #>  [5892,]  3  719  79 #>  [5893,]  3  720  79 #>  [5894,]  3  721  79 #>  [5895,]  3  722  79 #>  [5896,]  3  723  79 #>  [5897,]  3  724  79 #>  [5898,]  3  725  79 #>  [5899,]  3  726  79 #>  [5900,]  3  727  79 #>  [5901,]  3  728  79 #>  [5902,]  3  729  79 #>  [5903,]  3  730  79 #>  [5904,]  3  731  79 #>  [5905,]  3  732  79 #>  [5906,]  3  733  79 #>  [5907,]  3  734  79 #>  [5908,]  3  735  79 #>  [5909,]  3  736  79 #>  [5910,]  3  737  79 #>  [5911,]  3  738  79 #>  [5912,]  3  739  79 #>  [5913,]  3  740  79 #>  [5914,]  3  741  79 #>  [5915,]  3  742  79 #>  [5916,]  3  743  79 #>  [5917,]  3  744  79 #>  [5918,]  3  745  79 #>  [5919,]  3  746  79 #>  [5920,]  3  747  79 #>  [5921,]  3  748  79 #>  [5922,]  3  749  79 #>  [5923,]  3  750  79 #>  [5924,]  3  751  79 #>  [5925,]  3  752  79 #>  [5926,]  3  660  78 #>  [5927,]  3  661  78 #>  [5928,]  3  662  78 #>  [5929,]  3  663  78 #>  [5930,]  3  664  78 #>  [5931,]  3  665  78 #>  [5932,]  3  666  78 #>  [5933,]  3  667  78 #>  [5934,]  3  668  78 #>  [5935,]  3  669  78 #>  [5936,]  3  670  78 #>  [5937,]  3  671  78 #>  [5938,]  3  672  78 #>  [5939,]  3  673  78 #>  [5940,]  3  674  78 #>  [5941,]  3  675  78 #>  [5942,]  3  676  78 #>  [5943,]  3  677  78 #>  [5944,]  3  678  78 #>  [5945,]  3  679  78 #>  [5946,]  3  680  78 #>  [5947,]  3  681  78 #>  [5948,]  3  682  78 #>  [5949,]  3  683  78 #>  [5950,]  3  684  78 #>  [5951,]  3  685  78 #>  [5952,]  3  686  78 #>  [5953,]  3  687  78 #>  [5954,]  3  688  78 #>  [5955,]  3  689  78 #>  [5956,]  3  690  78 #>  [5957,]  3  691  78 #>  [5958,]  3  692  78 #>  [5959,]  3  693  78 #>  [5960,]  3  694  78 #>  [5961,]  3  695  78 #>  [5962,]  3  696  78 #>  [5963,]  3  697  78 #>  [5964,]  3  698  78 #>  [5965,]  3  699  78 #>  [5966,]  3  700  78 #>  [5967,]  3  701  78 #>  [5968,]  3  702  78 #>  [5969,]  3  703  78 #>  [5970,]  3  704  78 #>  [5971,]  3  705  78 #>  [5972,]  3  706  78 #>  [5973,]  3  707  78 #>  [5974,]  3  708  78 #>  [5975,]  3  709  78 #>  [5976,]  3  710  78 #>  [5977,]  3  711  78 #>  [5978,]  3  712  78 #>  [5979,]  3  713  78 #>  [5980,]  3  714  78 #>  [5981,]  3  715  78 #>  [5982,]  3  716  78 #>  [5983,]  3  717  78 #>  [5984,]  3  718  78 #>  [5985,]  3  719  78 #>  [5986,]  3  720  78 #>  [5987,]  3  721  78 #>  [5988,]  3  722  78 #>  [5989,]  3  723  78 #>  [5990,]  3  724  78 #>  [5991,]  3  725  78 #>  [5992,]  3  726  78 #>  [5993,]  3  727  78 #>  [5994,]  3  728  78 #>  [5995,]  3  729  78 #>  [5996,]  3  730  78 #>  [5997,]  3  731  78 #>  [5998,]  3  732  78 #>  [5999,]  3  733  78 #>  [6000,]  3  734  78 #>  [6001,]  3  735  78 #>  [6002,]  3  736  78 #>  [6003,]  3  737  78 #>  [6004,]  3  738  78 #>  [6005,]  3  739  78 #>  [6006,]  3  740  78 #>  [6007,]  3  741  78 #>  [6008,]  3  742  78 #>  [6009,]  3  743  78 #>  [6010,]  3  744  78 #>  [6011,]  3  745  78 #>  [6012,]  3  746  78 #>  [6013,]  3  747  78 #>  [6014,]  3  748  78 #>  [6015,]  3  749  78 #>  [6016,]  3  750  78 #>  [6017,]  3  751  78 #>  [6018,]  3  752  78 #>  [6019,]  3  660  77 #>  [6020,]  3  661  77 #>  [6021,]  3  662  77 #>  [6022,]  3  663  77 #>  [6023,]  3  664  77 #>  [6024,]  3  665  77 #>  [6025,]  3  666  77 #>  [6026,]  3  667  77 #>  [6027,]  3  668  77 #>  [6028,]  3  669  77 #>  [6029,]  3  670  77 #>  [6030,]  3  671  77 #>  [6031,]  3  672  77 #>  [6032,]  3  673  77 #>  [6033,]  3  674  77 #>  [6034,]  3  675  77 #>  [6035,]  3  676  77 #>  [6036,]  3  677  77 #>  [6037,]  3  678  77 #>  [6038,]  3  679  77 #>  [6039,]  3  680  77 #>  [6040,]  3  681  77 #>  [6041,]  3  682  77 #>  [6042,]  3  683  77 #>  [6043,]  3  684  77 #>  [6044,]  3  685  77 #>  [6045,]  3  686  77 #>  [6046,]  3  687  77 #>  [6047,]  3  688  77 #>  [6048,]  3  689  77 #>  [6049,]  3  690  77 #>  [6050,]  3  691  77 #>  [6051,]  3  692  77 #>  [6052,]  3  693  77 #>  [6053,]  3  694  77 #>  [6054,]  3  695  77 #>  [6055,]  3  696  77 #>  [6056,]  3  697  77 #>  [6057,]  3  698  77 #>  [6058,]  3  699  77 #>  [6059,]  3  700  77 #>  [6060,]  3  701  77 #>  [6061,]  3  702  77 #>  [6062,]  3  703  77 #>  [6063,]  3  704  77 #>  [6064,]  3  705  77 #>  [6065,]  3  706  77 #>  [6066,]  3  707  77 #>  [6067,]  3  708  77 #>  [6068,]  3  709  77 #>  [6069,]  3  710  77 #>  [6070,]  3  711  77 #>  [6071,]  3  712  77 #>  [6072,]  3  713  77 #>  [6073,]  3  714  77 #>  [6074,]  3  715  77 #>  [6075,]  3  716  77 #>  [6076,]  3  717  77 #>  [6077,]  3  718  77 #>  [6078,]  3  719  77 #>  [6079,]  3  720  77 #>  [6080,]  3  721  77 #>  [6081,]  3  722  77 #>  [6082,]  3  723  77 #>  [6083,]  3  724  77 #>  [6084,]  3  725  77 #>  [6085,]  3  726  77 #>  [6086,]  3  727  77 #>  [6087,]  3  728  77 #>  [6088,]  3  729  77 #>  [6089,]  3  730  77 #>  [6090,]  3  731  77 #>  [6091,]  3  732  77 #>  [6092,]  3  733  77 #>  [6093,]  3  734  77 #>  [6094,]  3  735  77 #>  [6095,]  3  736  77 #>  [6096,]  3  737  77 #>  [6097,]  3  738  77 #>  [6098,]  3  739  77 #>  [6099,]  3  740  77 #>  [6100,]  3  741  77 #>  [6101,]  3  742  77 #>  [6102,]  3  743  77 #>  [6103,]  3  744  77 #>  [6104,]  3  745  77 #>  [6105,]  3  746  77 #>  [6106,]  3  747  77 #>  [6107,]  3  748  77 #>  [6108,]  3  749  77 #>  [6109,]  3  750  77 #>  [6110,]  3  751  77 #>  [6111,]  3  752  77 #>  [6112,]  3  661  76 #>  [6113,]  3  662  76 #>  [6114,]  3  663  76 #>  [6115,]  3  664  76 #>  [6116,]  3  665  76 #>  [6117,]  3  666  76 #>  [6118,]  3  667  76 #>  [6119,]  3  668  76 #>  [6120,]  3  669  76 #>  [6121,]  3  670  76 #>  [6122,]  3  671  76 #>  [6123,]  3  672  76 #>  [6124,]  3  673  76 #>  [6125,]  3  674  76 #>  [6126,]  3  675  76 #>  [6127,]  3  676  76 #>  [6128,]  3  677  76 #>  [6129,]  3  678  76 #>  [6130,]  3  679  76 #>  [6131,]  3  680  76 #>  [6132,]  3  681  76 #>  [6133,]  3  682  76 #>  [6134,]  3  683  76 #>  [6135,]  3  684  76 #>  [6136,]  3  685  76 #>  [6137,]  3  686  76 #>  [6138,]  3  687  76 #>  [6139,]  3  688  76 #>  [6140,]  3  689  76 #>  [6141,]  3  690  76 #>  [6142,]  3  691  76 #>  [6143,]  3  692  76 #>  [6144,]  3  693  76 #>  [6145,]  3  694  76 #>  [6146,]  3  695  76 #>  [6147,]  3  696  76 #>  [6148,]  3  697  76 #>  [6149,]  3  698  76 #>  [6150,]  3  699  76 #>  [6151,]  3  700  76 #>  [6152,]  3  701  76 #>  [6153,]  3  702  76 #>  [6154,]  3  703  76 #>  [6155,]  3  704  76 #>  [6156,]  3  705  76 #>  [6157,]  3  706  76 #>  [6158,]  3  707  76 #>  [6159,]  3  708  76 #>  [6160,]  3  709  76 #>  [6161,]  3  710  76 #>  [6162,]  3  711  76 #>  [6163,]  3  712  76 #>  [6164,]  3  713  76 #>  [6165,]  3  714  76 #>  [6166,]  3  715  76 #>  [6167,]  3  716  76 #>  [6168,]  3  717  76 #>  [6169,]  3  718  76 #>  [6170,]  3  719  76 #>  [6171,]  3  720  76 #>  [6172,]  3  721  76 #>  [6173,]  3  722  76 #>  [6174,]  3  723  76 #>  [6175,]  3  724  76 #>  [6176,]  3  725  76 #>  [6177,]  3  726  76 #>  [6178,]  3  727  76 #>  [6179,]  3  728  76 #>  [6180,]  3  729  76 #>  [6181,]  3  730  76 #>  [6182,]  3  731  76 #>  [6183,]  3  732  76 #>  [6184,]  3  733  76 #>  [6185,]  3  734  76 #>  [6186,]  3  735  76 #>  [6187,]  3  736  76 #>  [6188,]  3  737  76 #>  [6189,]  3  738  76 #>  [6190,]  3  739  76 #>  [6191,]  3  740  76 #>  [6192,]  3  741  76 #>  [6193,]  3  742  76 #>  [6194,]  3  743  76 #>  [6195,]  3  744  76 #>  [6196,]  3  745  76 #>  [6197,]  3  746  76 #>  [6198,]  3  747  76 #>  [6199,]  3  748  76 #>  [6200,]  3  749  76 #>  [6201,]  3  750  76 #>  [6202,]  3  751  76 #>  [6203,]  3  752  76 #>  [6204,]  3  661  75 #>  [6205,]  3  662  75 #>  [6206,]  3  663  75 #>  [6207,]  3  664  75 #>  [6208,]  3  665  75 #>  [6209,]  3  666  75 #>  [6210,]  3  667  75 #>  [6211,]  3  668  75 #>  [6212,]  3  669  75 #>  [6213,]  3  670  75 #>  [6214,]  3  671  75 #>  [6215,]  3  672  75 #>  [6216,]  3  673  75 #>  [6217,]  3  674  75 #>  [6218,]  3  675  75 #>  [6219,]  3  676  75 #>  [6220,]  3  677  75 #>  [6221,]  3  678  75 #>  [6222,]  3  679  75 #>  [6223,]  3  680  75 #>  [6224,]  3  681  75 #>  [6225,]  3  682  75 #>  [6226,]  3  683  75 #>  [6227,]  3  684  75 #>  [6228,]  3  685  75 #>  [6229,]  3  686  75 #>  [6230,]  3  687  75 #>  [6231,]  3  688  75 #>  [6232,]  3  689  75 #>  [6233,]  3  690  75 #>  [6234,]  3  691  75 #>  [6235,]  3  692  75 #>  [6236,]  3  693  75 #>  [6237,]  3  694  75 #>  [6238,]  3  695  75 #>  [6239,]  3  696  75 #>  [6240,]  3  697  75 #>  [6241,]  3  698  75 #>  [6242,]  3  699  75 #>  [6243,]  3  700  75 #>  [6244,]  3  701  75 #>  [6245,]  3  702  75 #>  [6246,]  3  703  75 #>  [6247,]  3  704  75 #>  [6248,]  3  705  75 #>  [6249,]  3  706  75 #>  [6250,]  3  707  75 #>  [6251,]  3  708  75 #>  [6252,]  3  709  75 #>  [6253,]  3  710  75 #>  [6254,]  3  711  75 #>  [6255,]  3  712  75 #>  [6256,]  3  713  75 #>  [6257,]  3  714  75 #>  [6258,]  3  715  75 #>  [6259,]  3  716  75 #>  [6260,]  3  717  75 #>  [6261,]  3  718  75 #>  [6262,]  3  719  75 #>  [6263,]  3  720  75 #>  [6264,]  3  721  75 #>  [6265,]  3  722  75 #>  [6266,]  3  723  75 #>  [6267,]  3  724  75 #>  [6268,]  3  725  75 #>  [6269,]  3  726  75 #>  [6270,]  3  727  75 #>  [6271,]  3  728  75 #>  [6272,]  3  729  75 #>  [6273,]  3  730  75 #>  [6274,]  3  731  75 #>  [6275,]  3  732  75 #>  [6276,]  3  733  75 #>  [6277,]  3  734  75 #>  [6278,]  3  735  75 #>  [6279,]  3  736  75 #>  [6280,]  3  737  75 #>  [6281,]  3  738  75 #>  [6282,]  3  739  75 #>  [6283,]  3  740  75 #>  [6284,]  3  741  75 #>  [6285,]  3  742  75 #>  [6286,]  3  743  75 #>  [6287,]  3  744  75 #>  [6288,]  3  745  75 #>  [6289,]  3  746  75 #>  [6290,]  3  747  75 #>  [6291,]  3  748  75 #>  [6292,]  3  749  75 #>  [6293,]  3  750  75 #>  [6294,]  3  751  75 #>  [6295,]  3  662  74 #>  [6296,]  3  663  74 #>  [6297,]  3  664  74 #>  [6298,]  3  665  74 #>  [6299,]  3  666  74 #>  [6300,]  3  667  74 #>  [6301,]  3  668  74 #>  [6302,]  3  669  74 #>  [6303,]  3  670  74 #>  [6304,]  3  671  74 #>  [6305,]  3  672  74 #>  [6306,]  3  673  74 #>  [6307,]  3  674  74 #>  [6308,]  3  675  74 #>  [6309,]  3  676  74 #>  [6310,]  3  677  74 #>  [6311,]  3  678  74 #>  [6312,]  3  679  74 #>  [6313,]  3  680  74 #>  [6314,]  3  681  74 #>  [6315,]  3  682  74 #>  [6316,]  3  683  74 #>  [6317,]  3  684  74 #>  [6318,]  3  685  74 #>  [6319,]  3  686  74 #>  [6320,]  3  687  74 #>  [6321,]  3  688  74 #>  [6322,]  3  689  74 #>  [6323,]  3  690  74 #>  [6324,]  3  691  74 #>  [6325,]  3  692  74 #>  [6326,]  3  693  74 #>  [6327,]  3  694  74 #>  [6328,]  3  695  74 #>  [6329,]  3  696  74 #>  [6330,]  3  697  74 #>  [6331,]  3  698  74 #>  [6332,]  3  699  74 #>  [6333,]  3  700  74 #>  [6334,]  3  701  74 #>  [6335,]  3  702  74 #>  [6336,]  3  703  74 #>  [6337,]  3  704  74 #>  [6338,]  3  705  74 #>  [6339,]  3  706  74 #>  [6340,]  3  707  74 #>  [6341,]  3  708  74 #>  [6342,]  3  709  74 #>  [6343,]  3  710  74 #>  [6344,]  3  711  74 #>  [6345,]  3  712  74 #>  [6346,]  3  713  74 #>  [6347,]  3  714  74 #>  [6348,]  3  715  74 #>  [6349,]  3  716  74 #>  [6350,]  3  717  74 #>  [6351,]  3  718  74 #>  [6352,]  3  719  74 #>  [6353,]  3  720  74 #>  [6354,]  3  721  74 #>  [6355,]  3  722  74 #>  [6356,]  3  723  74 #>  [6357,]  3  724  74 #>  [6358,]  3  725  74 #>  [6359,]  3  726  74 #>  [6360,]  3  727  74 #>  [6361,]  3  728  74 #>  [6362,]  3  729  74 #>  [6363,]  3  730  74 #>  [6364,]  3  731  74 #>  [6365,]  3  732  74 #>  [6366,]  3  733  74 #>  [6367,]  3  734  74 #>  [6368,]  3  735  74 #>  [6369,]  3  736  74 #>  [6370,]  3  737  74 #>  [6371,]  3  738  74 #>  [6372,]  3  739  74 #>  [6373,]  3  740  74 #>  [6374,]  3  741  74 #>  [6375,]  3  742  74 #>  [6376,]  3  743  74 #>  [6377,]  3  744  74 #>  [6378,]  3  745  74 #>  [6379,]  3  746  74 #>  [6380,]  3  747  74 #>  [6381,]  3  748  74 #>  [6382,]  3  749  74 #>  [6383,]  3  750  74 #>  [6384,]  3  751  74 #>  [6385,]  3  662  73 #>  [6386,]  3  663  73 #>  [6387,]  3  664  73 #>  [6388,]  3  665  73 #>  [6389,]  3  666  73 #>  [6390,]  3  667  73 #>  [6391,]  3  668  73 #>  [6392,]  3  669  73 #>  [6393,]  3  670  73 #>  [6394,]  3  671  73 #>  [6395,]  3  672  73 #>  [6396,]  3  673  73 #>  [6397,]  3  674  73 #>  [6398,]  3  675  73 #>  [6399,]  3  676  73 #>  [6400,]  3  677  73 #>  [6401,]  3  678  73 #>  [6402,]  3  679  73 #>  [6403,]  3  680  73 #>  [6404,]  3  681  73 #>  [6405,]  3  682  73 #>  [6406,]  3  683  73 #>  [6407,]  3  684  73 #>  [6408,]  3  685  73 #>  [6409,]  3  686  73 #>  [6410,]  3  687  73 #>  [6411,]  3  688  73 #>  [6412,]  3  689  73 #>  [6413,]  3  690  73 #>  [6414,]  3  691  73 #>  [6415,]  3  692  73 #>  [6416,]  3  693  73 #>  [6417,]  3  694  73 #>  [6418,]  3  695  73 #>  [6419,]  3  696  73 #>  [6420,]  3  697  73 #>  [6421,]  3  698  73 #>  [6422,]  3  699  73 #>  [6423,]  3  700  73 #>  [6424,]  3  701  73 #>  [6425,]  3  702  73 #>  [6426,]  3  703  73 #>  [6427,]  3  704  73 #>  [6428,]  3  705  73 #>  [6429,]  3  706  73 #>  [6430,]  3  707  73 #>  [6431,]  3  708  73 #>  [6432,]  3  709  73 #>  [6433,]  3  710  73 #>  [6434,]  3  711  73 #>  [6435,]  3  712  73 #>  [6436,]  3  713  73 #>  [6437,]  3  714  73 #>  [6438,]  3  715  73 #>  [6439,]  3  716  73 #>  [6440,]  3  717  73 #>  [6441,]  3  718  73 #>  [6442,]  3  719  73 #>  [6443,]  3  720  73 #>  [6444,]  3  721  73 #>  [6445,]  3  722  73 #>  [6446,]  3  723  73 #>  [6447,]  3  724  73 #>  [6448,]  3  725  73 #>  [6449,]  3  726  73 #>  [6450,]  3  727  73 #>  [6451,]  3  728  73 #>  [6452,]  3  729  73 #>  [6453,]  3  730  73 #>  [6454,]  3  731  73 #>  [6455,]  3  732  73 #>  [6456,]  3  733  73 #>  [6457,]  3  734  73 #>  [6458,]  3  735  73 #>  [6459,]  3  736  73 #>  [6460,]  3  737  73 #>  [6461,]  3  738  73 #>  [6462,]  3  739  73 #>  [6463,]  3  740  73 #>  [6464,]  3  741  73 #>  [6465,]  3  742  73 #>  [6466,]  3  743  73 #>  [6467,]  3  744  73 #>  [6468,]  3  745  73 #>  [6469,]  3  746  73 #>  [6470,]  3  747  73 #>  [6471,]  3  748  73 #>  [6472,]  3  749  73 #>  [6473,]  3  750  73 #>  [6474,]  3  751  73 #>  [6475,]  3  663  72 #>  [6476,]  3  664  72 #>  [6477,]  3  665  72 #>  [6478,]  3  666  72 #>  [6479,]  3  667  72 #>  [6480,]  3  668  72 #>  [6481,]  3  669  72 #>  [6482,]  3  670  72 #>  [6483,]  3  671  72 #>  [6484,]  3  672  72 #>  [6485,]  3  673  72 #>  [6486,]  3  674  72 #>  [6487,]  3  675  72 #>  [6488,]  3  676  72 #>  [6489,]  3  677  72 #>  [6490,]  3  678  72 #>  [6491,]  3  679  72 #>  [6492,]  3  680  72 #>  [6493,]  3  681  72 #>  [6494,]  3  682  72 #>  [6495,]  3  683  72 #>  [6496,]  3  684  72 #>  [6497,]  3  685  72 #>  [6498,]  3  686  72 #>  [6499,]  3  687  72 #>  [6500,]  3  688  72 #>  [6501,]  3  689  72 #>  [6502,]  3  690  72 #>  [6503,]  3  691  72 #>  [6504,]  3  692  72 #>  [6505,]  3  693  72 #>  [6506,]  3  694  72 #>  [6507,]  3  695  72 #>  [6508,]  3  696  72 #>  [6509,]  3  697  72 #>  [6510,]  3  698  72 #>  [6511,]  3  699  72 #>  [6512,]  3  700  72 #>  [6513,]  3  701  72 #>  [6514,]  3  702  72 #>  [6515,]  3  703  72 #>  [6516,]  3  704  72 #>  [6517,]  3  705  72 #>  [6518,]  3  706  72 #>  [6519,]  3  707  72 #>  [6520,]  3  708  72 #>  [6521,]  3  709  72 #>  [6522,]  3  710  72 #>  [6523,]  3  711  72 #>  [6524,]  3  712  72 #>  [6525,]  3  713  72 #>  [6526,]  3  714  72 #>  [6527,]  3  715  72 #>  [6528,]  3  716  72 #>  [6529,]  3  717  72 #>  [6530,]  3  718  72 #>  [6531,]  3  719  72 #>  [6532,]  3  720  72 #>  [6533,]  3  721  72 #>  [6534,]  3  722  72 #>  [6535,]  3  723  72 #>  [6536,]  3  724  72 #>  [6537,]  3  725  72 #>  [6538,]  3  726  72 #>  [6539,]  3  727  72 #>  [6540,]  3  728  72 #>  [6541,]  3  729  72 #>  [6542,]  3  730  72 #>  [6543,]  3  731  72 #>  [6544,]  3  732  72 #>  [6545,]  3  733  72 #>  [6546,]  3  734  72 #>  [6547,]  3  735  72 #>  [6548,]  3  736  72 #>  [6549,]  3  737  72 #>  [6550,]  3  738  72 #>  [6551,]  3  739  72 #>  [6552,]  3  740  72 #>  [6553,]  3  741  72 #>  [6554,]  3  742  72 #>  [6555,]  3  743  72 #>  [6556,]  3  744  72 #>  [6557,]  3  745  72 #>  [6558,]  3  746  72 #>  [6559,]  3  747  72 #>  [6560,]  3  748  72 #>  [6561,]  3  749  72 #>  [6562,]  3  750  72 #>  [6563,]  3  663  71 #>  [6564,]  3  664  71 #>  [6565,]  3  665  71 #>  [6566,]  3  666  71 #>  [6567,]  3  667  71 #>  [6568,]  3  668  71 #>  [6569,]  3  669  71 #>  [6570,]  3  670  71 #>  [6571,]  3  671  71 #>  [6572,]  3  672  71 #>  [6573,]  3  673  71 #>  [6574,]  3  674  71 #>  [6575,]  3  675  71 #>  [6576,]  3  676  71 #>  [6577,]  3  677  71 #>  [6578,]  3  678  71 #>  [6579,]  3  679  71 #>  [6580,]  3  680  71 #>  [6581,]  3  681  71 #>  [6582,]  3  682  71 #>  [6583,]  3  683  71 #>  [6584,]  3  684  71 #>  [6585,]  3  685  71 #>  [6586,]  3  686  71 #>  [6587,]  3  687  71 #>  [6588,]  3  688  71 #>  [6589,]  3  689  71 #>  [6590,]  3  690  71 #>  [6591,]  3  691  71 #>  [6592,]  3  692  71 #>  [6593,]  3  693  71 #>  [6594,]  3  694  71 #>  [6595,]  3  695  71 #>  [6596,]  3  696  71 #>  [6597,]  3  697  71 #>  [6598,]  3  698  71 #>  [6599,]  3  699  71 #>  [6600,]  3  700  71 #>  [6601,]  3  701  71 #>  [6602,]  3  702  71 #>  [6603,]  3  703  71 #>  [6604,]  3  704  71 #>  [6605,]  3  705  71 #>  [6606,]  3  706  71 #>  [6607,]  3  707  71 #>  [6608,]  3  708  71 #>  [6609,]  3  709  71 #>  [6610,]  3  710  71 #>  [6611,]  3  711  71 #>  [6612,]  3  712  71 #>  [6613,]  3  713  71 #>  [6614,]  3  714  71 #>  [6615,]  3  715  71 #>  [6616,]  3  716  71 #>  [6617,]  3  717  71 #>  [6618,]  3  718  71 #>  [6619,]  3  719  71 #>  [6620,]  3  720  71 #>  [6621,]  3  721  71 #>  [6622,]  3  722  71 #>  [6623,]  3  723  71 #>  [6624,]  3  724  71 #>  [6625,]  3  725  71 #>  [6626,]  3  726  71 #>  [6627,]  3  727  71 #>  [6628,]  3  728  71 #>  [6629,]  3  729  71 #>  [6630,]  3  730  71 #>  [6631,]  3  731  71 #>  [6632,]  3  732  71 #>  [6633,]  3  733  71 #>  [6634,]  3  734  71 #>  [6635,]  3  735  71 #>  [6636,]  3  736  71 #>  [6637,]  3  737  71 #>  [6638,]  3  738  71 #>  [6639,]  3  739  71 #>  [6640,]  3  740  71 #>  [6641,]  3  741  71 #>  [6642,]  3  742  71 #>  [6643,]  3  743  71 #>  [6644,]  3  744  71 #>  [6645,]  3  745  71 #>  [6646,]  3  746  71 #>  [6647,]  3  747  71 #>  [6648,]  3  748  71 #>  [6649,]  3  749  71 #>  [6650,]  3  750  71 #>  [6651,]  3  664  70 #>  [6652,]  3  665  70 #>  [6653,]  3  666  70 #>  [6654,]  3  667  70 #>  [6655,]  3  668  70 #>  [6656,]  3  669  70 #>  [6657,]  3  670  70 #>  [6658,]  3  671  70 #>  [6659,]  3  672  70 #>  [6660,]  3  673  70 #>  [6661,]  3  674  70 #>  [6662,]  3  675  70 #>  [6663,]  3  676  70 #>  [6664,]  3  677  70 #>  [6665,]  3  678  70 #>  [6666,]  3  679  70 #>  [6667,]  3  680  70 #>  [6668,]  3  681  70 #>  [6669,]  3  682  70 #>  [6670,]  3  683  70 #>  [6671,]  3  684  70 #>  [6672,]  3  685  70 #>  [6673,]  3  686  70 #>  [6674,]  3  687  70 #>  [6675,]  3  688  70 #>  [6676,]  3  689  70 #>  [6677,]  3  690  70 #>  [6678,]  3  691  70 #>  [6679,]  3  692  70 #>  [6680,]  3  693  70 #>  [6681,]  3  694  70 #>  [6682,]  3  695  70 #>  [6683,]  3  696  70 #>  [6684,]  3  697  70 #>  [6685,]  3  698  70 #>  [6686,]  3  699  70 #>  [6687,]  3  700  70 #>  [6688,]  3  701  70 #>  [6689,]  3  702  70 #>  [6690,]  3  703  70 #>  [6691,]  3  704  70 #>  [6692,]  3  705  70 #>  [6693,]  3  706  70 #>  [6694,]  3  707  70 #>  [6695,]  3  708  70 #>  [6696,]  3  709  70 #>  [6697,]  3  710  70 #>  [6698,]  3  711  70 #>  [6699,]  3  712  70 #>  [6700,]  3  713  70 #>  [6701,]  3  714  70 #>  [6702,]  3  715  70 #>  [6703,]  3  716  70 #>  [6704,]  3  717  70 #>  [6705,]  3  718  70 #>  [6706,]  3  719  70 #>  [6707,]  3  720  70 #>  [6708,]  3  721  70 #>  [6709,]  3  722  70 #>  [6710,]  3  723  70 #>  [6711,]  3  724  70 #>  [6712,]  3  725  70 #>  [6713,]  3  726  70 #>  [6714,]  3  727  70 #>  [6715,]  3  728  70 #>  [6716,]  3  729  70 #>  [6717,]  3  730  70 #>  [6718,]  3  731  70 #>  [6719,]  3  732  70 #>  [6720,]  3  733  70 #>  [6721,]  3  734  70 #>  [6722,]  3  735  70 #>  [6723,]  3  736  70 #>  [6724,]  3  737  70 #>  [6725,]  3  738  70 #>  [6726,]  3  739  70 #>  [6727,]  3  740  70 #>  [6728,]  3  741  70 #>  [6729,]  3  742  70 #>  [6730,]  3  743  70 #>  [6731,]  3  744  70 #>  [6732,]  3  745  70 #>  [6733,]  3  746  70 #>  [6734,]  3  747  70 #>  [6735,]  3  748  70 #>  [6736,]  3  749  70 #>  [6737,]  3  664  69 #>  [6738,]  3  665  69 #>  [6739,]  3  666  69 #>  [6740,]  3  667  69 #>  [6741,]  3  668  69 #>  [6742,]  3  669  69 #>  [6743,]  3  670  69 #>  [6744,]  3  671  69 #>  [6745,]  3  672  69 #>  [6746,]  3  673  69 #>  [6747,]  3  674  69 #>  [6748,]  3  675  69 #>  [6749,]  3  676  69 #>  [6750,]  3  677  69 #>  [6751,]  3  678  69 #>  [6752,]  3  679  69 #>  [6753,]  3  680  69 #>  [6754,]  3  681  69 #>  [6755,]  3  682  69 #>  [6756,]  3  683  69 #>  [6757,]  3  684  69 #>  [6758,]  3  685  69 #>  [6759,]  3  686  69 #>  [6760,]  3  687  69 #>  [6761,]  3  688  69 #>  [6762,]  3  689  69 #>  [6763,]  3  690  69 #>  [6764,]  3  691  69 #>  [6765,]  3  692  69 #>  [6766,]  3  693  69 #>  [6767,]  3  694  69 #>  [6768,]  3  695  69 #>  [6769,]  3  696  69 #>  [6770,]  3  697  69 #>  [6771,]  3  698  69 #>  [6772,]  3  699  69 #>  [6773,]  3  700  69 #>  [6774,]  3  701  69 #>  [6775,]  3  702  69 #>  [6776,]  3  703  69 #>  [6777,]  3  704  69 #>  [6778,]  3  705  69 #>  [6779,]  3  706  69 #>  [6780,]  3  707  69 #>  [6781,]  3  708  69 #>  [6782,]  3  709  69 #>  [6783,]  3  710  69 #>  [6784,]  3  711  69 #>  [6785,]  3  712  69 #>  [6786,]  3  713  69 #>  [6787,]  3  714  69 #>  [6788,]  3  715  69 #>  [6789,]  3  716  69 #>  [6790,]  3  717  69 #>  [6791,]  3  718  69 #>  [6792,]  3  719  69 #>  [6793,]  3  720  69 #>  [6794,]  3  721  69 #>  [6795,]  3  722  69 #>  [6796,]  3  723  69 #>  [6797,]  3  724  69 #>  [6798,]  3  725  69 #>  [6799,]  3  726  69 #>  [6800,]  3  727  69 #>  [6801,]  3  728  69 #>  [6802,]  3  729  69 #>  [6803,]  3  730  69 #>  [6804,]  3  731  69 #>  [6805,]  3  732  69 #>  [6806,]  3  733  69 #>  [6807,]  3  734  69 #>  [6808,]  3  735  69 #>  [6809,]  3  736  69 #>  [6810,]  3  737  69 #>  [6811,]  3  738  69 #>  [6812,]  3  739  69 #>  [6813,]  3  740  69 #>  [6814,]  3  741  69 #>  [6815,]  3  742  69 #>  [6816,]  3  743  69 #>  [6817,]  3  744  69 #>  [6818,]  3  745  69 #>  [6819,]  3  746  69 #>  [6820,]  3  747  69 #>  [6821,]  3  748  69 #>  [6822,]  3  749  69 #>  [6823,]  3  665  68 #>  [6824,]  3  666  68 #>  [6825,]  3  667  68 #>  [6826,]  3  668  68 #>  [6827,]  3  669  68 #>  [6828,]  3  670  68 #>  [6829,]  3  671  68 #>  [6830,]  3  672  68 #>  [6831,]  3  673  68 #>  [6832,]  3  674  68 #>  [6833,]  3  675  68 #>  [6834,]  3  676  68 #>  [6835,]  3  677  68 #>  [6836,]  3  678  68 #>  [6837,]  3  679  68 #>  [6838,]  3  680  68 #>  [6839,]  3  681  68 #>  [6840,]  3  682  68 #>  [6841,]  3  683  68 #>  [6842,]  3  684  68 #>  [6843,]  3  685  68 #>  [6844,]  3  686  68 #>  [6845,]  3  687  68 #>  [6846,]  3  688  68 #>  [6847,]  3  689  68 #>  [6848,]  3  690  68 #>  [6849,]  3  691  68 #>  [6850,]  3  692  68 #>  [6851,]  3  693  68 #>  [6852,]  3  694  68 #>  [6853,]  3  695  68 #>  [6854,]  3  696  68 #>  [6855,]  3  697  68 #>  [6856,]  3  698  68 #>  [6857,]  3  699  68 #>  [6858,]  3  700  68 #>  [6859,]  3  701  68 #>  [6860,]  3  702  68 #>  [6861,]  3  703  68 #>  [6862,]  3  704  68 #>  [6863,]  3  705  68 #>  [6864,]  3  706  68 #>  [6865,]  3  707  68 #>  [6866,]  3  708  68 #>  [6867,]  3  709  68 #>  [6868,]  3  710  68 #>  [6869,]  3  711  68 #>  [6870,]  3  712  68 #>  [6871,]  3  713  68 #>  [6872,]  3  714  68 #>  [6873,]  3  715  68 #>  [6874,]  3  716  68 #>  [6875,]  3  717  68 #>  [6876,]  3  718  68 #>  [6877,]  3  719  68 #>  [6878,]  3  720  68 #>  [6879,]  3  721  68 #>  [6880,]  3  722  68 #>  [6881,]  3  723  68 #>  [6882,]  3  724  68 #>  [6883,]  3  725  68 #>  [6884,]  3  726  68 #>  [6885,]  3  727  68 #>  [6886,]  3  728  68 #>  [6887,]  3  729  68 #>  [6888,]  3  730  68 #>  [6889,]  3  731  68 #>  [6890,]  3  732  68 #>  [6891,]  3  733  68 #>  [6892,]  3  734  68 #>  [6893,]  3  735  68 #>  [6894,]  3  736  68 #>  [6895,]  3  737  68 #>  [6896,]  3  738  68 #>  [6897,]  3  739  68 #>  [6898,]  3  740  68 #>  [6899,]  3  741  68 #>  [6900,]  3  742  68 #>  [6901,]  3  743  68 #>  [6902,]  3  744  68 #>  [6903,]  3  745  68 #>  [6904,]  3  746  68 #>  [6905,]  3  747  68 #>  [6906,]  3  748  68 #>  [6907,]  3  749  68 #>  [6908,]  3  666  67 #>  [6909,]  3  667  67 #>  [6910,]  3  668  67 #>  [6911,]  3  669  67 #>  [6912,]  3  670  67 #>  [6913,]  3  671  67 #>  [6914,]  3  672  67 #>  [6915,]  3  673  67 #>  [6916,]  3  674  67 #>  [6917,]  3  675  67 #>  [6918,]  3  676  67 #>  [6919,]  3  677  67 #>  [6920,]  3  678  67 #>  [6921,]  3  679  67 #>  [6922,]  3  680  67 #>  [6923,]  3  681  67 #>  [6924,]  3  682  67 #>  [6925,]  3  683  67 #>  [6926,]  3  684  67 #>  [6927,]  3  685  67 #>  [6928,]  3  686  67 #>  [6929,]  3  687  67 #>  [6930,]  3  688  67 #>  [6931,]  3  689  67 #>  [6932,]  3  690  67 #>  [6933,]  3  691  67 #>  [6934,]  3  692  67 #>  [6935,]  3  693  67 #>  [6936,]  3  694  67 #>  [6937,]  3  695  67 #>  [6938,]  3  696  67 #>  [6939,]  3  697  67 #>  [6940,]  3  698  67 #>  [6941,]  3  699  67 #>  [6942,]  3  700  67 #>  [6943,]  3  701  67 #>  [6944,]  3  702  67 #>  [6945,]  3  703  67 #>  [6946,]  3  704  67 #>  [6947,]  3  705  67 #>  [6948,]  3  706  67 #>  [6949,]  3  707  67 #>  [6950,]  3  708  67 #>  [6951,]  3  709  67 #>  [6952,]  3  710  67 #>  [6953,]  3  711  67 #>  [6954,]  3  712  67 #>  [6955,]  3  713  67 #>  [6956,]  3  714  67 #>  [6957,]  3  715  67 #>  [6958,]  3  716  67 #>  [6959,]  3  717  67 #>  [6960,]  3  718  67 #>  [6961,]  3  719  67 #>  [6962,]  3  720  67 #>  [6963,]  3  721  67 #>  [6964,]  3  722  67 #>  [6965,]  3  723  67 #>  [6966,]  3  724  67 #>  [6967,]  3  725  67 #>  [6968,]  3  726  67 #>  [6969,]  3  727  67 #>  [6970,]  3  728  67 #>  [6971,]  3  729  67 #>  [6972,]  3  730  67 #>  [6973,]  3  731  67 #>  [6974,]  3  732  67 #>  [6975,]  3  733  67 #>  [6976,]  3  734  67 #>  [6977,]  3  735  67 #>  [6978,]  3  736  67 #>  [6979,]  3  737  67 #>  [6980,]  3  738  67 #>  [6981,]  3  739  67 #>  [6982,]  3  740  67 #>  [6983,]  3  741  67 #>  [6984,]  3  742  67 #>  [6985,]  3  743  67 #>  [6986,]  3  744  67 #>  [6987,]  3  745  67 #>  [6988,]  3  746  67 #>  [6989,]  3  747  67 #>  [6990,]  3  748  67 #>  [6991,]  3  666  66 #>  [6992,]  3  667  66 #>  [6993,]  3  668  66 #>  [6994,]  3  669  66 #>  [6995,]  3  670  66 #>  [6996,]  3  671  66 #>  [6997,]  3  672  66 #>  [6998,]  3  673  66 #>  [6999,]  3  674  66 #>  [7000,]  3  675  66 #>  [7001,]  3  676  66 #>  [7002,]  3  677  66 #>  [7003,]  3  678  66 #>  [7004,]  3  679  66 #>  [7005,]  3  680  66 #>  [7006,]  3  681  66 #>  [7007,]  3  682  66 #>  [7008,]  3  683  66 #>  [7009,]  3  684  66 #>  [7010,]  3  685  66 #>  [7011,]  3  686  66 #>  [7012,]  3  687  66 #>  [7013,]  3  688  66 #>  [7014,]  3  689  66 #>  [7015,]  3  690  66 #>  [7016,]  3  691  66 #>  [7017,]  3  692  66 #>  [7018,]  3  693  66 #>  [7019,]  3  694  66 #>  [7020,]  3  695  66 #>  [7021,]  3  696  66 #>  [7022,]  3  697  66 #>  [7023,]  3  698  66 #>  [7024,]  3  699  66 #>  [7025,]  3  700  66 #>  [7026,]  3  701  66 #>  [7027,]  3  702  66 #>  [7028,]  3  703  66 #>  [7029,]  3  704  66 #>  [7030,]  3  705  66 #>  [7031,]  3  706  66 #>  [7032,]  3  707  66 #>  [7033,]  3  708  66 #>  [7034,]  3  709  66 #>  [7035,]  3  710  66 #>  [7036,]  3  711  66 #>  [7037,]  3  712  66 #>  [7038,]  3  713  66 #>  [7039,]  3  714  66 #>  [7040,]  3  715  66 #>  [7041,]  3  716  66 #>  [7042,]  3  717  66 #>  [7043,]  3  718  66 #>  [7044,]  3  719  66 #>  [7045,]  3  720  66 #>  [7046,]  3  721  66 #>  [7047,]  3  722  66 #>  [7048,]  3  723  66 #>  [7049,]  3  724  66 #>  [7050,]  3  725  66 #>  [7051,]  3  726  66 #>  [7052,]  3  727  66 #>  [7053,]  3  728  66 #>  [7054,]  3  729  66 #>  [7055,]  3  730  66 #>  [7056,]  3  731  66 #>  [7057,]  3  732  66 #>  [7058,]  3  733  66 #>  [7059,]  3  734  66 #>  [7060,]  3  735  66 #>  [7061,]  3  736  66 #>  [7062,]  3  737  66 #>  [7063,]  3  738  66 #>  [7064,]  3  739  66 #>  [7065,]  3  740  66 #>  [7066,]  3  741  66 #>  [7067,]  3  742  66 #>  [7068,]  3  743  66 #>  [7069,]  3  744  66 #>  [7070,]  3  745  66 #>  [7071,]  3  746  66 #>  [7072,]  3  747  66 #>  [7073,]  3  667  65 #>  [7074,]  3  668  65 #>  [7075,]  3  669  65 #>  [7076,]  3  670  65 #>  [7077,]  3  671  65 #>  [7078,]  3  672  65 #>  [7079,]  3  673  65 #>  [7080,]  3  674  65 #>  [7081,]  3  675  65 #>  [7082,]  3  676  65 #>  [7083,]  3  677  65 #>  [7084,]  3  678  65 #>  [7085,]  3  679  65 #>  [7086,]  3  680  65 #>  [7087,]  3  681  65 #>  [7088,]  3  682  65 #>  [7089,]  3  683  65 #>  [7090,]  3  684  65 #>  [7091,]  3  685  65 #>  [7092,]  3  686  65 #>  [7093,]  3  687  65 #>  [7094,]  3  688  65 #>  [7095,]  3  689  65 #>  [7096,]  3  690  65 #>  [7097,]  3  691  65 #>  [7098,]  3  692  65 #>  [7099,]  3  693  65 #>  [7100,]  3  694  65 #>  [7101,]  3  695  65 #>  [7102,]  3  696  65 #>  [7103,]  3  697  65 #>  [7104,]  3  698  65 #>  [7105,]  3  699  65 #>  [7106,]  3  700  65 #>  [7107,]  3  701  65 #>  [7108,]  3  702  65 #>  [7109,]  3  703  65 #>  [7110,]  3  704  65 #>  [7111,]  3  705  65 #>  [7112,]  3  706  65 #>  [7113,]  3  707  65 #>  [7114,]  3  708  65 #>  [7115,]  3  709  65 #>  [7116,]  3  710  65 #>  [7117,]  3  711  65 #>  [7118,]  3  712  65 #>  [7119,]  3  713  65 #>  [7120,]  3  714  65 #>  [7121,]  3  715  65 #>  [7122,]  3  716  65 #>  [7123,]  3  717  65 #>  [7124,]  3  718  65 #>  [7125,]  3  719  65 #>  [7126,]  3  720  65 #>  [7127,]  3  721  65 #>  [7128,]  3  722  65 #>  [7129,]  3  723  65 #>  [7130,]  3  724  65 #>  [7131,]  3  725  65 #>  [7132,]  3  726  65 #>  [7133,]  3  727  65 #>  [7134,]  3  728  65 #>  [7135,]  3  729  65 #>  [7136,]  3  730  65 #>  [7137,]  3  731  65 #>  [7138,]  3  732  65 #>  [7139,]  3  733  65 #>  [7140,]  3  734  65 #>  [7141,]  3  735  65 #>  [7142,]  3  736  65 #>  [7143,]  3  737  65 #>  [7144,]  3  738  65 #>  [7145,]  3  739  65 #>  [7146,]  3  740  65 #>  [7147,]  3  741  65 #>  [7148,]  3  742  65 #>  [7149,]  3  743  65 #>  [7150,]  3  744  65 #>  [7151,]  3  745  65 #>  [7152,]  3  746  65 #>  [7153,]  3  747  65 #>  [7154,]  3  668  64 #>  [7155,]  3  669  64 #>  [7156,]  3  670  64 #>  [7157,]  3  671  64 #>  [7158,]  3  672  64 #>  [7159,]  3  673  64 #>  [7160,]  3  674  64 #>  [7161,]  3  675  64 #>  [7162,]  3  676  64 #>  [7163,]  3  677  64 #>  [7164,]  3  678  64 #>  [7165,]  3  679  64 #>  [7166,]  3  680  64 #>  [7167,]  3  681  64 #>  [7168,]  3  682  64 #>  [7169,]  3  683  64 #>  [7170,]  3  684  64 #>  [7171,]  3  685  64 #>  [7172,]  3  686  64 #>  [7173,]  3  687  64 #>  [7174,]  3  688  64 #>  [7175,]  3  689  64 #>  [7176,]  3  690  64 #>  [7177,]  3  691  64 #>  [7178,]  3  692  64 #>  [7179,]  3  693  64 #>  [7180,]  3  694  64 #>  [7181,]  3  695  64 #>  [7182,]  3  696  64 #>  [7183,]  3  697  64 #>  [7184,]  3  698  64 #>  [7185,]  3  699  64 #>  [7186,]  3  700  64 #>  [7187,]  3  701  64 #>  [7188,]  3  702  64 #>  [7189,]  3  703  64 #>  [7190,]  3  704  64 #>  [7191,]  3  705  64 #>  [7192,]  3  706  64 #>  [7193,]  3  707  64 #>  [7194,]  3  708  64 #>  [7195,]  3  709  64 #>  [7196,]  3  710  64 #>  [7197,]  3  711  64 #>  [7198,]  3  712  64 #>  [7199,]  3  713  64 #>  [7200,]  3  714  64 #>  [7201,]  3  715  64 #>  [7202,]  3  716  64 #>  [7203,]  3  717  64 #>  [7204,]  3  718  64 #>  [7205,]  3  719  64 #>  [7206,]  3  720  64 #>  [7207,]  3  721  64 #>  [7208,]  3  722  64 #>  [7209,]  3  723  64 #>  [7210,]  3  724  64 #>  [7211,]  3  725  64 #>  [7212,]  3  726  64 #>  [7213,]  3  727  64 #>  [7214,]  3  728  64 #>  [7215,]  3  729  64 #>  [7216,]  3  730  64 #>  [7217,]  3  731  64 #>  [7218,]  3  732  64 #>  [7219,]  3  733  64 #>  [7220,]  3  734  64 #>  [7221,]  3  735  64 #>  [7222,]  3  736  64 #>  [7223,]  3  737  64 #>  [7224,]  3  738  64 #>  [7225,]  3  739  64 #>  [7226,]  3  740  64 #>  [7227,]  3  741  64 #>  [7228,]  3  742  64 #>  [7229,]  3  743  64 #>  [7230,]  3  744  64 #>  [7231,]  3  745  64 #>  [7232,]  3  746  64 #>  [7233,]  3  668  63 #>  [7234,]  3  669  63 #>  [7235,]  3  670  63 #>  [7236,]  3  671  63 #>  [7237,]  3  672  63 #>  [7238,]  3  673  63 #>  [7239,]  3  674  63 #>  [7240,]  3  675  63 #>  [7241,]  3  676  63 #>  [7242,]  3  677  63 #>  [7243,]  3  678  63 #>  [7244,]  3  679  63 #>  [7245,]  3  680  63 #>  [7246,]  3  681  63 #>  [7247,]  3  682  63 #>  [7248,]  3  683  63 #>  [7249,]  3  684  63 #>  [7250,]  3  685  63 #>  [7251,]  3  686  63 #>  [7252,]  3  687  63 #>  [7253,]  3  688  63 #>  [7254,]  3  689  63 #>  [7255,]  3  690  63 #>  [7256,]  3  691  63 #>  [7257,]  3  692  63 #>  [7258,]  3  693  63 #>  [7259,]  3  694  63 #>  [7260,]  3  695  63 #>  [7261,]  3  696  63 #>  [7262,]  3  697  63 #>  [7263,]  3  698  63 #>  [7264,]  3  699  63 #>  [7265,]  3  700  63 #>  [7266,]  3  701  63 #>  [7267,]  3  702  63 #>  [7268,]  3  703  63 #>  [7269,]  3  704  63 #>  [7270,]  3  705  63 #>  [7271,]  3  706  63 #>  [7272,]  3  707  63 #>  [7273,]  3  708  63 #>  [7274,]  3  709  63 #>  [7275,]  3  710  63 #>  [7276,]  3  711  63 #>  [7277,]  3  712  63 #>  [7278,]  3  713  63 #>  [7279,]  3  714  63 #>  [7280,]  3  715  63 #>  [7281,]  3  716  63 #>  [7282,]  3  717  63 #>  [7283,]  3  718  63 #>  [7284,]  3  719  63 #>  [7285,]  3  720  63 #>  [7286,]  3  721  63 #>  [7287,]  3  722  63 #>  [7288,]  3  723  63 #>  [7289,]  3  724  63 #>  [7290,]  3  725  63 #>  [7291,]  3  726  63 #>  [7292,]  3  727  63 #>  [7293,]  3  728  63 #>  [7294,]  3  729  63 #>  [7295,]  3  730  63 #>  [7296,]  3  731  63 #>  [7297,]  3  732  63 #>  [7298,]  3  733  63 #>  [7299,]  3  734  63 #>  [7300,]  3  735  63 #>  [7301,]  3  736  63 #>  [7302,]  3  737  63 #>  [7303,]  3  738  63 #>  [7304,]  3  739  63 #>  [7305,]  3  740  63 #>  [7306,]  3  741  63 #>  [7307,]  3  742  63 #>  [7308,]  3  743  63 #>  [7309,]  3  744  63 #>  [7310,]  3  745  63 #>  [7311,]  3  746  63 #>  [7312,]  3  669  62 #>  [7313,]  3  670  62 #>  [7314,]  3  671  62 #>  [7315,]  3  672  62 #>  [7316,]  3  673  62 #>  [7317,]  3  674  62 #>  [7318,]  3  675  62 #>  [7319,]  3  676  62 #>  [7320,]  3  677  62 #>  [7321,]  3  678  62 #>  [7322,]  3  679  62 #>  [7323,]  3  680  62 #>  [7324,]  3  681  62 #>  [7325,]  3  682  62 #>  [7326,]  3  683  62 #>  [7327,]  3  684  62 #>  [7328,]  3  685  62 #>  [7329,]  3  686  62 #>  [7330,]  3  687  62 #>  [7331,]  3  688  62 #>  [7332,]  3  689  62 #>  [7333,]  3  690  62 #>  [7334,]  3  691  62 #>  [7335,]  3  692  62 #>  [7336,]  3  693  62 #>  [7337,]  3  694  62 #>  [7338,]  3  695  62 #>  [7339,]  3  696  62 #>  [7340,]  3  697  62 #>  [7341,]  3  698  62 #>  [7342,]  3  699  62 #>  [7343,]  3  700  62 #>  [7344,]  3  701  62 #>  [7345,]  3  702  62 #>  [7346,]  3  703  62 #>  [7347,]  3  704  62 #>  [7348,]  3  705  62 #>  [7349,]  3  706  62 #>  [7350,]  3  707  62 #>  [7351,]  3  708  62 #>  [7352,]  3  709  62 #>  [7353,]  3  710  62 #>  [7354,]  3  711  62 #>  [7355,]  3  712  62 #>  [7356,]  3  713  62 #>  [7357,]  3  714  62 #>  [7358,]  3  715  62 #>  [7359,]  3  716  62 #>  [7360,]  3  717  62 #>  [7361,]  3  718  62 #>  [7362,]  3  719  62 #>  [7363,]  3  720  62 #>  [7364,]  3  721  62 #>  [7365,]  3  722  62 #>  [7366,]  3  723  62 #>  [7367,]  3  724  62 #>  [7368,]  3  725  62 #>  [7369,]  3  726  62 #>  [7370,]  3  727  62 #>  [7371,]  3  728  62 #>  [7372,]  3  729  62 #>  [7373,]  3  730  62 #>  [7374,]  3  731  62 #>  [7375,]  3  732  62 #>  [7376,]  3  733  62 #>  [7377,]  3  734  62 #>  [7378,]  3  735  62 #>  [7379,]  3  736  62 #>  [7380,]  3  737  62 #>  [7381,]  3  738  62 #>  [7382,]  3  739  62 #>  [7383,]  3  740  62 #>  [7384,]  3  741  62 #>  [7385,]  3  742  62 #>  [7386,]  3  743  62 #>  [7387,]  3  744  62 #>  [7388,]  3  745  62 #>  [7389,]  3  670  61 #>  [7390,]  3  671  61 #>  [7391,]  3  672  61 #>  [7392,]  3  673  61 #>  [7393,]  3  674  61 #>  [7394,]  3  675  61 #>  [7395,]  3  676  61 #>  [7396,]  3  677  61 #>  [7397,]  3  678  61 #>  [7398,]  3  679  61 #>  [7399,]  3  680  61 #>  [7400,]  3  681  61 #>  [7401,]  3  682  61 #>  [7402,]  3  683  61 #>  [7403,]  3  684  61 #>  [7404,]  3  685  61 #>  [7405,]  3  686  61 #>  [7406,]  3  687  61 #>  [7407,]  3  688  61 #>  [7408,]  3  689  61 #>  [7409,]  3  690  61 #>  [7410,]  3  691  61 #>  [7411,]  3  692  61 #>  [7412,]  3  693  61 #>  [7413,]  3  694  61 #>  [7414,]  3  695  61 #>  [7415,]  3  696  61 #>  [7416,]  3  697  61 #>  [7417,]  3  698  61 #>  [7418,]  3  699  61 #>  [7419,]  3  700  61 #>  [7420,]  3  701  61 #>  [7421,]  3  702  61 #>  [7422,]  3  703  61 #>  [7423,]  3  704  61 #>  [7424,]  3  705  61 #>  [7425,]  3  706  61 #>  [7426,]  3  707  61 #>  [7427,]  3  708  61 #>  [7428,]  3  709  61 #>  [7429,]  3  710  61 #>  [7430,]  3  711  61 #>  [7431,]  3  712  61 #>  [7432,]  3  713  61 #>  [7433,]  3  714  61 #>  [7434,]  3  715  61 #>  [7435,]  3  716  61 #>  [7436,]  3  717  61 #>  [7437,]  3  718  61 #>  [7438,]  3  719  61 #>  [7439,]  3  720  61 #>  [7440,]  3  721  61 #>  [7441,]  3  722  61 #>  [7442,]  3  723  61 #>  [7443,]  3  724  61 #>  [7444,]  3  725  61 #>  [7445,]  3  726  61 #>  [7446,]  3  727  61 #>  [7447,]  3  728  61 #>  [7448,]  3  729  61 #>  [7449,]  3  730  61 #>  [7450,]  3  731  61 #>  [7451,]  3  732  61 #>  [7452,]  3  733  61 #>  [7453,]  3  734  61 #>  [7454,]  3  735  61 #>  [7455,]  3  736  61 #>  [7456,]  3  737  61 #>  [7457,]  3  738  61 #>  [7458,]  3  739  61 #>  [7459,]  3  740  61 #>  [7460,]  3  741  61 #>  [7461,]  3  742  61 #>  [7462,]  3  743  61 #>  [7463,]  3  744  61 #>  [7464,]  3  671  60 #>  [7465,]  3  672  60 #>  [7466,]  3  673  60 #>  [7467,]  3  674  60 #>  [7468,]  3  675  60 #>  [7469,]  3  676  60 #>  [7470,]  3  677  60 #>  [7471,]  3  678  60 #>  [7472,]  3  679  60 #>  [7473,]  3  680  60 #>  [7474,]  3  681  60 #>  [7475,]  3  682  60 #>  [7476,]  3  683  60 #>  [7477,]  3  684  60 #>  [7478,]  3  685  60 #>  [7479,]  3  686  60 #>  [7480,]  3  687  60 #>  [7481,]  3  688  60 #>  [7482,]  3  689  60 #>  [7483,]  3  690  60 #>  [7484,]  3  691  60 #>  [7485,]  3  692  60 #>  [7486,]  3  693  60 #>  [7487,]  3  694  60 #>  [7488,]  3  695  60 #>  [7489,]  3  696  60 #>  [7490,]  3  697  60 #>  [7491,]  3  698  60 #>  [7492,]  3  699  60 #>  [7493,]  3  700  60 #>  [7494,]  3  701  60 #>  [7495,]  3  702  60 #>  [7496,]  3  703  60 #>  [7497,]  3  704  60 #>  [7498,]  3  705  60 #>  [7499,]  3  706  60 #>  [7500,]  3  707  60 #>  [7501,]  3  708  60 #>  [7502,]  3  709  60 #>  [7503,]  3  710  60 #>  [7504,]  3  711  60 #>  [7505,]  3  712  60 #>  [7506,]  3  713  60 #>  [7507,]  3  714  60 #>  [7508,]  3  715  60 #>  [7509,]  3  716  60 #>  [7510,]  3  717  60 #>  [7511,]  3  718  60 #>  [7512,]  3  719  60 #>  [7513,]  3  720  60 #>  [7514,]  3  721  60 #>  [7515,]  3  722  60 #>  [7516,]  3  723  60 #>  [7517,]  3  724  60 #>  [7518,]  3  725  60 #>  [7519,]  3  726  60 #>  [7520,]  3  727  60 #>  [7521,]  3  728  60 #>  [7522,]  3  729  60 #>  [7523,]  3  730  60 #>  [7524,]  3  731  60 #>  [7525,]  3  732  60 #>  [7526,]  3  733  60 #>  [7527,]  3  734  60 #>  [7528,]  3  735  60 #>  [7529,]  3  736  60 #>  [7530,]  3  737  60 #>  [7531,]  3  738  60 #>  [7532,]  3  739  60 #>  [7533,]  3  740  60 #>  [7534,]  3  741  60 #>  [7535,]  3  742  60 #>  [7536,]  3  743  60 #>  [7537,]  3  744  60 #>  [7538,]  3  672  59 #>  [7539,]  3  673  59 #>  [7540,]  3  674  59 #>  [7541,]  3  675  59 #>  [7542,]  3  676  59 #>  [7543,]  3  677  59 #>  [7544,]  3  678  59 #>  [7545,]  3  679  59 #>  [7546,]  3  680  59 #>  [7547,]  3  681  59 #>  [7548,]  3  682  59 #>  [7549,]  3  683  59 #>  [7550,]  3  684  59 #>  [7551,]  3  685  59 #>  [7552,]  3  686  59 #>  [7553,]  3  687  59 #>  [7554,]  3  688  59 #>  [7555,]  3  689  59 #>  [7556,]  3  690  59 #>  [7557,]  3  691  59 #>  [7558,]  3  692  59 #>  [7559,]  3  693  59 #>  [7560,]  3  694  59 #>  [7561,]  3  695  59 #>  [7562,]  3  696  59 #>  [7563,]  3  697  59 #>  [7564,]  3  698  59 #>  [7565,]  3  699  59 #>  [7566,]  3  700  59 #>  [7567,]  3  701  59 #>  [7568,]  3  702  59 #>  [7569,]  3  703  59 #>  [7570,]  3  704  59 #>  [7571,]  3  705  59 #>  [7572,]  3  706  59 #>  [7573,]  3  707  59 #>  [7574,]  3  708  59 #>  [7575,]  3  709  59 #>  [7576,]  3  710  59 #>  [7577,]  3  711  59 #>  [7578,]  3  712  59 #>  [7579,]  3  713  59 #>  [7580,]  3  714  59 #>  [7581,]  3  715  59 #>  [7582,]  3  716  59 #>  [7583,]  3  717  59 #>  [7584,]  3  718  59 #>  [7585,]  3  719  59 #>  [7586,]  3  720  59 #>  [7587,]  3  721  59 #>  [7588,]  3  722  59 #>  [7589,]  3  723  59 #>  [7590,]  3  724  59 #>  [7591,]  3  725  59 #>  [7592,]  3  726  59 #>  [7593,]  3  727  59 #>  [7594,]  3  728  59 #>  [7595,]  3  729  59 #>  [7596,]  3  730  59 #>  [7597,]  3  731  59 #>  [7598,]  3  732  59 #>  [7599,]  3  733  59 #>  [7600,]  3  734  59 #>  [7601,]  3  735  59 #>  [7602,]  3  736  59 #>  [7603,]  3  737  59 #>  [7604,]  3  738  59 #>  [7605,]  3  739  59 #>  [7606,]  3  740  59 #>  [7607,]  3  741  59 #>  [7608,]  3  742  59 #>  [7609,]  3  743  59 #>  [7610,]  3  673  58 #>  [7611,]  3  674  58 #>  [7612,]  3  675  58 #>  [7613,]  3  676  58 #>  [7614,]  3  677  58 #>  [7615,]  3  678  58 #>  [7616,]  3  679  58 #>  [7617,]  3  680  58 #>  [7618,]  3  681  58 #>  [7619,]  3  682  58 #>  [7620,]  3  683  58 #>  [7621,]  3  684  58 #>  [7622,]  3  685  58 #>  [7623,]  3  686  58 #>  [7624,]  3  687  58 #>  [7625,]  3  688  58 #>  [7626,]  3  689  58 #>  [7627,]  3  690  58 #>  [7628,]  3  691  58 #>  [7629,]  3  692  58 #>  [7630,]  3  693  58 #>  [7631,]  3  694  58 #>  [7632,]  3  695  58 #>  [7633,]  3  696  58 #>  [7634,]  3  697  58 #>  [7635,]  3  698  58 #>  [7636,]  3  699  58 #>  [7637,]  3  700  58 #>  [7638,]  3  701  58 #>  [7639,]  3  702  58 #>  [7640,]  3  703  58 #>  [7641,]  3  704  58 #>  [7642,]  3  705  58 #>  [7643,]  3  706  58 #>  [7644,]  3  707  58 #>  [7645,]  3  708  58 #>  [7646,]  3  709  58 #>  [7647,]  3  710  58 #>  [7648,]  3  711  58 #>  [7649,]  3  712  58 #>  [7650,]  3  713  58 #>  [7651,]  3  714  58 #>  [7652,]  3  715  58 #>  [7653,]  3  716  58 #>  [7654,]  3  717  58 #>  [7655,]  3  718  58 #>  [7656,]  3  719  58 #>  [7657,]  3  720  58 #>  [7658,]  3  721  58 #>  [7659,]  3  722  58 #>  [7660,]  3  723  58 #>  [7661,]  3  724  58 #>  [7662,]  3  725  58 #>  [7663,]  3  726  58 #>  [7664,]  3  727  58 #>  [7665,]  3  728  58 #>  [7666,]  3  729  58 #>  [7667,]  3  730  58 #>  [7668,]  3  731  58 #>  [7669,]  3  732  58 #>  [7670,]  3  733  58 #>  [7671,]  3  734  58 #>  [7672,]  3  735  58 #>  [7673,]  3  736  58 #>  [7674,]  3  737  58 #>  [7675,]  3  738  58 #>  [7676,]  3  739  58 #>  [7677,]  3  740  58 #>  [7678,]  3  741  58 #>  [7679,]  3  742  58 #>  [7680,]  3  674  57 #>  [7681,]  3  675  57 #>  [7682,]  3  676  57 #>  [7683,]  3  677  57 #>  [7684,]  3  678  57 #>  [7685,]  3  679  57 #>  [7686,]  3  680  57 #>  [7687,]  3  681  57 #>  [7688,]  3  682  57 #>  [7689,]  3  683  57 #>  [7690,]  3  684  57 #>  [7691,]  3  685  57 #>  [7692,]  3  686  57 #>  [7693,]  3  687  57 #>  [7694,]  3  688  57 #>  [7695,]  3  689  57 #>  [7696,]  3  690  57 #>  [7697,]  3  691  57 #>  [7698,]  3  692  57 #>  [7699,]  3  693  57 #>  [7700,]  3  694  57 #>  [7701,]  3  695  57 #>  [7702,]  3  696  57 #>  [7703,]  3  697  57 #>  [7704,]  3  698  57 #>  [7705,]  3  699  57 #>  [7706,]  3  700  57 #>  [7707,]  3  701  57 #>  [7708,]  3  702  57 #>  [7709,]  3  703  57 #>  [7710,]  3  704  57 #>  [7711,]  3  705  57 #>  [7712,]  3  706  57 #>  [7713,]  3  707  57 #>  [7714,]  3  708  57 #>  [7715,]  3  709  57 #>  [7716,]  3  710  57 #>  [7717,]  3  711  57 #>  [7718,]  3  712  57 #>  [7719,]  3  713  57 #>  [7720,]  3  714  57 #>  [7721,]  3  715  57 #>  [7722,]  3  716  57 #>  [7723,]  3  717  57 #>  [7724,]  3  718  57 #>  [7725,]  3  719  57 #>  [7726,]  3  720  57 #>  [7727,]  3  721  57 #>  [7728,]  3  722  57 #>  [7729,]  3  723  57 #>  [7730,]  3  724  57 #>  [7731,]  3  725  57 #>  [7732,]  3  726  57 #>  [7733,]  3  727  57 #>  [7734,]  3  728  57 #>  [7735,]  3  729  57 #>  [7736,]  3  730  57 #>  [7737,]  3  731  57 #>  [7738,]  3  732  57 #>  [7739,]  3  733  57 #>  [7740,]  3  734  57 #>  [7741,]  3  735  57 #>  [7742,]  3  736  57 #>  [7743,]  3  737  57 #>  [7744,]  3  738  57 #>  [7745,]  3  739  57 #>  [7746,]  3  740  57 #>  [7747,]  3  741  57 #>  [7748,]  3  675  56 #>  [7749,]  3  676  56 #>  [7750,]  3  677  56 #>  [7751,]  3  678  56 #>  [7752,]  3  679  56 #>  [7753,]  3  680  56 #>  [7754,]  3  681  56 #>  [7755,]  3  682  56 #>  [7756,]  3  683  56 #>  [7757,]  3  684  56 #>  [7758,]  3  685  56 #>  [7759,]  3  686  56 #>  [7760,]  3  687  56 #>  [7761,]  3  688  56 #>  [7762,]  3  689  56 #>  [7763,]  3  690  56 #>  [7764,]  3  691  56 #>  [7765,]  3  692  56 #>  [7766,]  3  693  56 #>  [7767,]  3  694  56 #>  [7768,]  3  695  56 #>  [7769,]  3  696  56 #>  [7770,]  3  697  56 #>  [7771,]  3  698  56 #>  [7772,]  3  699  56 #>  [7773,]  3  700  56 #>  [7774,]  3  701  56 #>  [7775,]  3  702  56 #>  [7776,]  3  703  56 #>  [7777,]  3  704  56 #>  [7778,]  3  705  56 #>  [7779,]  3  706  56 #>  [7780,]  3  707  56 #>  [7781,]  3  708  56 #>  [7782,]  3  709  56 #>  [7783,]  3  710  56 #>  [7784,]  3  711  56 #>  [7785,]  3  712  56 #>  [7786,]  3  713  56 #>  [7787,]  3  714  56 #>  [7788,]  3  715  56 #>  [7789,]  3  716  56 #>  [7790,]  3  717  56 #>  [7791,]  3  718  56 #>  [7792,]  3  719  56 #>  [7793,]  3  720  56 #>  [7794,]  3  721  56 #>  [7795,]  3  722  56 #>  [7796,]  3  723  56 #>  [7797,]  3  724  56 #>  [7798,]  3  725  56 #>  [7799,]  3  726  56 #>  [7800,]  3  727  56 #>  [7801,]  3  728  56 #>  [7802,]  3  729  56 #>  [7803,]  3  730  56 #>  [7804,]  3  731  56 #>  [7805,]  3  732  56 #>  [7806,]  3  733  56 #>  [7807,]  3  734  56 #>  [7808,]  3  735  56 #>  [7809,]  3  736  56 #>  [7810,]  3  737  56 #>  [7811,]  3  738  56 #>  [7812,]  3  739  56 #>  [7813,]  3  740  56 #>  [7814,]  3  676  55 #>  [7815,]  3  677  55 #>  [7816,]  3  678  55 #>  [7817,]  3  679  55 #>  [7818,]  3  680  55 #>  [7819,]  3  681  55 #>  [7820,]  3  682  55 #>  [7821,]  3  683  55 #>  [7822,]  3  684  55 #>  [7823,]  3  685  55 #>  [7824,]  3  686  55 #>  [7825,]  3  687  55 #>  [7826,]  3  688  55 #>  [7827,]  3  689  55 #>  [7828,]  3  690  55 #>  [7829,]  3  691  55 #>  [7830,]  3  692  55 #>  [7831,]  3  693  55 #>  [7832,]  3  694  55 #>  [7833,]  3  695  55 #>  [7834,]  3  696  55 #>  [7835,]  3  697  55 #>  [7836,]  3  698  55 #>  [7837,]  3  699  55 #>  [7838,]  3  700  55 #>  [7839,]  3  701  55 #>  [7840,]  3  702  55 #>  [7841,]  3  703  55 #>  [7842,]  3  704  55 #>  [7843,]  3  705  55 #>  [7844,]  3  706  55 #>  [7845,]  3  707  55 #>  [7846,]  3  708  55 #>  [7847,]  3  709  55 #>  [7848,]  3  710  55 #>  [7849,]  3  711  55 #>  [7850,]  3  712  55 #>  [7851,]  3  713  55 #>  [7852,]  3  714  55 #>  [7853,]  3  715  55 #>  [7854,]  3  716  55 #>  [7855,]  3  717  55 #>  [7856,]  3  718  55 #>  [7857,]  3  719  55 #>  [7858,]  3  720  55 #>  [7859,]  3  721  55 #>  [7860,]  3  722  55 #>  [7861,]  3  723  55 #>  [7862,]  3  724  55 #>  [7863,]  3  725  55 #>  [7864,]  3  726  55 #>  [7865,]  3  727  55 #>  [7866,]  3  728  55 #>  [7867,]  3  729  55 #>  [7868,]  3  730  55 #>  [7869,]  3  731  55 #>  [7870,]  3  732  55 #>  [7871,]  3  733  55 #>  [7872,]  3  734  55 #>  [7873,]  3  735  55 #>  [7874,]  3  736  55 #>  [7875,]  3  737  55 #>  [7876,]  3  738  55 #>  [7877,]  3  739  55 #>  [7878,]  3  677  54 #>  [7879,]  3  678  54 #>  [7880,]  3  679  54 #>  [7881,]  3  680  54 #>  [7882,]  3  681  54 #>  [7883,]  3  682  54 #>  [7884,]  3  683  54 #>  [7885,]  3  684  54 #>  [7886,]  3  685  54 #>  [7887,]  3  686  54 #>  [7888,]  3  687  54 #>  [7889,]  3  688  54 #>  [7890,]  3  689  54 #>  [7891,]  3  690  54 #>  [7892,]  3  691  54 #>  [7893,]  3  692  54 #>  [7894,]  3  693  54 #>  [7895,]  3  694  54 #>  [7896,]  3  695  54 #>  [7897,]  3  696  54 #>  [7898,]  3  697  54 #>  [7899,]  3  698  54 #>  [7900,]  3  699  54 #>  [7901,]  3  700  54 #>  [7902,]  3  701  54 #>  [7903,]  3  702  54 #>  [7904,]  3  703  54 #>  [7905,]  3  704  54 #>  [7906,]  3  705  54 #>  [7907,]  3  706  54 #>  [7908,]  3  707  54 #>  [7909,]  3  708  54 #>  [7910,]  3  709  54 #>  [7911,]  3  710  54 #>  [7912,]  3  711  54 #>  [7913,]  3  712  54 #>  [7914,]  3  713  54 #>  [7915,]  3  714  54 #>  [7916,]  3  715  54 #>  [7917,]  3  716  54 #>  [7918,]  3  717  54 #>  [7919,]  3  718  54 #>  [7920,]  3  719  54 #>  [7921,]  3  720  54 #>  [7922,]  3  721  54 #>  [7923,]  3  722  54 #>  [7924,]  3  723  54 #>  [7925,]  3  724  54 #>  [7926,]  3  725  54 #>  [7927,]  3  726  54 #>  [7928,]  3  727  54 #>  [7929,]  3  728  54 #>  [7930,]  3  729  54 #>  [7931,]  3  730  54 #>  [7932,]  3  731  54 #>  [7933,]  3  732  54 #>  [7934,]  3  733  54 #>  [7935,]  3  734  54 #>  [7936,]  3  735  54 #>  [7937,]  3  736  54 #>  [7938,]  3  737  54 #>  [7939,]  3  738  54 #>  [7940,]  3  678  53 #>  [7941,]  3  679  53 #>  [7942,]  3  680  53 #>  [7943,]  3  681  53 #>  [7944,]  3  682  53 #>  [7945,]  3  683  53 #>  [7946,]  3  684  53 #>  [7947,]  3  685  53 #>  [7948,]  3  686  53 #>  [7949,]  3  687  53 #>  [7950,]  3  688  53 #>  [7951,]  3  689  53 #>  [7952,]  3  690  53 #>  [7953,]  3  691  53 #>  [7954,]  3  692  53 #>  [7955,]  3  693  53 #>  [7956,]  3  694  53 #>  [7957,]  3  695  53 #>  [7958,]  3  696  53 #>  [7959,]  3  697  53 #>  [7960,]  3  698  53 #>  [7961,]  3  699  53 #>  [7962,]  3  700  53 #>  [7963,]  3  701  53 #>  [7964,]  3  702  53 #>  [7965,]  3  703  53 #>  [7966,]  3  704  53 #>  [7967,]  3  705  53 #>  [7968,]  3  706  53 #>  [7969,]  3  707  53 #>  [7970,]  3  708  53 #>  [7971,]  3  709  53 #>  [7972,]  3  710  53 #>  [7973,]  3  711  53 #>  [7974,]  3  712  53 #>  [7975,]  3  713  53 #>  [7976,]  3  714  53 #>  [7977,]  3  715  53 #>  [7978,]  3  716  53 #>  [7979,]  3  717  53 #>  [7980,]  3  718  53 #>  [7981,]  3  719  53 #>  [7982,]  3  720  53 #>  [7983,]  3  721  53 #>  [7984,]  3  722  53 #>  [7985,]  3  723  53 #>  [7986,]  3  724  53 #>  [7987,]  3  725  53 #>  [7988,]  3  726  53 #>  [7989,]  3  727  53 #>  [7990,]  3  728  53 #>  [7991,]  3  729  53 #>  [7992,]  3  730  53 #>  [7993,]  3  731  53 #>  [7994,]  3  732  53 #>  [7995,]  3  733  53 #>  [7996,]  3  734  53 #>  [7997,]  3  735  53 #>  [7998,]  3  736  53 #>  [7999,]  3  737  53 #>  [8000,]  3  679  52 #>  [8001,]  3  680  52 #>  [8002,]  3  681  52 #>  [8003,]  3  682  52 #>  [8004,]  3  683  52 #>  [8005,]  3  684  52 #>  [8006,]  3  685  52 #>  [8007,]  3  686  52 #>  [8008,]  3  687  52 #>  [8009,]  3  688  52 #>  [8010,]  3  689  52 #>  [8011,]  3  690  52 #>  [8012,]  3  691  52 #>  [8013,]  3  692  52 #>  [8014,]  3  693  52 #>  [8015,]  3  694  52 #>  [8016,]  3  695  52 #>  [8017,]  3  696  52 #>  [8018,]  3  697  52 #>  [8019,]  3  698  52 #>  [8020,]  3  699  52 #>  [8021,]  3  700  52 #>  [8022,]  3  701  52 #>  [8023,]  3  702  52 #>  [8024,]  3  703  52 #>  [8025,]  3  704  52 #>  [8026,]  3  705  52 #>  [8027,]  3  706  52 #>  [8028,]  3  707  52 #>  [8029,]  3  708  52 #>  [8030,]  3  709  52 #>  [8031,]  3  710  52 #>  [8032,]  3  711  52 #>  [8033,]  3  712  52 #>  [8034,]  3  713  52 #>  [8035,]  3  714  52 #>  [8036,]  3  715  52 #>  [8037,]  3  716  52 #>  [8038,]  3  717  52 #>  [8039,]  3  718  52 #>  [8040,]  3  719  52 #>  [8041,]  3  720  52 #>  [8042,]  3  721  52 #>  [8043,]  3  722  52 #>  [8044,]  3  723  52 #>  [8045,]  3  724  52 #>  [8046,]  3  725  52 #>  [8047,]  3  726  52 #>  [8048,]  3  727  52 #>  [8049,]  3  728  52 #>  [8050,]  3  729  52 #>  [8051,]  3  730  52 #>  [8052,]  3  731  52 #>  [8053,]  3  732  52 #>  [8054,]  3  733  52 #>  [8055,]  3  734  52 #>  [8056,]  3  735  52 #>  [8057,]  3  736  52 #>  [8058,]  3  681  51 #>  [8059,]  3  682  51 #>  [8060,]  3  683  51 #>  [8061,]  3  684  51 #>  [8062,]  3  685  51 #>  [8063,]  3  686  51 #>  [8064,]  3  687  51 #>  [8065,]  3  688  51 #>  [8066,]  3  689  51 #>  [8067,]  3  690  51 #>  [8068,]  3  691  51 #>  [8069,]  3  692  51 #>  [8070,]  3  693  51 #>  [8071,]  3  694  51 #>  [8072,]  3  695  51 #>  [8073,]  3  696  51 #>  [8074,]  3  697  51 #>  [8075,]  3  698  51 #>  [8076,]  3  699  51 #>  [8077,]  3  700  51 #>  [8078,]  3  701  51 #>  [8079,]  3  702  51 #>  [8080,]  3  703  51 #>  [8081,]  3  704  51 #>  [8082,]  3  705  51 #>  [8083,]  3  706  51 #>  [8084,]  3  707  51 #>  [8085,]  3  708  51 #>  [8086,]  3  709  51 #>  [8087,]  3  710  51 #>  [8088,]  3  711  51 #>  [8089,]  3  712  51 #>  [8090,]  3  713  51 #>  [8091,]  3  714  51 #>  [8092,]  3  715  51 #>  [8093,]  3  716  51 #>  [8094,]  3  717  51 #>  [8095,]  3  718  51 #>  [8096,]  3  719  51 #>  [8097,]  3  720  51 #>  [8098,]  3  721  51 #>  [8099,]  3  722  51 #>  [8100,]  3  723  51 #>  [8101,]  3  724  51 #>  [8102,]  3  725  51 #>  [8103,]  3  726  51 #>  [8104,]  3  727  51 #>  [8105,]  3  728  51 #>  [8106,]  3  729  51 #>  [8107,]  3  730  51 #>  [8108,]  3  731  51 #>  [8109,]  3  732  51 #>  [8110,]  3  733  51 #>  [8111,]  3  734  51 #>  [8112,]  3  735  51 #>  [8113,]  3  682  50 #>  [8114,]  3  683  50 #>  [8115,]  3  684  50 #>  [8116,]  3  685  50 #>  [8117,]  3  686  50 #>  [8118,]  3  687  50 #>  [8119,]  3  688  50 #>  [8120,]  3  689  50 #>  [8121,]  3  690  50 #>  [8122,]  3  691  50 #>  [8123,]  3  692  50 #>  [8124,]  3  693  50 #>  [8125,]  3  694  50 #>  [8126,]  3  695  50 #>  [8127,]  3  696  50 #>  [8128,]  3  697  50 #>  [8129,]  3  698  50 #>  [8130,]  3  699  50 #>  [8131,]  3  700  50 #>  [8132,]  3  701  50 #>  [8133,]  3  702  50 #>  [8134,]  3  703  50 #>  [8135,]  3  704  50 #>  [8136,]  3  705  50 #>  [8137,]  3  706  50 #>  [8138,]  3  707  50 #>  [8139,]  3  708  50 #>  [8140,]  3  709  50 #>  [8141,]  3  710  50 #>  [8142,]  3  711  50 #>  [8143,]  3  712  50 #>  [8144,]  3  713  50 #>  [8145,]  3  714  50 #>  [8146,]  3  715  50 #>  [8147,]  3  716  50 #>  [8148,]  3  717  50 #>  [8149,]  3  718  50 #>  [8150,]  3  719  50 #>  [8151,]  3  720  50 #>  [8152,]  3  721  50 #>  [8153,]  3  722  50 #>  [8154,]  3  723  50 #>  [8155,]  3  724  50 #>  [8156,]  3  725  50 #>  [8157,]  3  726  50 #>  [8158,]  3  727  50 #>  [8159,]  3  728  50 #>  [8160,]  3  729  50 #>  [8161,]  3  730  50 #>  [8162,]  3  731  50 #>  [8163,]  3  732  50 #>  [8164,]  3  733  50 #>  [8165,]  3  734  50 #>  [8166,]  3  684  49 #>  [8167,]  3  685  49 #>  [8168,]  3  686  49 #>  [8169,]  3  687  49 #>  [8170,]  3  688  49 #>  [8171,]  3  689  49 #>  [8172,]  3  690  49 #>  [8173,]  3  691  49 #>  [8174,]  3  692  49 #>  [8175,]  3  693  49 #>  [8176,]  3  694  49 #>  [8177,]  3  695  49 #>  [8178,]  3  696  49 #>  [8179,]  3  697  49 #>  [8180,]  3  698  49 #>  [8181,]  3  699  49 #>  [8182,]  3  700  49 #>  [8183,]  3  701  49 #>  [8184,]  3  702  49 #>  [8185,]  3  703  49 #>  [8186,]  3  704  49 #>  [8187,]  3  705  49 #>  [8188,]  3  706  49 #>  [8189,]  3  707  49 #>  [8190,]  3  708  49 #>  [8191,]  3  709  49 #>  [8192,]  3  710  49 #>  [8193,]  3  711  49 #>  [8194,]  3  712  49 #>  [8195,]  3  713  49 #>  [8196,]  3  714  49 #>  [8197,]  3  715  49 #>  [8198,]  3  716  49 #>  [8199,]  3  717  49 #>  [8200,]  3  718  49 #>  [8201,]  3  719  49 #>  [8202,]  3  720  49 #>  [8203,]  3  721  49 #>  [8204,]  3  722  49 #>  [8205,]  3  723  49 #>  [8206,]  3  724  49 #>  [8207,]  3  725  49 #>  [8208,]  3  726  49 #>  [8209,]  3  727  49 #>  [8210,]  3  728  49 #>  [8211,]  3  729  49 #>  [8212,]  3  730  49 #>  [8213,]  3  731  49 #>  [8214,]  3  732  49 #>  [8215,]  3  686  48 #>  [8216,]  3  687  48 #>  [8217,]  3  688  48 #>  [8218,]  3  689  48 #>  [8219,]  3  690  48 #>  [8220,]  3  691  48 #>  [8221,]  3  692  48 #>  [8222,]  3  693  48 #>  [8223,]  3  694  48 #>  [8224,]  3  695  48 #>  [8225,]  3  696  48 #>  [8226,]  3  697  48 #>  [8227,]  3  698  48 #>  [8228,]  3  699  48 #>  [8229,]  3  700  48 #>  [8230,]  3  701  48 #>  [8231,]  3  702  48 #>  [8232,]  3  703  48 #>  [8233,]  3  704  48 #>  [8234,]  3  705  48 #>  [8235,]  3  706  48 #>  [8236,]  3  707  48 #>  [8237,]  3  708  48 #>  [8238,]  3  709  48 #>  [8239,]  3  710  48 #>  [8240,]  3  711  48 #>  [8241,]  3  712  48 #>  [8242,]  3  713  48 #>  [8243,]  3  714  48 #>  [8244,]  3  715  48 #>  [8245,]  3  716  48 #>  [8246,]  3  717  48 #>  [8247,]  3  718  48 #>  [8248,]  3  719  48 #>  [8249,]  3  720  48 #>  [8250,]  3  721  48 #>  [8251,]  3  722  48 #>  [8252,]  3  723  48 #>  [8253,]  3  724  48 #>  [8254,]  3  725  48 #>  [8255,]  3  726  48 #>  [8256,]  3  727  48 #>  [8257,]  3  728  48 #>  [8258,]  3  729  48 #>  [8259,]  3  730  48 #>  [8260,]  3  687  47 #>  [8261,]  3  688  47 #>  [8262,]  3  689  47 #>  [8263,]  3  690  47 #>  [8264,]  3  691  47 #>  [8265,]  3  692  47 #>  [8266,]  3  693  47 #>  [8267,]  3  694  47 #>  [8268,]  3  695  47 #>  [8269,]  3  696  47 #>  [8270,]  3  697  47 #>  [8271,]  3  698  47 #>  [8272,]  3  699  47 #>  [8273,]  3  700  47 #>  [8274,]  3  701  47 #>  [8275,]  3  702  47 #>  [8276,]  3  703  47 #>  [8277,]  3  704  47 #>  [8278,]  3  705  47 #>  [8279,]  3  706  47 #>  [8280,]  3  707  47 #>  [8281,]  3  708  47 #>  [8282,]  3  709  47 #>  [8283,]  3  710  47 #>  [8284,]  3  711  47 #>  [8285,]  3  712  47 #>  [8286,]  3  713  47 #>  [8287,]  3  714  47 #>  [8288,]  3  715  47 #>  [8289,]  3  716  47 #>  [8290,]  3  717  47 #>  [8291,]  3  718  47 #>  [8292,]  3  719  47 #>  [8293,]  3  720  47 #>  [8294,]  3  721  47 #>  [8295,]  3  722  47 #>  [8296,]  3  723  47 #>  [8297,]  3  724  47 #>  [8298,]  3  725  47 #>  [8299,]  3  726  47 #>  [8300,]  3  727  47 #>  [8301,]  3  728  47 #>  [8302,]  3  729  47 #>  [8303,]  3  689  46 #>  [8304,]  3  690  46 #>  [8305,]  3  691  46 #>  [8306,]  3  692  46 #>  [8307,]  3  693  46 #>  [8308,]  3  694  46 #>  [8309,]  3  695  46 #>  [8310,]  3  696  46 #>  [8311,]  3  697  46 #>  [8312,]  3  698  46 #>  [8313,]  3  699  46 #>  [8314,]  3  700  46 #>  [8315,]  3  701  46 #>  [8316,]  3  702  46 #>  [8317,]  3  703  46 #>  [8318,]  3  704  46 #>  [8319,]  3  705  46 #>  [8320,]  3  706  46 #>  [8321,]  3  707  46 #>  [8322,]  3  708  46 #>  [8323,]  3  709  46 #>  [8324,]  3  710  46 #>  [8325,]  3  711  46 #>  [8326,]  3  712  46 #>  [8327,]  3  713  46 #>  [8328,]  3  714  46 #>  [8329,]  3  715  46 #>  [8330,]  3  716  46 #>  [8331,]  3  717  46 #>  [8332,]  3  718  46 #>  [8333,]  3  719  46 #>  [8334,]  3  720  46 #>  [8335,]  3  721  46 #>  [8336,]  3  722  46 #>  [8337,]  3  723  46 #>  [8338,]  3  724  46 #>  [8339,]  3  725  46 #>  [8340,]  3  726  46 #>  [8341,]  3  727  46 #>  [8342,]  3  692  45 #>  [8343,]  3  693  45 #>  [8344,]  3  694  45 #>  [8345,]  3  695  45 #>  [8346,]  3  696  45 #>  [8347,]  3  697  45 #>  [8348,]  3  698  45 #>  [8349,]  3  699  45 #>  [8350,]  3  700  45 #>  [8351,]  3  701  45 #>  [8352,]  3  702  45 #>  [8353,]  3  703  45 #>  [8354,]  3  704  45 #>  [8355,]  3  705  45 #>  [8356,]  3  706  45 #>  [8357,]  3  707  45 #>  [8358,]  3  708  45 #>  [8359,]  3  709  45 #>  [8360,]  3  710  45 #>  [8361,]  3  711  45 #>  [8362,]  3  712  45 #>  [8363,]  3  713  45 #>  [8364,]  3  714  45 #>  [8365,]  3  715  45 #>  [8366,]  3  716  45 #>  [8367,]  3  717  45 #>  [8368,]  3  718  45 #>  [8369,]  3  719  45 #>  [8370,]  3  720  45 #>  [8371,]  3  721  45 #>  [8372,]  3  722  45 #>  [8373,]  3  723  45 #>  [8374,]  3  724  45 #>  [8375,]  3  725  45 #>  [8376,]  3  695  44 #>  [8377,]  3  696  44 #>  [8378,]  3  697  44 #>  [8379,]  3  698  44 #>  [8380,]  3  699  44 #>  [8381,]  3  700  44 #>  [8382,]  3  701  44 #>  [8383,]  3  702  44 #>  [8384,]  3  703  44 #>  [8385,]  3  704  44 #>  [8386,]  3  705  44 #>  [8387,]  3  706  44 #>  [8388,]  3  707  44 #>  [8389,]  3  708  44 #>  [8390,]  3  709  44 #>  [8391,]  3  710  44 #>  [8392,]  3  711  44 #>  [8393,]  3  712  44 #>  [8394,]  3  713  44 #>  [8395,]  3  714  44 #>  [8396,]  3  715  44 #>  [8397,]  3  716  44 #>  [8398,]  3  717  44 #>  [8399,]  3  718  44 #>  [8400,]  3  719  44 #>  [8401,]  3  720  44 #>  [8402,]  3  721  44 #>  [8403,]  3  722  44 #>  [8404,]  3  698  43 #>  [8405,]  3  699  43 #>  [8406,]  3  700  43 #>  [8407,]  3  701  43 #>  [8408,]  3  702  43 #>  [8409,]  3  703  43 #>  [8410,]  3  704  43 #>  [8411,]  3  705  43 #>  [8412,]  3  706  43 #>  [8413,]  3  707  43 #>  [8414,]  3  708  43 #>  [8415,]  3  709  43 #>  [8416,]  3  710  43 #>  [8417,]  3  711  43 #>  [8418,]  3  712  43 #>  [8419,]  3  713  43 #>  [8420,]  3  714  43 #>  [8421,]  3  715  43 #>  [8422,]  3  716  43 #>  [8423,]  3  717  43 #>  [8424,]  3  718  43 #>  [8425,]  3  719  43 #>  [8426,]  3  703  42 #>  [8427,]  3  704  42 #>  [8428,]  3  705  42 #>  [8429,]  3  706  42 #>  [8430,]  3  707  42 #>  [8431,]  3  708  42 #>  [8432,]  3  709  42 #>  [8433,]  3  710  42 #>  [8434,]  3  711  42 #>  [8435,]  3  712  42 #>  [8436,]  3  713  42 #>  [8437,]  3  714  42 #>  [8438,]  5 1094 182 #>  [8439,]  5 1095 182 #>  [8440,]  5 1096 182 #>  [8441,]  5 1097 182 #>  [8442,]  5 1098 182 #>  [8443,]  5 1099 182 #>  [8444,]  5 1100 182 #>  [8445,]  5 1101 182 #>  [8446,]  5 1102 182 #>  [8447,]  5 1090 181 #>  [8448,]  5 1091 181 #>  [8449,]  5 1092 181 #>  [8450,]  5 1093 181 #>  [8451,]  5 1094 181 #>  [8452,]  5 1095 181 #>  [8453,]  5 1096 181 #>  [8454,]  5 1097 181 #>  [8455,]  5 1098 181 #>  [8456,]  5 1099 181 #>  [8457,]  5 1100 181 #>  [8458,]  5 1101 181 #>  [8459,]  5 1102 181 #>  [8460,]  5 1103 181 #>  [8461,]  5 1104 181 #>  [8462,]  5 1105 181 #>  [8463,]  5 1106 181 #>  [8464,]  5 1087 180 #>  [8465,]  5 1088 180 #>  [8466,]  5 1089 180 #>  [8467,]  5 1090 180 #>  [8468,]  5 1091 180 #>  [8469,]  5 1092 180 #>  [8470,]  5 1093 180 #>  [8471,]  5 1094 180 #>  [8472,]  5 1095 180 #>  [8473,]  5 1096 180 #>  [8474,]  5 1097 180 #>  [8475,]  5 1098 180 #>  [8476,]  5 1099 180 #>  [8477,]  5 1100 180 #>  [8478,]  5 1101 180 #>  [8479,]  5 1102 180 #>  [8480,]  5 1103 180 #>  [8481,]  5 1104 180 #>  [8482,]  5 1105 180 #>  [8483,]  5 1106 180 #>  [8484,]  5 1107 180 #>  [8485,]  5 1108 180 #>  [8486,]  5 1085 179 #>  [8487,]  5 1086 179 #>  [8488,]  5 1087 179 #>  [8489,]  5 1088 179 #>  [8490,]  5 1089 179 #>  [8491,]  5 1090 179 #>  [8492,]  5 1091 179 #>  [8493,]  5 1092 179 #>  [8494,]  5 1093 179 #>  [8495,]  5 1094 179 #>  [8496,]  5 1095 179 #>  [8497,]  5 1096 179 #>  [8498,]  5 1097 179 #>  [8499,]  5 1098 179 #>  [8500,]  5 1099 179 #>  [8501,]  5 1100 179 #>  [8502,]  5 1101 179 #>  [8503,]  5 1102 179 #>  [8504,]  5 1103 179 #>  [8505,]  5 1104 179 #>  [8506,]  5 1105 179 #>  [8507,]  5 1106 179 #>  [8508,]  5 1107 179 #>  [8509,]  5 1108 179 #>  [8510,]  5 1109 179 #>  [8511,]  5 1110 179 #>  [8512,]  5 1083 178 #>  [8513,]  5 1084 178 #>  [8514,]  5 1085 178 #>  [8515,]  5 1086 178 #>  [8516,]  5 1087 178 #>  [8517,]  5 1088 178 #>  [8518,]  5 1089 178 #>  [8519,]  5 1090 178 #>  [8520,]  5 1091 178 #>  [8521,]  5 1092 178 #>  [8522,]  5 1093 178 #>  [8523,]  5 1094 178 #>  [8524,]  5 1095 178 #>  [8525,]  5 1096 178 #>  [8526,]  5 1097 178 #>  [8527,]  5 1098 178 #>  [8528,]  5 1099 178 #>  [8529,]  5 1100 178 #>  [8530,]  5 1101 178 #>  [8531,]  5 1102 178 #>  [8532,]  5 1103 178 #>  [8533,]  5 1104 178 #>  [8534,]  5 1105 178 #>  [8535,]  5 1106 178 #>  [8536,]  5 1107 178 #>  [8537,]  5 1108 178 #>  [8538,]  5 1109 178 #>  [8539,]  5 1110 178 #>  [8540,]  5 1111 178 #>  [8541,]  5 1082 177 #>  [8542,]  5 1083 177 #>  [8543,]  5 1084 177 #>  [8544,]  5 1085 177 #>  [8545,]  5 1086 177 #>  [8546,]  5 1087 177 #>  [8547,]  5 1088 177 #>  [8548,]  5 1089 177 #>  [8549,]  5 1090 177 #>  [8550,]  5 1091 177 #>  [8551,]  5 1092 177 #>  [8552,]  5 1093 177 #>  [8553,]  5 1094 177 #>  [8554,]  5 1095 177 #>  [8555,]  5 1096 177 #>  [8556,]  5 1097 177 #>  [8557,]  5 1098 177 #>  [8558,]  5 1099 177 #>  [8559,]  5 1100 177 #>  [8560,]  5 1101 177 #>  [8561,]  5 1102 177 #>  [8562,]  5 1103 177 #>  [8563,]  5 1104 177 #>  [8564,]  5 1105 177 #>  [8565,]  5 1106 177 #>  [8566,]  5 1107 177 #>  [8567,]  5 1108 177 #>  [8568,]  5 1109 177 #>  [8569,]  5 1110 177 #>  [8570,]  5 1111 177 #>  [8571,]  5 1112 177 #>  [8572,]  5 1113 177 #>  [8573,]  5 1080 176 #>  [8574,]  5 1081 176 #>  [8575,]  5 1082 176 #>  [8576,]  5 1083 176 #>  [8577,]  5 1084 176 #>  [8578,]  5 1085 176 #>  [8579,]  5 1086 176 #>  [8580,]  5 1087 176 #>  [8581,]  5 1088 176 #>  [8582,]  5 1089 176 #>  [8583,]  5 1090 176 #>  [8584,]  5 1091 176 #>  [8585,]  5 1092 176 #>  [8586,]  5 1093 176 #>  [8587,]  5 1094 176 #>  [8588,]  5 1095 176 #>  [8589,]  5 1096 176 #>  [8590,]  5 1097 176 #>  [8591,]  5 1098 176 #>  [8592,]  5 1099 176 #>  [8593,]  5 1100 176 #>  [8594,]  5 1101 176 #>  [8595,]  5 1102 176 #>  [8596,]  5 1103 176 #>  [8597,]  5 1104 176 #>  [8598,]  5 1105 176 #>  [8599,]  5 1106 176 #>  [8600,]  5 1107 176 #>  [8601,]  5 1108 176 #>  [8602,]  5 1109 176 #>  [8603,]  5 1110 176 #>  [8604,]  5 1111 176 #>  [8605,]  5 1112 176 #>  [8606,]  5 1113 176 #>  [8607,]  5 1114 176 #>  [8608,]  5 1079 175 #>  [8609,]  5 1080 175 #>  [8610,]  5 1081 175 #>  [8611,]  5 1082 175 #>  [8612,]  5 1083 175 #>  [8613,]  5 1084 175 #>  [8614,]  5 1085 175 #>  [8615,]  5 1086 175 #>  [8616,]  5 1087 175 #>  [8617,]  5 1088 175 #>  [8618,]  5 1089 175 #>  [8619,]  5 1090 175 #>  [8620,]  5 1091 175 #>  [8621,]  5 1092 175 #>  [8622,]  5 1093 175 #>  [8623,]  5 1094 175 #>  [8624,]  5 1095 175 #>  [8625,]  5 1096 175 #>  [8626,]  5 1097 175 #>  [8627,]  5 1098 175 #>  [8628,]  5 1099 175 #>  [8629,]  5 1100 175 #>  [8630,]  5 1101 175 #>  [8631,]  5 1102 175 #>  [8632,]  5 1103 175 #>  [8633,]  5 1104 175 #>  [8634,]  5 1105 175 #>  [8635,]  5 1106 175 #>  [8636,]  5 1107 175 #>  [8637,]  5 1108 175 #>  [8638,]  5 1109 175 #>  [8639,]  5 1110 175 #>  [8640,]  5 1111 175 #>  [8641,]  5 1112 175 #>  [8642,]  5 1113 175 #>  [8643,]  5 1114 175 #>  [8644,]  5 1115 175 #>  [8645,]  5 1078 174 #>  [8646,]  5 1079 174 #>  [8647,]  5 1080 174 #>  [8648,]  5 1081 174 #>  [8649,]  5 1082 174 #>  [8650,]  5 1083 174 #>  [8651,]  5 1084 174 #>  [8652,]  5 1085 174 #>  [8653,]  5 1086 174 #>  [8654,]  5 1087 174 #>  [8655,]  5 1088 174 #>  [8656,]  5 1089 174 #>  [8657,]  5 1090 174 #>  [8658,]  5 1091 174 #>  [8659,]  5 1092 174 #>  [8660,]  5 1093 174 #>  [8661,]  5 1094 174 #>  [8662,]  5 1095 174 #>  [8663,]  5 1096 174 #>  [8664,]  5 1097 174 #>  [8665,]  5 1098 174 #>  [8666,]  5 1099 174 #>  [8667,]  5 1100 174 #>  [8668,]  5 1101 174 #>  [8669,]  5 1102 174 #>  [8670,]  5 1103 174 #>  [8671,]  5 1104 174 #>  [8672,]  5 1105 174 #>  [8673,]  5 1106 174 #>  [8674,]  5 1107 174 #>  [8675,]  5 1108 174 #>  [8676,]  5 1109 174 #>  [8677,]  5 1110 174 #>  [8678,]  5 1111 174 #>  [8679,]  5 1112 174 #>  [8680,]  5 1113 174 #>  [8681,]  5 1114 174 #>  [8682,]  5 1115 174 #>  [8683,]  5 1116 174 #>  [8684,]  5 1076 173 #>  [8685,]  5 1077 173 #>  [8686,]  5 1078 173 #>  [8687,]  5 1079 173 #>  [8688,]  5 1080 173 #>  [8689,]  5 1081 173 #>  [8690,]  5 1082 173 #>  [8691,]  5 1083 173 #>  [8692,]  5 1084 173 #>  [8693,]  5 1085 173 #>  [8694,]  5 1086 173 #>  [8695,]  5 1087 173 #>  [8696,]  5 1088 173 #>  [8697,]  5 1089 173 #>  [8698,]  5 1090 173 #>  [8699,]  5 1091 173 #>  [8700,]  5 1092 173 #>  [8701,]  5 1093 173 #>  [8702,]  5 1094 173 #>  [8703,]  5 1095 173 #>  [8704,]  5 1096 173 #>  [8705,]  5 1097 173 #>  [8706,]  5 1098 173 #>  [8707,]  5 1099 173 #>  [8708,]  5 1100 173 #>  [8709,]  5 1101 173 #>  [8710,]  5 1102 173 #>  [8711,]  5 1103 173 #>  [8712,]  5 1104 173 #>  [8713,]  5 1105 173 #>  [8714,]  5 1106 173 #>  [8715,]  5 1107 173 #>  [8716,]  5 1108 173 #>  [8717,]  5 1109 173 #>  [8718,]  5 1110 173 #>  [8719,]  5 1111 173 #>  [8720,]  5 1112 173 #>  [8721,]  5 1113 173 #>  [8722,]  5 1114 173 #>  [8723,]  5 1115 173 #>  [8724,]  5 1116 173 #>  [8725,]  5 1117 173 #>  [8726,]  5 1075 172 #>  [8727,]  5 1076 172 #>  [8728,]  5 1077 172 #>  [8729,]  5 1078 172 #>  [8730,]  5 1079 172 #>  [8731,]  5 1080 172 #>  [8732,]  5 1081 172 #>  [8733,]  5 1082 172 #>  [8734,]  5 1083 172 #>  [8735,]  5 1084 172 #>  [8736,]  5 1085 172 #>  [8737,]  5 1086 172 #>  [8738,]  5 1087 172 #>  [8739,]  5 1088 172 #>  [8740,]  5 1089 172 #>  [8741,]  5 1090 172 #>  [8742,]  5 1091 172 #>  [8743,]  5 1092 172 #>  [8744,]  5 1093 172 #>  [8745,]  5 1094 172 #>  [8746,]  5 1095 172 #>  [8747,]  5 1096 172 #>  [8748,]  5 1097 172 #>  [8749,]  5 1098 172 #>  [8750,]  5 1099 172 #>  [8751,]  5 1100 172 #>  [8752,]  5 1101 172 #>  [8753,]  5 1102 172 #>  [8754,]  5 1103 172 #>  [8755,]  5 1104 172 #>  [8756,]  5 1105 172 #>  [8757,]  5 1106 172 #>  [8758,]  5 1107 172 #>  [8759,]  5 1108 172 #>  [8760,]  5 1109 172 #>  [8761,]  5 1110 172 #>  [8762,]  5 1111 172 #>  [8763,]  5 1112 172 #>  [8764,]  5 1113 172 #>  [8765,]  5 1114 172 #>  [8766,]  5 1115 172 #>  [8767,]  5 1116 172 #>  [8768,]  5 1117 172 #>  [8769,]  5 1074 171 #>  [8770,]  5 1075 171 #>  [8771,]  5 1076 171 #>  [8772,]  5 1077 171 #>  [8773,]  5 1078 171 #>  [8774,]  5 1079 171 #>  [8775,]  5 1080 171 #>  [8776,]  5 1081 171 #>  [8777,]  5 1082 171 #>  [8778,]  5 1083 171 #>  [8779,]  5 1084 171 #>  [8780,]  5 1085 171 #>  [8781,]  5 1086 171 #>  [8782,]  5 1087 171 #>  [8783,]  5 1088 171 #>  [8784,]  5 1089 171 #>  [8785,]  5 1090 171 #>  [8786,]  5 1091 171 #>  [8787,]  5 1092 171 #>  [8788,]  5 1093 171 #>  [8789,]  5 1094 171 #>  [8790,]  5 1095 171 #>  [8791,]  5 1096 171 #>  [8792,]  5 1097 171 #>  [8793,]  5 1098 171 #>  [8794,]  5 1099 171 #>  [8795,]  5 1100 171 #>  [8796,]  5 1101 171 #>  [8797,]  5 1102 171 #>  [8798,]  5 1103 171 #>  [8799,]  5 1104 171 #>  [8800,]  5 1105 171 #>  [8801,]  5 1106 171 #>  [8802,]  5 1107 171 #>  [8803,]  5 1108 171 #>  [8804,]  5 1109 171 #>  [8805,]  5 1110 171 #>  [8806,]  5 1111 171 #>  [8807,]  5 1112 171 #>  [8808,]  5 1113 171 #>  [8809,]  5 1114 171 #>  [8810,]  5 1115 171 #>  [8811,]  5 1116 171 #>  [8812,]  5 1117 171 #>  [8813,]  5 1118 171 #>  [8814,]  5 1073 170 #>  [8815,]  5 1074 170 #>  [8816,]  5 1075 170 #>  [8817,]  5 1076 170 #>  [8818,]  5 1077 170 #>  [8819,]  5 1078 170 #>  [8820,]  5 1079 170 #>  [8821,]  5 1080 170 #>  [8822,]  5 1081 170 #>  [8823,]  5 1082 170 #>  [8824,]  5 1083 170 #>  [8825,]  5 1084 170 #>  [8826,]  5 1085 170 #>  [8827,]  5 1086 170 #>  [8828,]  5 1087 170 #>  [8829,]  5 1088 170 #>  [8830,]  5 1089 170 #>  [8831,]  5 1090 170 #>  [8832,]  5 1091 170 #>  [8833,]  5 1092 170 #>  [8834,]  5 1093 170 #>  [8835,]  5 1094 170 #>  [8836,]  5 1095 170 #>  [8837,]  5 1096 170 #>  [8838,]  5 1097 170 #>  [8839,]  5 1098 170 #>  [8840,]  5 1099 170 #>  [8841,]  5 1100 170 #>  [8842,]  5 1101 170 #>  [8843,]  5 1102 170 #>  [8844,]  5 1103 170 #>  [8845,]  5 1104 170 #>  [8846,]  5 1105 170 #>  [8847,]  5 1106 170 #>  [8848,]  5 1107 170 #>  [8849,]  5 1108 170 #>  [8850,]  5 1109 170 #>  [8851,]  5 1110 170 #>  [8852,]  5 1111 170 #>  [8853,]  5 1112 170 #>  [8854,]  5 1113 170 #>  [8855,]  5 1114 170 #>  [8856,]  5 1115 170 #>  [8857,]  5 1116 170 #>  [8858,]  5 1117 170 #>  [8859,]  5 1118 170 #>  [8860,]  5 1119 170 #>  [8861,]  5 1072 169 #>  [8862,]  5 1073 169 #>  [8863,]  5 1074 169 #>  [8864,]  5 1075 169 #>  [8865,]  5 1076 169 #>  [8866,]  5 1077 169 #>  [8867,]  5 1078 169 #>  [8868,]  5 1079 169 #>  [8869,]  5 1080 169 #>  [8870,]  5 1081 169 #>  [8871,]  5 1082 169 #>  [8872,]  5 1083 169 #>  [8873,]  5 1084 169 #>  [8874,]  5 1085 169 #>  [8875,]  5 1086 169 #>  [8876,]  5 1087 169 #>  [8877,]  5 1088 169 #>  [8878,]  5 1089 169 #>  [8879,]  5 1090 169 #>  [8880,]  5 1091 169 #>  [8881,]  5 1092 169 #>  [8882,]  5 1093 169 #>  [8883,]  5 1094 169 #>  [8884,]  5 1095 169 #>  [8885,]  5 1096 169 #>  [8886,]  5 1097 169 #>  [8887,]  5 1098 169 #>  [8888,]  5 1099 169 #>  [8889,]  5 1100 169 #>  [8890,]  5 1101 169 #>  [8891,]  5 1102 169 #>  [8892,]  5 1103 169 #>  [8893,]  5 1104 169 #>  [8894,]  5 1105 169 #>  [8895,]  5 1106 169 #>  [8896,]  5 1107 169 #>  [8897,]  5 1108 169 #>  [8898,]  5 1109 169 #>  [8899,]  5 1110 169 #>  [8900,]  5 1111 169 #>  [8901,]  5 1112 169 #>  [8902,]  5 1113 169 #>  [8903,]  5 1114 169 #>  [8904,]  5 1115 169 #>  [8905,]  5 1116 169 #>  [8906,]  5 1117 169 #>  [8907,]  5 1118 169 #>  [8908,]  5 1119 169 #>  [8909,]  5 1071 168 #>  [8910,]  5 1072 168 #>  [8911,]  5 1073 168 #>  [8912,]  5 1074 168 #>  [8913,]  5 1075 168 #>  [8914,]  5 1076 168 #>  [8915,]  5 1077 168 #>  [8916,]  5 1078 168 #>  [8917,]  5 1079 168 #>  [8918,]  5 1080 168 #>  [8919,]  5 1081 168 #>  [8920,]  5 1082 168 #>  [8921,]  5 1083 168 #>  [8922,]  5 1084 168 #>  [8923,]  5 1085 168 #>  [8924,]  5 1086 168 #>  [8925,]  5 1087 168 #>  [8926,]  5 1088 168 #>  [8927,]  5 1089 168 #>  [8928,]  5 1090 168 #>  [8929,]  5 1091 168 #>  [8930,]  5 1092 168 #>  [8931,]  5 1093 168 #>  [8932,]  5 1094 168 #>  [8933,]  5 1095 168 #>  [8934,]  5 1096 168 #>  [8935,]  5 1097 168 #>  [8936,]  5 1098 168 #>  [8937,]  5 1099 168 #>  [8938,]  5 1100 168 #>  [8939,]  5 1101 168 #>  [8940,]  5 1102 168 #>  [8941,]  5 1103 168 #>  [8942,]  5 1104 168 #>  [8943,]  5 1105 168 #>  [8944,]  5 1106 168 #>  [8945,]  5 1107 168 #>  [8946,]  5 1108 168 #>  [8947,]  5 1109 168 #>  [8948,]  5 1110 168 #>  [8949,]  5 1111 168 #>  [8950,]  5 1112 168 #>  [8951,]  5 1113 168 #>  [8952,]  5 1114 168 #>  [8953,]  5 1115 168 #>  [8954,]  5 1116 168 #>  [8955,]  5 1117 168 #>  [8956,]  5 1118 168 #>  [8957,]  5 1119 168 #>  [8958,]  5 1120 168 #>  [8959,]  5 1071 167 #>  [8960,]  5 1072 167 #>  [8961,]  5 1073 167 #>  [8962,]  5 1074 167 #>  [8963,]  5 1075 167 #>  [8964,]  5 1076 167 #>  [8965,]  5 1077 167 #>  [8966,]  5 1078 167 #>  [8967,]  5 1079 167 #>  [8968,]  5 1080 167 #>  [8969,]  5 1081 167 #>  [8970,]  5 1082 167 #>  [8971,]  5 1083 167 #>  [8972,]  5 1084 167 #>  [8973,]  5 1085 167 #>  [8974,]  5 1086 167 #>  [8975,]  5 1087 167 #>  [8976,]  5 1088 167 #>  [8977,]  5 1089 167 #>  [8978,]  5 1090 167 #>  [8979,]  5 1091 167 #>  [8980,]  5 1092 167 #>  [8981,]  5 1093 167 #>  [8982,]  5 1094 167 #>  [8983,]  5 1095 167 #>  [8984,]  5 1096 167 #>  [8985,]  5 1097 167 #>  [8986,]  5 1098 167 #>  [8987,]  5 1099 167 #>  [8988,]  5 1100 167 #>  [8989,]  5 1101 167 #>  [8990,]  5 1102 167 #>  [8991,]  5 1103 167 #>  [8992,]  5 1104 167 #>  [8993,]  5 1105 167 #>  [8994,]  5 1106 167 #>  [8995,]  5 1107 167 #>  [8996,]  5 1108 167 #>  [8997,]  5 1109 167 #>  [8998,]  5 1110 167 #>  [8999,]  5 1111 167 #>  [9000,]  5 1112 167 #>  [9001,]  5 1113 167 #>  [9002,]  5 1114 167 #>  [9003,]  5 1115 167 #>  [9004,]  5 1116 167 #>  [9005,]  5 1117 167 #>  [9006,]  5 1118 167 #>  [9007,]  5 1119 167 #>  [9008,]  5 1120 167 #>  [9009,]  5 1070 166 #>  [9010,]  5 1071 166 #>  [9011,]  5 1072 166 #>  [9012,]  5 1073 166 #>  [9013,]  5 1074 166 #>  [9014,]  5 1075 166 #>  [9015,]  5 1076 166 #>  [9016,]  5 1077 166 #>  [9017,]  5 1078 166 #>  [9018,]  5 1079 166 #>  [9019,]  5 1080 166 #>  [9020,]  5 1081 166 #>  [9021,]  5 1082 166 #>  [9022,]  5 1083 166 #>  [9023,]  5 1084 166 #>  [9024,]  5 1085 166 #>  [9025,]  5 1086 166 #>  [9026,]  5 1087 166 #>  [9027,]  5 1088 166 #>  [9028,]  5 1089 166 #>  [9029,]  5 1090 166 #>  [9030,]  5 1091 166 #>  [9031,]  5 1092 166 #>  [9032,]  5 1093 166 #>  [9033,]  5 1094 166 #>  [9034,]  5 1095 166 #>  [9035,]  5 1096 166 #>  [9036,]  5 1097 166 #>  [9037,]  5 1098 166 #>  [9038,]  5 1099 166 #>  [9039,]  5 1100 166 #>  [9040,]  5 1101 166 #>  [9041,]  5 1102 166 #>  [9042,]  5 1103 166 #>  [9043,]  5 1104 166 #>  [9044,]  5 1105 166 #>  [9045,]  5 1106 166 #>  [9046,]  5 1107 166 #>  [9047,]  5 1108 166 #>  [9048,]  5 1109 166 #>  [9049,]  5 1110 166 #>  [9050,]  5 1111 166 #>  [9051,]  5 1112 166 #>  [9052,]  5 1113 166 #>  [9053,]  5 1114 166 #>  [9054,]  5 1115 166 #>  [9055,]  5 1116 166 #>  [9056,]  5 1117 166 #>  [9057,]  5 1118 166 #>  [9058,]  5 1119 166 #>  [9059,]  5 1120 166 #>  [9060,]  5 1121 166 #>  [9061,]  5 1069 165 #>  [9062,]  5 1070 165 #>  [9063,]  5 1071 165 #>  [9064,]  5 1072 165 #>  [9065,]  5 1073 165 #>  [9066,]  5 1074 165 #>  [9067,]  5 1075 165 #>  [9068,]  5 1076 165 #>  [9069,]  5 1077 165 #>  [9070,]  5 1078 165 #>  [9071,]  5 1079 165 #>  [9072,]  5 1080 165 #>  [9073,]  5 1081 165 #>  [9074,]  5 1082 165 #>  [9075,]  5 1083 165 #>  [9076,]  5 1084 165 #>  [9077,]  5 1085 165 #>  [9078,]  5 1086 165 #>  [9079,]  5 1087 165 #>  [9080,]  5 1088 165 #>  [9081,]  5 1089 165 #>  [9082,]  5 1090 165 #>  [9083,]  5 1091 165 #>  [9084,]  5 1092 165 #>  [9085,]  5 1093 165 #>  [9086,]  5 1094 165 #>  [9087,]  5 1095 165 #>  [9088,]  5 1096 165 #>  [9089,]  5 1097 165 #>  [9090,]  5 1098 165 #>  [9091,]  5 1099 165 #>  [9092,]  5 1100 165 #>  [9093,]  5 1101 165 #>  [9094,]  5 1102 165 #>  [9095,]  5 1103 165 #>  [9096,]  5 1104 165 #>  [9097,]  5 1105 165 #>  [9098,]  5 1106 165 #>  [9099,]  5 1107 165 #>  [9100,]  5 1108 165 #>  [9101,]  5 1109 165 #>  [9102,]  5 1110 165 #>  [9103,]  5 1111 165 #>  [9104,]  5 1112 165 #>  [9105,]  5 1113 165 #>  [9106,]  5 1114 165 #>  [9107,]  5 1115 165 #>  [9108,]  5 1116 165 #>  [9109,]  5 1117 165 #>  [9110,]  5 1118 165 #>  [9111,]  5 1119 165 #>  [9112,]  5 1120 165 #>  [9113,]  5 1121 165 #>  [9114,]  5 1068 164 #>  [9115,]  5 1069 164 #>  [9116,]  5 1070 164 #>  [9117,]  5 1071 164 #>  [9118,]  5 1072 164 #>  [9119,]  5 1073 164 #>  [9120,]  5 1074 164 #>  [9121,]  5 1075 164 #>  [9122,]  5 1076 164 #>  [9123,]  5 1077 164 #>  [9124,]  5 1078 164 #>  [9125,]  5 1079 164 #>  [9126,]  5 1080 164 #>  [9127,]  5 1081 164 #>  [9128,]  5 1082 164 #>  [9129,]  5 1083 164 #>  [9130,]  5 1084 164 #>  [9131,]  5 1085 164 #>  [9132,]  5 1086 164 #>  [9133,]  5 1087 164 #>  [9134,]  5 1088 164 #>  [9135,]  5 1089 164 #>  [9136,]  5 1090 164 #>  [9137,]  5 1091 164 #>  [9138,]  5 1092 164 #>  [9139,]  5 1093 164 #>  [9140,]  5 1094 164 #>  [9141,]  5 1095 164 #>  [9142,]  5 1096 164 #>  [9143,]  5 1097 164 #>  [9144,]  5 1098 164 #>  [9145,]  5 1099 164 #>  [9146,]  5 1100 164 #>  [9147,]  5 1101 164 #>  [9148,]  5 1102 164 #>  [9149,]  5 1103 164 #>  [9150,]  5 1104 164 #>  [9151,]  5 1105 164 #>  [9152,]  5 1106 164 #>  [9153,]  5 1107 164 #>  [9154,]  5 1108 164 #>  [9155,]  5 1109 164 #>  [9156,]  5 1110 164 #>  [9157,]  5 1111 164 #>  [9158,]  5 1112 164 #>  [9159,]  5 1113 164 #>  [9160,]  5 1114 164 #>  [9161,]  5 1115 164 #>  [9162,]  5 1116 164 #>  [9163,]  5 1117 164 #>  [9164,]  5 1118 164 #>  [9165,]  5 1119 164 #>  [9166,]  5 1120 164 #>  [9167,]  5 1121 164 #>  [9168,]  5 1122 164 #>  [9169,]  5 1068 163 #>  [9170,]  5 1069 163 #>  [9171,]  5 1070 163 #>  [9172,]  5 1071 163 #>  [9173,]  5 1072 163 #>  [9174,]  5 1073 163 #>  [9175,]  5 1074 163 #>  [9176,]  5 1075 163 #>  [9177,]  5 1076 163 #>  [9178,]  5 1077 163 #>  [9179,]  5 1078 163 #>  [9180,]  5 1079 163 #>  [9181,]  5 1080 163 #>  [9182,]  5 1081 163 #>  [9183,]  5 1082 163 #>  [9184,]  5 1083 163 #>  [9185,]  5 1084 163 #>  [9186,]  5 1085 163 #>  [9187,]  5 1086 163 #>  [9188,]  5 1087 163 #>  [9189,]  5 1088 163 #>  [9190,]  5 1089 163 #>  [9191,]  5 1090 163 #>  [9192,]  5 1091 163 #>  [9193,]  5 1092 163 #>  [9194,]  5 1093 163 #>  [9195,]  5 1094 163 #>  [9196,]  5 1095 163 #>  [9197,]  5 1096 163 #>  [9198,]  5 1097 163 #>  [9199,]  5 1098 163 #>  [9200,]  5 1099 163 #>  [9201,]  5 1100 163 #>  [9202,]  5 1101 163 #>  [9203,]  5 1102 163 #>  [9204,]  5 1103 163 #>  [9205,]  5 1104 163 #>  [9206,]  5 1105 163 #>  [9207,]  5 1106 163 #>  [9208,]  5 1107 163 #>  [9209,]  5 1108 163 #>  [9210,]  5 1109 163 #>  [9211,]  5 1110 163 #>  [9212,]  5 1111 163 #>  [9213,]  5 1112 163 #>  [9214,]  5 1113 163 #>  [9215,]  5 1114 163 #>  [9216,]  5 1115 163 #>  [9217,]  5 1116 163 #>  [9218,]  5 1117 163 #>  [9219,]  5 1118 163 #>  [9220,]  5 1119 163 #>  [9221,]  5 1120 163 #>  [9222,]  5 1121 163 #>  [9223,]  5 1122 163 #>  [9224,]  5 1067 162 #>  [9225,]  5 1068 162 #>  [9226,]  5 1069 162 #>  [9227,]  5 1070 162 #>  [9228,]  5 1071 162 #>  [9229,]  5 1072 162 #>  [9230,]  5 1073 162 #>  [9231,]  5 1074 162 #>  [9232,]  5 1075 162 #>  [9233,]  5 1076 162 #>  [9234,]  5 1077 162 #>  [9235,]  5 1078 162 #>  [9236,]  5 1079 162 #>  [9237,]  5 1080 162 #>  [9238,]  5 1081 162 #>  [9239,]  5 1082 162 #>  [9240,]  5 1083 162 #>  [9241,]  5 1084 162 #>  [9242,]  5 1085 162 #>  [9243,]  5 1086 162 #>  [9244,]  5 1087 162 #>  [9245,]  5 1088 162 #>  [9246,]  5 1089 162 #>  [9247,]  5 1090 162 #>  [9248,]  5 1091 162 #>  [9249,]  5 1092 162 #>  [9250,]  5 1093 162 #>  [9251,]  5 1094 162 #>  [9252,]  5 1095 162 #>  [9253,]  5 1096 162 #>  [9254,]  5 1097 162 #>  [9255,]  5 1098 162 #>  [9256,]  5 1099 162 #>  [9257,]  5 1100 162 #>  [9258,]  5 1101 162 #>  [9259,]  5 1102 162 #>  [9260,]  5 1103 162 #>  [9261,]  5 1104 162 #>  [9262,]  5 1105 162 #>  [9263,]  5 1106 162 #>  [9264,]  5 1107 162 #>  [9265,]  5 1108 162 #>  [9266,]  5 1109 162 #>  [9267,]  5 1110 162 #>  [9268,]  5 1111 162 #>  [9269,]  5 1112 162 #>  [9270,]  5 1113 162 #>  [9271,]  5 1114 162 #>  [9272,]  5 1115 162 #>  [9273,]  5 1116 162 #>  [9274,]  5 1117 162 #>  [9275,]  5 1118 162 #>  [9276,]  5 1119 162 #>  [9277,]  5 1120 162 #>  [9278,]  5 1121 162 #>  [9279,]  5 1122 162 #>  [9280,]  5 1066 161 #>  [9281,]  5 1067 161 #>  [9282,]  5 1068 161 #>  [9283,]  5 1069 161 #>  [9284,]  5 1070 161 #>  [9285,]  5 1071 161 #>  [9286,]  5 1072 161 #>  [9287,]  5 1073 161 #>  [9288,]  5 1074 161 #>  [9289,]  5 1075 161 #>  [9290,]  5 1076 161 #>  [9291,]  5 1077 161 #>  [9292,]  5 1078 161 #>  [9293,]  5 1079 161 #>  [9294,]  5 1080 161 #>  [9295,]  5 1081 161 #>  [9296,]  5 1082 161 #>  [9297,]  5 1083 161 #>  [9298,]  5 1084 161 #>  [9299,]  5 1085 161 #>  [9300,]  5 1086 161 #>  [9301,]  5 1087 161 #>  [9302,]  5 1088 161 #>  [9303,]  5 1089 161 #>  [9304,]  5 1090 161 #>  [9305,]  5 1091 161 #>  [9306,]  5 1092 161 #>  [9307,]  5 1093 161 #>  [9308,]  5 1094 161 #>  [9309,]  5 1095 161 #>  [9310,]  5 1096 161 #>  [9311,]  5 1097 161 #>  [9312,]  5 1098 161 #>  [9313,]  5 1099 161 #>  [9314,]  5 1100 161 #>  [9315,]  5 1101 161 #>  [9316,]  5 1102 161 #>  [9317,]  5 1103 161 #>  [9318,]  5 1104 161 #>  [9319,]  5 1105 161 #>  [9320,]  5 1106 161 #>  [9321,]  5 1107 161 #>  [9322,]  5 1108 161 #>  [9323,]  5 1109 161 #>  [9324,]  5 1110 161 #>  [9325,]  5 1111 161 #>  [9326,]  5 1112 161 #>  [9327,]  5 1113 161 #>  [9328,]  5 1114 161 #>  [9329,]  5 1115 161 #>  [9330,]  5 1116 161 #>  [9331,]  5 1117 161 #>  [9332,]  5 1118 161 #>  [9333,]  5 1119 161 #>  [9334,]  5 1120 161 #>  [9335,]  5 1121 161 #>  [9336,]  5 1122 161 #>  [9337,]  5 1123 161 #>  [9338,]  5 1066 160 #>  [9339,]  5 1067 160 #>  [9340,]  5 1068 160 #>  [9341,]  5 1069 160 #>  [9342,]  5 1070 160 #>  [9343,]  5 1071 160 #>  [9344,]  5 1072 160 #>  [9345,]  5 1073 160 #>  [9346,]  5 1074 160 #>  [9347,]  5 1075 160 #>  [9348,]  5 1076 160 #>  [9349,]  5 1077 160 #>  [9350,]  5 1078 160 #>  [9351,]  5 1079 160 #>  [9352,]  5 1080 160 #>  [9353,]  5 1081 160 #>  [9354,]  5 1082 160 #>  [9355,]  5 1083 160 #>  [9356,]  5 1084 160 #>  [9357,]  5 1085 160 #>  [9358,]  5 1086 160 #>  [9359,]  5 1087 160 #>  [9360,]  5 1088 160 #>  [9361,]  5 1089 160 #>  [9362,]  5 1090 160 #>  [9363,]  5 1091 160 #>  [9364,]  5 1092 160 #>  [9365,]  5 1093 160 #>  [9366,]  5 1094 160 #>  [9367,]  5 1095 160 #>  [9368,]  5 1096 160 #>  [9369,]  5 1097 160 #>  [9370,]  5 1098 160 #>  [9371,]  5 1099 160 #>  [9372,]  5 1100 160 #>  [9373,]  5 1101 160 #>  [9374,]  5 1102 160 #>  [9375,]  5 1103 160 #>  [9376,]  5 1104 160 #>  [9377,]  5 1105 160 #>  [9378,]  5 1106 160 #>  [9379,]  5 1107 160 #>  [9380,]  5 1108 160 #>  [9381,]  5 1109 160 #>  [9382,]  5 1110 160 #>  [9383,]  5 1111 160 #>  [9384,]  5 1112 160 #>  [9385,]  5 1113 160 #>  [9386,]  5 1114 160 #>  [9387,]  5 1115 160 #>  [9388,]  5 1116 160 #>  [9389,]  5 1117 160 #>  [9390,]  5 1118 160 #>  [9391,]  5 1119 160 #>  [9392,]  5 1120 160 #>  [9393,]  5 1121 160 #>  [9394,]  5 1122 160 #>  [9395,]  5 1123 160 #>  [9396,]  5 1065 159 #>  [9397,]  5 1066 159 #>  [9398,]  5 1067 159 #>  [9399,]  5 1068 159 #>  [9400,]  5 1069 159 #>  [9401,]  5 1070 159 #>  [9402,]  5 1071 159 #>  [9403,]  5 1072 159 #>  [9404,]  5 1073 159 #>  [9405,]  5 1074 159 #>  [9406,]  5 1075 159 #>  [9407,]  5 1076 159 #>  [9408,]  5 1077 159 #>  [9409,]  5 1078 159 #>  [9410,]  5 1079 159 #>  [9411,]  5 1080 159 #>  [9412,]  5 1081 159 #>  [9413,]  5 1082 159 #>  [9414,]  5 1083 159 #>  [9415,]  5 1084 159 #>  [9416,]  5 1085 159 #>  [9417,]  5 1086 159 #>  [9418,]  5 1087 159 #>  [9419,]  5 1088 159 #>  [9420,]  5 1089 159 #>  [9421,]  5 1090 159 #>  [9422,]  5 1091 159 #>  [9423,]  5 1092 159 #>  [9424,]  5 1093 159 #>  [9425,]  5 1094 159 #>  [9426,]  5 1095 159 #>  [9427,]  5 1096 159 #>  [9428,]  5 1097 159 #>  [9429,]  5 1098 159 #>  [9430,]  5 1099 159 #>  [9431,]  5 1100 159 #>  [9432,]  5 1101 159 #>  [9433,]  5 1102 159 #>  [9434,]  5 1103 159 #>  [9435,]  5 1104 159 #>  [9436,]  5 1105 159 #>  [9437,]  5 1106 159 #>  [9438,]  5 1107 159 #>  [9439,]  5 1108 159 #>  [9440,]  5 1109 159 #>  [9441,]  5 1110 159 #>  [9442,]  5 1111 159 #>  [9443,]  5 1112 159 #>  [9444,]  5 1113 159 #>  [9445,]  5 1114 159 #>  [9446,]  5 1115 159 #>  [9447,]  5 1116 159 #>  [9448,]  5 1117 159 #>  [9449,]  5 1118 159 #>  [9450,]  5 1119 159 #>  [9451,]  5 1120 159 #>  [9452,]  5 1121 159 #>  [9453,]  5 1122 159 #>  [9454,]  5 1123 159 #>  [9455,]  5 1065 158 #>  [9456,]  5 1066 158 #>  [9457,]  5 1067 158 #>  [9458,]  5 1068 158 #>  [9459,]  5 1069 158 #>  [9460,]  5 1070 158 #>  [9461,]  5 1071 158 #>  [9462,]  5 1072 158 #>  [9463,]  5 1073 158 #>  [9464,]  5 1074 158 #>  [9465,]  5 1075 158 #>  [9466,]  5 1076 158 #>  [9467,]  5 1077 158 #>  [9468,]  5 1078 158 #>  [9469,]  5 1079 158 #>  [9470,]  5 1080 158 #>  [9471,]  5 1081 158 #>  [9472,]  5 1082 158 #>  [9473,]  5 1083 158 #>  [9474,]  5 1084 158 #>  [9475,]  5 1085 158 #>  [9476,]  5 1086 158 #>  [9477,]  5 1087 158 #>  [9478,]  5 1088 158 #>  [9479,]  5 1089 158 #>  [9480,]  5 1090 158 #>  [9481,]  5 1091 158 #>  [9482,]  5 1092 158 #>  [9483,]  5 1093 158 #>  [9484,]  5 1094 158 #>  [9485,]  5 1095 158 #>  [9486,]  5 1096 158 #>  [9487,]  5 1097 158 #>  [9488,]  5 1098 158 #>  [9489,]  5 1099 158 #>  [9490,]  5 1100 158 #>  [9491,]  5 1101 158 #>  [9492,]  5 1102 158 #>  [9493,]  5 1103 158 #>  [9494,]  5 1104 158 #>  [9495,]  5 1105 158 #>  [9496,]  5 1106 158 #>  [9497,]  5 1107 158 #>  [9498,]  5 1108 158 #>  [9499,]  5 1109 158 #>  [9500,]  5 1110 158 #>  [9501,]  5 1111 158 #>  [9502,]  5 1112 158 #>  [9503,]  5 1113 158 #>  [9504,]  5 1114 158 #>  [9505,]  5 1115 158 #>  [9506,]  5 1116 158 #>  [9507,]  5 1117 158 #>  [9508,]  5 1118 158 #>  [9509,]  5 1119 158 #>  [9510,]  5 1120 158 #>  [9511,]  5 1121 158 #>  [9512,]  5 1122 158 #>  [9513,]  5 1123 158 #>  [9514,]  5 1064 157 #>  [9515,]  5 1065 157 #>  [9516,]  5 1066 157 #>  [9517,]  5 1067 157 #>  [9518,]  5 1068 157 #>  [9519,]  5 1069 157 #>  [9520,]  5 1070 157 #>  [9521,]  5 1071 157 #>  [9522,]  5 1072 157 #>  [9523,]  5 1073 157 #>  [9524,]  5 1074 157 #>  [9525,]  5 1075 157 #>  [9526,]  5 1076 157 #>  [9527,]  5 1077 157 #>  [9528,]  5 1078 157 #>  [9529,]  5 1079 157 #>  [9530,]  5 1080 157 #>  [9531,]  5 1081 157 #>  [9532,]  5 1082 157 #>  [9533,]  5 1083 157 #>  [9534,]  5 1084 157 #>  [9535,]  5 1085 157 #>  [9536,]  5 1086 157 #>  [9537,]  5 1087 157 #>  [9538,]  5 1088 157 #>  [9539,]  5 1089 157 #>  [9540,]  5 1090 157 #>  [9541,]  5 1091 157 #>  [9542,]  5 1092 157 #>  [9543,]  5 1093 157 #>  [9544,]  5 1094 157 #>  [9545,]  5 1095 157 #>  [9546,]  5 1096 157 #>  [9547,]  5 1097 157 #>  [9548,]  5 1098 157 #>  [9549,]  5 1099 157 #>  [9550,]  5 1100 157 #>  [9551,]  5 1101 157 #>  [9552,]  5 1102 157 #>  [9553,]  5 1103 157 #>  [9554,]  5 1104 157 #>  [9555,]  5 1105 157 #>  [9556,]  5 1106 157 #>  [9557,]  5 1107 157 #>  [9558,]  5 1108 157 #>  [9559,]  5 1109 157 #>  [9560,]  5 1110 157 #>  [9561,]  5 1111 157 #>  [9562,]  5 1112 157 #>  [9563,]  5 1113 157 #>  [9564,]  5 1114 157 #>  [9565,]  5 1115 157 #>  [9566,]  5 1116 157 #>  [9567,]  5 1117 157 #>  [9568,]  5 1118 157 #>  [9569,]  5 1119 157 #>  [9570,]  5 1120 157 #>  [9571,]  5 1121 157 #>  [9572,]  5 1122 157 #>  [9573,]  5 1123 157 #>  [9574,]  5 1124 157 #>  [9575,]  5 1064 156 #>  [9576,]  5 1065 156 #>  [9577,]  5 1066 156 #>  [9578,]  5 1067 156 #>  [9579,]  5 1068 156 #>  [9580,]  5 1069 156 #>  [9581,]  5 1070 156 #>  [9582,]  5 1071 156 #>  [9583,]  5 1072 156 #>  [9584,]  5 1073 156 #>  [9585,]  5 1074 156 #>  [9586,]  5 1075 156 #>  [9587,]  5 1076 156 #>  [9588,]  5 1077 156 #>  [9589,]  5 1078 156 #>  [9590,]  5 1079 156 #>  [9591,]  5 1080 156 #>  [9592,]  5 1081 156 #>  [9593,]  5 1082 156 #>  [9594,]  5 1083 156 #>  [9595,]  5 1084 156 #>  [9596,]  5 1085 156 #>  [9597,]  5 1086 156 #>  [9598,]  5 1087 156 #>  [9599,]  5 1088 156 #>  [9600,]  5 1089 156 #>  [9601,]  5 1090 156 #>  [9602,]  5 1091 156 #>  [9603,]  5 1092 156 #>  [9604,]  5 1093 156 #>  [9605,]  5 1094 156 #>  [9606,]  5 1095 156 #>  [9607,]  5 1096 156 #>  [9608,]  5 1097 156 #>  [9609,]  5 1098 156 #>  [9610,]  5 1099 156 #>  [9611,]  5 1100 156 #>  [9612,]  5 1101 156 #>  [9613,]  5 1102 156 #>  [9614,]  5 1103 156 #>  [9615,]  5 1104 156 #>  [9616,]  5 1105 156 #>  [9617,]  5 1106 156 #>  [9618,]  5 1107 156 #>  [9619,]  5 1108 156 #>  [9620,]  5 1109 156 #>  [9621,]  5 1110 156 #>  [9622,]  5 1111 156 #>  [9623,]  5 1112 156 #>  [9624,]  5 1113 156 #>  [9625,]  5 1114 156 #>  [9626,]  5 1115 156 #>  [9627,]  5 1116 156 #>  [9628,]  5 1117 156 #>  [9629,]  5 1118 156 #>  [9630,]  5 1119 156 #>  [9631,]  5 1120 156 #>  [9632,]  5 1121 156 #>  [9633,]  5 1122 156 #>  [9634,]  5 1123 156 #>  [9635,]  5 1124 156 #>  [9636,]  5 1063 155 #>  [9637,]  5 1064 155 #>  [9638,]  5 1065 155 #>  [9639,]  5 1066 155 #>  [9640,]  5 1067 155 #>  [9641,]  5 1068 155 #>  [9642,]  5 1069 155 #>  [9643,]  5 1070 155 #>  [9644,]  5 1071 155 #>  [9645,]  5 1072 155 #>  [9646,]  5 1073 155 #>  [9647,]  5 1074 155 #>  [9648,]  5 1075 155 #>  [9649,]  5 1076 155 #>  [9650,]  5 1077 155 #>  [9651,]  5 1078 155 #>  [9652,]  5 1079 155 #>  [9653,]  5 1080 155 #>  [9654,]  5 1081 155 #>  [9655,]  5 1082 155 #>  [9656,]  5 1083 155 #>  [9657,]  5 1084 155 #>  [9658,]  5 1085 155 #>  [9659,]  5 1086 155 #>  [9660,]  5 1087 155 #>  [9661,]  5 1088 155 #>  [9662,]  5 1089 155 #>  [9663,]  5 1090 155 #>  [9664,]  5 1091 155 #>  [9665,]  5 1092 155 #>  [9666,]  5 1093 155 #>  [9667,]  5 1094 155 #>  [9668,]  5 1095 155 #>  [9669,]  5 1096 155 #>  [9670,]  5 1097 155 #>  [9671,]  5 1098 155 #>  [9672,]  5 1099 155 #>  [9673,]  5 1100 155 #>  [9674,]  5 1101 155 #>  [9675,]  5 1102 155 #>  [9676,]  5 1103 155 #>  [9677,]  5 1104 155 #>  [9678,]  5 1105 155 #>  [9679,]  5 1106 155 #>  [9680,]  5 1107 155 #>  [9681,]  5 1108 155 #>  [9682,]  5 1109 155 #>  [9683,]  5 1110 155 #>  [9684,]  5 1111 155 #>  [9685,]  5 1112 155 #>  [9686,]  5 1113 155 #>  [9687,]  5 1114 155 #>  [9688,]  5 1115 155 #>  [9689,]  5 1116 155 #>  [9690,]  5 1117 155 #>  [9691,]  5 1118 155 #>  [9692,]  5 1119 155 #>  [9693,]  5 1120 155 #>  [9694,]  5 1121 155 #>  [9695,]  5 1122 155 #>  [9696,]  5 1123 155 #>  [9697,]  5 1124 155 #>  [9698,]  5 1063 154 #>  [9699,]  5 1064 154 #>  [9700,]  5 1065 154 #>  [9701,]  5 1066 154 #>  [9702,]  5 1067 154 #>  [9703,]  5 1068 154 #>  [9704,]  5 1069 154 #>  [9705,]  5 1070 154 #>  [9706,]  5 1071 154 #>  [9707,]  5 1072 154 #>  [9708,]  5 1073 154 #>  [9709,]  5 1074 154 #>  [9710,]  5 1075 154 #>  [9711,]  5 1076 154 #>  [9712,]  5 1077 154 #>  [9713,]  5 1078 154 #>  [9714,]  5 1079 154 #>  [9715,]  5 1080 154 #>  [9716,]  5 1081 154 #>  [9717,]  5 1082 154 #>  [9718,]  5 1083 154 #>  [9719,]  5 1084 154 #>  [9720,]  5 1085 154 #>  [9721,]  5 1086 154 #>  [9722,]  5 1087 154 #>  [9723,]  5 1088 154 #>  [9724,]  5 1089 154 #>  [9725,]  5 1090 154 #>  [9726,]  5 1091 154 #>  [9727,]  5 1092 154 #>  [9728,]  5 1093 154 #>  [9729,]  5 1094 154 #>  [9730,]  5 1095 154 #>  [9731,]  5 1096 154 #>  [9732,]  5 1097 154 #>  [9733,]  5 1098 154 #>  [9734,]  5 1099 154 #>  [9735,]  5 1100 154 #>  [9736,]  5 1101 154 #>  [9737,]  5 1102 154 #>  [9738,]  5 1103 154 #>  [9739,]  5 1104 154 #>  [9740,]  5 1105 154 #>  [9741,]  5 1106 154 #>  [9742,]  5 1107 154 #>  [9743,]  5 1108 154 #>  [9744,]  5 1109 154 #>  [9745,]  5 1110 154 #>  [9746,]  5 1111 154 #>  [9747,]  5 1112 154 #>  [9748,]  5 1113 154 #>  [9749,]  5 1114 154 #>  [9750,]  5 1115 154 #>  [9751,]  5 1116 154 #>  [9752,]  5 1117 154 #>  [9753,]  5 1118 154 #>  [9754,]  5 1119 154 #>  [9755,]  5 1120 154 #>  [9756,]  5 1121 154 #>  [9757,]  5 1122 154 #>  [9758,]  5 1123 154 #>  [9759,]  5 1124 154 #>  [9760,]  5 1062 153 #>  [9761,]  5 1063 153 #>  [9762,]  5 1064 153 #>  [9763,]  5 1065 153 #>  [9764,]  5 1066 153 #>  [9765,]  5 1067 153 #>  [9766,]  5 1068 153 #>  [9767,]  5 1069 153 #>  [9768,]  5 1070 153 #>  [9769,]  5 1071 153 #>  [9770,]  5 1072 153 #>  [9771,]  5 1073 153 #>  [9772,]  5 1074 153 #>  [9773,]  5 1075 153 #>  [9774,]  5 1076 153 #>  [9775,]  5 1077 153 #>  [9776,]  5 1078 153 #>  [9777,]  5 1079 153 #>  [9778,]  5 1080 153 #>  [9779,]  5 1081 153 #>  [9780,]  5 1082 153 #>  [9781,]  5 1083 153 #>  [9782,]  5 1084 153 #>  [9783,]  5 1085 153 #>  [9784,]  5 1086 153 #>  [9785,]  5 1087 153 #>  [9786,]  5 1088 153 #>  [9787,]  5 1089 153 #>  [9788,]  5 1090 153 #>  [9789,]  5 1091 153 #>  [9790,]  5 1092 153 #>  [9791,]  5 1093 153 #>  [9792,]  5 1094 153 #>  [9793,]  5 1095 153 #>  [9794,]  5 1096 153 #>  [9795,]  5 1097 153 #>  [9796,]  5 1098 153 #>  [9797,]  5 1099 153 #>  [9798,]  5 1100 153 #>  [9799,]  5 1101 153 #>  [9800,]  5 1102 153 #>  [9801,]  5 1103 153 #>  [9802,]  5 1104 153 #>  [9803,]  5 1105 153 #>  [9804,]  5 1106 153 #>  [9805,]  5 1107 153 #>  [9806,]  5 1108 153 #>  [9807,]  5 1109 153 #>  [9808,]  5 1110 153 #>  [9809,]  5 1111 153 #>  [9810,]  5 1112 153 #>  [9811,]  5 1113 153 #>  [9812,]  5 1114 153 #>  [9813,]  5 1115 153 #>  [9814,]  5 1116 153 #>  [9815,]  5 1117 153 #>  [9816,]  5 1118 153 #>  [9817,]  5 1119 153 #>  [9818,]  5 1120 153 #>  [9819,]  5 1121 153 #>  [9820,]  5 1122 153 #>  [9821,]  5 1123 153 #>  [9822,]  5 1124 153 #>  [9823,]  5 1062 152 #>  [9824,]  5 1063 152 #>  [9825,]  5 1064 152 #>  [9826,]  5 1065 152 #>  [9827,]  5 1066 152 #>  [9828,]  5 1067 152 #>  [9829,]  5 1068 152 #>  [9830,]  5 1069 152 #>  [9831,]  5 1070 152 #>  [9832,]  5 1071 152 #>  [9833,]  5 1072 152 #>  [9834,]  5 1073 152 #>  [9835,]  5 1074 152 #>  [9836,]  5 1075 152 #>  [9837,]  5 1076 152 #>  [9838,]  5 1077 152 #>  [9839,]  5 1078 152 #>  [9840,]  5 1079 152 #>  [9841,]  5 1080 152 #>  [9842,]  5 1081 152 #>  [9843,]  5 1082 152 #>  [9844,]  5 1083 152 #>  [9845,]  5 1084 152 #>  [9846,]  5 1085 152 #>  [9847,]  5 1086 152 #>  [9848,]  5 1087 152 #>  [9849,]  5 1088 152 #>  [9850,]  5 1089 152 #>  [9851,]  5 1090 152 #>  [9852,]  5 1091 152 #>  [9853,]  5 1092 152 #>  [9854,]  5 1093 152 #>  [9855,]  5 1094 152 #>  [9856,]  5 1095 152 #>  [9857,]  5 1096 152 #>  [9858,]  5 1097 152 #>  [9859,]  5 1098 152 #>  [9860,]  5 1099 152 #>  [9861,]  5 1100 152 #>  [9862,]  5 1101 152 #>  [9863,]  5 1102 152 #>  [9864,]  5 1103 152 #>  [9865,]  5 1104 152 #>  [9866,]  5 1105 152 #>  [9867,]  5 1106 152 #>  [9868,]  5 1107 152 #>  [9869,]  5 1108 152 #>  [9870,]  5 1109 152 #>  [9871,]  5 1110 152 #>  [9872,]  5 1111 152 #>  [9873,]  5 1112 152 #>  [9874,]  5 1113 152 #>  [9875,]  5 1114 152 #>  [9876,]  5 1115 152 #>  [9877,]  5 1116 152 #>  [9878,]  5 1117 152 #>  [9879,]  5 1118 152 #>  [9880,]  5 1119 152 #>  [9881,]  5 1120 152 #>  [9882,]  5 1121 152 #>  [9883,]  5 1122 152 #>  [9884,]  5 1123 152 #>  [9885,]  5 1124 152 #>  [9886,]  5 1061 151 #>  [9887,]  5 1062 151 #>  [9888,]  5 1063 151 #>  [9889,]  5 1064 151 #>  [9890,]  5 1065 151 #>  [9891,]  5 1066 151 #>  [9892,]  5 1067 151 #>  [9893,]  5 1068 151 #>  [9894,]  5 1069 151 #>  [9895,]  5 1070 151 #>  [9896,]  5 1071 151 #>  [9897,]  5 1072 151 #>  [9898,]  5 1073 151 #>  [9899,]  5 1074 151 #>  [9900,]  5 1075 151 #>  [9901,]  5 1076 151 #>  [9902,]  5 1077 151 #>  [9903,]  5 1078 151 #>  [9904,]  5 1079 151 #>  [9905,]  5 1080 151 #>  [9906,]  5 1081 151 #>  [9907,]  5 1082 151 #>  [9908,]  5 1083 151 #>  [9909,]  5 1084 151 #>  [9910,]  5 1085 151 #>  [9911,]  5 1086 151 #>  [9912,]  5 1087 151 #>  [9913,]  5 1088 151 #>  [9914,]  5 1089 151 #>  [9915,]  5 1090 151 #>  [9916,]  5 1091 151 #>  [9917,]  5 1092 151 #>  [9918,]  5 1093 151 #>  [9919,]  5 1094 151 #>  [9920,]  5 1095 151 #>  [9921,]  5 1096 151 #>  [9922,]  5 1097 151 #>  [9923,]  5 1098 151 #>  [9924,]  5 1099 151 #>  [9925,]  5 1100 151 #>  [9926,]  5 1101 151 #>  [9927,]  5 1102 151 #>  [9928,]  5 1103 151 #>  [9929,]  5 1104 151 #>  [9930,]  5 1105 151 #>  [9931,]  5 1106 151 #>  [9932,]  5 1107 151 #>  [9933,]  5 1108 151 #>  [9934,]  5 1109 151 #>  [9935,]  5 1110 151 #>  [9936,]  5 1111 151 #>  [9937,]  5 1112 151 #>  [9938,]  5 1113 151 #>  [9939,]  5 1114 151 #>  [9940,]  5 1115 151 #>  [9941,]  5 1116 151 #>  [9942,]  5 1117 151 #>  [9943,]  5 1118 151 #>  [9944,]  5 1119 151 #>  [9945,]  5 1120 151 #>  [9946,]  5 1121 151 #>  [9947,]  5 1122 151 #>  [9948,]  5 1123 151 #>  [9949,]  5 1124 151 #>  [9950,]  5 1061 150 #>  [9951,]  5 1062 150 #>  [9952,]  5 1063 150 #>  [9953,]  5 1064 150 #>  [9954,]  5 1065 150 #>  [9955,]  5 1066 150 #>  [9956,]  5 1067 150 #>  [9957,]  5 1068 150 #>  [9958,]  5 1069 150 #>  [9959,]  5 1070 150 #>  [9960,]  5 1071 150 #>  [9961,]  5 1072 150 #>  [9962,]  5 1073 150 #>  [9963,]  5 1074 150 #>  [9964,]  5 1075 150 #>  [9965,]  5 1076 150 #>  [9966,]  5 1077 150 #>  [9967,]  5 1078 150 #>  [9968,]  5 1079 150 #>  [9969,]  5 1080 150 #>  [9970,]  5 1081 150 #>  [9971,]  5 1082 150 #>  [9972,]  5 1083 150 #>  [9973,]  5 1084 150 #>  [9974,]  5 1085 150 #>  [9975,]  5 1086 150 #>  [9976,]  5 1087 150 #>  [9977,]  5 1088 150 #>  [9978,]  5 1089 150 #>  [9979,]  5 1090 150 #>  [9980,]  5 1091 150 #>  [9981,]  5 1092 150 #>  [9982,]  5 1093 150 #>  [9983,]  5 1094 150 #>  [9984,]  5 1095 150 #>  [9985,]  5 1096 150 #>  [9986,]  5 1097 150 #>  [9987,]  5 1098 150 #>  [9988,]  5 1099 150 #>  [9989,]  5 1100 150 #>  [9990,]  5 1101 150 #>  [9991,]  5 1102 150 #>  [9992,]  5 1103 150 #>  [9993,]  5 1104 150 #>  [9994,]  5 1105 150 #>  [9995,]  5 1106 150 #>  [9996,]  5 1107 150 #>  [9997,]  5 1108 150 #>  [9998,]  5 1109 150 #>  [9999,]  5 1110 150 #> [10000,]  5 1111 150 #> [10001,]  5 1112 150 #> [10002,]  5 1113 150 #> [10003,]  5 1114 150 #> [10004,]  5 1115 150 #> [10005,]  5 1116 150 #> [10006,]  5 1117 150 #> [10007,]  5 1118 150 #> [10008,]  5 1119 150 #> [10009,]  5 1120 150 #> [10010,]  5 1121 150 #> [10011,]  5 1122 150 #> [10012,]  5 1123 150 #> [10013,]  5 1124 150 #> [10014,]  5 1125 150 #> [10015,]  5 1061 149 #> [10016,]  5 1062 149 #> [10017,]  5 1063 149 #> [10018,]  5 1064 149 #> [10019,]  5 1065 149 #> [10020,]  5 1066 149 #> [10021,]  5 1067 149 #> [10022,]  5 1068 149 #> [10023,]  5 1069 149 #> [10024,]  5 1070 149 #> [10025,]  5 1071 149 #> [10026,]  5 1072 149 #> [10027,]  5 1073 149 #> [10028,]  5 1074 149 #> [10029,]  5 1075 149 #> [10030,]  5 1076 149 #> [10031,]  5 1077 149 #> [10032,]  5 1078 149 #> [10033,]  5 1079 149 #> [10034,]  5 1080 149 #> [10035,]  5 1081 149 #> [10036,]  5 1082 149 #> [10037,]  5 1083 149 #> [10038,]  5 1084 149 #> [10039,]  5 1085 149 #> [10040,]  5 1086 149 #> [10041,]  5 1087 149 #> [10042,]  5 1088 149 #> [10043,]  5 1089 149 #> [10044,]  5 1090 149 #> [10045,]  5 1091 149 #> [10046,]  5 1092 149 #> [10047,]  5 1093 149 #> [10048,]  5 1094 149 #> [10049,]  5 1095 149 #> [10050,]  5 1096 149 #> [10051,]  5 1097 149 #> [10052,]  5 1098 149 #> [10053,]  5 1099 149 #> [10054,]  5 1100 149 #> [10055,]  5 1101 149 #> [10056,]  5 1102 149 #> [10057,]  5 1103 149 #> [10058,]  5 1104 149 #> [10059,]  5 1105 149 #> [10060,]  5 1106 149 #> [10061,]  5 1107 149 #> [10062,]  5 1108 149 #> [10063,]  5 1109 149 #> [10064,]  5 1110 149 #> [10065,]  5 1111 149 #> [10066,]  5 1112 149 #> [10067,]  5 1113 149 #> [10068,]  5 1114 149 #> [10069,]  5 1115 149 #> [10070,]  5 1116 149 #> [10071,]  5 1117 149 #> [10072,]  5 1118 149 #> [10073,]  5 1119 149 #> [10074,]  5 1120 149 #> [10075,]  5 1121 149 #> [10076,]  5 1122 149 #> [10077,]  5 1123 149 #> [10078,]  5 1124 149 #> [10079,]  5 1125 149 #> [10080,]  5 1060 148 #> [10081,]  5 1061 148 #> [10082,]  5 1062 148 #> [10083,]  5 1063 148 #> [10084,]  5 1064 148 #> [10085,]  5 1065 148 #> [10086,]  5 1066 148 #> [10087,]  5 1067 148 #> [10088,]  5 1068 148 #> [10089,]  5 1069 148 #> [10090,]  5 1070 148 #> [10091,]  5 1071 148 #> [10092,]  5 1072 148 #> [10093,]  5 1073 148 #> [10094,]  5 1074 148 #> [10095,]  5 1075 148 #> [10096,]  5 1076 148 #> [10097,]  5 1077 148 #> [10098,]  5 1078 148 #> [10099,]  5 1079 148 #> [10100,]  5 1080 148 #> [10101,]  5 1081 148 #> [10102,]  5 1082 148 #> [10103,]  5 1083 148 #> [10104,]  5 1084 148 #> [10105,]  5 1085 148 #> [10106,]  5 1086 148 #> [10107,]  5 1087 148 #> [10108,]  5 1088 148 #> [10109,]  5 1089 148 #> [10110,]  5 1090 148 #> [10111,]  5 1091 148 #> [10112,]  5 1092 148 #> [10113,]  5 1093 148 #> [10114,]  5 1094 148 #> [10115,]  5 1095 148 #> [10116,]  5 1096 148 #> [10117,]  5 1097 148 #> [10118,]  5 1098 148 #> [10119,]  5 1099 148 #> [10120,]  5 1100 148 #> [10121,]  5 1101 148 #> [10122,]  5 1102 148 #> [10123,]  5 1103 148 #> [10124,]  5 1104 148 #> [10125,]  5 1105 148 #> [10126,]  5 1106 148 #> [10127,]  5 1107 148 #> [10128,]  5 1108 148 #> [10129,]  5 1109 148 #> [10130,]  5 1110 148 #> [10131,]  5 1111 148 #> [10132,]  5 1112 148 #> [10133,]  5 1113 148 #> [10134,]  5 1114 148 #> [10135,]  5 1115 148 #> [10136,]  5 1116 148 #> [10137,]  5 1117 148 #> [10138,]  5 1118 148 #> [10139,]  5 1119 148 #> [10140,]  5 1120 148 #> [10141,]  5 1121 148 #> [10142,]  5 1122 148 #> [10143,]  5 1123 148 #> [10144,]  5 1124 148 #> [10145,]  5 1125 148 #> [10146,]  5 1060 147 #> [10147,]  5 1061 147 #> [10148,]  5 1062 147 #> [10149,]  5 1063 147 #> [10150,]  5 1064 147 #> [10151,]  5 1065 147 #> [10152,]  5 1066 147 #> [10153,]  5 1067 147 #> [10154,]  5 1068 147 #> [10155,]  5 1069 147 #> [10156,]  5 1070 147 #> [10157,]  5 1071 147 #> [10158,]  5 1072 147 #> [10159,]  5 1073 147 #> [10160,]  5 1074 147 #> [10161,]  5 1075 147 #> [10162,]  5 1076 147 #> [10163,]  5 1077 147 #> [10164,]  5 1078 147 #> [10165,]  5 1079 147 #> [10166,]  5 1080 147 #> [10167,]  5 1081 147 #> [10168,]  5 1082 147 #> [10169,]  5 1083 147 #> [10170,]  5 1084 147 #> [10171,]  5 1085 147 #> [10172,]  5 1086 147 #> [10173,]  5 1087 147 #> [10174,]  5 1088 147 #> [10175,]  5 1089 147 #> [10176,]  5 1090 147 #> [10177,]  5 1091 147 #> [10178,]  5 1092 147 #> [10179,]  5 1093 147 #> [10180,]  5 1094 147 #> [10181,]  5 1095 147 #> [10182,]  5 1096 147 #> [10183,]  5 1097 147 #> [10184,]  5 1098 147 #> [10185,]  5 1099 147 #> [10186,]  5 1100 147 #> [10187,]  5 1101 147 #> [10188,]  5 1102 147 #> [10189,]  5 1103 147 #> [10190,]  5 1104 147 #> [10191,]  5 1105 147 #> [10192,]  5 1106 147 #> [10193,]  5 1107 147 #> [10194,]  5 1108 147 #> [10195,]  5 1109 147 #> [10196,]  5 1110 147 #> [10197,]  5 1111 147 #> [10198,]  5 1112 147 #> [10199,]  5 1113 147 #> [10200,]  5 1114 147 #> [10201,]  5 1115 147 #> [10202,]  5 1116 147 #> [10203,]  5 1117 147 #> [10204,]  5 1118 147 #> [10205,]  5 1119 147 #> [10206,]  5 1120 147 #> [10207,]  5 1121 147 #> [10208,]  5 1122 147 #> [10209,]  5 1123 147 #> [10210,]  5 1124 147 #> [10211,]  5 1125 147 #> [10212,]  5 1060 146 #> [10213,]  5 1061 146 #> [10214,]  5 1062 146 #> [10215,]  5 1063 146 #> [10216,]  5 1064 146 #> [10217,]  5 1065 146 #> [10218,]  5 1066 146 #> [10219,]  5 1067 146 #> [10220,]  5 1068 146 #> [10221,]  5 1069 146 #> [10222,]  5 1070 146 #> [10223,]  5 1071 146 #> [10224,]  5 1072 146 #> [10225,]  5 1073 146 #> [10226,]  5 1074 146 #> [10227,]  5 1075 146 #> [10228,]  5 1076 146 #> [10229,]  5 1077 146 #> [10230,]  5 1078 146 #> [10231,]  5 1079 146 #> [10232,]  5 1080 146 #> [10233,]  5 1081 146 #> [10234,]  5 1082 146 #> [10235,]  5 1083 146 #> [10236,]  5 1084 146 #> [10237,]  5 1085 146 #> [10238,]  5 1086 146 #> [10239,]  5 1087 146 #> [10240,]  5 1088 146 #> [10241,]  5 1089 146 #> [10242,]  5 1090 146 #> [10243,]  5 1091 146 #> [10244,]  5 1092 146 #> [10245,]  5 1093 146 #> [10246,]  5 1094 146 #> [10247,]  5 1095 146 #> [10248,]  5 1096 146 #> [10249,]  5 1097 146 #> [10250,]  5 1098 146 #> [10251,]  5 1099 146 #> [10252,]  5 1100 146 #> [10253,]  5 1101 146 #> [10254,]  5 1102 146 #> [10255,]  5 1103 146 #> [10256,]  5 1104 146 #> [10257,]  5 1105 146 #> [10258,]  5 1106 146 #> [10259,]  5 1107 146 #> [10260,]  5 1108 146 #> [10261,]  5 1109 146 #> [10262,]  5 1110 146 #> [10263,]  5 1111 146 #> [10264,]  5 1112 146 #> [10265,]  5 1113 146 #> [10266,]  5 1114 146 #> [10267,]  5 1115 146 #> [10268,]  5 1116 146 #> [10269,]  5 1117 146 #> [10270,]  5 1118 146 #> [10271,]  5 1119 146 #> [10272,]  5 1120 146 #> [10273,]  5 1121 146 #> [10274,]  5 1122 146 #> [10275,]  5 1123 146 #> [10276,]  5 1124 146 #> [10277,]  5 1125 146 #> [10278,]  5 1059 145 #> [10279,]  5 1060 145 #> [10280,]  5 1061 145 #> [10281,]  5 1062 145 #> [10282,]  5 1063 145 #> [10283,]  5 1064 145 #> [10284,]  5 1065 145 #> [10285,]  5 1066 145 #> [10286,]  5 1067 145 #> [10287,]  5 1068 145 #> [10288,]  5 1069 145 #> [10289,]  5 1070 145 #> [10290,]  5 1071 145 #> [10291,]  5 1072 145 #> [10292,]  5 1073 145 #> [10293,]  5 1074 145 #> [10294,]  5 1075 145 #> [10295,]  5 1076 145 #> [10296,]  5 1077 145 #> [10297,]  5 1078 145 #> [10298,]  5 1079 145 #> [10299,]  5 1080 145 #> [10300,]  5 1081 145 #> [10301,]  5 1082 145 #> [10302,]  5 1083 145 #> [10303,]  5 1084 145 #> [10304,]  5 1085 145 #> [10305,]  5 1086 145 #> [10306,]  5 1087 145 #> [10307,]  5 1088 145 #> [10308,]  5 1089 145 #> [10309,]  5 1090 145 #> [10310,]  5 1091 145 #> [10311,]  5 1092 145 #> [10312,]  5 1093 145 #> [10313,]  5 1094 145 #> [10314,]  5 1095 145 #> [10315,]  5 1096 145 #> [10316,]  5 1097 145 #> [10317,]  5 1098 145 #> [10318,]  5 1099 145 #> [10319,]  5 1100 145 #> [10320,]  5 1101 145 #> [10321,]  5 1102 145 #> [10322,]  5 1103 145 #> [10323,]  5 1104 145 #> [10324,]  5 1105 145 #> [10325,]  5 1106 145 #> [10326,]  5 1107 145 #> [10327,]  5 1108 145 #> [10328,]  5 1109 145 #> [10329,]  5 1110 145 #> [10330,]  5 1111 145 #> [10331,]  5 1112 145 #> [10332,]  5 1113 145 #> [10333,]  5 1114 145 #> [10334,]  5 1115 145 #> [10335,]  5 1116 145 #> [10336,]  5 1117 145 #> [10337,]  5 1118 145 #> [10338,]  5 1119 145 #> [10339,]  5 1120 145 #> [10340,]  5 1121 145 #> [10341,]  5 1122 145 #> [10342,]  5 1123 145 #> [10343,]  5 1124 145 #> [10344,]  5 1125 145 #> [10345,]  5 1059 144 #> [10346,]  5 1060 144 #> [10347,]  5 1061 144 #> [10348,]  5 1062 144 #> [10349,]  5 1063 144 #> [10350,]  5 1064 144 #> [10351,]  5 1065 144 #> [10352,]  5 1066 144 #> [10353,]  5 1067 144 #> [10354,]  5 1068 144 #> [10355,]  5 1069 144 #> [10356,]  5 1070 144 #> [10357,]  5 1071 144 #> [10358,]  5 1072 144 #> [10359,]  5 1073 144 #> [10360,]  5 1074 144 #> [10361,]  5 1075 144 #> [10362,]  5 1076 144 #> [10363,]  5 1077 144 #> [10364,]  5 1078 144 #> [10365,]  5 1079 144 #> [10366,]  5 1080 144 #> [10367,]  5 1081 144 #> [10368,]  5 1082 144 #> [10369,]  5 1083 144 #> [10370,]  5 1084 144 #> [10371,]  5 1085 144 #> [10372,]  5 1086 144 #> [10373,]  5 1087 144 #> [10374,]  5 1088 144 #> [10375,]  5 1089 144 #> [10376,]  5 1090 144 #> [10377,]  5 1091 144 #> [10378,]  5 1092 144 #> [10379,]  5 1093 144 #> [10380,]  5 1094 144 #> [10381,]  5 1095 144 #> [10382,]  5 1096 144 #> [10383,]  5 1097 144 #> [10384,]  5 1098 144 #> [10385,]  5 1099 144 #> [10386,]  5 1100 144 #> [10387,]  5 1101 144 #> [10388,]  5 1102 144 #> [10389,]  5 1103 144 #> [10390,]  5 1104 144 #> [10391,]  5 1105 144 #> [10392,]  5 1106 144 #> [10393,]  5 1107 144 #> [10394,]  5 1108 144 #> [10395,]  5 1109 144 #> [10396,]  5 1110 144 #> [10397,]  5 1111 144 #> [10398,]  5 1112 144 #> [10399,]  5 1113 144 #> [10400,]  5 1114 144 #> [10401,]  5 1115 144 #> [10402,]  5 1116 144 #> [10403,]  5 1117 144 #> [10404,]  5 1118 144 #> [10405,]  5 1119 144 #> [10406,]  5 1120 144 #> [10407,]  5 1121 144 #> [10408,]  5 1122 144 #> [10409,]  5 1123 144 #> [10410,]  5 1124 144 #> [10411,]  5 1125 144 #> [10412,]  5 1059 143 #> [10413,]  5 1060 143 #> [10414,]  5 1061 143 #> [10415,]  5 1062 143 #> [10416,]  5 1063 143 #> [10417,]  5 1064 143 #> [10418,]  5 1065 143 #> [10419,]  5 1066 143 #> [10420,]  5 1067 143 #> [10421,]  5 1068 143 #> [10422,]  5 1069 143 #> [10423,]  5 1070 143 #> [10424,]  5 1071 143 #> [10425,]  5 1072 143 #> [10426,]  5 1073 143 #> [10427,]  5 1074 143 #> [10428,]  5 1075 143 #> [10429,]  5 1076 143 #> [10430,]  5 1077 143 #> [10431,]  5 1078 143 #> [10432,]  5 1079 143 #> [10433,]  5 1080 143 #> [10434,]  5 1081 143 #> [10435,]  5 1082 143 #> [10436,]  5 1083 143 #> [10437,]  5 1084 143 #> [10438,]  5 1085 143 #> [10439,]  5 1086 143 #> [10440,]  5 1087 143 #> [10441,]  5 1088 143 #> [10442,]  5 1089 143 #> [10443,]  5 1090 143 #> [10444,]  5 1091 143 #> [10445,]  5 1092 143 #> [10446,]  5 1093 143 #> [10447,]  5 1094 143 #> [10448,]  5 1095 143 #> [10449,]  5 1096 143 #> [10450,]  5 1097 143 #> [10451,]  5 1098 143 #> [10452,]  5 1099 143 #> [10453,]  5 1100 143 #> [10454,]  5 1101 143 #> [10455,]  5 1102 143 #> [10456,]  5 1103 143 #> [10457,]  5 1104 143 #> [10458,]  5 1105 143 #> [10459,]  5 1106 143 #> [10460,]  5 1107 143 #> [10461,]  5 1108 143 #> [10462,]  5 1109 143 #> [10463,]  5 1110 143 #> [10464,]  5 1111 143 #> [10465,]  5 1112 143 #> [10466,]  5 1113 143 #> [10467,]  5 1114 143 #> [10468,]  5 1115 143 #> [10469,]  5 1116 143 #> [10470,]  5 1117 143 #> [10471,]  5 1118 143 #> [10472,]  5 1119 143 #> [10473,]  5 1120 143 #> [10474,]  5 1121 143 #> [10475,]  5 1122 143 #> [10476,]  5 1123 143 #> [10477,]  5 1124 143 #> [10478,]  5 1125 143 #> [10479,]  5 1059 142 #> [10480,]  5 1060 142 #> [10481,]  5 1061 142 #> [10482,]  5 1062 142 #> [10483,]  5 1063 142 #> [10484,]  5 1064 142 #> [10485,]  5 1065 142 #> [10486,]  5 1066 142 #> [10487,]  5 1067 142 #> [10488,]  5 1068 142 #> [10489,]  5 1069 142 #> [10490,]  5 1070 142 #> [10491,]  5 1071 142 #> [10492,]  5 1072 142 #> [10493,]  5 1073 142 #> [10494,]  5 1074 142 #> [10495,]  5 1075 142 #> [10496,]  5 1076 142 #> [10497,]  5 1077 142 #> [10498,]  5 1078 142 #> [10499,]  5 1079 142 #> [10500,]  5 1080 142 #> [10501,]  5 1081 142 #> [10502,]  5 1082 142 #> [10503,]  5 1083 142 #> [10504,]  5 1084 142 #> [10505,]  5 1085 142 #> [10506,]  5 1086 142 #> [10507,]  5 1087 142 #> [10508,]  5 1088 142 #> [10509,]  5 1089 142 #> [10510,]  5 1090 142 #> [10511,]  5 1091 142 #> [10512,]  5 1092 142 #> [10513,]  5 1093 142 #> [10514,]  5 1094 142 #> [10515,]  5 1095 142 #> [10516,]  5 1096 142 #> [10517,]  5 1097 142 #> [10518,]  5 1098 142 #> [10519,]  5 1099 142 #> [10520,]  5 1100 142 #> [10521,]  5 1101 142 #> [10522,]  5 1102 142 #> [10523,]  5 1103 142 #> [10524,]  5 1104 142 #> [10525,]  5 1105 142 #> [10526,]  5 1106 142 #> [10527,]  5 1107 142 #> [10528,]  5 1108 142 #> [10529,]  5 1109 142 #> [10530,]  5 1110 142 #> [10531,]  5 1111 142 #> [10532,]  5 1112 142 #> [10533,]  5 1113 142 #> [10534,]  5 1114 142 #> [10535,]  5 1115 142 #> [10536,]  5 1116 142 #> [10537,]  5 1117 142 #> [10538,]  5 1118 142 #> [10539,]  5 1119 142 #> [10540,]  5 1120 142 #> [10541,]  5 1121 142 #> [10542,]  5 1122 142 #> [10543,]  5 1123 142 #> [10544,]  5 1124 142 #> [10545,]  5 1125 142 #> [10546,]  5 1058 141 #> [10547,]  5 1059 141 #> [10548,]  5 1060 141 #> [10549,]  5 1061 141 #> [10550,]  5 1062 141 #> [10551,]  5 1063 141 #> [10552,]  5 1064 141 #> [10553,]  5 1065 141 #> [10554,]  5 1066 141 #> [10555,]  5 1067 141 #> [10556,]  5 1068 141 #> [10557,]  5 1069 141 #> [10558,]  5 1070 141 #> [10559,]  5 1071 141 #> [10560,]  5 1072 141 #> [10561,]  5 1073 141 #> [10562,]  5 1074 141 #> [10563,]  5 1075 141 #> [10564,]  5 1076 141 #> [10565,]  5 1077 141 #> [10566,]  5 1078 141 #> [10567,]  5 1079 141 #> [10568,]  5 1080 141 #> [10569,]  5 1081 141 #> [10570,]  5 1082 141 #> [10571,]  5 1083 141 #> [10572,]  5 1084 141 #> [10573,]  5 1085 141 #> [10574,]  5 1086 141 #> [10575,]  5 1087 141 #> [10576,]  5 1088 141 #> [10577,]  5 1089 141 #> [10578,]  5 1090 141 #> [10579,]  5 1091 141 #> [10580,]  5 1092 141 #> [10581,]  5 1093 141 #> [10582,]  5 1094 141 #> [10583,]  5 1095 141 #> [10584,]  5 1096 141 #> [10585,]  5 1097 141 #> [10586,]  5 1098 141 #> [10587,]  5 1099 141 #> [10588,]  5 1100 141 #> [10589,]  5 1101 141 #> [10590,]  5 1102 141 #> [10591,]  5 1103 141 #> [10592,]  5 1104 141 #> [10593,]  5 1105 141 #> [10594,]  5 1106 141 #> [10595,]  5 1107 141 #> [10596,]  5 1108 141 #> [10597,]  5 1109 141 #> [10598,]  5 1110 141 #> [10599,]  5 1111 141 #> [10600,]  5 1112 141 #> [10601,]  5 1113 141 #> [10602,]  5 1114 141 #> [10603,]  5 1115 141 #> [10604,]  5 1116 141 #> [10605,]  5 1117 141 #> [10606,]  5 1118 141 #> [10607,]  5 1119 141 #> [10608,]  5 1120 141 #> [10609,]  5 1121 141 #> [10610,]  5 1122 141 #> [10611,]  5 1123 141 #> [10612,]  5 1124 141 #> [10613,]  5 1125 141 #> [10614,]  5 1058 140 #> [10615,]  5 1059 140 #> [10616,]  5 1060 140 #> [10617,]  5 1061 140 #> [10618,]  5 1062 140 #> [10619,]  5 1063 140 #> [10620,]  5 1064 140 #> [10621,]  5 1065 140 #> [10622,]  5 1066 140 #> [10623,]  5 1067 140 #> [10624,]  5 1068 140 #> [10625,]  5 1069 140 #> [10626,]  5 1070 140 #> [10627,]  5 1071 140 #> [10628,]  5 1072 140 #> [10629,]  5 1073 140 #> [10630,]  5 1074 140 #> [10631,]  5 1075 140 #> [10632,]  5 1076 140 #> [10633,]  5 1077 140 #> [10634,]  5 1078 140 #> [10635,]  5 1079 140 #> [10636,]  5 1080 140 #> [10637,]  5 1081 140 #> [10638,]  5 1082 140 #> [10639,]  5 1083 140 #> [10640,]  5 1084 140 #> [10641,]  5 1085 140 #> [10642,]  5 1086 140 #> [10643,]  5 1087 140 #> [10644,]  5 1088 140 #> [10645,]  5 1089 140 #> [10646,]  5 1090 140 #> [10647,]  5 1091 140 #> [10648,]  5 1092 140 #> [10649,]  5 1093 140 #> [10650,]  5 1094 140 #> [10651,]  5 1095 140 #> [10652,]  5 1096 140 #> [10653,]  5 1097 140 #> [10654,]  5 1098 140 #> [10655,]  5 1099 140 #> [10656,]  5 1100 140 #> [10657,]  5 1101 140 #> [10658,]  5 1102 140 #> [10659,]  5 1103 140 #> [10660,]  5 1104 140 #> [10661,]  5 1105 140 #> [10662,]  5 1106 140 #> [10663,]  5 1107 140 #> [10664,]  5 1108 140 #> [10665,]  5 1109 140 #> [10666,]  5 1110 140 #> [10667,]  5 1111 140 #> [10668,]  5 1112 140 #> [10669,]  5 1113 140 #> [10670,]  5 1114 140 #> [10671,]  5 1115 140 #> [10672,]  5 1116 140 #> [10673,]  5 1117 140 #> [10674,]  5 1118 140 #> [10675,]  5 1119 140 #> [10676,]  5 1120 140 #> [10677,]  5 1121 140 #> [10678,]  5 1122 140 #> [10679,]  5 1123 140 #> [10680,]  5 1124 140 #> [10681,]  5 1125 140 #> [10682,]  5 1058 139 #> [10683,]  5 1059 139 #> [10684,]  5 1060 139 #> [10685,]  5 1061 139 #> [10686,]  5 1062 139 #> [10687,]  5 1063 139 #> [10688,]  5 1064 139 #> [10689,]  5 1065 139 #> [10690,]  5 1066 139 #> [10691,]  5 1067 139 #> [10692,]  5 1068 139 #> [10693,]  5 1069 139 #> [10694,]  5 1070 139 #> [10695,]  5 1071 139 #> [10696,]  5 1072 139 #> [10697,]  5 1073 139 #> [10698,]  5 1074 139 #> [10699,]  5 1075 139 #> [10700,]  5 1076 139 #> [10701,]  5 1077 139 #> [10702,]  5 1078 139 #> [10703,]  5 1079 139 #> [10704,]  5 1080 139 #> [10705,]  5 1081 139 #> [10706,]  5 1082 139 #> [10707,]  5 1083 139 #> [10708,]  5 1084 139 #> [10709,]  5 1085 139 #> [10710,]  5 1086 139 #> [10711,]  5 1087 139 #> [10712,]  5 1088 139 #> [10713,]  5 1089 139 #> [10714,]  5 1090 139 #> [10715,]  5 1091 139 #> [10716,]  5 1092 139 #> [10717,]  5 1093 139 #> [10718,]  5 1094 139 #> [10719,]  5 1095 139 #> [10720,]  5 1096 139 #> [10721,]  5 1097 139 #> [10722,]  5 1098 139 #> [10723,]  5 1099 139 #> [10724,]  5 1100 139 #> [10725,]  5 1101 139 #> [10726,]  5 1102 139 #> [10727,]  5 1103 139 #> [10728,]  5 1104 139 #> [10729,]  5 1105 139 #> [10730,]  5 1106 139 #> [10731,]  5 1107 139 #> [10732,]  5 1108 139 #> [10733,]  5 1109 139 #> [10734,]  5 1110 139 #> [10735,]  5 1111 139 #> [10736,]  5 1112 139 #> [10737,]  5 1113 139 #> [10738,]  5 1114 139 #> [10739,]  5 1115 139 #> [10740,]  5 1116 139 #> [10741,]  5 1117 139 #> [10742,]  5 1118 139 #> [10743,]  5 1119 139 #> [10744,]  5 1120 139 #> [10745,]  5 1121 139 #> [10746,]  5 1122 139 #> [10747,]  5 1123 139 #> [10748,]  5 1124 139 #> [10749,]  5 1058 138 #> [10750,]  5 1059 138 #> [10751,]  5 1060 138 #> [10752,]  5 1061 138 #> [10753,]  5 1062 138 #> [10754,]  5 1063 138 #> [10755,]  5 1064 138 #> [10756,]  5 1065 138 #> [10757,]  5 1066 138 #> [10758,]  5 1067 138 #> [10759,]  5 1068 138 #> [10760,]  5 1069 138 #> [10761,]  5 1070 138 #> [10762,]  5 1071 138 #> [10763,]  5 1072 138 #> [10764,]  5 1073 138 #> [10765,]  5 1074 138 #> [10766,]  5 1075 138 #> [10767,]  5 1076 138 #> [10768,]  5 1077 138 #> [10769,]  5 1078 138 #> [10770,]  5 1079 138 #> [10771,]  5 1080 138 #> [10772,]  5 1081 138 #> [10773,]  5 1082 138 #> [10774,]  5 1083 138 #> [10775,]  5 1084 138 #> [10776,]  5 1085 138 #> [10777,]  5 1086 138 #> [10778,]  5 1087 138 #> [10779,]  5 1088 138 #> [10780,]  5 1089 138 #> [10781,]  5 1090 138 #> [10782,]  5 1091 138 #> [10783,]  5 1092 138 #> [10784,]  5 1093 138 #> [10785,]  5 1094 138 #> [10786,]  5 1095 138 #> [10787,]  5 1096 138 #> [10788,]  5 1097 138 #> [10789,]  5 1098 138 #> [10790,]  5 1099 138 #> [10791,]  5 1100 138 #> [10792,]  5 1101 138 #> [10793,]  5 1102 138 #> [10794,]  5 1103 138 #> [10795,]  5 1104 138 #> [10796,]  5 1105 138 #> [10797,]  5 1106 138 #> [10798,]  5 1107 138 #> [10799,]  5 1108 138 #> [10800,]  5 1109 138 #> [10801,]  5 1110 138 #> [10802,]  5 1111 138 #> [10803,]  5 1112 138 #> [10804,]  5 1113 138 #> [10805,]  5 1114 138 #> [10806,]  5 1115 138 #> [10807,]  5 1116 138 #> [10808,]  5 1117 138 #> [10809,]  5 1118 138 #> [10810,]  5 1119 138 #> [10811,]  5 1120 138 #> [10812,]  5 1121 138 #> [10813,]  5 1122 138 #> [10814,]  5 1123 138 #> [10815,]  5 1124 138 #> [10816,]  5 1057 137 #> [10817,]  5 1058 137 #> [10818,]  5 1059 137 #> [10819,]  5 1060 137 #> [10820,]  5 1061 137 #> [10821,]  5 1062 137 #> [10822,]  5 1063 137 #> [10823,]  5 1064 137 #> [10824,]  5 1065 137 #> [10825,]  5 1066 137 #> [10826,]  5 1067 137 #> [10827,]  5 1068 137 #> [10828,]  5 1069 137 #> [10829,]  5 1070 137 #> [10830,]  5 1071 137 #> [10831,]  5 1072 137 #> [10832,]  5 1073 137 #> [10833,]  5 1074 137 #> [10834,]  5 1075 137 #> [10835,]  5 1076 137 #> [10836,]  5 1077 137 #> [10837,]  5 1078 137 #> [10838,]  5 1079 137 #> [10839,]  5 1080 137 #> [10840,]  5 1081 137 #> [10841,]  5 1082 137 #> [10842,]  5 1083 137 #> [10843,]  5 1084 137 #> [10844,]  5 1085 137 #> [10845,]  5 1086 137 #> [10846,]  5 1087 137 #> [10847,]  5 1088 137 #> [10848,]  5 1089 137 #> [10849,]  5 1090 137 #> [10850,]  5 1091 137 #> [10851,]  5 1092 137 #> [10852,]  5 1093 137 #> [10853,]  5 1094 137 #> [10854,]  5 1095 137 #> [10855,]  5 1096 137 #> [10856,]  5 1097 137 #> [10857,]  5 1098 137 #> [10858,]  5 1099 137 #> [10859,]  5 1100 137 #> [10860,]  5 1101 137 #> [10861,]  5 1102 137 #> [10862,]  5 1103 137 #> [10863,]  5 1104 137 #> [10864,]  5 1105 137 #> [10865,]  5 1106 137 #> [10866,]  5 1107 137 #> [10867,]  5 1108 137 #> [10868,]  5 1109 137 #> [10869,]  5 1110 137 #> [10870,]  5 1111 137 #> [10871,]  5 1112 137 #> [10872,]  5 1113 137 #> [10873,]  5 1114 137 #> [10874,]  5 1115 137 #> [10875,]  5 1116 137 #> [10876,]  5 1117 137 #> [10877,]  5 1118 137 #> [10878,]  5 1119 137 #> [10879,]  5 1120 137 #> [10880,]  5 1121 137 #> [10881,]  5 1122 137 #> [10882,]  5 1123 137 #> [10883,]  5 1124 137 #> [10884,]  5 1057 136 #> [10885,]  5 1058 136 #> [10886,]  5 1059 136 #> [10887,]  5 1060 136 #> [10888,]  5 1061 136 #> [10889,]  5 1062 136 #> [10890,]  5 1063 136 #> [10891,]  5 1064 136 #> [10892,]  5 1065 136 #> [10893,]  5 1066 136 #> [10894,]  5 1067 136 #> [10895,]  5 1068 136 #> [10896,]  5 1069 136 #> [10897,]  5 1070 136 #> [10898,]  5 1071 136 #> [10899,]  5 1072 136 #> [10900,]  5 1073 136 #> [10901,]  5 1074 136 #> [10902,]  5 1075 136 #> [10903,]  5 1076 136 #> [10904,]  5 1077 136 #> [10905,]  5 1078 136 #> [10906,]  5 1079 136 #> [10907,]  5 1080 136 #> [10908,]  5 1081 136 #> [10909,]  5 1082 136 #> [10910,]  5 1083 136 #> [10911,]  5 1084 136 #> [10912,]  5 1085 136 #> [10913,]  5 1086 136 #> [10914,]  5 1087 136 #> [10915,]  5 1088 136 #> [10916,]  5 1089 136 #> [10917,]  5 1090 136 #> [10918,]  5 1091 136 #> [10919,]  5 1092 136 #> [10920,]  5 1093 136 #> [10921,]  5 1094 136 #> [10922,]  5 1095 136 #> [10923,]  5 1096 136 #> [10924,]  5 1097 136 #> [10925,]  5 1098 136 #> [10926,]  5 1099 136 #> [10927,]  5 1100 136 #> [10928,]  5 1101 136 #> [10929,]  5 1102 136 #> [10930,]  5 1103 136 #> [10931,]  5 1104 136 #> [10932,]  5 1105 136 #> [10933,]  5 1106 136 #> [10934,]  5 1107 136 #> [10935,]  5 1108 136 #> [10936,]  5 1109 136 #> [10937,]  5 1110 136 #> [10938,]  5 1111 136 #> [10939,]  5 1112 136 #> [10940,]  5 1113 136 #> [10941,]  5 1114 136 #> [10942,]  5 1115 136 #> [10943,]  5 1116 136 #> [10944,]  5 1117 136 #> [10945,]  5 1118 136 #> [10946,]  5 1119 136 #> [10947,]  5 1120 136 #> [10948,]  5 1121 136 #> [10949,]  5 1122 136 #> [10950,]  5 1123 136 #> [10951,]  5 1124 136 #> [10952,]  5 1057 135 #> [10953,]  5 1058 135 #> [10954,]  5 1059 135 #> [10955,]  5 1060 135 #> [10956,]  5 1061 135 #> [10957,]  5 1062 135 #> [10958,]  5 1063 135 #> [10959,]  5 1064 135 #> [10960,]  5 1065 135 #> [10961,]  5 1066 135 #> [10962,]  5 1067 135 #> [10963,]  5 1068 135 #> [10964,]  5 1069 135 #> [10965,]  5 1070 135 #> [10966,]  5 1071 135 #> [10967,]  5 1072 135 #> [10968,]  5 1073 135 #> [10969,]  5 1074 135 #> [10970,]  5 1075 135 #> [10971,]  5 1076 135 #> [10972,]  5 1077 135 #> [10973,]  5 1078 135 #> [10974,]  5 1079 135 #> [10975,]  5 1080 135 #> [10976,]  5 1081 135 #> [10977,]  5 1082 135 #> [10978,]  5 1083 135 #> [10979,]  5 1084 135 #> [10980,]  5 1085 135 #> [10981,]  5 1086 135 #> [10982,]  5 1087 135 #> [10983,]  5 1088 135 #> [10984,]  5 1089 135 #> [10985,]  5 1090 135 #> [10986,]  5 1091 135 #> [10987,]  5 1092 135 #> [10988,]  5 1093 135 #> [10989,]  5 1094 135 #> [10990,]  5 1095 135 #> [10991,]  5 1096 135 #> [10992,]  5 1097 135 #> [10993,]  5 1098 135 #> [10994,]  5 1099 135 #> [10995,]  5 1100 135 #> [10996,]  5 1101 135 #> [10997,]  5 1102 135 #> [10998,]  5 1103 135 #> [10999,]  5 1104 135 #> [11000,]  5 1105 135 #> [11001,]  5 1106 135 #> [11002,]  5 1107 135 #> [11003,]  5 1108 135 #> [11004,]  5 1109 135 #> [11005,]  5 1110 135 #> [11006,]  5 1111 135 #> [11007,]  5 1112 135 #> [11008,]  5 1113 135 #> [11009,]  5 1114 135 #> [11010,]  5 1115 135 #> [11011,]  5 1116 135 #> [11012,]  5 1117 135 #> [11013,]  5 1118 135 #> [11014,]  5 1119 135 #> [11015,]  5 1120 135 #> [11016,]  5 1121 135 #> [11017,]  5 1122 135 #> [11018,]  5 1123 135 #> [11019,]  5 1124 135 #> [11020,]  5 1057 134 #> [11021,]  5 1058 134 #> [11022,]  5 1059 134 #> [11023,]  5 1060 134 #> [11024,]  5 1061 134 #> [11025,]  5 1062 134 #> [11026,]  5 1063 134 #> [11027,]  5 1064 134 #> [11028,]  5 1065 134 #> [11029,]  5 1066 134 #> [11030,]  5 1067 134 #> [11031,]  5 1068 134 #> [11032,]  5 1069 134 #> [11033,]  5 1070 134 #> [11034,]  5 1071 134 #> [11035,]  5 1072 134 #> [11036,]  5 1073 134 #> [11037,]  5 1074 134 #> [11038,]  5 1075 134 #> [11039,]  5 1076 134 #> [11040,]  5 1077 134 #> [11041,]  5 1078 134 #> [11042,]  5 1079 134 #> [11043,]  5 1080 134 #> [11044,]  5 1081 134 #> [11045,]  5 1082 134 #> [11046,]  5 1083 134 #> [11047,]  5 1084 134 #> [11048,]  5 1085 134 #> [11049,]  5 1086 134 #> [11050,]  5 1087 134 #> [11051,]  5 1088 134 #> [11052,]  5 1089 134 #> [11053,]  5 1090 134 #> [11054,]  5 1091 134 #> [11055,]  5 1092 134 #> [11056,]  5 1093 134 #> [11057,]  5 1094 134 #> [11058,]  5 1095 134 #> [11059,]  5 1096 134 #> [11060,]  5 1097 134 #> [11061,]  5 1098 134 #> [11062,]  5 1099 134 #> [11063,]  5 1100 134 #> [11064,]  5 1101 134 #> [11065,]  5 1102 134 #> [11066,]  5 1103 134 #> [11067,]  5 1104 134 #> [11068,]  5 1105 134 #> [11069,]  5 1106 134 #> [11070,]  5 1107 134 #> [11071,]  5 1108 134 #> [11072,]  5 1109 134 #> [11073,]  5 1110 134 #> [11074,]  5 1111 134 #> [11075,]  5 1112 134 #> [11076,]  5 1113 134 #> [11077,]  5 1114 134 #> [11078,]  5 1115 134 #> [11079,]  5 1116 134 #> [11080,]  5 1117 134 #> [11081,]  5 1118 134 #> [11082,]  5 1119 134 #> [11083,]  5 1120 134 #> [11084,]  5 1121 134 #> [11085,]  5 1122 134 #> [11086,]  5 1123 134 #> [11087,]  5 1124 134 #> [11088,]  5 1057 133 #> [11089,]  5 1058 133 #> [11090,]  5 1059 133 #> [11091,]  5 1060 133 #> [11092,]  5 1061 133 #> [11093,]  5 1062 133 #> [11094,]  5 1063 133 #> [11095,]  5 1064 133 #> [11096,]  5 1065 133 #> [11097,]  5 1066 133 #> [11098,]  5 1067 133 #> [11099,]  5 1068 133 #> [11100,]  5 1069 133 #> [11101,]  5 1070 133 #> [11102,]  5 1071 133 #> [11103,]  5 1072 133 #> [11104,]  5 1073 133 #> [11105,]  5 1074 133 #> [11106,]  5 1075 133 #> [11107,]  5 1076 133 #> [11108,]  5 1077 133 #> [11109,]  5 1078 133 #> [11110,]  5 1079 133 #> [11111,]  5 1080 133 #> [11112,]  5 1081 133 #> [11113,]  5 1082 133 #> [11114,]  5 1083 133 #> [11115,]  5 1084 133 #> [11116,]  5 1085 133 #> [11117,]  5 1086 133 #> [11118,]  5 1087 133 #> [11119,]  5 1088 133 #> [11120,]  5 1089 133 #> [11121,]  5 1090 133 #> [11122,]  5 1091 133 #> [11123,]  5 1092 133 #> [11124,]  5 1093 133 #> [11125,]  5 1094 133 #> [11126,]  5 1095 133 #> [11127,]  5 1096 133 #> [11128,]  5 1097 133 #> [11129,]  5 1098 133 #> [11130,]  5 1099 133 #> [11131,]  5 1100 133 #> [11132,]  5 1101 133 #> [11133,]  5 1102 133 #> [11134,]  5 1103 133 #> [11135,]  5 1104 133 #> [11136,]  5 1105 133 #> [11137,]  5 1106 133 #> [11138,]  5 1107 133 #> [11139,]  5 1108 133 #> [11140,]  5 1109 133 #> [11141,]  5 1110 133 #> [11142,]  5 1111 133 #> [11143,]  5 1112 133 #> [11144,]  5 1113 133 #> [11145,]  5 1114 133 #> [11146,]  5 1115 133 #> [11147,]  5 1116 133 #> [11148,]  5 1117 133 #> [11149,]  5 1118 133 #> [11150,]  5 1119 133 #> [11151,]  5 1120 133 #> [11152,]  5 1121 133 #> [11153,]  5 1122 133 #> [11154,]  5 1123 133 #> [11155,]  5 1124 133 #> [11156,]  5 1057 132 #> [11157,]  5 1058 132 #> [11158,]  5 1059 132 #> [11159,]  5 1060 132 #> [11160,]  5 1061 132 #> [11161,]  5 1062 132 #> [11162,]  5 1063 132 #> [11163,]  5 1064 132 #> [11164,]  5 1065 132 #> [11165,]  5 1066 132 #> [11166,]  5 1067 132 #> [11167,]  5 1068 132 #> [11168,]  5 1069 132 #> [11169,]  5 1070 132 #> [11170,]  5 1071 132 #> [11171,]  5 1072 132 #> [11172,]  5 1073 132 #> [11173,]  5 1074 132 #> [11174,]  5 1075 132 #> [11175,]  5 1076 132 #> [11176,]  5 1077 132 #> [11177,]  5 1078 132 #> [11178,]  5 1079 132 #> [11179,]  5 1080 132 #> [11180,]  5 1081 132 #> [11181,]  5 1082 132 #> [11182,]  5 1083 132 #> [11183,]  5 1084 132 #> [11184,]  5 1085 132 #> [11185,]  5 1086 132 #> [11186,]  5 1087 132 #> [11187,]  5 1088 132 #> [11188,]  5 1089 132 #> [11189,]  5 1090 132 #> [11190,]  5 1091 132 #> [11191,]  5 1092 132 #> [11192,]  5 1093 132 #> [11193,]  5 1094 132 #> [11194,]  5 1095 132 #> [11195,]  5 1096 132 #> [11196,]  5 1097 132 #> [11197,]  5 1098 132 #> [11198,]  5 1099 132 #> [11199,]  5 1100 132 #> [11200,]  5 1101 132 #> [11201,]  5 1102 132 #> [11202,]  5 1103 132 #> [11203,]  5 1104 132 #> [11204,]  5 1105 132 #> [11205,]  5 1106 132 #> [11206,]  5 1107 132 #> [11207,]  5 1108 132 #> [11208,]  5 1109 132 #> [11209,]  5 1110 132 #> [11210,]  5 1111 132 #> [11211,]  5 1112 132 #> [11212,]  5 1113 132 #> [11213,]  5 1114 132 #> [11214,]  5 1115 132 #> [11215,]  5 1116 132 #> [11216,]  5 1117 132 #> [11217,]  5 1118 132 #> [11218,]  5 1119 132 #> [11219,]  5 1120 132 #> [11220,]  5 1121 132 #> [11221,]  5 1122 132 #> [11222,]  5 1123 132 #> [11223,]  5 1057 131 #> [11224,]  5 1058 131 #> [11225,]  5 1059 131 #> [11226,]  5 1060 131 #> [11227,]  5 1061 131 #> [11228,]  5 1062 131 #> [11229,]  5 1063 131 #> [11230,]  5 1064 131 #> [11231,]  5 1065 131 #> [11232,]  5 1066 131 #> [11233,]  5 1067 131 #> [11234,]  5 1068 131 #> [11235,]  5 1069 131 #> [11236,]  5 1070 131 #> [11237,]  5 1071 131 #> [11238,]  5 1072 131 #> [11239,]  5 1073 131 #> [11240,]  5 1074 131 #> [11241,]  5 1075 131 #> [11242,]  5 1076 131 #> [11243,]  5 1077 131 #> [11244,]  5 1078 131 #> [11245,]  5 1079 131 #> [11246,]  5 1080 131 #> [11247,]  5 1081 131 #> [11248,]  5 1082 131 #> [11249,]  5 1083 131 #> [11250,]  5 1084 131 #> [11251,]  5 1085 131 #> [11252,]  5 1086 131 #> [11253,]  5 1087 131 #> [11254,]  5 1088 131 #> [11255,]  5 1089 131 #> [11256,]  5 1090 131 #> [11257,]  5 1091 131 #> [11258,]  5 1092 131 #> [11259,]  5 1093 131 #> [11260,]  5 1094 131 #> [11261,]  5 1095 131 #> [11262,]  5 1096 131 #> [11263,]  5 1097 131 #> [11264,]  5 1098 131 #> [11265,]  5 1099 131 #> [11266,]  5 1100 131 #> [11267,]  5 1101 131 #> [11268,]  5 1102 131 #> [11269,]  5 1103 131 #> [11270,]  5 1104 131 #> [11271,]  5 1105 131 #> [11272,]  5 1106 131 #> [11273,]  5 1107 131 #> [11274,]  5 1108 131 #> [11275,]  5 1109 131 #> [11276,]  5 1110 131 #> [11277,]  5 1111 131 #> [11278,]  5 1112 131 #> [11279,]  5 1113 131 #> [11280,]  5 1114 131 #> [11281,]  5 1115 131 #> [11282,]  5 1116 131 #> [11283,]  5 1117 131 #> [11284,]  5 1118 131 #> [11285,]  5 1119 131 #> [11286,]  5 1120 131 #> [11287,]  5 1121 131 #> [11288,]  5 1122 131 #> [11289,]  5 1123 131 #> [11290,]  5 1057 130 #> [11291,]  5 1058 130 #> [11292,]  5 1059 130 #> [11293,]  5 1060 130 #> [11294,]  5 1061 130 #> [11295,]  5 1062 130 #> [11296,]  5 1063 130 #> [11297,]  5 1064 130 #> [11298,]  5 1065 130 #> [11299,]  5 1066 130 #> [11300,]  5 1067 130 #> [11301,]  5 1068 130 #> [11302,]  5 1069 130 #> [11303,]  5 1070 130 #> [11304,]  5 1071 130 #> [11305,]  5 1072 130 #> [11306,]  5 1073 130 #> [11307,]  5 1074 130 #> [11308,]  5 1075 130 #> [11309,]  5 1076 130 #> [11310,]  5 1077 130 #> [11311,]  5 1078 130 #> [11312,]  5 1079 130 #> [11313,]  5 1080 130 #> [11314,]  5 1081 130 #> [11315,]  5 1082 130 #> [11316,]  5 1083 130 #> [11317,]  5 1084 130 #> [11318,]  5 1085 130 #> [11319,]  5 1086 130 #> [11320,]  5 1087 130 #> [11321,]  5 1088 130 #> [11322,]  5 1089 130 #> [11323,]  5 1090 130 #> [11324,]  5 1091 130 #> [11325,]  5 1092 130 #> [11326,]  5 1093 130 #> [11327,]  5 1094 130 #> [11328,]  5 1095 130 #> [11329,]  5 1096 130 #> [11330,]  5 1097 130 #> [11331,]  5 1098 130 #> [11332,]  5 1099 130 #> [11333,]  5 1100 130 #> [11334,]  5 1101 130 #> [11335,]  5 1102 130 #> [11336,]  5 1103 130 #> [11337,]  5 1104 130 #> [11338,]  5 1105 130 #> [11339,]  5 1106 130 #> [11340,]  5 1107 130 #> [11341,]  5 1108 130 #> [11342,]  5 1109 130 #> [11343,]  5 1110 130 #> [11344,]  5 1111 130 #> [11345,]  5 1112 130 #> [11346,]  5 1113 130 #> [11347,]  5 1114 130 #> [11348,]  5 1115 130 #> [11349,]  5 1116 130 #> [11350,]  5 1117 130 #> [11351,]  5 1118 130 #> [11352,]  5 1119 130 #> [11353,]  5 1120 130 #> [11354,]  5 1121 130 #> [11355,]  5 1122 130 #> [11356,]  5 1123 130 #> [11357,]  5 1057 129 #> [11358,]  5 1058 129 #> [11359,]  5 1059 129 #> [11360,]  5 1060 129 #> [11361,]  5 1061 129 #> [11362,]  5 1062 129 #> [11363,]  5 1063 129 #> [11364,]  5 1064 129 #> [11365,]  5 1065 129 #> [11366,]  5 1066 129 #> [11367,]  5 1067 129 #> [11368,]  5 1068 129 #> [11369,]  5 1069 129 #> [11370,]  5 1070 129 #> [11371,]  5 1071 129 #> [11372,]  5 1072 129 #> [11373,]  5 1073 129 #> [11374,]  5 1074 129 #> [11375,]  5 1075 129 #> [11376,]  5 1076 129 #> [11377,]  5 1077 129 #> [11378,]  5 1078 129 #> [11379,]  5 1079 129 #> [11380,]  5 1080 129 #> [11381,]  5 1081 129 #> [11382,]  5 1082 129 #> [11383,]  5 1083 129 #> [11384,]  5 1084 129 #> [11385,]  5 1085 129 #> [11386,]  5 1086 129 #> [11387,]  5 1087 129 #> [11388,]  5 1088 129 #> [11389,]  5 1089 129 #> [11390,]  5 1090 129 #> [11391,]  5 1091 129 #> [11392,]  5 1092 129 #> [11393,]  5 1093 129 #> [11394,]  5 1094 129 #> [11395,]  5 1095 129 #> [11396,]  5 1096 129 #> [11397,]  5 1097 129 #> [11398,]  5 1098 129 #> [11399,]  5 1099 129 #> [11400,]  5 1100 129 #> [11401,]  5 1101 129 #> [11402,]  5 1102 129 #> [11403,]  5 1103 129 #> [11404,]  5 1104 129 #> [11405,]  5 1105 129 #> [11406,]  5 1106 129 #> [11407,]  5 1107 129 #> [11408,]  5 1108 129 #> [11409,]  5 1109 129 #> [11410,]  5 1110 129 #> [11411,]  5 1111 129 #> [11412,]  5 1112 129 #> [11413,]  5 1113 129 #> [11414,]  5 1114 129 #> [11415,]  5 1115 129 #> [11416,]  5 1116 129 #> [11417,]  5 1117 129 #> [11418,]  5 1118 129 #> [11419,]  5 1119 129 #> [11420,]  5 1120 129 #> [11421,]  5 1121 129 #> [11422,]  5 1122 129 #> [11423,]  5 1123 129 #> [11424,]  5 1057 128 #> [11425,]  5 1058 128 #> [11426,]  5 1059 128 #> [11427,]  5 1060 128 #> [11428,]  5 1061 128 #> [11429,]  5 1062 128 #> [11430,]  5 1063 128 #> [11431,]  5 1064 128 #> [11432,]  5 1065 128 #> [11433,]  5 1066 128 #> [11434,]  5 1067 128 #> [11435,]  5 1068 128 #> [11436,]  5 1069 128 #> [11437,]  5 1070 128 #> [11438,]  5 1071 128 #> [11439,]  5 1072 128 #> [11440,]  5 1073 128 #> [11441,]  5 1074 128 #> [11442,]  5 1075 128 #> [11443,]  5 1076 128 #> [11444,]  5 1077 128 #> [11445,]  5 1078 128 #> [11446,]  5 1079 128 #> [11447,]  5 1080 128 #> [11448,]  5 1081 128 #> [11449,]  5 1082 128 #> [11450,]  5 1083 128 #> [11451,]  5 1084 128 #> [11452,]  5 1085 128 #> [11453,]  5 1086 128 #> [11454,]  5 1087 128 #> [11455,]  5 1088 128 #> [11456,]  5 1089 128 #> [11457,]  5 1090 128 #> [11458,]  5 1091 128 #> [11459,]  5 1092 128 #> [11460,]  5 1093 128 #> [11461,]  5 1094 128 #> [11462,]  5 1095 128 #> [11463,]  5 1096 128 #> [11464,]  5 1097 128 #> [11465,]  5 1098 128 #> [11466,]  5 1099 128 #> [11467,]  5 1100 128 #> [11468,]  5 1101 128 #> [11469,]  5 1102 128 #> [11470,]  5 1103 128 #> [11471,]  5 1104 128 #> [11472,]  5 1105 128 #> [11473,]  5 1106 128 #> [11474,]  5 1107 128 #> [11475,]  5 1108 128 #> [11476,]  5 1109 128 #> [11477,]  5 1110 128 #> [11478,]  5 1111 128 #> [11479,]  5 1112 128 #> [11480,]  5 1113 128 #> [11481,]  5 1114 128 #> [11482,]  5 1115 128 #> [11483,]  5 1116 128 #> [11484,]  5 1117 128 #> [11485,]  5 1118 128 #> [11486,]  5 1119 128 #> [11487,]  5 1120 128 #> [11488,]  5 1121 128 #> [11489,]  5 1122 128 #> [11490,]  5 1123 128 #> [11491,]  5 1056 127 #> [11492,]  5 1057 127 #> [11493,]  5 1058 127 #> [11494,]  5 1059 127 #> [11495,]  5 1060 127 #> [11496,]  5 1061 127 #> [11497,]  5 1062 127 #> [11498,]  5 1063 127 #> [11499,]  5 1064 127 #> [11500,]  5 1065 127 #> [11501,]  5 1066 127 #> [11502,]  5 1067 127 #> [11503,]  5 1068 127 #> [11504,]  5 1069 127 #> [11505,]  5 1070 127 #> [11506,]  5 1071 127 #> [11507,]  5 1072 127 #> [11508,]  5 1073 127 #> [11509,]  5 1074 127 #> [11510,]  5 1075 127 #> [11511,]  5 1076 127 #> [11512,]  5 1077 127 #> [11513,]  5 1078 127 #> [11514,]  5 1079 127 #> [11515,]  5 1080 127 #> [11516,]  5 1081 127 #> [11517,]  5 1082 127 #> [11518,]  5 1083 127 #> [11519,]  5 1084 127 #> [11520,]  5 1085 127 #> [11521,]  5 1086 127 #> [11522,]  5 1087 127 #> [11523,]  5 1088 127 #> [11524,]  5 1089 127 #> [11525,]  5 1090 127 #> [11526,]  5 1091 127 #> [11527,]  5 1092 127 #> [11528,]  5 1093 127 #> [11529,]  5 1094 127 #> [11530,]  5 1095 127 #> [11531,]  5 1096 127 #> [11532,]  5 1097 127 #> [11533,]  5 1098 127 #> [11534,]  5 1099 127 #> [11535,]  5 1100 127 #> [11536,]  5 1101 127 #> [11537,]  5 1102 127 #> [11538,]  5 1103 127 #> [11539,]  5 1104 127 #> [11540,]  5 1105 127 #> [11541,]  5 1106 127 #> [11542,]  5 1107 127 #> [11543,]  5 1108 127 #> [11544,]  5 1109 127 #> [11545,]  5 1110 127 #> [11546,]  5 1111 127 #> [11547,]  5 1112 127 #> [11548,]  5 1113 127 #> [11549,]  5 1114 127 #> [11550,]  5 1115 127 #> [11551,]  5 1116 127 #> [11552,]  5 1117 127 #> [11553,]  5 1118 127 #> [11554,]  5 1119 127 #> [11555,]  5 1120 127 #> [11556,]  5 1121 127 #> [11557,]  5 1122 127 #> [11558,]  5 1056 126 #> [11559,]  5 1057 126 #> [11560,]  5 1058 126 #> [11561,]  5 1059 126 #> [11562,]  5 1060 126 #> [11563,]  5 1061 126 #> [11564,]  5 1062 126 #> [11565,]  5 1063 126 #> [11566,]  5 1064 126 #> [11567,]  5 1065 126 #> [11568,]  5 1066 126 #> [11569,]  5 1067 126 #> [11570,]  5 1068 126 #> [11571,]  5 1069 126 #> [11572,]  5 1070 126 #> [11573,]  5 1071 126 #> [11574,]  5 1072 126 #> [11575,]  5 1073 126 #> [11576,]  5 1074 126 #> [11577,]  5 1075 126 #> [11578,]  5 1076 126 #> [11579,]  5 1077 126 #> [11580,]  5 1078 126 #> [11581,]  5 1079 126 #> [11582,]  5 1080 126 #> [11583,]  5 1081 126 #> [11584,]  5 1082 126 #> [11585,]  5 1083 126 #> [11586,]  5 1084 126 #> [11587,]  5 1085 126 #> [11588,]  5 1086 126 #> [11589,]  5 1087 126 #> [11590,]  5 1088 126 #> [11591,]  5 1089 126 #> [11592,]  5 1090 126 #> [11593,]  5 1091 126 #> [11594,]  5 1092 126 #> [11595,]  5 1093 126 #> [11596,]  5 1094 126 #> [11597,]  5 1095 126 #> [11598,]  5 1096 126 #> [11599,]  5 1097 126 #> [11600,]  5 1098 126 #> [11601,]  5 1099 126 #> [11602,]  5 1100 126 #> [11603,]  5 1101 126 #> [11604,]  5 1102 126 #> [11605,]  5 1103 126 #> [11606,]  5 1104 126 #> [11607,]  5 1105 126 #> [11608,]  5 1106 126 #> [11609,]  5 1107 126 #> [11610,]  5 1108 126 #> [11611,]  5 1109 126 #> [11612,]  5 1110 126 #> [11613,]  5 1111 126 #> [11614,]  5 1112 126 #> [11615,]  5 1113 126 #> [11616,]  5 1114 126 #> [11617,]  5 1115 126 #> [11618,]  5 1116 126 #> [11619,]  5 1117 126 #> [11620,]  5 1118 126 #> [11621,]  5 1119 126 #> [11622,]  5 1120 126 #> [11623,]  5 1121 126 #> [11624,]  5 1122 126 #> [11625,]  5 1056 125 #> [11626,]  5 1057 125 #> [11627,]  5 1058 125 #> [11628,]  5 1059 125 #> [11629,]  5 1060 125 #> [11630,]  5 1061 125 #> [11631,]  5 1062 125 #> [11632,]  5 1063 125 #> [11633,]  5 1064 125 #> [11634,]  5 1065 125 #> [11635,]  5 1066 125 #> [11636,]  5 1067 125 #> [11637,]  5 1068 125 #> [11638,]  5 1069 125 #> [11639,]  5 1070 125 #> [11640,]  5 1071 125 #> [11641,]  5 1072 125 #> [11642,]  5 1073 125 #> [11643,]  5 1074 125 #> [11644,]  5 1075 125 #> [11645,]  5 1076 125 #> [11646,]  5 1077 125 #> [11647,]  5 1078 125 #> [11648,]  5 1079 125 #> [11649,]  5 1080 125 #> [11650,]  5 1081 125 #> [11651,]  5 1082 125 #> [11652,]  5 1083 125 #> [11653,]  5 1084 125 #> [11654,]  5 1085 125 #> [11655,]  5 1086 125 #> [11656,]  5 1087 125 #> [11657,]  5 1088 125 #> [11658,]  5 1089 125 #> [11659,]  5 1090 125 #> [11660,]  5 1091 125 #> [11661,]  5 1092 125 #> [11662,]  5 1093 125 #> [11663,]  5 1094 125 #> [11664,]  5 1095 125 #> [11665,]  5 1096 125 #> [11666,]  5 1097 125 #> [11667,]  5 1098 125 #> [11668,]  5 1099 125 #> [11669,]  5 1100 125 #> [11670,]  5 1101 125 #> [11671,]  5 1102 125 #> [11672,]  5 1103 125 #> [11673,]  5 1104 125 #> [11674,]  5 1105 125 #> [11675,]  5 1106 125 #> [11676,]  5 1107 125 #> [11677,]  5 1108 125 #> [11678,]  5 1109 125 #> [11679,]  5 1110 125 #> [11680,]  5 1111 125 #> [11681,]  5 1112 125 #> [11682,]  5 1113 125 #> [11683,]  5 1114 125 #> [11684,]  5 1115 125 #> [11685,]  5 1116 125 #> [11686,]  5 1117 125 #> [11687,]  5 1118 125 #> [11688,]  5 1119 125 #> [11689,]  5 1120 125 #> [11690,]  5 1121 125 #> [11691,]  5 1122 125 #> [11692,]  5 1056 124 #> [11693,]  5 1057 124 #> [11694,]  5 1058 124 #> [11695,]  5 1059 124 #> [11696,]  5 1060 124 #> [11697,]  5 1061 124 #> [11698,]  5 1062 124 #> [11699,]  5 1063 124 #> [11700,]  5 1064 124 #> [11701,]  5 1065 124 #> [11702,]  5 1066 124 #> [11703,]  5 1067 124 #> [11704,]  5 1068 124 #> [11705,]  5 1069 124 #> [11706,]  5 1070 124 #> [11707,]  5 1071 124 #> [11708,]  5 1072 124 #> [11709,]  5 1073 124 #> [11710,]  5 1074 124 #> [11711,]  5 1075 124 #> [11712,]  5 1076 124 #> [11713,]  5 1077 124 #> [11714,]  5 1078 124 #> [11715,]  5 1079 124 #> [11716,]  5 1080 124 #> [11717,]  5 1081 124 #> [11718,]  5 1082 124 #> [11719,]  5 1083 124 #> [11720,]  5 1084 124 #> [11721,]  5 1085 124 #> [11722,]  5 1086 124 #> [11723,]  5 1087 124 #> [11724,]  5 1088 124 #> [11725,]  5 1089 124 #> [11726,]  5 1090 124 #> [11727,]  5 1091 124 #> [11728,]  5 1092 124 #> [11729,]  5 1093 124 #> [11730,]  5 1094 124 #> [11731,]  5 1095 124 #> [11732,]  5 1096 124 #> [11733,]  5 1097 124 #> [11734,]  5 1098 124 #> [11735,]  5 1099 124 #> [11736,]  5 1100 124 #> [11737,]  5 1101 124 #> [11738,]  5 1102 124 #> [11739,]  5 1103 124 #> [11740,]  5 1104 124 #> [11741,]  5 1105 124 #> [11742,]  5 1106 124 #> [11743,]  5 1107 124 #> [11744,]  5 1108 124 #> [11745,]  5 1109 124 #> [11746,]  5 1110 124 #> [11747,]  5 1111 124 #> [11748,]  5 1112 124 #> [11749,]  5 1113 124 #> [11750,]  5 1114 124 #> [11751,]  5 1115 124 #> [11752,]  5 1116 124 #> [11753,]  5 1117 124 #> [11754,]  5 1118 124 #> [11755,]  5 1119 124 #> [11756,]  5 1120 124 #> [11757,]  5 1121 124 #> [11758,]  5 1057 123 #> [11759,]  5 1058 123 #> [11760,]  5 1059 123 #> [11761,]  5 1060 123 #> [11762,]  5 1061 123 #> [11763,]  5 1062 123 #> [11764,]  5 1063 123 #> [11765,]  5 1064 123 #> [11766,]  5 1065 123 #> [11767,]  5 1066 123 #> [11768,]  5 1067 123 #> [11769,]  5 1068 123 #> [11770,]  5 1069 123 #> [11771,]  5 1070 123 #> [11772,]  5 1071 123 #> [11773,]  5 1072 123 #> [11774,]  5 1073 123 #> [11775,]  5 1074 123 #> [11776,]  5 1075 123 #> [11777,]  5 1076 123 #> [11778,]  5 1077 123 #> [11779,]  5 1078 123 #> [11780,]  5 1079 123 #> [11781,]  5 1080 123 #> [11782,]  5 1081 123 #> [11783,]  5 1082 123 #> [11784,]  5 1083 123 #> [11785,]  5 1084 123 #> [11786,]  5 1085 123 #> [11787,]  5 1086 123 #> [11788,]  5 1087 123 #> [11789,]  5 1088 123 #> [11790,]  5 1089 123 #> [11791,]  5 1090 123 #> [11792,]  5 1091 123 #> [11793,]  5 1092 123 #> [11794,]  5 1093 123 #> [11795,]  5 1094 123 #> [11796,]  5 1095 123 #> [11797,]  5 1096 123 #> [11798,]  5 1097 123 #> [11799,]  5 1098 123 #> [11800,]  5 1099 123 #> [11801,]  5 1100 123 #> [11802,]  5 1101 123 #> [11803,]  5 1102 123 #> [11804,]  5 1103 123 #> [11805,]  5 1104 123 #> [11806,]  5 1105 123 #> [11807,]  5 1106 123 #> [11808,]  5 1107 123 #> [11809,]  5 1108 123 #> [11810,]  5 1109 123 #> [11811,]  5 1110 123 #> [11812,]  5 1111 123 #> [11813,]  5 1112 123 #> [11814,]  5 1113 123 #> [11815,]  5 1114 123 #> [11816,]  5 1115 123 #> [11817,]  5 1116 123 #> [11818,]  5 1117 123 #> [11819,]  5 1118 123 #> [11820,]  5 1119 123 #> [11821,]  5 1120 123 #> [11822,]  5 1121 123 #> [11823,]  5 1057 122 #> [11824,]  5 1058 122 #> [11825,]  5 1059 122 #> [11826,]  5 1060 122 #> [11827,]  5 1061 122 #> [11828,]  5 1062 122 #> [11829,]  5 1063 122 #> [11830,]  5 1064 122 #> [11831,]  5 1065 122 #> [11832,]  5 1066 122 #> [11833,]  5 1067 122 #> [11834,]  5 1068 122 #> [11835,]  5 1069 122 #> [11836,]  5 1070 122 #> [11837,]  5 1071 122 #> [11838,]  5 1072 122 #> [11839,]  5 1073 122 #> [11840,]  5 1074 122 #> [11841,]  5 1075 122 #> [11842,]  5 1076 122 #> [11843,]  5 1077 122 #> [11844,]  5 1078 122 #> [11845,]  5 1079 122 #> [11846,]  5 1080 122 #> [11847,]  5 1081 122 #> [11848,]  5 1082 122 #> [11849,]  5 1083 122 #> [11850,]  5 1084 122 #> [11851,]  5 1085 122 #> [11852,]  5 1086 122 #> [11853,]  5 1087 122 #> [11854,]  5 1088 122 #> [11855,]  5 1089 122 #> [11856,]  5 1090 122 #> [11857,]  5 1091 122 #> [11858,]  5 1092 122 #> [11859,]  5 1093 122 #> [11860,]  5 1094 122 #> [11861,]  5 1095 122 #> [11862,]  5 1096 122 #> [11863,]  5 1097 122 #> [11864,]  5 1098 122 #> [11865,]  5 1099 122 #> [11866,]  5 1100 122 #> [11867,]  5 1101 122 #> [11868,]  5 1102 122 #> [11869,]  5 1103 122 #> [11870,]  5 1104 122 #> [11871,]  5 1105 122 #> [11872,]  5 1106 122 #> [11873,]  5 1107 122 #> [11874,]  5 1108 122 #> [11875,]  5 1109 122 #> [11876,]  5 1110 122 #> [11877,]  5 1111 122 #> [11878,]  5 1112 122 #> [11879,]  5 1113 122 #> [11880,]  5 1114 122 #> [11881,]  5 1115 122 #> [11882,]  5 1116 122 #> [11883,]  5 1117 122 #> [11884,]  5 1118 122 #> [11885,]  5 1119 122 #> [11886,]  5 1120 122 #> [11887,]  5 1121 122 #> [11888,]  5 1057 121 #> [11889,]  5 1058 121 #> [11890,]  5 1059 121 #> [11891,]  5 1060 121 #> [11892,]  5 1061 121 #> [11893,]  5 1062 121 #> [11894,]  5 1063 121 #> [11895,]  5 1064 121 #> [11896,]  5 1065 121 #> [11897,]  5 1066 121 #> [11898,]  5 1067 121 #> [11899,]  5 1068 121 #> [11900,]  5 1069 121 #> [11901,]  5 1070 121 #> [11902,]  5 1071 121 #> [11903,]  5 1072 121 #> [11904,]  5 1073 121 #> [11905,]  5 1074 121 #> [11906,]  5 1075 121 #> [11907,]  5 1076 121 #> [11908,]  5 1077 121 #> [11909,]  5 1078 121 #> [11910,]  5 1079 121 #> [11911,]  5 1080 121 #> [11912,]  5 1081 121 #> [11913,]  5 1082 121 #> [11914,]  5 1083 121 #> [11915,]  5 1084 121 #> [11916,]  5 1085 121 #> [11917,]  5 1086 121 #> [11918,]  5 1087 121 #> [11919,]  5 1088 121 #> [11920,]  5 1089 121 #> [11921,]  5 1090 121 #> [11922,]  5 1091 121 #> [11923,]  5 1092 121 #> [11924,]  5 1093 121 #> [11925,]  5 1094 121 #> [11926,]  5 1095 121 #> [11927,]  5 1096 121 #> [11928,]  5 1097 121 #> [11929,]  5 1098 121 #> [11930,]  5 1099 121 #> [11931,]  5 1100 121 #> [11932,]  5 1101 121 #> [11933,]  5 1102 121 #> [11934,]  5 1103 121 #> [11935,]  5 1104 121 #> [11936,]  5 1105 121 #> [11937,]  5 1106 121 #> [11938,]  5 1107 121 #> [11939,]  5 1108 121 #> [11940,]  5 1109 121 #> [11941,]  5 1110 121 #> [11942,]  5 1111 121 #> [11943,]  5 1112 121 #> [11944,]  5 1113 121 #> [11945,]  5 1114 121 #> [11946,]  5 1115 121 #> [11947,]  5 1116 121 #> [11948,]  5 1117 121 #> [11949,]  5 1118 121 #> [11950,]  5 1119 121 #> [11951,]  5 1120 121 #> [11952,]  5 1057 120 #> [11953,]  5 1058 120 #> [11954,]  5 1059 120 #> [11955,]  5 1060 120 #> [11956,]  5 1061 120 #> [11957,]  5 1062 120 #> [11958,]  5 1063 120 #> [11959,]  5 1064 120 #> [11960,]  5 1065 120 #> [11961,]  5 1066 120 #> [11962,]  5 1067 120 #> [11963,]  5 1068 120 #> [11964,]  5 1069 120 #> [11965,]  5 1070 120 #> [11966,]  5 1071 120 #> [11967,]  5 1072 120 #> [11968,]  5 1073 120 #> [11969,]  5 1074 120 #> [11970,]  5 1075 120 #> [11971,]  5 1076 120 #> [11972,]  5 1077 120 #> [11973,]  5 1078 120 #> [11974,]  5 1079 120 #> [11975,]  5 1080 120 #> [11976,]  5 1081 120 #> [11977,]  5 1082 120 #> [11978,]  5 1083 120 #> [11979,]  5 1084 120 #> [11980,]  5 1085 120 #> [11981,]  5 1086 120 #> [11982,]  5 1087 120 #> [11983,]  5 1088 120 #> [11984,]  5 1089 120 #> [11985,]  5 1090 120 #> [11986,]  5 1091 120 #> [11987,]  5 1092 120 #> [11988,]  5 1093 120 #> [11989,]  5 1094 120 #> [11990,]  5 1095 120 #> [11991,]  5 1096 120 #> [11992,]  5 1097 120 #> [11993,]  5 1098 120 #> [11994,]  5 1099 120 #> [11995,]  5 1100 120 #> [11996,]  5 1101 120 #> [11997,]  5 1102 120 #> [11998,]  5 1103 120 #> [11999,]  5 1104 120 #> [12000,]  5 1105 120 #> [12001,]  5 1106 120 #> [12002,]  5 1107 120 #> [12003,]  5 1108 120 #> [12004,]  5 1109 120 #> [12005,]  5 1110 120 #> [12006,]  5 1111 120 #> [12007,]  5 1112 120 #> [12008,]  5 1113 120 #> [12009,]  5 1114 120 #> [12010,]  5 1115 120 #> [12011,]  5 1116 120 #> [12012,]  5 1117 120 #> [12013,]  5 1118 120 #> [12014,]  5 1119 120 #> [12015,]  5 1120 120 #> [12016,]  5 1057 119 #> [12017,]  5 1058 119 #> [12018,]  5 1059 119 #> [12019,]  5 1060 119 #> [12020,]  5 1061 119 #> [12021,]  5 1062 119 #> [12022,]  5 1063 119 #> [12023,]  5 1064 119 #> [12024,]  5 1065 119 #> [12025,]  5 1066 119 #> [12026,]  5 1067 119 #> [12027,]  5 1068 119 #> [12028,]  5 1069 119 #> [12029,]  5 1070 119 #> [12030,]  5 1071 119 #> [12031,]  5 1072 119 #> [12032,]  5 1073 119 #> [12033,]  5 1074 119 #> [12034,]  5 1075 119 #> [12035,]  5 1076 119 #> [12036,]  5 1077 119 #> [12037,]  5 1078 119 #> [12038,]  5 1079 119 #> [12039,]  5 1080 119 #> [12040,]  5 1081 119 #> [12041,]  5 1082 119 #> [12042,]  5 1083 119 #> [12043,]  5 1084 119 #> [12044,]  5 1085 119 #> [12045,]  5 1086 119 #> [12046,]  5 1087 119 #> [12047,]  5 1088 119 #> [12048,]  5 1089 119 #> [12049,]  5 1090 119 #> [12050,]  5 1091 119 #> [12051,]  5 1092 119 #> [12052,]  5 1093 119 #> [12053,]  5 1094 119 #> [12054,]  5 1095 119 #> [12055,]  5 1096 119 #> [12056,]  5 1097 119 #> [12057,]  5 1098 119 #> [12058,]  5 1099 119 #> [12059,]  5 1100 119 #> [12060,]  5 1101 119 #> [12061,]  5 1102 119 #> [12062,]  5 1103 119 #> [12063,]  5 1104 119 #> [12064,]  5 1105 119 #> [12065,]  5 1106 119 #> [12066,]  5 1107 119 #> [12067,]  5 1108 119 #> [12068,]  5 1109 119 #> [12069,]  5 1110 119 #> [12070,]  5 1111 119 #> [12071,]  5 1112 119 #> [12072,]  5 1113 119 #> [12073,]  5 1114 119 #> [12074,]  5 1115 119 #> [12075,]  5 1116 119 #> [12076,]  5 1117 119 #> [12077,]  5 1118 119 #> [12078,]  5 1119 119 #> [12079,]  5 1120 119 #> [12080,]  5 1057 118 #> [12081,]  5 1058 118 #> [12082,]  5 1059 118 #> [12083,]  5 1060 118 #> [12084,]  5 1061 118 #> [12085,]  5 1062 118 #> [12086,]  5 1063 118 #> [12087,]  5 1064 118 #> [12088,]  5 1065 118 #> [12089,]  5 1066 118 #> [12090,]  5 1067 118 #> [12091,]  5 1068 118 #> [12092,]  5 1069 118 #> [12093,]  5 1070 118 #> [12094,]  5 1071 118 #> [12095,]  5 1072 118 #> [12096,]  5 1073 118 #> [12097,]  5 1074 118 #> [12098,]  5 1075 118 #> [12099,]  5 1076 118 #> [12100,]  5 1077 118 #> [12101,]  5 1078 118 #> [12102,]  5 1079 118 #> [12103,]  5 1080 118 #> [12104,]  5 1081 118 #> [12105,]  5 1082 118 #> [12106,]  5 1083 118 #> [12107,]  5 1084 118 #> [12108,]  5 1085 118 #> [12109,]  5 1086 118 #> [12110,]  5 1087 118 #> [12111,]  5 1088 118 #> [12112,]  5 1089 118 #> [12113,]  5 1090 118 #> [12114,]  5 1091 118 #> [12115,]  5 1092 118 #> [12116,]  5 1093 118 #> [12117,]  5 1094 118 #> [12118,]  5 1095 118 #> [12119,]  5 1096 118 #> [12120,]  5 1097 118 #> [12121,]  5 1098 118 #> [12122,]  5 1099 118 #> [12123,]  5 1100 118 #> [12124,]  5 1101 118 #> [12125,]  5 1102 118 #> [12126,]  5 1103 118 #> [12127,]  5 1104 118 #> [12128,]  5 1105 118 #> [12129,]  5 1106 118 #> [12130,]  5 1107 118 #> [12131,]  5 1108 118 #> [12132,]  5 1109 118 #> [12133,]  5 1110 118 #> [12134,]  5 1111 118 #> [12135,]  5 1112 118 #> [12136,]  5 1113 118 #> [12137,]  5 1114 118 #> [12138,]  5 1115 118 #> [12139,]  5 1116 118 #> [12140,]  5 1117 118 #> [12141,]  5 1118 118 #> [12142,]  5 1119 118 #> [12143,]  5 1057 117 #> [12144,]  5 1058 117 #> [12145,]  5 1059 117 #> [12146,]  5 1060 117 #> [12147,]  5 1061 117 #> [12148,]  5 1062 117 #> [12149,]  5 1063 117 #> [12150,]  5 1064 117 #> [12151,]  5 1065 117 #> [12152,]  5 1066 117 #> [12153,]  5 1067 117 #> [12154,]  5 1068 117 #> [12155,]  5 1069 117 #> [12156,]  5 1070 117 #> [12157,]  5 1071 117 #> [12158,]  5 1072 117 #> [12159,]  5 1073 117 #> [12160,]  5 1074 117 #> [12161,]  5 1075 117 #> [12162,]  5 1076 117 #> [12163,]  5 1077 117 #> [12164,]  5 1078 117 #> [12165,]  5 1079 117 #> [12166,]  5 1080 117 #> [12167,]  5 1081 117 #> [12168,]  5 1082 117 #> [12169,]  5 1083 117 #> [12170,]  5 1084 117 #> [12171,]  5 1085 117 #> [12172,]  5 1086 117 #> [12173,]  5 1087 117 #> [12174,]  5 1088 117 #> [12175,]  5 1089 117 #> [12176,]  5 1090 117 #> [12177,]  5 1091 117 #> [12178,]  5 1092 117 #> [12179,]  5 1093 117 #> [12180,]  5 1094 117 #> [12181,]  5 1095 117 #> [12182,]  5 1096 117 #> [12183,]  5 1097 117 #> [12184,]  5 1098 117 #> [12185,]  5 1099 117 #> [12186,]  5 1100 117 #> [12187,]  5 1101 117 #> [12188,]  5 1102 117 #> [12189,]  5 1103 117 #> [12190,]  5 1104 117 #> [12191,]  5 1105 117 #> [12192,]  5 1106 117 #> [12193,]  5 1107 117 #> [12194,]  5 1108 117 #> [12195,]  5 1109 117 #> [12196,]  5 1110 117 #> [12197,]  5 1111 117 #> [12198,]  5 1112 117 #> [12199,]  5 1113 117 #> [12200,]  5 1114 117 #> [12201,]  5 1115 117 #> [12202,]  5 1116 117 #> [12203,]  5 1117 117 #> [12204,]  5 1118 117 #> [12205,]  5 1119 117 #> [12206,]  5 1057 116 #> [12207,]  5 1058 116 #> [12208,]  5 1059 116 #> [12209,]  5 1060 116 #> [12210,]  5 1061 116 #> [12211,]  5 1062 116 #> [12212,]  5 1063 116 #> [12213,]  5 1064 116 #> [12214,]  5 1065 116 #> [12215,]  5 1066 116 #> [12216,]  5 1067 116 #> [12217,]  5 1068 116 #> [12218,]  5 1069 116 #> [12219,]  5 1070 116 #> [12220,]  5 1071 116 #> [12221,]  5 1072 116 #> [12222,]  5 1073 116 #> [12223,]  5 1074 116 #> [12224,]  5 1075 116 #> [12225,]  5 1076 116 #> [12226,]  5 1077 116 #> [12227,]  5 1078 116 #> [12228,]  5 1079 116 #> [12229,]  5 1080 116 #> [12230,]  5 1081 116 #> [12231,]  5 1082 116 #> [12232,]  5 1083 116 #> [12233,]  5 1084 116 #> [12234,]  5 1085 116 #> [12235,]  5 1086 116 #> [12236,]  5 1087 116 #> [12237,]  5 1088 116 #> [12238,]  5 1089 116 #> [12239,]  5 1090 116 #> [12240,]  5 1091 116 #> [12241,]  5 1092 116 #> [12242,]  5 1093 116 #> [12243,]  5 1094 116 #> [12244,]  5 1095 116 #> [12245,]  5 1096 116 #> [12246,]  5 1097 116 #> [12247,]  5 1098 116 #> [12248,]  5 1099 116 #> [12249,]  5 1100 116 #> [12250,]  5 1101 116 #> [12251,]  5 1102 116 #> [12252,]  5 1103 116 #> [12253,]  5 1104 116 #> [12254,]  5 1105 116 #> [12255,]  5 1106 116 #> [12256,]  5 1107 116 #> [12257,]  5 1108 116 #> [12258,]  5 1109 116 #> [12259,]  5 1110 116 #> [12260,]  5 1111 116 #> [12261,]  5 1112 116 #> [12262,]  5 1113 116 #> [12263,]  5 1114 116 #> [12264,]  5 1115 116 #> [12265,]  5 1116 116 #> [12266,]  5 1117 116 #> [12267,]  5 1118 116 #> [12268,]  5 1119 116 #> [12269,]  5 1057 115 #> [12270,]  5 1058 115 #> [12271,]  5 1059 115 #> [12272,]  5 1060 115 #> [12273,]  5 1061 115 #> [12274,]  5 1062 115 #> [12275,]  5 1063 115 #> [12276,]  5 1064 115 #> [12277,]  5 1065 115 #> [12278,]  5 1066 115 #> [12279,]  5 1067 115 #> [12280,]  5 1068 115 #> [12281,]  5 1069 115 #> [12282,]  5 1070 115 #> [12283,]  5 1071 115 #> [12284,]  5 1072 115 #> [12285,]  5 1073 115 #> [12286,]  5 1074 115 #> [12287,]  5 1075 115 #> [12288,]  5 1076 115 #> [12289,]  5 1077 115 #> [12290,]  5 1078 115 #> [12291,]  5 1079 115 #> [12292,]  5 1080 115 #> [12293,]  5 1081 115 #> [12294,]  5 1082 115 #> [12295,]  5 1083 115 #> [12296,]  5 1084 115 #> [12297,]  5 1085 115 #> [12298,]  5 1086 115 #> [12299,]  5 1087 115 #> [12300,]  5 1088 115 #> [12301,]  5 1089 115 #> [12302,]  5 1090 115 #> [12303,]  5 1091 115 #> [12304,]  5 1092 115 #> [12305,]  5 1093 115 #> [12306,]  5 1094 115 #> [12307,]  5 1095 115 #> [12308,]  5 1096 115 #> [12309,]  5 1097 115 #> [12310,]  5 1098 115 #> [12311,]  5 1099 115 #> [12312,]  5 1100 115 #> [12313,]  5 1101 115 #> [12314,]  5 1102 115 #> [12315,]  5 1103 115 #> [12316,]  5 1104 115 #> [12317,]  5 1105 115 #> [12318,]  5 1106 115 #> [12319,]  5 1107 115 #> [12320,]  5 1108 115 #> [12321,]  5 1109 115 #> [12322,]  5 1110 115 #> [12323,]  5 1111 115 #> [12324,]  5 1112 115 #> [12325,]  5 1113 115 #> [12326,]  5 1114 115 #> [12327,]  5 1115 115 #> [12328,]  5 1116 115 #> [12329,]  5 1117 115 #> [12330,]  5 1118 115 #> [12331,]  5 1058 114 #> [12332,]  5 1059 114 #> [12333,]  5 1060 114 #> [12334,]  5 1061 114 #> [12335,]  5 1062 114 #> [12336,]  5 1063 114 #> [12337,]  5 1064 114 #> [12338,]  5 1065 114 #> [12339,]  5 1066 114 #> [12340,]  5 1067 114 #> [12341,]  5 1068 114 #> [12342,]  5 1069 114 #> [12343,]  5 1070 114 #> [12344,]  5 1071 114 #> [12345,]  5 1072 114 #> [12346,]  5 1073 114 #> [12347,]  5 1074 114 #> [12348,]  5 1075 114 #> [12349,]  5 1076 114 #> [12350,]  5 1077 114 #> [12351,]  5 1078 114 #> [12352,]  5 1079 114 #> [12353,]  5 1080 114 #> [12354,]  5 1081 114 #> [12355,]  5 1082 114 #> [12356,]  5 1083 114 #> [12357,]  5 1084 114 #> [12358,]  5 1085 114 #> [12359,]  5 1086 114 #> [12360,]  5 1087 114 #> [12361,]  5 1088 114 #> [12362,]  5 1089 114 #> [12363,]  5 1090 114 #> [12364,]  5 1091 114 #> [12365,]  5 1092 114 #> [12366,]  5 1093 114 #> [12367,]  5 1094 114 #> [12368,]  5 1095 114 #> [12369,]  5 1096 114 #> [12370,]  5 1097 114 #> [12371,]  5 1098 114 #> [12372,]  5 1099 114 #> [12373,]  5 1100 114 #> [12374,]  5 1101 114 #> [12375,]  5 1102 114 #> [12376,]  5 1103 114 #> [12377,]  5 1104 114 #> [12378,]  5 1105 114 #> [12379,]  5 1106 114 #> [12380,]  5 1107 114 #> [12381,]  5 1108 114 #> [12382,]  5 1109 114 #> [12383,]  5 1110 114 #> [12384,]  5 1111 114 #> [12385,]  5 1112 114 #> [12386,]  5 1113 114 #> [12387,]  5 1114 114 #> [12388,]  5 1115 114 #> [12389,]  5 1116 114 #> [12390,]  5 1117 114 #> [12391,]  5 1118 114 #> [12392,]  5 1058 113 #> [12393,]  5 1059 113 #> [12394,]  5 1060 113 #> [12395,]  5 1061 113 #> [12396,]  5 1062 113 #> [12397,]  5 1063 113 #> [12398,]  5 1064 113 #> [12399,]  5 1065 113 #> [12400,]  5 1066 113 #> [12401,]  5 1067 113 #> [12402,]  5 1068 113 #> [12403,]  5 1069 113 #> [12404,]  5 1070 113 #> [12405,]  5 1071 113 #> [12406,]  5 1072 113 #> [12407,]  5 1073 113 #> [12408,]  5 1074 113 #> [12409,]  5 1075 113 #> [12410,]  5 1076 113 #> [12411,]  5 1077 113 #> [12412,]  5 1078 113 #> [12413,]  5 1079 113 #> [12414,]  5 1080 113 #> [12415,]  5 1081 113 #> [12416,]  5 1082 113 #> [12417,]  5 1083 113 #> [12418,]  5 1084 113 #> [12419,]  5 1085 113 #> [12420,]  5 1086 113 #> [12421,]  5 1087 113 #> [12422,]  5 1088 113 #> [12423,]  5 1089 113 #> [12424,]  5 1090 113 #> [12425,]  5 1091 113 #> [12426,]  5 1092 113 #> [12427,]  5 1093 113 #> [12428,]  5 1094 113 #> [12429,]  5 1095 113 #> [12430,]  5 1096 113 #> [12431,]  5 1097 113 #> [12432,]  5 1098 113 #> [12433,]  5 1099 113 #> [12434,]  5 1100 113 #> [12435,]  5 1101 113 #> [12436,]  5 1102 113 #> [12437,]  5 1103 113 #> [12438,]  5 1104 113 #> [12439,]  5 1105 113 #> [12440,]  5 1106 113 #> [12441,]  5 1107 113 #> [12442,]  5 1108 113 #> [12443,]  5 1109 113 #> [12444,]  5 1110 113 #> [12445,]  5 1111 113 #> [12446,]  5 1112 113 #> [12447,]  5 1113 113 #> [12448,]  5 1114 113 #> [12449,]  5 1115 113 #> [12450,]  5 1116 113 #> [12451,]  5 1117 113 #> [12452,]  5 1058 112 #> [12453,]  5 1059 112 #> [12454,]  5 1060 112 #> [12455,]  5 1061 112 #> [12456,]  5 1062 112 #> [12457,]  5 1063 112 #> [12458,]  5 1064 112 #> [12459,]  5 1065 112 #> [12460,]  5 1066 112 #> [12461,]  5 1067 112 #> [12462,]  5 1068 112 #> [12463,]  5 1069 112 #> [12464,]  5 1070 112 #> [12465,]  5 1071 112 #> [12466,]  5 1072 112 #> [12467,]  5 1073 112 #> [12468,]  5 1074 112 #> [12469,]  5 1075 112 #> [12470,]  5 1076 112 #> [12471,]  5 1077 112 #> [12472,]  5 1078 112 #> [12473,]  5 1079 112 #> [12474,]  5 1080 112 #> [12475,]  5 1081 112 #> [12476,]  5 1082 112 #> [12477,]  5 1083 112 #> [12478,]  5 1084 112 #> [12479,]  5 1085 112 #> [12480,]  5 1086 112 #> [12481,]  5 1087 112 #> [12482,]  5 1088 112 #> [12483,]  5 1089 112 #> [12484,]  5 1090 112 #> [12485,]  5 1091 112 #> [12486,]  5 1092 112 #> [12487,]  5 1093 112 #> [12488,]  5 1094 112 #> [12489,]  5 1095 112 #> [12490,]  5 1096 112 #> [12491,]  5 1097 112 #> [12492,]  5 1098 112 #> [12493,]  5 1099 112 #> [12494,]  5 1100 112 #> [12495,]  5 1101 112 #> [12496,]  5 1102 112 #> [12497,]  5 1103 112 #> [12498,]  5 1104 112 #> [12499,]  5 1105 112 #> [12500,]  5 1106 112 #> [12501,]  5 1107 112 #> [12502,]  5 1108 112 #> [12503,]  5 1109 112 #> [12504,]  5 1110 112 #> [12505,]  5 1111 112 #> [12506,]  5 1112 112 #> [12507,]  5 1113 112 #> [12508,]  5 1114 112 #> [12509,]  5 1115 112 #> [12510,]  5 1116 112 #> [12511,]  5 1117 112 #> [12512,]  5 1058 111 #> [12513,]  5 1059 111 #> [12514,]  5 1060 111 #> [12515,]  5 1061 111 #> [12516,]  5 1062 111 #> [12517,]  5 1063 111 #> [12518,]  5 1064 111 #> [12519,]  5 1065 111 #> [12520,]  5 1066 111 #> [12521,]  5 1067 111 #> [12522,]  5 1068 111 #> [12523,]  5 1069 111 #> [12524,]  5 1070 111 #> [12525,]  5 1071 111 #> [12526,]  5 1072 111 #> [12527,]  5 1073 111 #> [12528,]  5 1074 111 #> [12529,]  5 1075 111 #> [12530,]  5 1076 111 #> [12531,]  5 1077 111 #> [12532,]  5 1078 111 #> [12533,]  5 1079 111 #> [12534,]  5 1080 111 #> [12535,]  5 1081 111 #> [12536,]  5 1082 111 #> [12537,]  5 1083 111 #> [12538,]  5 1084 111 #> [12539,]  5 1085 111 #> [12540,]  5 1086 111 #> [12541,]  5 1087 111 #> [12542,]  5 1088 111 #> [12543,]  5 1089 111 #> [12544,]  5 1090 111 #> [12545,]  5 1091 111 #> [12546,]  5 1092 111 #> [12547,]  5 1093 111 #> [12548,]  5 1094 111 #> [12549,]  5 1095 111 #> [12550,]  5 1096 111 #> [12551,]  5 1097 111 #> [12552,]  5 1098 111 #> [12553,]  5 1099 111 #> [12554,]  5 1100 111 #> [12555,]  5 1101 111 #> [12556,]  5 1102 111 #> [12557,]  5 1103 111 #> [12558,]  5 1104 111 #> [12559,]  5 1105 111 #> [12560,]  5 1106 111 #> [12561,]  5 1107 111 #> [12562,]  5 1108 111 #> [12563,]  5 1109 111 #> [12564,]  5 1110 111 #> [12565,]  5 1111 111 #> [12566,]  5 1112 111 #> [12567,]  5 1113 111 #> [12568,]  5 1114 111 #> [12569,]  5 1115 111 #> [12570,]  5 1116 111 #> [12571,]  5 1059 110 #> [12572,]  5 1060 110 #> [12573,]  5 1061 110 #> [12574,]  5 1062 110 #> [12575,]  5 1063 110 #> [12576,]  5 1064 110 #> [12577,]  5 1065 110 #> [12578,]  5 1066 110 #> [12579,]  5 1067 110 #> [12580,]  5 1068 110 #> [12581,]  5 1069 110 #> [12582,]  5 1070 110 #> [12583,]  5 1071 110 #> [12584,]  5 1072 110 #> [12585,]  5 1073 110 #> [12586,]  5 1074 110 #> [12587,]  5 1075 110 #> [12588,]  5 1076 110 #> [12589,]  5 1077 110 #> [12590,]  5 1078 110 #> [12591,]  5 1079 110 #> [12592,]  5 1080 110 #> [12593,]  5 1081 110 #> [12594,]  5 1082 110 #> [12595,]  5 1083 110 #> [12596,]  5 1084 110 #> [12597,]  5 1085 110 #> [12598,]  5 1086 110 #> [12599,]  5 1087 110 #> [12600,]  5 1088 110 #> [12601,]  5 1089 110 #> [12602,]  5 1090 110 #> [12603,]  5 1091 110 #> [12604,]  5 1092 110 #> [12605,]  5 1093 110 #> [12606,]  5 1094 110 #> [12607,]  5 1095 110 #> [12608,]  5 1096 110 #> [12609,]  5 1097 110 #> [12610,]  5 1098 110 #> [12611,]  5 1099 110 #> [12612,]  5 1100 110 #> [12613,]  5 1101 110 #> [12614,]  5 1102 110 #> [12615,]  5 1103 110 #> [12616,]  5 1104 110 #> [12617,]  5 1105 110 #> [12618,]  5 1106 110 #> [12619,]  5 1107 110 #> [12620,]  5 1108 110 #> [12621,]  5 1109 110 #> [12622,]  5 1110 110 #> [12623,]  5 1111 110 #> [12624,]  5 1112 110 #> [12625,]  5 1113 110 #> [12626,]  5 1114 110 #> [12627,]  5 1115 110 #> [12628,]  5 1116 110 #> [12629,]  5 1059 109 #> [12630,]  5 1060 109 #> [12631,]  5 1061 109 #> [12632,]  5 1062 109 #> [12633,]  5 1063 109 #> [12634,]  5 1064 109 #> [12635,]  5 1065 109 #> [12636,]  5 1066 109 #> [12637,]  5 1067 109 #> [12638,]  5 1068 109 #> [12639,]  5 1069 109 #> [12640,]  5 1070 109 #> [12641,]  5 1071 109 #> [12642,]  5 1072 109 #> [12643,]  5 1073 109 #> [12644,]  5 1074 109 #> [12645,]  5 1075 109 #> [12646,]  5 1076 109 #> [12647,]  5 1077 109 #> [12648,]  5 1078 109 #> [12649,]  5 1079 109 #> [12650,]  5 1080 109 #> [12651,]  5 1081 109 #> [12652,]  5 1082 109 #> [12653,]  5 1083 109 #> [12654,]  5 1084 109 #> [12655,]  5 1085 109 #> [12656,]  5 1086 109 #> [12657,]  5 1087 109 #> [12658,]  5 1088 109 #> [12659,]  5 1089 109 #> [12660,]  5 1090 109 #> [12661,]  5 1091 109 #> [12662,]  5 1092 109 #> [12663,]  5 1093 109 #> [12664,]  5 1094 109 #> [12665,]  5 1095 109 #> [12666,]  5 1096 109 #> [12667,]  5 1097 109 #> [12668,]  5 1098 109 #> [12669,]  5 1099 109 #> [12670,]  5 1100 109 #> [12671,]  5 1101 109 #> [12672,]  5 1102 109 #> [12673,]  5 1103 109 #> [12674,]  5 1104 109 #> [12675,]  5 1105 109 #> [12676,]  5 1106 109 #> [12677,]  5 1107 109 #> [12678,]  5 1108 109 #> [12679,]  5 1109 109 #> [12680,]  5 1110 109 #> [12681,]  5 1111 109 #> [12682,]  5 1112 109 #> [12683,]  5 1113 109 #> [12684,]  5 1114 109 #> [12685,]  5 1115 109 #> [12686,]  5 1059 108 #> [12687,]  5 1060 108 #> [12688,]  5 1061 108 #> [12689,]  5 1062 108 #> [12690,]  5 1063 108 #> [12691,]  5 1064 108 #> [12692,]  5 1065 108 #> [12693,]  5 1066 108 #> [12694,]  5 1067 108 #> [12695,]  5 1068 108 #> [12696,]  5 1069 108 #> [12697,]  5 1070 108 #> [12698,]  5 1071 108 #> [12699,]  5 1072 108 #> [12700,]  5 1073 108 #> [12701,]  5 1074 108 #> [12702,]  5 1075 108 #> [12703,]  5 1076 108 #> [12704,]  5 1077 108 #> [12705,]  5 1078 108 #> [12706,]  5 1079 108 #> [12707,]  5 1080 108 #> [12708,]  5 1081 108 #> [12709,]  5 1082 108 #> [12710,]  5 1083 108 #> [12711,]  5 1084 108 #> [12712,]  5 1085 108 #> [12713,]  5 1086 108 #> [12714,]  5 1087 108 #> [12715,]  5 1088 108 #> [12716,]  5 1089 108 #> [12717,]  5 1090 108 #> [12718,]  5 1091 108 #> [12719,]  5 1092 108 #> [12720,]  5 1093 108 #> [12721,]  5 1094 108 #> [12722,]  5 1095 108 #> [12723,]  5 1096 108 #> [12724,]  5 1097 108 #> [12725,]  5 1098 108 #> [12726,]  5 1099 108 #> [12727,]  5 1100 108 #> [12728,]  5 1101 108 #> [12729,]  5 1102 108 #> [12730,]  5 1103 108 #> [12731,]  5 1104 108 #> [12732,]  5 1105 108 #> [12733,]  5 1106 108 #> [12734,]  5 1107 108 #> [12735,]  5 1108 108 #> [12736,]  5 1109 108 #> [12737,]  5 1110 108 #> [12738,]  5 1111 108 #> [12739,]  5 1112 108 #> [12740,]  5 1113 108 #> [12741,]  5 1114 108 #> [12742,]  5 1115 108 #> [12743,]  5 1060 107 #> [12744,]  5 1061 107 #> [12745,]  5 1062 107 #> [12746,]  5 1063 107 #> [12747,]  5 1064 107 #> [12748,]  5 1065 107 #> [12749,]  5 1066 107 #> [12750,]  5 1067 107 #> [12751,]  5 1068 107 #> [12752,]  5 1069 107 #> [12753,]  5 1070 107 #> [12754,]  5 1071 107 #> [12755,]  5 1072 107 #> [12756,]  5 1073 107 #> [12757,]  5 1074 107 #> [12758,]  5 1075 107 #> [12759,]  5 1076 107 #> [12760,]  5 1077 107 #> [12761,]  5 1078 107 #> [12762,]  5 1079 107 #> [12763,]  5 1080 107 #> [12764,]  5 1081 107 #> [12765,]  5 1082 107 #> [12766,]  5 1083 107 #> [12767,]  5 1084 107 #> [12768,]  5 1085 107 #> [12769,]  5 1086 107 #> [12770,]  5 1087 107 #> [12771,]  5 1088 107 #> [12772,]  5 1089 107 #> [12773,]  5 1090 107 #> [12774,]  5 1091 107 #> [12775,]  5 1092 107 #> [12776,]  5 1093 107 #> [12777,]  5 1094 107 #> [12778,]  5 1095 107 #> [12779,]  5 1096 107 #> [12780,]  5 1097 107 #> [12781,]  5 1098 107 #> [12782,]  5 1099 107 #> [12783,]  5 1100 107 #> [12784,]  5 1101 107 #> [12785,]  5 1102 107 #> [12786,]  5 1103 107 #> [12787,]  5 1104 107 #> [12788,]  5 1105 107 #> [12789,]  5 1106 107 #> [12790,]  5 1107 107 #> [12791,]  5 1108 107 #> [12792,]  5 1109 107 #> [12793,]  5 1110 107 #> [12794,]  5 1111 107 #> [12795,]  5 1112 107 #> [12796,]  5 1113 107 #> [12797,]  5 1114 107 #> [12798,]  5 1060 106 #> [12799,]  5 1061 106 #> [12800,]  5 1062 106 #> [12801,]  5 1063 106 #> [12802,]  5 1064 106 #> [12803,]  5 1065 106 #> [12804,]  5 1066 106 #> [12805,]  5 1067 106 #> [12806,]  5 1068 106 #> [12807,]  5 1069 106 #> [12808,]  5 1070 106 #> [12809,]  5 1071 106 #> [12810,]  5 1072 106 #> [12811,]  5 1073 106 #> [12812,]  5 1074 106 #> [12813,]  5 1075 106 #> [12814,]  5 1076 106 #> [12815,]  5 1077 106 #> [12816,]  5 1078 106 #> [12817,]  5 1079 106 #> [12818,]  5 1080 106 #> [12819,]  5 1081 106 #> [12820,]  5 1082 106 #> [12821,]  5 1083 106 #> [12822,]  5 1084 106 #> [12823,]  5 1085 106 #> [12824,]  5 1086 106 #> [12825,]  5 1087 106 #> [12826,]  5 1088 106 #> [12827,]  5 1089 106 #> [12828,]  5 1090 106 #> [12829,]  5 1091 106 #> [12830,]  5 1092 106 #> [12831,]  5 1093 106 #> [12832,]  5 1094 106 #> [12833,]  5 1095 106 #> [12834,]  5 1096 106 #> [12835,]  5 1097 106 #> [12836,]  5 1098 106 #> [12837,]  5 1099 106 #> [12838,]  5 1100 106 #> [12839,]  5 1101 106 #> [12840,]  5 1102 106 #> [12841,]  5 1103 106 #> [12842,]  5 1104 106 #> [12843,]  5 1105 106 #> [12844,]  5 1106 106 #> [12845,]  5 1107 106 #> [12846,]  5 1108 106 #> [12847,]  5 1109 106 #> [12848,]  5 1110 106 #> [12849,]  5 1111 106 #> [12850,]  5 1112 106 #> [12851,]  5 1113 106 #> [12852,]  5 1060 105 #> [12853,]  5 1061 105 #> [12854,]  5 1062 105 #> [12855,]  5 1063 105 #> [12856,]  5 1064 105 #> [12857,]  5 1065 105 #> [12858,]  5 1066 105 #> [12859,]  5 1067 105 #> [12860,]  5 1068 105 #> [12861,]  5 1069 105 #> [12862,]  5 1070 105 #> [12863,]  5 1071 105 #> [12864,]  5 1072 105 #> [12865,]  5 1073 105 #> [12866,]  5 1074 105 #> [12867,]  5 1075 105 #> [12868,]  5 1076 105 #> [12869,]  5 1077 105 #> [12870,]  5 1078 105 #> [12871,]  5 1079 105 #> [12872,]  5 1080 105 #> [12873,]  5 1081 105 #> [12874,]  5 1082 105 #> [12875,]  5 1083 105 #> [12876,]  5 1084 105 #> [12877,]  5 1085 105 #> [12878,]  5 1086 105 #> [12879,]  5 1087 105 #> [12880,]  5 1088 105 #> [12881,]  5 1089 105 #> [12882,]  5 1090 105 #> [12883,]  5 1091 105 #> [12884,]  5 1092 105 #> [12885,]  5 1093 105 #> [12886,]  5 1094 105 #> [12887,]  5 1095 105 #> [12888,]  5 1096 105 #> [12889,]  5 1097 105 #> [12890,]  5 1098 105 #> [12891,]  5 1099 105 #> [12892,]  5 1100 105 #> [12893,]  5 1101 105 #> [12894,]  5 1102 105 #> [12895,]  5 1103 105 #> [12896,]  5 1104 105 #> [12897,]  5 1105 105 #> [12898,]  5 1106 105 #> [12899,]  5 1107 105 #> [12900,]  5 1108 105 #> [12901,]  5 1109 105 #> [12902,]  5 1110 105 #> [12903,]  5 1111 105 #> [12904,]  5 1112 105 #> [12905,]  5 1113 105 #> [12906,]  5 1061 104 #> [12907,]  5 1062 104 #> [12908,]  5 1063 104 #> [12909,]  5 1064 104 #> [12910,]  5 1065 104 #> [12911,]  5 1066 104 #> [12912,]  5 1067 104 #> [12913,]  5 1068 104 #> [12914,]  5 1069 104 #> [12915,]  5 1070 104 #> [12916,]  5 1071 104 #> [12917,]  5 1072 104 #> [12918,]  5 1073 104 #> [12919,]  5 1074 104 #> [12920,]  5 1075 104 #> [12921,]  5 1076 104 #> [12922,]  5 1077 104 #> [12923,]  5 1078 104 #> [12924,]  5 1079 104 #> [12925,]  5 1080 104 #> [12926,]  5 1081 104 #> [12927,]  5 1082 104 #> [12928,]  5 1083 104 #> [12929,]  5 1084 104 #> [12930,]  5 1085 104 #> [12931,]  5 1086 104 #> [12932,]  5 1087 104 #> [12933,]  5 1088 104 #> [12934,]  5 1089 104 #> [12935,]  5 1090 104 #> [12936,]  5 1091 104 #> [12937,]  5 1092 104 #> [12938,]  5 1093 104 #> [12939,]  5 1094 104 #> [12940,]  5 1095 104 #> [12941,]  5 1096 104 #> [12942,]  5 1097 104 #> [12943,]  5 1098 104 #> [12944,]  5 1099 104 #> [12945,]  5 1100 104 #> [12946,]  5 1101 104 #> [12947,]  5 1102 104 #> [12948,]  5 1103 104 #> [12949,]  5 1104 104 #> [12950,]  5 1105 104 #> [12951,]  5 1106 104 #> [12952,]  5 1107 104 #> [12953,]  5 1108 104 #> [12954,]  5 1109 104 #> [12955,]  5 1110 104 #> [12956,]  5 1111 104 #> [12957,]  5 1112 104 #> [12958,]  5 1061 103 #> [12959,]  5 1062 103 #> [12960,]  5 1063 103 #> [12961,]  5 1064 103 #> [12962,]  5 1065 103 #> [12963,]  5 1066 103 #> [12964,]  5 1067 103 #> [12965,]  5 1068 103 #> [12966,]  5 1069 103 #> [12967,]  5 1070 103 #> [12968,]  5 1071 103 #> [12969,]  5 1072 103 #> [12970,]  5 1073 103 #> [12971,]  5 1074 103 #> [12972,]  5 1075 103 #> [12973,]  5 1076 103 #> [12974,]  5 1077 103 #> [12975,]  5 1078 103 #> [12976,]  5 1079 103 #> [12977,]  5 1080 103 #> [12978,]  5 1081 103 #> [12979,]  5 1082 103 #> [12980,]  5 1083 103 #> [12981,]  5 1084 103 #> [12982,]  5 1085 103 #> [12983,]  5 1086 103 #> [12984,]  5 1087 103 #> [12985,]  5 1088 103 #> [12986,]  5 1089 103 #> [12987,]  5 1090 103 #> [12988,]  5 1091 103 #> [12989,]  5 1092 103 #> [12990,]  5 1093 103 #> [12991,]  5 1094 103 #> [12992,]  5 1095 103 #> [12993,]  5 1096 103 #> [12994,]  5 1097 103 #> [12995,]  5 1098 103 #> [12996,]  5 1099 103 #> [12997,]  5 1100 103 #> [12998,]  5 1101 103 #> [12999,]  5 1102 103 #> [13000,]  5 1103 103 #> [13001,]  5 1104 103 #> [13002,]  5 1105 103 #> [13003,]  5 1106 103 #> [13004,]  5 1107 103 #> [13005,]  5 1108 103 #> [13006,]  5 1109 103 #> [13007,]  5 1110 103 #> [13008,]  5 1111 103 #> [13009,]  5 1112 103 #> [13010,]  5 1062 102 #> [13011,]  5 1063 102 #> [13012,]  5 1064 102 #> [13013,]  5 1065 102 #> [13014,]  5 1066 102 #> [13015,]  5 1067 102 #> [13016,]  5 1068 102 #> [13017,]  5 1069 102 #> [13018,]  5 1070 102 #> [13019,]  5 1071 102 #> [13020,]  5 1072 102 #> [13021,]  5 1073 102 #> [13022,]  5 1074 102 #> [13023,]  5 1075 102 #> [13024,]  5 1076 102 #> [13025,]  5 1077 102 #> [13026,]  5 1078 102 #> [13027,]  5 1079 102 #> [13028,]  5 1080 102 #> [13029,]  5 1081 102 #> [13030,]  5 1082 102 #> [13031,]  5 1083 102 #> [13032,]  5 1084 102 #> [13033,]  5 1085 102 #> [13034,]  5 1086 102 #> [13035,]  5 1087 102 #> [13036,]  5 1088 102 #> [13037,]  5 1089 102 #> [13038,]  5 1090 102 #> [13039,]  5 1091 102 #> [13040,]  5 1092 102 #> [13041,]  5 1093 102 #> [13042,]  5 1094 102 #> [13043,]  5 1095 102 #> [13044,]  5 1096 102 #> [13045,]  5 1097 102 #> [13046,]  5 1098 102 #> [13047,]  5 1099 102 #> [13048,]  5 1100 102 #> [13049,]  5 1101 102 #> [13050,]  5 1102 102 #> [13051,]  5 1103 102 #> [13052,]  5 1104 102 #> [13053,]  5 1105 102 #> [13054,]  5 1106 102 #> [13055,]  5 1107 102 #> [13056,]  5 1108 102 #> [13057,]  5 1109 102 #> [13058,]  5 1110 102 #> [13059,]  5 1111 102 #> [13060,]  5 1062 101 #> [13061,]  5 1063 101 #> [13062,]  5 1064 101 #> [13063,]  5 1065 101 #> [13064,]  5 1066 101 #> [13065,]  5 1067 101 #> [13066,]  5 1068 101 #> [13067,]  5 1069 101 #> [13068,]  5 1070 101 #> [13069,]  5 1071 101 #> [13070,]  5 1072 101 #> [13071,]  5 1073 101 #> [13072,]  5 1074 101 #> [13073,]  5 1075 101 #> [13074,]  5 1076 101 #> [13075,]  5 1077 101 #> [13076,]  5 1078 101 #> [13077,]  5 1079 101 #> [13078,]  5 1080 101 #> [13079,]  5 1081 101 #> [13080,]  5 1082 101 #> [13081,]  5 1083 101 #> [13082,]  5 1084 101 #> [13083,]  5 1085 101 #> [13084,]  5 1086 101 #> [13085,]  5 1087 101 #> [13086,]  5 1088 101 #> [13087,]  5 1089 101 #> [13088,]  5 1090 101 #> [13089,]  5 1091 101 #> [13090,]  5 1092 101 #> [13091,]  5 1093 101 #> [13092,]  5 1094 101 #> [13093,]  5 1095 101 #> [13094,]  5 1096 101 #> [13095,]  5 1097 101 #> [13096,]  5 1098 101 #> [13097,]  5 1099 101 #> [13098,]  5 1100 101 #> [13099,]  5 1101 101 #> [13100,]  5 1102 101 #> [13101,]  5 1103 101 #> [13102,]  5 1104 101 #> [13103,]  5 1105 101 #> [13104,]  5 1106 101 #> [13105,]  5 1107 101 #> [13106,]  5 1108 101 #> [13107,]  5 1109 101 #> [13108,]  5 1110 101 #> [13109,]  5 1063 100 #> [13110,]  5 1064 100 #> [13111,]  5 1065 100 #> [13112,]  5 1066 100 #> [13113,]  5 1067 100 #> [13114,]  5 1068 100 #> [13115,]  5 1069 100 #> [13116,]  5 1070 100 #> [13117,]  5 1071 100 #> [13118,]  5 1072 100 #> [13119,]  5 1073 100 #> [13120,]  5 1074 100 #> [13121,]  5 1075 100 #> [13122,]  5 1076 100 #> [13123,]  5 1077 100 #> [13124,]  5 1078 100 #> [13125,]  5 1079 100 #> [13126,]  5 1080 100 #> [13127,]  5 1081 100 #> [13128,]  5 1082 100 #> [13129,]  5 1083 100 #> [13130,]  5 1084 100 #> [13131,]  5 1085 100 #> [13132,]  5 1086 100 #> [13133,]  5 1087 100 #> [13134,]  5 1088 100 #> [13135,]  5 1089 100 #> [13136,]  5 1090 100 #> [13137,]  5 1091 100 #> [13138,]  5 1092 100 #> [13139,]  5 1093 100 #> [13140,]  5 1094 100 #> [13141,]  5 1095 100 #> [13142,]  5 1096 100 #> [13143,]  5 1097 100 #> [13144,]  5 1098 100 #> [13145,]  5 1099 100 #> [13146,]  5 1100 100 #> [13147,]  5 1101 100 #> [13148,]  5 1102 100 #> [13149,]  5 1103 100 #> [13150,]  5 1104 100 #> [13151,]  5 1105 100 #> [13152,]  5 1106 100 #> [13153,]  5 1107 100 #> [13154,]  5 1108 100 #> [13155,]  5 1109 100 #> [13156,]  5 1063  99 #> [13157,]  5 1064  99 #> [13158,]  5 1065  99 #> [13159,]  5 1066  99 #> [13160,]  5 1067  99 #> [13161,]  5 1068  99 #> [13162,]  5 1069  99 #> [13163,]  5 1070  99 #> [13164,]  5 1071  99 #> [13165,]  5 1072  99 #> [13166,]  5 1073  99 #> [13167,]  5 1074  99 #> [13168,]  5 1075  99 #> [13169,]  5 1076  99 #> [13170,]  5 1077  99 #> [13171,]  5 1078  99 #> [13172,]  5 1079  99 #> [13173,]  5 1080  99 #> [13174,]  5 1081  99 #> [13175,]  5 1082  99 #> [13176,]  5 1083  99 #> [13177,]  5 1084  99 #> [13178,]  5 1085  99 #> [13179,]  5 1086  99 #> [13180,]  5 1087  99 #> [13181,]  5 1088  99 #> [13182,]  5 1089  99 #> [13183,]  5 1090  99 #> [13184,]  5 1091  99 #> [13185,]  5 1092  99 #> [13186,]  5 1093  99 #> [13187,]  5 1094  99 #> [13188,]  5 1095  99 #> [13189,]  5 1096  99 #> [13190,]  5 1097  99 #> [13191,]  5 1098  99 #> [13192,]  5 1099  99 #> [13193,]  5 1100  99 #> [13194,]  5 1101  99 #> [13195,]  5 1102  99 #> [13196,]  5 1103  99 #> [13197,]  5 1104  99 #> [13198,]  5 1105  99 #> [13199,]  5 1106  99 #> [13200,]  5 1107  99 #> [13201,]  5 1108  99 #> [13202,]  5 1064  98 #> [13203,]  5 1065  98 #> [13204,]  5 1066  98 #> [13205,]  5 1067  98 #> [13206,]  5 1068  98 #> [13207,]  5 1069  98 #> [13208,]  5 1070  98 #> [13209,]  5 1071  98 #> [13210,]  5 1072  98 #> [13211,]  5 1073  98 #> [13212,]  5 1074  98 #> [13213,]  5 1075  98 #> [13214,]  5 1076  98 #> [13215,]  5 1077  98 #> [13216,]  5 1078  98 #> [13217,]  5 1079  98 #> [13218,]  5 1080  98 #> [13219,]  5 1081  98 #> [13220,]  5 1082  98 #> [13221,]  5 1083  98 #> [13222,]  5 1084  98 #> [13223,]  5 1085  98 #> [13224,]  5 1086  98 #> [13225,]  5 1087  98 #> [13226,]  5 1088  98 #> [13227,]  5 1089  98 #> [13228,]  5 1090  98 #> [13229,]  5 1091  98 #> [13230,]  5 1092  98 #> [13231,]  5 1093  98 #> [13232,]  5 1094  98 #> [13233,]  5 1095  98 #> [13234,]  5 1096  98 #> [13235,]  5 1097  98 #> [13236,]  5 1098  98 #> [13237,]  5 1099  98 #> [13238,]  5 1100  98 #> [13239,]  5 1101  98 #> [13240,]  5 1102  98 #> [13241,]  5 1103  98 #> [13242,]  5 1104  98 #> [13243,]  5 1105  98 #> [13244,]  5 1106  98 #> [13245,]  5 1107  98 #> [13246,]  5 1108  98 #> [13247,]  5 1064  97 #> [13248,]  5 1065  97 #> [13249,]  5 1066  97 #> [13250,]  5 1067  97 #> [13251,]  5 1068  97 #> [13252,]  5 1069  97 #> [13253,]  5 1070  97 #> [13254,]  5 1071  97 #> [13255,]  5 1072  97 #> [13256,]  5 1073  97 #> [13257,]  5 1074  97 #> [13258,]  5 1075  97 #> [13259,]  5 1076  97 #> [13260,]  5 1077  97 #> [13261,]  5 1078  97 #> [13262,]  5 1079  97 #> [13263,]  5 1080  97 #> [13264,]  5 1081  97 #> [13265,]  5 1082  97 #> [13266,]  5 1083  97 #> [13267,]  5 1084  97 #> [13268,]  5 1085  97 #> [13269,]  5 1086  97 #> [13270,]  5 1087  97 #> [13271,]  5 1088  97 #> [13272,]  5 1089  97 #> [13273,]  5 1090  97 #> [13274,]  5 1091  97 #> [13275,]  5 1092  97 #> [13276,]  5 1093  97 #> [13277,]  5 1094  97 #> [13278,]  5 1095  97 #> [13279,]  5 1096  97 #> [13280,]  5 1097  97 #> [13281,]  5 1098  97 #> [13282,]  5 1099  97 #> [13283,]  5 1100  97 #> [13284,]  5 1101  97 #> [13285,]  5 1102  97 #> [13286,]  5 1103  97 #> [13287,]  5 1104  97 #> [13288,]  5 1105  97 #> [13289,]  5 1106  97 #> [13290,]  5 1107  97 #> [13291,]  5 1065  96 #> [13292,]  5 1066  96 #> [13293,]  5 1067  96 #> [13294,]  5 1068  96 #> [13295,]  5 1069  96 #> [13296,]  5 1070  96 #> [13297,]  5 1071  96 #> [13298,]  5 1072  96 #> [13299,]  5 1073  96 #> [13300,]  5 1074  96 #> [13301,]  5 1075  96 #> [13302,]  5 1076  96 #> [13303,]  5 1077  96 #> [13304,]  5 1078  96 #> [13305,]  5 1079  96 #> [13306,]  5 1080  96 #> [13307,]  5 1081  96 #> [13308,]  5 1082  96 #> [13309,]  5 1083  96 #> [13310,]  5 1084  96 #> [13311,]  5 1085  96 #> [13312,]  5 1086  96 #> [13313,]  5 1087  96 #> [13314,]  5 1088  96 #> [13315,]  5 1089  96 #> [13316,]  5 1090  96 #> [13317,]  5 1091  96 #> [13318,]  5 1092  96 #> [13319,]  5 1093  96 #> [13320,]  5 1094  96 #> [13321,]  5 1095  96 #> [13322,]  5 1096  96 #> [13323,]  5 1097  96 #> [13324,]  5 1098  96 #> [13325,]  5 1099  96 #> [13326,]  5 1100  96 #> [13327,]  5 1101  96 #> [13328,]  5 1102  96 #> [13329,]  5 1103  96 #> [13330,]  5 1104  96 #> [13331,]  5 1105  96 #> [13332,]  5 1106  96 #> [13333,]  5 1066  95 #> [13334,]  5 1067  95 #> [13335,]  5 1068  95 #> [13336,]  5 1069  95 #> [13337,]  5 1070  95 #> [13338,]  5 1071  95 #> [13339,]  5 1072  95 #> [13340,]  5 1073  95 #> [13341,]  5 1074  95 #> [13342,]  5 1075  95 #> [13343,]  5 1076  95 #> [13344,]  5 1077  95 #> [13345,]  5 1078  95 #> [13346,]  5 1079  95 #> [13347,]  5 1080  95 #> [13348,]  5 1081  95 #> [13349,]  5 1082  95 #> [13350,]  5 1083  95 #> [13351,]  5 1084  95 #> [13352,]  5 1085  95 #> [13353,]  5 1086  95 #> [13354,]  5 1087  95 #> [13355,]  5 1088  95 #> [13356,]  5 1089  95 #> [13357,]  5 1090  95 #> [13358,]  5 1091  95 #> [13359,]  5 1092  95 #> [13360,]  5 1093  95 #> [13361,]  5 1094  95 #> [13362,]  5 1095  95 #> [13363,]  5 1096  95 #> [13364,]  5 1097  95 #> [13365,]  5 1098  95 #> [13366,]  5 1099  95 #> [13367,]  5 1100  95 #> [13368,]  5 1101  95 #> [13369,]  5 1102  95 #> [13370,]  5 1103  95 #> [13371,]  5 1104  95 #> [13372,]  5 1105  95 #> [13373,]  5 1067  94 #> [13374,]  5 1068  94 #> [13375,]  5 1069  94 #> [13376,]  5 1070  94 #> [13377,]  5 1071  94 #> [13378,]  5 1072  94 #> [13379,]  5 1073  94 #> [13380,]  5 1074  94 #> [13381,]  5 1075  94 #> [13382,]  5 1076  94 #> [13383,]  5 1077  94 #> [13384,]  5 1078  94 #> [13385,]  5 1079  94 #> [13386,]  5 1080  94 #> [13387,]  5 1081  94 #> [13388,]  5 1082  94 #> [13389,]  5 1083  94 #> [13390,]  5 1084  94 #> [13391,]  5 1085  94 #> [13392,]  5 1086  94 #> [13393,]  5 1087  94 #> [13394,]  5 1088  94 #> [13395,]  5 1089  94 #> [13396,]  5 1090  94 #> [13397,]  5 1091  94 #> [13398,]  5 1092  94 #> [13399,]  5 1093  94 #> [13400,]  5 1094  94 #> [13401,]  5 1095  94 #> [13402,]  5 1096  94 #> [13403,]  5 1097  94 #> [13404,]  5 1098  94 #> [13405,]  5 1099  94 #> [13406,]  5 1100  94 #> [13407,]  5 1101  94 #> [13408,]  5 1102  94 #> [13409,]  5 1103  94 #> [13410,]  5 1104  94 #> [13411,]  5 1068  93 #> [13412,]  5 1069  93 #> [13413,]  5 1070  93 #> [13414,]  5 1071  93 #> [13415,]  5 1072  93 #> [13416,]  5 1073  93 #> [13417,]  5 1074  93 #> [13418,]  5 1075  93 #> [13419,]  5 1076  93 #> [13420,]  5 1077  93 #> [13421,]  5 1078  93 #> [13422,]  5 1079  93 #> [13423,]  5 1080  93 #> [13424,]  5 1081  93 #> [13425,]  5 1082  93 #> [13426,]  5 1083  93 #> [13427,]  5 1084  93 #> [13428,]  5 1085  93 #> [13429,]  5 1086  93 #> [13430,]  5 1087  93 #> [13431,]  5 1088  93 #> [13432,]  5 1089  93 #> [13433,]  5 1090  93 #> [13434,]  5 1091  93 #> [13435,]  5 1092  93 #> [13436,]  5 1093  93 #> [13437,]  5 1094  93 #> [13438,]  5 1095  93 #> [13439,]  5 1096  93 #> [13440,]  5 1097  93 #> [13441,]  5 1098  93 #> [13442,]  5 1099  93 #> [13443,]  5 1100  93 #> [13444,]  5 1101  93 #> [13445,]  5 1102  93 #> [13446,]  5 1069  92 #> [13447,]  5 1070  92 #> [13448,]  5 1071  92 #> [13449,]  5 1072  92 #> [13450,]  5 1073  92 #> [13451,]  5 1074  92 #> [13452,]  5 1075  92 #> [13453,]  5 1076  92 #> [13454,]  5 1077  92 #> [13455,]  5 1078  92 #> [13456,]  5 1079  92 #> [13457,]  5 1080  92 #> [13458,]  5 1081  92 #> [13459,]  5 1082  92 #> [13460,]  5 1083  92 #> [13461,]  5 1084  92 #> [13462,]  5 1085  92 #> [13463,]  5 1086  92 #> [13464,]  5 1087  92 #> [13465,]  5 1088  92 #> [13466,]  5 1089  92 #> [13467,]  5 1090  92 #> [13468,]  5 1091  92 #> [13469,]  5 1092  92 #> [13470,]  5 1093  92 #> [13471,]  5 1094  92 #> [13472,]  5 1095  92 #> [13473,]  5 1096  92 #> [13474,]  5 1097  92 #> [13475,]  5 1098  92 #> [13476,]  5 1099  92 #> [13477,]  5 1100  92 #> [13478,]  5 1101  92 #> [13479,]  5 1070  91 #> [13480,]  5 1071  91 #> [13481,]  5 1072  91 #> [13482,]  5 1073  91 #> [13483,]  5 1074  91 #> [13484,]  5 1075  91 #> [13485,]  5 1076  91 #> [13486,]  5 1077  91 #> [13487,]  5 1078  91 #> [13488,]  5 1079  91 #> [13489,]  5 1080  91 #> [13490,]  5 1081  91 #> [13491,]  5 1082  91 #> [13492,]  5 1083  91 #> [13493,]  5 1084  91 #> [13494,]  5 1085  91 #> [13495,]  5 1086  91 #> [13496,]  5 1087  91 #> [13497,]  5 1088  91 #> [13498,]  5 1089  91 #> [13499,]  5 1090  91 #> [13500,]  5 1091  91 #> [13501,]  5 1092  91 #> [13502,]  5 1093  91 #> [13503,]  5 1094  91 #> [13504,]  5 1095  91 #> [13505,]  5 1096  91 #> [13506,]  5 1097  91 #> [13507,]  5 1098  91 #> [13508,]  5 1099  91 #> [13509,]  5 1100  91 #> [13510,]  5 1071  90 #> [13511,]  5 1072  90 #> [13512,]  5 1073  90 #> [13513,]  5 1074  90 #> [13514,]  5 1075  90 #> [13515,]  5 1076  90 #> [13516,]  5 1077  90 #> [13517,]  5 1078  90 #> [13518,]  5 1079  90 #> [13519,]  5 1080  90 #> [13520,]  5 1081  90 #> [13521,]  5 1082  90 #> [13522,]  5 1083  90 #> [13523,]  5 1084  90 #> [13524,]  5 1085  90 #> [13525,]  5 1086  90 #> [13526,]  5 1087  90 #> [13527,]  5 1088  90 #> [13528,]  5 1089  90 #> [13529,]  5 1090  90 #> [13530,]  5 1091  90 #> [13531,]  5 1092  90 #> [13532,]  5 1093  90 #> [13533,]  5 1094  90 #> [13534,]  5 1095  90 #> [13535,]  5 1096  90 #> [13536,]  5 1097  90 #> [13537,]  5 1098  90 #> [13538,]  5 1072  89 #> [13539,]  5 1073  89 #> [13540,]  5 1074  89 #> [13541,]  5 1075  89 #> [13542,]  5 1076  89 #> [13543,]  5 1077  89 #> [13544,]  5 1078  89 #> [13545,]  5 1079  89 #> [13546,]  5 1080  89 #> [13547,]  5 1081  89 #> [13548,]  5 1082  89 #> [13549,]  5 1083  89 #> [13550,]  5 1084  89 #> [13551,]  5 1085  89 #> [13552,]  5 1086  89 #> [13553,]  5 1087  89 #> [13554,]  5 1088  89 #> [13555,]  5 1089  89 #> [13556,]  5 1090  89 #> [13557,]  5 1091  89 #> [13558,]  5 1092  89 #> [13559,]  5 1093  89 #> [13560,]  5 1094  89 #> [13561,]  5 1095  89 #> [13562,]  5 1096  89 #> [13563,]  5 1097  89 #> [13564,]  5 1074  88 #> [13565,]  5 1075  88 #> [13566,]  5 1076  88 #> [13567,]  5 1077  88 #> [13568,]  5 1078  88 #> [13569,]  5 1079  88 #> [13570,]  5 1080  88 #> [13571,]  5 1081  88 #> [13572,]  5 1082  88 #> [13573,]  5 1083  88 #> [13574,]  5 1084  88 #> [13575,]  5 1085  88 #> [13576,]  5 1086  88 #> [13577,]  5 1087  88 #> [13578,]  5 1088  88 #> [13579,]  5 1089  88 #> [13580,]  5 1090  88 #> [13581,]  5 1091  88 #> [13582,]  5 1092  88 #> [13583,]  5 1093  88 #> [13584,]  5 1094  88 #> [13585,]  5 1095  88 #> [13586,]  5 1076  87 #> [13587,]  5 1077  87 #> [13588,]  5 1078  87 #> [13589,]  5 1079  87 #> [13590,]  5 1080  87 #> [13591,]  5 1081  87 #> [13592,]  5 1082  87 #> [13593,]  5 1083  87 #> [13594,]  5 1084  87 #> [13595,]  5 1085  87 #> [13596,]  5 1086  87 #> [13597,]  5 1087  87 #> [13598,]  5 1088  87 #> [13599,]  5 1089  87 #> [13600,]  5 1090  87 #> [13601,]  5 1091  87 #> [13602,]  5 1092  87 #> [13603,]  5 1093  87 #> [13604,]  5 1079  86 #> [13605,]  5 1080  86 #> [13606,]  5 1081  86 #> [13607,]  5 1082  86 #> [13608,]  5 1083  86 #> [13609,]  5 1084  86 #> [13610,]  5 1085  86 #> [13611,]  5 1086  86 #> [13612,]  5 1087  86 #> [13613,]  5 1088  86 #> [13614,]  5 1089  86 #> [13615,]  5 1090  86"},{"path":"https://swarm-lab.github.io/Rvision/reference/plot.Image.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Rvision Images — plot.Image","title":"Plot Rvision Images — plot.Image","text":"Plotting method objects inheriting class Image.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/plot.Image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Rvision Images — plot.Image","text":"","code":"# S3 method for Rcpp_Image plot(x, ...)"},{"path":"https://swarm-lab.github.io/Rvision/reference/plot.Image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Rvision Images — plot.Image","text":"x Image object. ... Additional arguments passed rasterImage.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/plot.Image.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot Rvision Images — plot.Image","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/plot.Image.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Rvision Images — plot.Image","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) plot(balloon)"},{"path":"https://swarm-lab.github.io/Rvision/reference/plot.blob.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Blobs — plot.blob","title":"Plot Blobs — plot.blob","text":"Plotting method objects inheriting class blob.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/plot.blob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Blobs — plot.blob","text":"","code":"# S3 method for blob plot(x, col = \"red\", asp = 1, ...)"},{"path":"https://swarm-lab.github.io/Rvision/reference/plot.blob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Blobs — plot.blob","text":"x blob object. col color blob center box (default: \"red\"). asp y/x aspect ratio plotting window (default: 1). ... Additional arguments passed plot.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/plot.blob.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot Blobs — plot.blob","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/plot.blob.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Blobs — plot.blob","text":"","code":"dots <- image(system.file(\"sample_img/dots.jpg\", package = \"Rvision\")) blobs <- simpleBlobDetector(invert(dots), min_threshold = 25, max_threshold = 220,                             filter_by_area = TRUE, min_area = 200, max_area = Inf,                             filter_by_color = FALSE) plot(dots) plot(blobs, pch = 20)"},{"path":"https://swarm-lab.github.io/Rvision/reference/plotOF.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Optical Flow Arrays — plotOF","title":"Plot Optical Flow Arrays — plotOF","text":"Plotting method Image objects produced  farneback function.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/plotOF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Optical Flow Arrays — plotOF","text":"","code":"plotOF(   of,   gridsize = c(25, 25),   thresh = 0,   add = TRUE,   arrow.ex = 0.05,   xpd = TRUE,   ... )"},{"path":"https://swarm-lab.github.io/Rvision/reference/plotOF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Optical Flow Arrays — plotOF","text":"Image produced farneback function. gridsize 2-element vector indicating number optical flow vectors plot x-y dimension (default: c(25, 25)). Alternatively, numeric value used dimensions. thresh minimal length optical flow vectors plotted (default: 0). add logical indicating whether plot vector field existing plot (default: FALSE). arrow.ex Controls length arrows. length terms fraction shorter axis plot. default .05, 20 arrows maximum length can line end end along shorter axis. xpd true clip arrows fit inside plot region, default clip. ... Graphics arguments passed arrows function can change color arrow sizes. See arrows help details.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/plotOF.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot Optical Flow Arrays — plotOF","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/plotOF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Optical Flow Arrays — plotOF","text":"","code":"balloon <- video(system.file(\"sample_vid/Balloon.mp4\", package = \"Rvision\")) #> Error: Could not open the video. balloon1 <- readFrame(balloon, 1) #> Error in eval(expr, envir, enclos): object 'balloon' not found balloon2 <- readFrame(balloon, 2) #> Error in eval(expr, envir, enclos): object 'balloon' not found changeColorSpace(balloon1, \"GRAY\", \"self\") #> Error in eval(expr, envir, enclos): object 'balloon1' not found changeColorSpace(balloon2, \"GRAY\", \"self\") #> Error in eval(expr, envir, enclos): object 'balloon2' not found of <- farneback(balloon1, balloon2) #> Error in eval(expr, envir, enclos): object 'balloon1' not found plot(of) #> Error in eval(expr, envir, enclos): object 'of' not found plotOF(of, length = 0.05) #> Error in eval(expr, envir, enclos): object 'of' not found"},{"path":"https://swarm-lab.github.io/Rvision/reference/polarToCart.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Polar Coordinates to Cartesian — polarToCart","title":"Convert Polar Coordinates to Cartesian — polarToCart","text":"polarToCart calculates x y coordinates vector  field polar representation (magnitude angle).","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/polarToCart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Polar Coordinates to Cartesian — polarToCart","text":"","code":"polarToCart(magnitude, angle, x = \"new\", y = \"new\", degree = FALSE)"},{"path":"https://swarm-lab.github.io/Rvision/reference/polarToCart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Polar Coordinates to Cartesian — polarToCart","text":"magnitude 32- 64-bit (32F 64F) Image object corresponding magnitudes vector field. angle 32- 64-bit (32F 64F) Image object corresponding angles vector field. x location x coordinates stored. can take 2 values: \"new\":new Image object created results   stored inside (default). Image object:results stored another   existing Image object. Note error thrown   x dimensions, number channels, bit   depth magnitude angle. y location y coordinates stored. can take 2 values: \"new\":new Image object created results   stored inside (default). Image object:results stored another   existing Image object. Note error thrown   y dimensions, number channels, bit   depth magnitude angle. degree logical indicating whether angles measured radians (default) degrees.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/polarToCart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Polar Coordinates to Cartesian — polarToCart","text":"x=\"new\" y=\"new\", function returns list  containing two Image objects. x y  Image objects, function returns nothing modifies  Image objects place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/polarToCart.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert Polar Coordinates to Cartesian — polarToCart","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/polarToCart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Polar Coordinates to Cartesian — polarToCart","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) field <- spatialGradient(balloon) lapply(field, changeBitDepth, bitdepth = \"32F\", target = \"self\") #> $dx #> NULL #>  #> $dy #> NULL #>  field_converted <- cartToPolar(field$dx, field$dy) field_deconverted <- polarToCart(field_converted$magnitude, field_converted$angle)"},{"path":"https://swarm-lab.github.io/Rvision/reference/pow.html","id":null,"dir":"Reference","previous_headings":"","what":"Power Function — pow","title":"Power Function — pow","text":"pow raises every element Image object  power.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/pow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Power Function — pow","text":"","code":"pow(x, y = 2, target = \"new\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/pow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Power Function — pow","text":"x 32- 64-bit (32F 64F) Image object. y numeric value representing exponent power. Note non-integer power exponent, absolute values Image object used. target location results stored passing sum images function. can take 3 values: \"new\":new Image object created results   stored inside (default). \"self\":results stored back x (faster   destructive). Image object:results stored another   existing Image object. fast replace   content target. Note target   dimensions, bitdepth, number channels x, otherwise   error thrown.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/pow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Power Function — pow","text":"target=\"new\", function returns Image object. target=\"self\", function returns nothing modifies  x place. target Image object,  function returns nothing modifies Image object  place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/pow.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Power Function — pow","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/pow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Power Function — pow","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) changeBitDepth(balloon, \"32F\", 1 , \"self\") pow(balloon, 2) #> Class: image.  #> Dimensions: 640x360. #> Type: BGR, 3-channel, 32F. #> GPU: FALSE."},{"path":"https://swarm-lab.github.io/Rvision/reference/pset.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Pixel Value at Specified Locations — pset","title":"Set Pixel Value at Specified Locations — pset","text":"pset sets values pixels specified x  y coordinates image.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/pset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Pixel Value at Specified Locations — pset","text":"","code":"pset(image, x, y, color)"},{"path":"https://swarm-lab.github.io/Rvision/reference/pset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Pixel Value at Specified Locations — pset","text":"image Image object. x vector x locations (columns) image. y vector y locations (rows) image. color value vector kind R color specification compatible col2bgr. can also matrix number columns number elements x number rows number channels image.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/pset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Pixel Value at Specified Locations — pset","text":"functions returns nothing changes values pixels  image place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/pset.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Set Pixel Value at Specified Locations — pset","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/pset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set Pixel Value at Specified Locations — pset","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) pset(balloon, 1:100, 200:101, \"red\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/pyrDown.html","id":null,"dir":"Reference","previous_headings":"","what":"Pyramid Downsampling — pyrDown","title":"Pyramid Downsampling — pyrDown","text":"prDown blurs image downsamples .","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/pyrDown.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pyramid Downsampling — pyrDown","text":"","code":"pyrDown(image, target = \"new\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/pyrDown.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pyramid Downsampling — pyrDown","text":"image Image object. target location results stored. can take 2 values: \"new\":new Image object created results   stored inside (default). Image object:results stored another   existing Image object. fast replace   content image replace target. Note   target number channels, bit depth   image, error may thrown. dimensions target   must satisfy following conditions: abs(ncol(target) * 2 - ncol(image)) <= 2 abs(nrow(target) * 2 - nrow(image)) <= 2","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/pyrDown.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pyramid Downsampling — pyrDown","text":"target=\"new\", function returns Image object. target Image object, function  returns nothing modifies Image object place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/pyrDown.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Pyramid Downsampling — pyrDown","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/pyrDown.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pyramid Downsampling — pyrDown","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) small_balloon <- pyrDown(balloon)"},{"path":"https://swarm-lab.github.io/Rvision/reference/pyrUp.html","id":null,"dir":"Reference","previous_headings":"","what":"Pyramid Upsampling — pyrUp","title":"Pyramid Upsampling — pyrUp","text":"prUp upsamples image blurs .","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/pyrUp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pyramid Upsampling — pyrUp","text":"","code":"pyrUp(image, target = \"new\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/pyrUp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pyramid Upsampling — pyrUp","text":"image Image object. target location results stored. can take 2 values: \"new\":new Image object created results   stored inside (default). Image object:results stored another   existing Image object. fast replace   content image replace target. Note   target number channels, bit depth   image, error may thrown. dimensions target   must satisfy following conditions: abs(ncol(target) - ncol(image) * 2) <= ncol(target) %% 2 abs(nrow(target) - nrow(image) * 2) <= nrow(target) %% 2","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/pyrUp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pyramid Upsampling — pyrUp","text":"target=\"new\", function returns Image object. target Image object, function  returns nothing modifies Image object place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/pyrUp.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Pyramid Upsampling — pyrUp","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/pyrUp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pyramid Upsampling — pyrUp","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) big_balloon <- pyrUp(balloon)"},{"path":"https://swarm-lab.github.io/Rvision/reference/queue_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"The Number of Rows/Columns and Length of a Queue — nrow.Rcpp_Queue","title":"The Number of Rows/Columns and Length of a Queue — nrow.Rcpp_Queue","text":"nrow, ncol nframes return number rows, columns  frames present Queue object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/queue_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Number of Rows/Columns and Length of a Queue — nrow.Rcpp_Queue","text":"","code":"nrow.Rcpp_Queue(x)  ncol.Rcpp_Queue(x)  # S3 method for Rcpp_Queue length(x)"},{"path":"https://swarm-lab.github.io/Rvision/reference/queue_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Number of Rows/Columns and Length of a Queue — nrow.Rcpp_Queue","text":"x Queue object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/queue_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Number of Rows/Columns and Length of a Queue — nrow.Rcpp_Queue","text":"numeric value.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/queue_dimensions.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The Number of Rows/Columns and Length of a Queue — nrow.Rcpp_Queue","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/queue_dimensions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Number of Rows/Columns and Length of a Queue — nrow.Rcpp_Queue","text":"","code":"balloon <- video(system.file(\"sample_vid/Balloon.mp4\", package = \"Rvision\")) #> Error: Could not open the video. buf <- queue(balloon) #> Error in eval(expr, envir, enclos): object 'balloon' not found nrow(buf) #> Error in eval(expr, envir, enclos): object 'buf' not found ncol(buf) #> Error in eval(expr, envir, enclos): object 'buf' not found length(buf) #> Error in eval(expr, envir, enclos): object 'buf' not found"},{"path":"https://swarm-lab.github.io/Rvision/reference/randn.html","id":null,"dir":"Reference","previous_headings":"","what":"Random Normal Image — randn","title":"Random Normal Image — randn","text":"randn replaces content Image  object normally-distributed random pixel values.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/randn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random Normal Image — randn","text":"","code":"randn(image, mean = 127, sd = 1)"},{"path":"https://swarm-lab.github.io/Rvision/reference/randn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Random Normal Image — randn","text":"image Image object. mean vector indicating mean value (expectation) generated random numbers. can many elements number channels image. less elements number channels, recycled match number channels. elements number channels, extra elements ignored without warning (default: 0). sd vector indicating standard deviation  generated random numbers. can many elements number channels image. less elements number channels, recycled match number channels. elements number channels, extra elements ignored without warning (default: 256).","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/randn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Random Normal Image — randn","text":"function returns nothing modifies image place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/randn.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Random Normal Image — randn","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/randn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Random Normal Image — randn","text":"","code":"rnd <- zeros(100, 100) randn(rnd)"},{"path":"https://swarm-lab.github.io/Rvision/reference/randu.html","id":null,"dir":"Reference","previous_headings":"","what":"Random Uniform Image — randu","title":"Random Uniform Image — randu","text":"randu replaces content Image  object uniformly-distributed random pixel values.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/randu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random Uniform Image — randu","text":"","code":"randu(image, low = 0, high = 256)"},{"path":"https://swarm-lab.github.io/Rvision/reference/randu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Random Uniform Image — randu","text":"image Image object. low vector indicating inclusive lower boundary generated random numbers. can many elements number channels image. less elements number channels, recycled match number channels. elements number channels, extra elements ignored without warning (default: 0). high vector indicating exclusive upper boundary generated random numbers. can many elements number channels image. less elements number channels, recycled match number channels. elements number channels, extra elements ignored without warning (default: 256).","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/randu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Random Uniform Image — randu","text":"function returns nothing modifies image place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/randu.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Random Uniform Image — randu","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/randu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Random Uniform Image — randu","text":"","code":"rnd <- zeros(100, 100) randu(rnd)"},{"path":"https://swarm-lab.github.io/Rvision/reference/readFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Specific Video Frame — readFrame.Rcpp_Video","title":"Read Specific Video Frame — readFrame.Rcpp_Video","text":"Read specific frame Video  VideoStack object returns Image  object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/readFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Specific Video Frame — readFrame.Rcpp_Video","text":"","code":"# S3 method for Rcpp_Video readFrame(x, pos, target = \"new\")  # S3 method for VideoStack readFrame(x, pos, target = \"new\")  readFrame(x, pos, target = \"new\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/readFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Specific Video Frame — readFrame.Rcpp_Video","text":"x Video VideoStack object. pos integer corresponding position frame read video video stack. target location results stored. can take 2 values: \"new\":new Image object created results   stored inside (default). Image object:results stored another   existing Image object. replace content   target. Note target must dimensions   x.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/readFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Specific Video Frame — readFrame.Rcpp_Video","text":"target=\"new\", function returns Image object. target Image object, function  returns nothing modifies Image object place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/readFrame.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read Specific Video Frame — readFrame.Rcpp_Video","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/readFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Specific Video Frame — readFrame.Rcpp_Video","text":"","code":"balloon <- video(system.file(\"sample_vid/Balloon.mp4\", package = \"Rvision\")) #> Error: Could not open the video. frame10 <- readFrame(balloon, 10) #> Error in eval(expr, envir, enclos): object 'balloon' not found"},{"path":"https://swarm-lab.github.io/Rvision/reference/readHIS.html","id":null,"dir":"Reference","previous_headings":"","what":"Read HIS Image from Varex Imaging X-ray Panels — readHIS","title":"Read HIS Image from Varex Imaging X-ray Panels — readHIS","text":"readHIS reads binary files produced X-ray  panels Varex Imaging returns Image objects can  processed package.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/readHIS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read HIS Image from Varex Imaging X-ray Panels — readHIS","text":"","code":"readHIS(x)"},{"path":"https://swarm-lab.github.io/Rvision/reference/readHIS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read HIS Image from Varex Imaging X-ray Panels — readHIS","text":"x character string naming path binary image file.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/readHIS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read HIS Image from Varex Imaging X-ray Panels — readHIS","text":"16U grayscale Image object.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/readHIS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read HIS Image from Varex Imaging X-ray Panels — readHIS","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/readHIS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read HIS Image from Varex Imaging X-ray Panels — readHIS","text":"","code":"#TODO"},{"path":"https://swarm-lab.github.io/Rvision/reference/readMulti.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a Multi-Page Image — readMulti","title":"Read a Multi-Page Image — readMulti","text":"readMulti reads multi-page image returns list  Image objects, corresponding different page.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/readMulti.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a Multi-Page Image — readMulti","text":"","code":"readMulti(x, colorspace = \"BGR\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/readMulti.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a Multi-Page Image — readMulti","text":"x character string naming path multi-page image file. colorspace string indicating desired color space images.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/readMulti.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a Multi-Page Image — readMulti","text":"list Image objects.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/readMulti.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read a Multi-Page Image — readMulti","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/readMulti.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a Multi-Page Image — readMulti","text":"","code":"balloon <- readMulti(system.file(\"sample_img/multipage.tif\", package = \"Rvision\"))"},{"path":"https://swarm-lab.github.io/Rvision/reference/readNext.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Next Frame of an Object — readNext.Rcpp_Queue","title":"Read Next Frame of an Object — readNext.Rcpp_Queue","text":"Read next frame Video,  VideoStack, Stream, Queue  object returns Image object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/readNext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Next Frame of an Object — readNext.Rcpp_Queue","text":"","code":"# S3 method for Rcpp_Queue readNext(x, target = \"new\")  # S3 method for Rcpp_Stream readNext(x, target = \"new\")  # S3 method for Rcpp_Video readNext(x, target = \"new\")  # S3 method for VideoStack readNext(x, target = \"new\")  readNext(x, target = \"new\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/readNext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Next Frame of an Object — readNext.Rcpp_Queue","text":"x Video, VideoStack, Stream, Queue object. target location results stored. can take 2 values: \"new\":new Image object created results   stored inside (default). Image object:results stored another   existing Image object. replace content   target. Note target must dimensions   x.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/readNext.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Next Frame of an Object — readNext.Rcpp_Queue","text":"target=\"new\", function returns Image object. target Image object, function  returns nothing modifies Image object place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/readNext.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read Next Frame of an Object — readNext.Rcpp_Queue","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/readNext.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Next Frame of an Object — readNext.Rcpp_Queue","text":"","code":"balloon <- video(system.file(\"sample_vid/Balloon.mp4\", package = \"Rvision\")) #> Error: Could not open the video. frame_next <- readNext(balloon) #> Error in eval(expr, envir, enclos): object 'balloon' not found"},{"path":"https://swarm-lab.github.io/Rvision/reference/reduce.html","id":null,"dir":"Reference","previous_headings":"","what":"Reduces a 2D Image to a 1D Image — reduce","title":"Reduces a 2D Image to a 1D Image — reduce","text":"reduce reduces 2D Image object 1D  Image object treating image rows/columns set 1D  vectors performing specified operation vectors single  row/column obtained. example, function can used compute  horizontal vertical projections raster image. similar  spirit apply function base R.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/reduce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reduces a 2D Image to a 1D Image — reduce","text":"","code":"reduce(image, dim, fun = \"sum\", target = \"new\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/reduce.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reduces a 2D Image to a 1D Image — reduce","text":"image Image object. dim dimension image function applied . 1 indicates rows (.e., image reduced single column), 2 indicates columns (.e., image reduced single row). fun function applied. can take following values: \"sum\" \"mean\" \"max\" \"min\" target location results stored. can take 2 values: \"new\":new Image object created results   stored inside (default). Image object:results stored another   existing Image object. fast replace   content image replace target. Note   target must number channels image,   otherwise coerced number channels. must also   bitdepth image fun equal max   min. fun equal sum mean   bitdepth can larger preserve accuracy. dim=1, target   must 1 column number rows image.   dim=2, target must 1 row number columns   image.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/reduce.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reduces a 2D Image to a 1D Image — reduce","text":"target=\"new\", function returns Image object. target Image object, function  returns nothing modifies Image object place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/reduce.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Reduces a 2D Image to a 1D Image — reduce","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/reduce.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reduces a 2D Image to a 1D Image — reduce","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) sum_by_row <- reduce(balloon, 1, \"sum\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/release.html","id":null,"dir":"Reference","previous_headings":"","what":"Release Object from Memory — release.Rcpp_Queue","title":"Release Object from Memory — release.Rcpp_Queue","text":"Close Video, VideoStack,  Stream, VideoWriter, Queue  object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/release.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Release Object from Memory — release.Rcpp_Queue","text":"","code":"# S3 method for Rcpp_Queue release(x)  # S3 method for Rcpp_Stream release(x)  # S3 method for Rcpp_Video release(x)  # S3 method for VideoStack release(x)  # S3 method for Rcpp_VideoWriter release(x)  release(x)"},{"path":"https://swarm-lab.github.io/Rvision/reference/release.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Release Object from Memory — release.Rcpp_Queue","text":"x Video, VideoStack, Stream, VideoWriter, Queue object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/release.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Release Object from Memory — release.Rcpp_Queue","text":"successful, object cleared memory","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/release.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Release Object from Memory — release.Rcpp_Queue","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/release.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Release Object from Memory — release.Rcpp_Queue","text":"","code":"balloon <- video(system.file(\"sample_vid/Balloon.mp4\", package = \"Rvision\")) #> Error: Could not open the video. release(balloon) #> Error in eval(expr, envir, enclos): object 'balloon' not found"},{"path":"https://swarm-lab.github.io/Rvision/reference/reset.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset a Queue — reset","title":"Reset a Queue — reset","text":"reset flush Queue object  frames contains starts filling new frames.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/reset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset a Queue — reset","text":"","code":"reset(x)"},{"path":"https://swarm-lab.github.io/Rvision/reference/reset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset a Queue — reset","text":"x Queue object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/reset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset a Queue — reset","text":"function returns nothing.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/reset.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Reset a Queue — reset","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/reset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset a Queue — reset","text":"","code":"balloon <- video(system.file(\"sample_vid/Balloon.mp4\", package = \"Rvision\")) #> Error: Could not open the video. buf <- queue(balloon) #> Error in eval(expr, envir, enclos): object 'balloon' not found reset(buf) #> Error in eval(expr, envir, enclos): object 'buf' not found"},{"path":"https://swarm-lab.github.io/Rvision/reference/resize.html","id":null,"dir":"Reference","previous_headings":"","what":"Resize an Image — resize","title":"Resize an Image — resize","text":"resize returns resized version Image.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/resize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resize an Image — resize","text":"","code":"resize(   image,   height = NULL,   width = NULL,   fx = NULL,   fy = NULL,   interpolation = \"linear\",   target = \"new\" )"},{"path":"https://swarm-lab.github.io/Rvision/reference/resize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resize an Image — resize","text":"image Image object. height positive integer representing new height pixels image (default: NULL). width positive integer representing new width pixels image (default: NULL). fx positive numeric representing ratio width image must resized (default: NULL). Ignored width set. fy positive numeric representing ratio height image must resized (default: NULL). Ignored height set. interpolation character string representing type interpolation use resizing (default: \"linear\"). See notes accepted interpolation methods. target location results stored. can take 3 values: \"new\":new Image object created results   stored inside (default). Image object:results stored another   existing Image object. fast replace   content target. Note target must bit   depth number channels image dimensions must   match resized image, otherwise error thrown.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/resize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resize an Image — resize","text":"target=\"new\", function returns Image object. target Image object, function  returns nothing modifies Image object place.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/resize.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Resize an Image — resize","text":"following interpolation methods supported: \"nearest\": nearest neighbor interpolation. \"linear\": bilinear interpolation. \"cubic\": bicubic interpolation. \"area\": resampling using pixel area relation. \"Lanczos\": Lanczos interpolation 8x8 neighborhood. \"exact\": bit exact bilinear interpolation.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/resize.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Resize an Image — resize","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/resize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Resize an Image — resize","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) balloon_resized <- resize(balloon, fx = 0.2, fy = 0.5)"},{"path":"https://swarm-lab.github.io/Rvision/reference/rotate.html","id":null,"dir":"Reference","previous_headings":"","what":"Image Rotation In 90-Degree Increments — rotate","title":"Image Rotation In 90-Degree Increments — rotate","text":"rotate rotates image multiples 90 degrees.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/rotate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Image Rotation In 90-Degree Increments — rotate","text":"","code":"rotate(image, rotation = \"CLOCKWISE\", target = \"new\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/rotate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Image Rotation In 90-Degree Increments — rotate","text":"image Image object. rotation character string indicating desired rotation: \"CLOCKWISE\" (default):rotate 90 degrees clockwise. \"COUNTER\":rotate 90 degrees counterclockwise. \"180\":rotate 180 degrees. target location results stored. can take 3 values: \"new\":new Image object created results   stored inside (default). Image object:results stored another   existing Image object. fast replace   content image replace target. Note   target must bit depth number channels   image. dimensions must rotation=\"CLOCKWISE\",   inverted rotation=\"CLOCKWISE\" rotation=\"COUNTER\".","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/rotate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Image Rotation In 90-Degree Increments — rotate","text":"target=\"new\", function returns Image object. target Image object, function  returns nothing modifies Image object place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/rotate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Image Rotation In 90-Degree Increments — rotate","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/rotate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Image Rotation In 90-Degree Increments — rotate","text":"","code":"img <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) img_rotated <- rotate(img)"},{"path":"https://swarm-lab.github.io/Rvision/reference/rotateScale.html","id":null,"dir":"Reference","previous_headings":"","what":"Image Rotation and Scaling — rotateScale","title":"Image Rotation and Scaling — rotateScale","text":"rotateScale rotates (clockwise) scales image using  warpAffine function.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/rotateScale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Image Rotation and Scaling — rotateScale","text":"","code":"rotateScale(   image,   center = (dim(image)[2:1] - 1)/2,   angle = 90,   scale = 1,   ... )"},{"path":"https://swarm-lab.github.io/Rvision/reference/rotateScale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Image Rotation and Scaling — rotateScale","text":"image Image object. center 2-elements vector indicating location (row, column) center rotation source image. defaults center image. angle numeric value indicating rotation angle degrees (default: 90). scale numeric value indicating isotropic scale factor (default: 1). ... Additional parameters warpAffine function.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/rotateScale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Image Rotation and Scaling — rotateScale","text":"Image object.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/rotateScale.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Image Rotation and Scaling — rotateScale","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/rotateScale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Image Rotation and Scaling — rotateScale","text":"","code":"img <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) img_rotated <- rotateScale(img, c(50, 50), 45, 1)"},{"path":"https://swarm-lab.github.io/Rvision/reference/scharr.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates an Image Derivatives Using a Scharr Operator — scharr","title":"Calculates an Image Derivatives Using a Scharr Operator — scharr","text":"scharr calculates x y derivative image using  Scharr operator.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/scharr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates an Image Derivatives Using a Scharr Operator — scharr","text":"","code":"scharr(image, dx = 1, dy = 0, scale = 1, target = \"new\", in_place = NULL)"},{"path":"https://swarm-lab.github.io/Rvision/reference/scharr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates an Image Derivatives Using a Scharr Operator — scharr","text":"image Image object. dx Order x derivative. can take 2 values: 1 (default) 0. dx=1 dy must zero. dy Order y derivative. can take 2 values: 1 0 (default). dy=1 dx must zero. scale scale factor computed derivative values (default: 1). target location results stored. can take 3 values: \"new\":new Image object created results   stored inside (default). \"self\":results stored back image (faster   destructive). Image object:results stored another   existing Image object. fast replace   content image replace target. Note   target dimensions, number channels,   bit depth image, error may thrown. in_place Deprecated. Use target instead.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/scharr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates an Image Derivatives Using a Scharr Operator — scharr","text":"target=\"new\", function returns Image object. target=\"self\", function returns nothing modifies  image place. target Image object,  function returns nothing modifies Image object  place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/scharr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculates an Image Derivatives Using a Scharr Operator — scharr","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/scharr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates an Image Derivatives Using a Scharr Operator — scharr","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) balloon_scharr <- scharr(balloon)"},{"path":"https://swarm-lab.github.io/Rvision/reference/selectROI.html","id":null,"dir":"Reference","previous_headings":"","what":"Select a Region of Interest in an Image — selectROI","title":"Select a Region of Interest in an Image — selectROI","text":"selectROI allows user select region interest  (ROI) image. ROI polygonal region selected clicking  locations vertices polygon.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/selectROI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select a Region of Interest in an Image — selectROI","text":"","code":"selectROI(image, window_name = \"Display\", scale = 1, return_mask = TRUE)"},{"path":"https://swarm-lab.github.io/Rvision/reference/selectROI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select a Region of Interest in an Image — selectROI","text":"image Image object. window_name character string representing name display window (default: \"Display\"). scale scaling display relative image size (default: 1). return_mask function return mask ROI. mask 8-bit single-channel image pixels inside ROI painted white pixels outside ROI painted black (default: TRUE).","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/selectROI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select a Region of Interest in an Image — selectROI","text":"return_mask == FALSE, data frame following two  columns:  x: x coordinates ROI polygon. y: y coordinates ROI polygon. return_mask == TRUE, list containing data frame containing  coordinates ROIand 8-bit single-channel image corresponding  mask ROI.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/selectROI.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Select a Region of Interest in an Image — selectROI","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/selectROI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select a Region of Interest in an Image — selectROI","text":"","code":"if (FALSE) { balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) selectROI(balloon) }"},{"path":"https://swarm-lab.github.io/Rvision/reference/sepFilter2D.html","id":null,"dir":"Reference","previous_headings":"","what":"Image Filtering with a Separable Linear Filter — sepFilter2D","title":"Image Filtering with a Separable Linear Filter — sepFilter2D","text":"sepFilter2D applies separable linear filter image.  First, every row image filtered 1D kernel kernel_x.  , every column result filtered 1D kernel kernel_y.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/sepFilter2D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Image Filtering with a Separable Linear Filter — sepFilter2D","text":"","code":"sepFilter2D(image, kernel_x, kernel_y, target = \"new\", in_place = NULL)"},{"path":"https://swarm-lab.github.io/Rvision/reference/sepFilter2D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Image Filtering with a Separable Linear Filter — sepFilter2D","text":"image Image object. kernel_x vector representing kernel along x axis. kernel_y vector representing kernel along y axis. target location results stored. can take 3 values: \"new\":new Image object created results   stored inside (default). \"self\":results stored back image (faster   destructive). Image object:results stored another   existing Image object. fast replace   content image replace target. Note   target dimensions, number channels,   bit depth image, error may thrown. in_place Deprecated. Use target instead.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/sepFilter2D.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Image Filtering with a Separable Linear Filter — sepFilter2D","text":"target=\"new\", function returns Image object. target=\"self\", function returns nothing modifies  image place. target Image object,  function returns nothing modifies Image object  place.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/sepFilter2D.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Image Filtering with a Separable Linear Filter — sepFilter2D","text":"color images, kernel applied channel  image. want apply different kernels channel, first split  image separate channels split process  individually merging using merge function.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/sepFilter2D.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Image Filtering with a Separable Linear Filter — sepFilter2D","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/sepFilter2D.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Image Filtering with a Separable Linear Filter — sepFilter2D","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) k_edge_detection_x <- c(1, 2, 1) k_edge_detection_y <- c(1, 0, -1) balloon_edge <- sepFilter2D(balloon, k_edge_detection_x, k_edge_detection_y)"},{"path":"https://swarm-lab.github.io/Rvision/reference/setProp.html","id":null,"dir":"Reference","previous_headings":"","what":"Set/Get Video Properties — setProp.Rcpp_Stream","title":"Set/Get Video Properties — setProp.Rcpp_Stream","text":"Set get values various properties  Video Stream object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/setProp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set/Get Video Properties — setProp.Rcpp_Stream","text":"","code":"# S3 method for Rcpp_Stream setProp(x, property, value)  # S3 method for Rcpp_Stream getProp(x, property)  # S3 method for Rcpp_Video setProp(x, property, value)  # S3 method for Rcpp_Video getProp(x, property)  # S3 method for Rcpp_VideoWriter setProp(x, property, value)  # S3 method for Rcpp_VideoWriter getProp(x, property)  setProp(x, property, value)  getProp(x, property)"},{"path":"https://swarm-lab.github.io/Rvision/reference/setProp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set/Get Video Properties — setProp.Rcpp_Stream","text":"x Video Stream object. property character string specifying name property modify (see details complete list). value new value property.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/setProp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set/Get Video Properties — setProp.Rcpp_Stream","text":"setProp returns TRUE property set successfully.  getProp returns numeric value character string depending  property.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/setProp.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Set/Get Video Properties — setProp.Rcpp_Stream","text":"Video properties : POS_MSEC: Current position video file milliseconds. POS_FRAMES: 0-based index frame decoded/captured next. POS_AVI_RATIO Relative position video file: 0=start film, 1=end film. FRAME_WIDTH: Width pixels frames video stream. FRAME_HEIGHT: Height pixels frames video stream. FPS: Frame rate frames per second. FOURCC: 4-character FOURCC    code codec FRAME_COUNT: Number frames video file. Setting stream properties depends lot things, mainly  operating system, camera drivers installed computer  camera . consequence, setting stream values might work  installation. Stream properties : FRAME_WIDTH: Width pixels frames video stream. FRAME_HEIGHT: Height pixels frames video stream. BRIGHTNESS: Brightness image CONTRAST: Contrast image SATURATION: Saturation image HUE: Hue image GAIN: Gain image EXPOSURE: Exposure","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/setProp.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Set/Get Video Properties — setProp.Rcpp_Stream","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/setProp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set/Get Video Properties — setProp.Rcpp_Stream","text":"","code":"balloon <- video(system.file(\"sample_vid/Balloon.mp4\", package = \"Rvision\")) #> Error: Could not open the video. getProp(balloon, \"FPS\") #> Error in eval(expr, envir, enclos): object 'balloon' not found setProp(balloon, \"POS_FRAMES\", 25) #> Error in eval(expr, envir, enclos): object 'balloon' not found"},{"path":"https://swarm-lab.github.io/Rvision/reference/setTo.html","id":null,"dir":"Reference","previous_headings":"","what":"Set All or Some of an Image to the Specified Value — setTo","title":"Set All or Some of an Image to the Specified Value — setTo","text":"mask specified, setTo sets color  parts image corresponding white parts mask desired  color. mask specified, entire image set desired color.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/setTo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set All or Some of an Image to the Specified Value — setTo","text":"","code":"setTo(image, mask, color = \"red\", target = \"new\", in_place = NULL)"},{"path":"https://swarm-lab.github.io/Rvision/reference/setTo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set All or Some of an Image to the Specified Value — setTo","text":"image Image object. mask 8U, single-channel Image object. region colored non-zero. color value vector kind R color specification compatible col2bgr representing color rectangle's outline (default: \"red\"). target location results stored. can take 2 values: \"new\":new Image object created results   stored inside (default). \"self\":results stored back image (faster   destructive). in_place Deprecated. Use target instead.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/setTo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set All or Some of an Image to the Specified Value — setTo","text":"target=\"new\", function returns Image object. target=\"self\", function returns nothing modifies  image place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/setTo.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Set All or Some of an Image to the Specified Value — setTo","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/setTo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set All or Some of an Image to the Specified Value — setTo","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) mask <- zeros(nrow(balloon), ncol(balloon), 1) poly <- data.frame(x = c(290, 290, 440, 440), y = c(170, 325, 325, 170)) fillPoly(mask, poly, color = \"white\") balloon_painted <- setTo(balloon, mask, \"green\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/simpleBlobDetector.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple Blob Detector — simpleBlobDetector","title":"Simple Blob Detector — simpleBlobDetector","text":"simpleBlobDetector implements simple algorithm  extracting blobs Image object. blob region  image differs properties (e.g. brightness, color) surrounding  regions.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/simpleBlobDetector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple Blob Detector — simpleBlobDetector","text":"","code":"simpleBlobDetector(   image,   min_threshold = 50,   max_threshold = 220,   threshold_step = 10,   min_repeatability = 2,   min_dist_between_blobs = 10,   filter_by_area = TRUE,   min_area = 25,   max_area = 5000,   filter_by_color = TRUE,   blob_color = 0,   filter_by_circularity = FALSE,   min_circularity = 0.8,   max_circularity = Inf,   filter_by_convexity = TRUE,   min_convexity = 0.95,   max_convexity = Inf,   filter_by_inertia = TRUE,   min_inertia_ratio = 0.1,   max_inertia_ratio = Inf )"},{"path":"https://swarm-lab.github.io/Rvision/reference/simpleBlobDetector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple Blob Detector — simpleBlobDetector","text":"image Image object. min_threshold numeric value representing starting thresholding value (see Note; default: 50). max_threshold numeric value representing ending thresholding value (see Note; default: 220). threshold_step numeric value representing step size go min_threshold max_treshold (see Note; default: 10). min_repeatability numeric value representing number threshold values blob detected considered stable (see Note; default: 2). min_dist_between_blobs numeric value representing minimum distance pixels pixel group centers several binary (thresholded) images considered distinct blobs (default: 10). filter_by_area logical indicating whether blobs filtered based area pixels (default: TRUE). min_area numeric value representing smallest acceptable area blobs (pixels). Blobs smaller value discarded (default: 25). max_area numeric value representing largest acceptable area blobs (pixels). Blobs larger value discarded. (default: 5000). filter_by_color logical indicating whether blobs filtered based color (default: TRUE). blob_color integer 0 255 representing color blobs. 0 select dark blobs, 255 select bright blobs (default: 0). filter_by_circularity logical indicating whether blobs filtered based circularity (default: FALSE). min_circularity numeric value representing smallest acceptable circularity blobs. Blobs smaller circularity value discarded. (default: 0.8). max_circularity numeric value representing largest acceptable circularity blobs. Blobs larger circularity value discarded. (default: Inf). filter_by_convexity logical indicating whether blobs filtered based convexity (default: TRUE). min_convexity numeric value representing smallest acceptable convexity blobs. Blobs smaller convexity value discarded. (default: 0.95). max_convexity numeric value representing largest acceptable convexity blobs. Blobs larger convexity value discarded. (default: Inf). filter_by_inertia logical indicating whether blobs filtered based inertia ratio (default: TRUE). min_inertia_ratio numeric value representing smallest acceptable inertia ratio blobs. Blobs smaller ratio value discarded. (default: 0.1). max_inertia_ratio numeric value representing largest acceptable inertia ratio blobs. Blobs larger ratio value discarded. (default: Inf).","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/simpleBlobDetector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple Blob Detector — simpleBlobDetector","text":"data frame class blob following columns: \"id\":unique identifier blob image. \"x\":x coordinate blob image. \"y\":y coordinate blob image. \"size\":diameter circle containing blob.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/simpleBlobDetector.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Simple Blob Detector — simpleBlobDetector","text":"simpleBlobDetector following steps: image converted several binary images, corresponding     different threshold starting min_threshold ending     max_threshold, increment threshold_step. binary image, connected white pixels grouped together     center mass calculated. Groups connected white pixels across multiple binary images     merged centers less min_dist_between_blobs pixels     apart. blobs. centers radii blobs computed returned.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/simpleBlobDetector.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simple Blob Detector — simpleBlobDetector","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/simpleBlobDetector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simple Blob Detector — simpleBlobDetector","text":"","code":"dots <- image(system.file(\"sample_img/dots.jpg\", package = \"Rvision\")) blobs <- simpleBlobDetector(invert(dots), min_threshold = 25, max_threshold = 220,                             filter_by_area = TRUE, min_area = 200, max_area = Inf,                             filter_by_color = FALSE)"},{"path":"https://swarm-lab.github.io/Rvision/reference/sobel.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates an Image Derivatives Using an Extended Sobel Operator — sobel","title":"Calculates an Image Derivatives Using an Extended Sobel Operator — sobel","text":"sobel calculates first, second, third, mixed image  derivatives image using extended Sobel operator.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/sobel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates an Image Derivatives Using an Extended Sobel Operator — sobel","text":"","code":"sobel(   image,   dx = 1,   dy = 1,   k_size = 5,   scale = 1,   target = \"new\",   in_place = NULL )"},{"path":"https://swarm-lab.github.io/Rvision/reference/sobel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates an Image Derivatives Using an Extended Sobel Operator — sobel","text":"image Image object. dx Order x derivative (default: 1). dy Order y derivative (default: 1), k_size half-size pixels kernel (default: 5). scale scale factor computed derivative values (default: 1). target location results stored. can take 3 values: \"new\":new Image object created results   stored inside (default). \"self\":results stored back image (faster   destructive). Image object:results stored another   existing Image object. fast replace   content image replace target. Note   target dimensions, number channels,   bit depth image, error may thrown. in_place Deprecated. Use target instead.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/sobel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates an Image Derivatives Using an Extended Sobel Operator — sobel","text":"target=\"new\", function returns Image object. target=\"self\", function returns nothing modifies  image place. target Image object,  function returns nothing modifies Image object  place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/sobel.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculates an Image Derivatives Using an Extended Sobel Operator — sobel","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/sobel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates an Image Derivatives Using an Extended Sobel Operator — sobel","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) balloon_sobel <- sobel(balloon)"},{"path":"https://swarm-lab.github.io/Rvision/reference/spatialGradient.html","id":null,"dir":"Reference","previous_headings":"","what":"First Order Derivatives of an Image with the Sobel Operator — spatialGradient","title":"First Order Derivatives of an Image with the Sobel Operator — spatialGradient","text":"spatialGradient calculates first order derivative  image x y using Sobel operator.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/spatialGradient.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"First Order Derivatives of an Image with the Sobel Operator — spatialGradient","text":"","code":"spatialGradient(image, k_size = 5)"},{"path":"https://swarm-lab.github.io/Rvision/reference/spatialGradient.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"First Order Derivatives of an Image with the Sobel Operator — spatialGradient","text":"image Image object. k_size half-size pixels kernel (default: 5).","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/spatialGradient.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"First Order Derivatives of an Image with the Sobel Operator — spatialGradient","text":"list containing two Image objects, one  derivative along x axis derivative along y axis.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/spatialGradient.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"First Order Derivatives of an Image with the Sobel Operator — spatialGradient","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/spatialGradient.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"First Order Derivatives of an Image with the Sobel Operator — spatialGradient","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) balloon_gradient <- spatialGradient(balloon, 5)"},{"path":"https://swarm-lab.github.io/Rvision/reference/split.html","id":null,"dir":"Reference","previous_headings":"","what":"Split an Image into Separate Channels — split","title":"Split an Image into Separate Channels — split","text":"split returns list grayscale images corresponding  channels (blue, green, red, alpha) image.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/split.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split an Image into Separate Channels — split","text":"","code":"split(x)"},{"path":"https://swarm-lab.github.io/Rvision/reference/split.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split an Image into Separate Channels — split","text":"x Image object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/split.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split an Image into Separate Channels — split","text":"list single channel (grayscale) Image objects.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/split.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Split an Image into Separate Channels — split","text":"Color images usually represented 3 channels (possibly 4)  following order: blue (1), green (2), red (3), possibly alpha (4).","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/split.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Split an Image into Separate Channels — split","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/split.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split an Image into Separate Channels — split","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) balloon_chan <- split(balloon)"},{"path":"https://swarm-lab.github.io/Rvision/reference/sqrBoxFilter.html","id":null,"dir":"Reference","previous_headings":"","what":"Blurs an Image Using a Square Box Filter — sqrBoxFilter","title":"Blurs an Image Using a Square Box Filter — sqrBoxFilter","text":"sqrBoxFilter calculates normalized unnormalized  sum squares pixels box surrounding focal pixel. result  blurred version source image.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/sqrBoxFilter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Blurs an Image Using a Square Box Filter — sqrBoxFilter","text":"","code":"sqrBoxFilter(   image,   k_height = 5,   k_width = 5,   normalize = TRUE,   target = \"new\",   in_place = NULL )"},{"path":"https://swarm-lab.github.io/Rvision/reference/sqrBoxFilter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Blurs an Image Using a Square Box Filter — sqrBoxFilter","text":"image Image object. k_height half-height pixels kernel (default: 5). k_width half-width pixels kernel (default: 5). normalize Whether kernel normalized area (default: true). target location results stored. can take 3 values: \"new\":new Image object created results   stored inside (default). \"self\":results stored back image (faster   destructive). Image object:results stored another   existing Image object. fast replace   content image replace target. Note   target dimensions, number channels,   bit depth image, error may thrown. in_place Deprecated. Use target instead.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/sqrBoxFilter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Blurs an Image Using a Square Box Filter — sqrBoxFilter","text":"target=\"new\", function returns Image object. target=\"self\", function returns nothing modifies  image place. target Image object,  function returns nothing modifies Image object  place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/sqrBoxFilter.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Blurs an Image Using a Square Box Filter — sqrBoxFilter","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/sqrBoxFilter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Blurs an Image Using a Square Box Filter — sqrBoxFilter","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) balloon_blur <- sqrBoxFilter(balloon, 11, 11)"},{"path":"https://swarm-lab.github.io/Rvision/reference/sqrt.html","id":null,"dir":"Reference","previous_headings":"","what":"Square Root Generic for Image objects — sqrt","title":"Square Root Generic for Image objects — sqrt","text":"Overloaded sqrt handle Image  objects.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/sqrt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Square Root Generic for Image objects — sqrt","text":"","code":"sqrt(x, target = \"new\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/sqrt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Square Root Generic for Image objects — sqrt","text":"x 32- 64-bit (32F 64F) Image object. target location results stored passing sum images function. can take 3 values: \"new\":new Image object created results   stored inside (default). \"self\":results stored back x (faster   destructive). Image object:results stored another   existing Image object. fast replace   content target. Note target   dimensions, bitdepth, number channels x, otherwise   error thrown.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/sqrt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Square Root Generic for Image objects — sqrt","text":"target=\"new\", function returns Image object. target=\"self\", function returns nothing modifies  x place. target Image object,  function returns nothing modifies Image object  place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/sqrt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Square Root Generic for Image objects — sqrt","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/sqrt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Square Root Generic for Image objects — sqrt","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) changeBitDepth(balloon, \"32F\", 1 , \"self\") sqrt(balloon) #> Class: image.  #> Dimensions: 640x360. #> Type: BGR, 3-channel, 32F. #> GPU: FALSE."},{"path":"https://swarm-lab.github.io/Rvision/reference/stream_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"The Number of Rows/Columns of a Stream — nrow.Rcpp_Stream","title":"The Number of Rows/Columns of a Stream — nrow.Rcpp_Stream","text":"nrow ncol return number rows columns  present Stream object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/stream_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Number of Rows/Columns of a Stream — nrow.Rcpp_Stream","text":"","code":"nrow.Rcpp_Stream(x)  ncol.Rcpp_Stream(x)"},{"path":"https://swarm-lab.github.io/Rvision/reference/stream_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Number of Rows/Columns of a Stream — nrow.Rcpp_Stream","text":"x Stream object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/stream_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Number of Rows/Columns of a Stream — nrow.Rcpp_Stream","text":"numeric value.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/stream_dimensions.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The Number of Rows/Columns of a Stream — nrow.Rcpp_Stream","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/stream_dimensions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Number of Rows/Columns of a Stream — nrow.Rcpp_Stream","text":"","code":"if (FALSE) { live <- stream(0) nrow(live) ncol(live) release(live) }"},{"path":"https://swarm-lab.github.io/Rvision/reference/sub-.Rcpp_Image.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract or Replace Parts of an Image — [.Rcpp_Image","title":"Extract or Replace Parts of an Image — [.Rcpp_Image","text":"Operators acting Image objects extract  replace parts.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/sub-.Rcpp_Image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract or Replace Parts of an Image — [.Rcpp_Image","text":"","code":"# S3 method for Rcpp_Image [(x, ...)  # S3 method for Rcpp_Image [(x, i = NULL, j = NULL) <- value"},{"path":"https://swarm-lab.github.io/Rvision/reference/sub-.Rcpp_Image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract or Replace Parts of an Image — [.Rcpp_Image","text":"x Image object. ... arguments passed [ extracting parts. case, function treat image R array accept/require arguments. , j Indices specifying elements extract replace. Indices numeric vectors values coerced integer .integer (hence truncated towards zero) logical vectors recycled necessary match dimensions image. value Vector matrix data replace pixels. Typically, matrix number rows number channels image, similar produced col2rgb.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/sub-.Rcpp_Image.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract or Replace Parts of an Image — [.Rcpp_Image","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/sub-.Rcpp_Image.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract or Replace Parts of an Image — [.Rcpp_Image","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) balloon[1:100, 1:100, ] #> , , 1 #>  #>        [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] #>   [1,]   97   97   97   97   97   97   97   97   97    98    98    98    98 #>   [2,]   97   97   97   97   97   97   97   97   97    98    98    98    98 #>   [3,]   95   95   95   95   95   95   96   96   96    96    96    96    98 #>   [4,]   95   95   95   95   95   96   98   98   98    98    98    98   100 #>   [5,]   98   98   98   98   98   98   99   99   99    99    99    99   101 #>   [6,]  100  100  100  100  100  100  101  101  101   101   101   101   103 #>   [7,]  100  100  100  100  101  101  102  102  102   102   102   102   104 #>   [8,]  102  102  102  102  102  102  102  103  103   103   105   105   107 #>   [9,]  102  102  103  103  103  103  105  105  106   106   106   107   107 #>  [10,]  103  103  105  105  105  107  107  107  108   108   108   109   109 #>  [11,]  105  105  106  106  106  107  107  107  108   108   109   110   110 #>  [12,]  106  106  107  108  108  108  109  109  110   110   110   113   113 #>  [13,]  107  107  108  109  109  109  110  110  111   111   113   114   115 #>  [14,]  109  109  110  110  111  111  111  113  114   114   114   116   117 #>  [15,]  111  111  113  113  114  114  114  114  114   115   118   120   120 #>  [16,]  113  113  114  114  115  116  116  116  117   118   120   122   123 #>  [17,]  114  114  115  115  116  117  117  118  120   121   122   123   123 #>  [18,]  115  116  117  117  118  120  120  120  122   122   123   124   125 #>  [19,]  115  115  116  116  118  119  119  120  121   121   122   123   125 #>  [20,]  118  118  119  119  120  121  121  121  122   123   125   126   126 #>  [21,]  120  120  121  121  122  123  123  123  126   126   126   128   128 #>  [22,]  121  121  123  123  123  126  126  126  127   128   129   129   132 #>  [23,]  123  123  125  125  126  127  127  128  129   130   130   133   133 #>  [24,]  126  126  127  127  128  129  129  129  132   132   133   134   135 #>  [25,]  126  126  127  127  128  130  130  130  131   131   131   133   134 #>  [26,]  127  127  130  130  130  132  132  132  133   133   134   135   135 #>  [27,]  130  130  131  131  132  133  133  134  135   137   138   138   139 #>  [28,]  131  131  133  133  133  135  135  137  138   138   140   140   141 #>  [29,]  131  131  132  132  133  136  136  137  138   139   139   140   140 #>  [30,]  133  135  135  135  136  138  139  139  140   140   142   142   143 #>  [31,]  136  136  138  138  138  139  140  140  143   143   143   145   145 #>  [32,]  137  138  138  138  139  142  142  143  144   144   145   146   149 #>  [33,]  137  138  139  139  140  142  143  143  145   146   147   147   149 #>  [34,]  138  138  140  140  142  144  144  145  146   147   146   147   149 #>  [35,]  140  140  142  142  143  144  145  146  147   147   147   147   150 #>  [36,]  142  142  144  144  144  146  147  147  147   149   149   151   152 #>  [37,]  143  144  145  145  146  149  149  149  149   150   150   152   154 #>  [38,]  144  145  145  145  147  149  149  150  151   152   153   154   156 #>  [39,]  144  145  146  146  147  150  150  151  152   154   154   157   158 #>  [40,]  144  145  146  146  147  150  150  152  156   156   158   159   160 #>  [41,]  145  145  146  147  149  151  151  153  154   157   159   160   163 #>  [42,]  145  145  146  147  149  151  151  153  154   158   159   161   163 #>  [43,]  146  146  149  149  149  151  152  153  156   159   161   164   164 #>  [44,]  147  149  150  151  152  153  154  156  158   161   164   165   165 #>  [45,]  149  149  151  151  152  154  157  158  161   164   165   166   166 #>  [46,]  150  150  152  153  153  154  157  160  164   165   167   167   166 #>  [47,]  151  151  152  154  154  157  158  161  164   165   166   166   165 #>  [48,]  151  152  154  154  157  159  160  163  164   165   165   165   164 #>  [49,]  152  152  154  154  157  159  160  163  164   164   164   163   161 #>  [50,]  152  153  156  156  158  159  161  163  164   164   163   161   161 #>  [51,]  152  153  156  157  158  161  161  163  164   164   163   160   159 #>  [52,]  152  153  156  157  158  161  161  163  163   163   160   158   157 #>  [53,]  151  153  156  158  160  161  161  161  160   159   158   156   153 #>  [54,]  151  153  154  157  158  160  160  159  158   156   154   153   152 #>  [55,]  150  151  152  156  156  158  157  156  153   153   152   152   152 #>  [56,]  149  150  151  152  152  153  152  152  151   151   151   151   151 #>  [57,]  151  152  152  152  153  153  153  153  152   153   153   153   154 #>  [58,]  149  151  152  152  153  151  152  153  152   152   152   153   153 #>  [59,]  149  149  151  151  154  153  153  154  153   153   154   155   155 #>  [60,]  149  149  151  151  153  153  153  154  153   153   154   154   154 #>  [61,]  148  149  149  151  153  153  153  154  153   153   154   154   154 #>  [62,]  148  149  149  151  153  153  154  154  154   153   153   154   154 #>  [63,]  149  150  151  151  153  153  153  153  153   153   153   154   154 #>  [64,]  149  150  151  151  153  153  153  153  153   154   154   154   155 #>  [65,]  149  149  151  151  151  153  153  154  154   154   155   155   155 #>  [66,]  149  149  151  151  151  153  154  154  154   155   155   155   155 #>  [67,]  149  150  151  151  153  153  154  155  153   153   154   154   154 #>  [68,]  150  150  151  153  153  154  155  155  154   154   154   155   155 #>  [69,]  151  151  153  153  154  155  155  156  154   155   155   156   156 #>  [70,]  151  153  154  154  155  155  156  157  155   156   158   158   159 #>  [71,]  154  154  155  156  156  157  157  158  158   158   159   159   160 #>  [72,]  155  155  156  156  157  158  160  160  159   159   160   160   161 #>  [73,]  155  156  157  157  158  160  161  162  159   160   161   162   162 #>  [74,]  156  157  158  160  161  161  162  162  160   161   162   162   163 #>  [75,]  156  157  158  160  161  162  163  163  161   162   163   163   163 #>  [76,]  156  158  160  161  162  163  164  164  162   163   163   165   166 #>  [77,]  157  158  161  162  163  164  165  165  165   165   165   166   167 #>  [78,]  158  160  161  163  164  164  165  167  165   165   166   167   167 #>  [79,]  158  160  161  162  164  164  167  168  166   166   167   168   169 #>  [80,]  156  157  160  162  163  164  165  168  166   167   168   169   170 #>  [81,]  156  157  158  161  162  162  164  168  167   168   169   170   170 #>  [82,]  155  156  158  158  161  162  163  167  166   167   169   170   172 #>  [83,]  155  156  157  158  161  161  162  165  163   167   169   170   172 #>  [84,]  153  154  156  158  160  160  162  164  162   166   168   170   173 #>  [85,]  153  154  155  156  157  158  161  163  161   165   168   169   172 #>  [86,]  151  153  155  156  157  158  160  162  161   165   168   169   172 #>  [87,]  151  153  155  156  157  158  161  162  162   165   168   170   173 #>  [88,]  154  155  156  157  158  160  162  163  163   167   169   172   174 #>  [89,]  154  155  157  158  160  161  163  164  165   167   170   173   175 #>  [90,]  155  156  158  160  161  162  163  165  165   167   170   175   177 #>  [91,]  155  156  158  160  161  162  163  165  166   168   172   175   177 #>  [92,]  156  157  158  161  162  163  164  167  167   168   172   175   177 #>  [93,]  157  158  160  161  162  164  165  168  167   169   172   175   177 #>  [94,]  157  158  160  162  163  165  165  169  168   170   173   176   177 #>  [95,]  158  158  161  163  163  165  167  169  168   172   174   176   179 #>  [96,]  158  160  161  163  164  165  169  170  170   174   176   179   182 #>  [97,]  158  160  161  163  164  167  169  171  172   175   177   181   184 #>  [98,]  158  160  161  163  164  167  169  172  173   177   180   182   186 #>  [99,]  157  160  161  163  165  167  168  172  175   179   180   182   184 #> [100,]  157  161  162  164  167  168  168  172  176   180   181   184   184 #>        [,14] [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23] [,24] [,25] #>   [1,]    98    98    98    98    98   100   100   100   101    99    99   100 #>   [2,]    98    98    98    98    98   100   101   101   102    99   100   101 #>   [3,]    98    98    98   100   100   101   101   101   102   102   102   103 #>   [4,]   100   100   101   101   101   102   102   102   104   104   104   105 #>   [5,]   101   102   102   103   103   103   104   104   105   105   105   107 #>   [6,]   103   103   103   104   104   105   107   107   107   108   108   109 #>   [7,]   104   104   105   107   107   108   109   109   109   108   108   109 #>   [8,]   107   108   109   109   109   110   110   110   111   110   110   111 #>   [9,]   107   110   110   111   111   111   112   110   111   111   111   111 #>  [10,]   110   112   111   112   112   113   113   111   113   113   113   112 #>  [11,]   111   111   111   113   113   114   114   114   115   113   113   114 #>  [12,]   113   114   115   114   116   117   117   116   117   116   115   118 #>  [13,]   115   116   117   117   117   118   120   118   119   118   119   117 #>  [14,]   118   118   120   120   120   121   121   120   121   120   121   119 #>  [15,]   121   121   122   122   122   123   123   121   122   122   122   121 #>  [16,]   123   123   124   124   124   125   127   123   125   126   125   125 #>  [17,]   124   124   124   123   123   125   125   126   127   127   127   126 #>  [18,]   125   127   127   126   126   126   127   128   129   129   130   128 #>  [19,]   125   126   127   125   125   126   127   128   128   128   131   128 #>  [20,]   127   128   129   127   127   128   130   131   130   131   133   130 #>  [21,]   129   127   128   128   128   128   129   130   131   132   132   133 #>  [22,]   132   130   131   131   131   130   131   132   132   133   135   135 #>  [23,]   133   131   132   130   131   132   132   133   135   136   136   137 #>  [24,]   135   133   134   132   133   135   135   136   138   138   138   139 #>  [25,]   135   137   137   136   137   138   137   138   139   139   142   142 #>  [26,]   138   139   141   139   139   139   142   143   142   143   144   144 #>  [27,]   141   140   142   143   143   143   144   144   145   146   145   145 #>  [28,]   142   143   144   145   145   145   147   146   149   147   147   147 #>  [29,]   143   144   145   146   147   149   149   150   150   150   151   151 #>  [30,]   144   146   147   149   149   150   151   151   151   152   152   152 #>  [31,]   147   149   149   150   151   152   152   152   153   153   154   154 #>  [32,]   149   150   151   151   152   154   154   156   156   156   157   157 #>  [33,]   151   152   152   153   154   157   157   158   158   158   158   158 #>  [34,]   151   152   153   153   156   158   160   160   160   160   160   160 #>  [35,]   151   152   154   152   155   158   161   161   161   161   161   161 #>  [36,]   153   154   156   154   157   161   163   163   163   163   163   163 #>  [37,]   154   156   157   157   158   162   163   165   165   165   165   165 #>  [38,]   157   158   159   157   159   162   165   166   166   168   168   168 #>  [39,]   160   160   159   159   161   163   166   168   169   169   169   169 #>  [40,]   161   161   161   161   163   164   168   169   170   170   170   171 #>  [41,]   163   161   161   162   163   165   169   170   170   171   171   171 #>  [42,]   163   162   162   162   163   166   169   169   170   170   171   171 #>  [43,]   164   162   162   163   164   168   169   169   170   170   171   171 #>  [44,]   165   163   163   163   164   166   169   169   169   170   171   171 #>  [45,]   165   163   162   162   162   164   166   166   166   168   169   170 #>  [46,]   165   162   161   161   158   161   162   162   163   164   166   168 #>  [47,]   164   161   159   157   156   159   161   161   163   162   163   165 #>  [48,]   163   160   158   155   155   158   160   161   163   161   163   164 #>  [49,]   160   159   157   159   160   161   162   163   165   163   165   166 #>  [50,]   160   157   157   159   159   160   162   162   165   163   164   166 #>  [51,]   158   158   158   158   159   159   160   162   163   165   166   166 #>  [52,]   156   158   158   158   159   159   159   160   162   163   163   165 #>  [53,]   153   155   155   156   158   159   160   160   160   161   163   163 #>  [54,]   152   154   154   155   156   158   159   159   159   159   160   160 #>  [55,]   152   154   154   154   155   155   156   158   158   158   160   161 #>  [56,]   152   154   154   154   154   154   155   156   156   158   159   160 #>  [57,]   154   154   154   154   154   154   155   155   156   158   159   159 #>  [58,]   153   153   153   154   154   154   154   155   155   156   158   159 #>  [59,]   155   153   153   154   154   154   154   154   155   158   160   160 #>  [60,]   155   153   153   153   153   154   154   155   155   158   160   160 #>  [61,]   154   154   155   153   153   153   154   155   155   158   160   160 #>  [62,]   154   154   155   153   153   153   154   155   155   158   160   161 #>  [63,]   155   155   155   153   153   153   154   154   155   157   160   160 #>  [64,]   155   155   155   153   153   153   154   154   154   158   160   160 #>  [65,]   156   156   155   153   153   154   154   154   155   158   160   161 #>  [66,]   156   156   156   153   153   154   154   154   155   157   160   161 #>  [67,]   154   154   154   154   154   154   154   155   155   156   158   160 #>  [68,]   156   156   155   155   154   154   154   155   155   156   158   160 #>  [69,]   156   158   158   156   156   155   156   156   156   156   159   160 #>  [70,]   159   159   159   159   158   158   158   158   158   158   159   160 #>  [71,]   161   161   161   160   160   160   160   159   159   159   160   161 #>  [72,]   162   162   162   162   162   161   161   160   160   160   160   161 #>  [73,]   163   163   163   163   163   163   162   161   160   160   161   162 #>  [74,]   165   165   166   166   165   163   163   161   161   161   161   163 #>  [75,]   165   166   166   166   166   165   163   162   161   161   162   162 #>  [76,]   167   167   167   167   166   165   163   162   161   161   162   163 #>  [77,]   167   168   168   167   166   166   165   163   162   162   162   163 #>  [78,]   168   169   169   168   168   167   165   163   162   162   163   163 #>  [79,]   169   170   169   169   169   167   166   165   163   163   163   165 #>  [80,]   170   172   170   170   170   169   168   167   166   166   166   167 #>  [81,]   172   173   172   170   170   169   169   168   167   167   168   168 #>  [82,]   173   173   173   173   172   170   170   169   168   168   169   169 #>  [83,]   173   174   175   173   172   173   172   170   169   169   170   170 #>  [84,]   174   174   175   174   173   174   173   172   170   169   170   170 #>  [85,]   174   175   176   174   175   174   173   171   170   170   170   170 #>  [86,]   174   175   177   177   177   175   174   172   172   170   171   172 #>  [87,]   175   176   179   179   178   178   178   175   174   172   173   172 #>  [88,]   176   179   181   181   180   181   180   178   177   174   174   174 #>  [89,]   177   179   182   181   185   185   184   180   178   175   174   174 #>  [90,]   179   181   184   182   187   188   187   185   180   177   175   175 #>  [91,]   180   183   184   182   188   188   188   186   180   178   177   175 #>  [92,]   181   184   186   186   188   188   188   186   181   179   178   177 #>  [93,]   181   183   186   188   187   188   188   187   182   179   179   178 #>  [94,]   182   184   187   186   185   186   187   186   182   179   179   177 #>  [95,]   182   184   184   181   180   181   182   182   180   178   177   177 #>  [96,]   183   186   183   179   175   177   180   180   178   177   177   177 #>  [97,]   186   186   182   177   173   174   178   178   177   177   175   175 #>  [98,]   187   186   182   178   174   175   177   177   177   177   175   177 #>  [99,]   185   186   182   179   176   177   180   177   177   177   177   177 #> [100,]   184   184   181   180   176   177   179   177   177   177   177   177 #>        [,26] [,27] [,28] [,29] [,30] [,31] [,32] [,33] [,34] [,35] [,36] [,37] #>   [1,]   100   101   101   103   103   103   103   102   102   102   103   102 #>   [2,]   101   101   102   104   104   104   104   103   103   103   104   103 #>   [3,]   104   104   104   103   105   103   103   105   105   105   105   103 #>   [4,]   104   105   105   105   106   105   105   107   107   107   108   105 #>   [5,]   107   108   109   107   107   109   109   107   107   107   108   107 #>   [6,]   110   110   110   109   110   112   112   109   110   110   110   110 #>   [7,]   110   110   110   111   113   113   113   113   114   114   114   112 #>   [8,]   111   113   113   114   114   114   115   115   116   116   116   114 #>   [9,]   112   112   113   113   114   114   115   115   115   116   116   116 #>  [10,]   113   113   114   115   115   116   116   116   118   119   119   119 #>  [11,]   115   115   116   118   118   119   119   120   121   122   122   123 #>  [12,]   118   119   120   120   121   121   122   122   123   125   125   126 #>  [13,]   118   118   119   120   120   121   123   124   124   125   126   127 #>  [14,]   119   120   121   123   123   124   125   125   126   127   128   130 #>  [15,]   121   123   124   125   125   126   127   127   128   130   131   131 #>  [16,]   124   126   127   128   128   130   130   131   132   133   134   134 #>  [17,]   126   127   128   130   130   131   132   133   133   134   137   137 #>  [18,]   130   130   131   131   132   133   134   135   135   137   138   138 #>  [19,]   129   130   131   130   132   133   133   135   136   139   139   140 #>  [20,]   131   132   133   132   135   135   135   136   137   140   141   141 #>  [21,]   135   133   135   136   136   135   135   136   137   140   142   143 #>  [22,]   136   136   137   138   138   137   137   138   138   142   144   145 #>  [23,]   137   138   139   139   139   138   140   141   142   145   145   146 #>  [24,]   139   140   142   142   142   141   142   143   143   146   147   149 #>  [25,]   143   143   143   144   144   143   143   144   145   149   149   150 #>  [26,]   144   144   145   145   146   144   145   145   147   150   150   151 #>  [27,]   146   147   147   147   147   147   147   148   148   150   151   152 #>  [28,]   149   150   150   151   151   149   149   149   149   151   151   152 #>  [29,]   151   151   151   152   152   150   150   150   150   152   152   153 #>  [30,]   153   153   153   154   154   152   152   151   151   153   153   153 #>  [31,]   154   154   154   156   156   154   154   154   152   154   154   153 #>  [32,]   156   156   156   157   157   155   156   156   155   157   156   156 #>  [33,]   158   158   158   159   159   157   157   156   156   158   157   157 #>  [34,]   159   159   159   160   160   158   158   157   157   158   158   157 #>  [35,]   161   161   161   161   161   159   159   158   158   159   159   158 #>  [36,]   163   163   163   163   163   162   162   162   161   161   160   159 #>  [37,]   165   165   165   165   165   165   165   165   164   163   161   161 #>  [38,]   168   168   168   169   169   168   168   168   165   164   163   162 #>  [39,]   169   169   169   170   170   170   170   169   166   165   163   162 #>  [40,]   171   171   171   171   171   170   170   169   168   166   163   162 #>  [41,]   171   171   171   171   171   171   170   170   168   166   164   163 #>  [42,]   171   172   172   172   171   171   170   170   168   166   164   163 #>  [43,]   172   173   173   173   172   172   171   171   168   168   165   164 #>  [44,]   172   172   173   173   173   172   171   170   168   168   165   165 #>  [45,]   170   171   171   171   171   171   170   170   170   168   168   168 #>  [46,]   168   170   170   170   171   171   171   171   170   170   170   170 #>  [47,]   166   170   171   170   171   173   173   173   172   172   172   172 #>  [48,]   166   169   170   172   172   173   172   173   172   172   173   175 #>  [49,]   168   171   172   174   175   175   177   173   173   173   176   175 #>  [50,]   167   171   173   174   175   175   177   177   177   177   177   173 #>  [51,]   167   171   172   174   175   177   177   179   179   178   175   172 #>  [52,]   165   167   168   171   172   174   174   175   175   174   170   166 #>  [53,]   163   166   167   168   170   172   172   175   174   172   170   165 #>  [54,]   161   163   164   165   166   166   166   171   170   168   167   166 #>  [55,]   161   162   163   165   165   163   164   166   165   166   166   165 #>  [56,]   160   161   161   162   163   163   163   164   164   164   165   165 #>  [57,]   160   160   161   162   163   163   165   164   164   165   165   166 #>  [58,]   159   160   160   161   162   163   165   164   164   165   166   166 #>  [59,]   160   162   162   163   164   163   166   166   167   168   169   167 #>  [60,]   161   162   163   163   165   165   167   167   168   170   170   168 #>  [61,]   161   162   163   164   167   169   170   169   170   172   173   171 #>  [62,]   161   162   163   164   167   170   172   172   173   174   175   172 #>  [63,]   161   162   163   164   168   171   174   174   175   177   176   174 #>  [64,]   160   162   163   165   169   172   175   176   179   177   177   177 #>  [65,]   162   163   164   167   170   174   178   177   179   179   181   179 #>  [66,]   163   164   167   170   172   177   179   180   180   181   183   181 #>  [67,]   162   165   167   170   174   176   180   178   179   181   184   182 #>  [68,]   162   165   168   173   175   177   181   179   181   184   185   183 #>  [69,]   162   165   168   173   175   177   180   181   182   183   184   184 #>  [70,]   162   165   168   172   175   177   180   182   184   184   185   185 #>  [71,]   163   166   168   173   175   177   180   181   184   184   185   185 #>  [72,]   163   166   168   173   175   177   180   182   184   184   185   185 #>  [73,]   165   166   169   173   175   177   181   179   181   182   184   184 #>  [74,]   165   167   169   174   175   177   179   179   181   182   183   183 #>  [75,]   166   167   169   173   175   177   179   178   181   182   185   185 #>  [76,]   166   167   169   172   174   175   177   177   180   182   185   185 #>  [77,]   165   167   168   172   173   175   177   179   182   182   185   185 #>  [78,]   166   166   168   170   172   174   177   179   182   182   184   184 #>  [79,]   166   167   167   169   172   174   176   179   181   181   182   184 #>  [80,]   168   168   169   170   172   174   175   177   181   181   184   184 #>  [81,]   168   169   170   170   172   173   175   179   181   181   182   184 #>  [82,]   169   170   170   172   173   175   176   179   181   180   181   182 #>  [83,]   170   172   173   174   175   176   177   177   178   180   181   181 #>  [84,]   172   173   174   175   176   177   179   177   178   180   181   181 #>  [85,]   171   172   172   173   174   175   177   178   178   179   181   181 #>  [86,]   172   173   174   174   175   177   177   177   178   178   180   179 #>  [87,]   173   174   174   175   177   177   177   177   178   178   178   178 #>  [88,]   174   175   175   175   175   175   175   177   178   178   177   177 #>  [89,]   175   175   175   175   175   175   175   177   177   177   177   175 #>  [90,]   174   174   175   175   175   175   175   175   175   175   175   175 #>  [91,]   175   175   175   175   175   174   174   174   174   176   176   176 #>  [92,]   175   175   175   175   175   174   174   174   174   176   176   176 #>  [93,]   177   177   175   175   175   174   174   174   174   176   176   176 #>  [94,]   177   177   175   175   175   174   174   174   174   176   176   176 #>  [95,]   177   177   175   175   175   174   174   176   176   176   176   176 #>  [96,]   177   177   175   175   175   174   174   176   176   176   176   174 #>  [97,]   177   177   175   175   175   174   174   176   176   175   175   175 #>  [98,]   177   175   175   175   175   174   174   176   176   175   175   175 #>  [99,]   177   177   176   176   176   175   175   175   175   175   175   174 #> [100,]   177   177   176   176   176   175   175   175   175   176   175   175 #>        [,38] [,39] [,40] [,41] [,42] [,43] [,44] [,45] [,46] [,47] [,48] [,49] #>   [1,]   103   103   104   104   105   105   107   105   106   107   108   111 #>   [2,]   104   105   107   107   107   107   108   106   107   108   109   111 #>   [3,]   105   106   106   107   108   108   108   108   109   109   110   110 #>   [4,]   106   107   108   109   110   110   109   110   111   111   111   113 #>   [5,]   108   107   108   109   109   109   109   112   113   113   114   116 #>   [6,]   111   111   111   112   112   112   113   114   115   116   116   120 #>   [7,]   113   114   114   115   115   115   116   116   119   119   119   122 #>   [8,]   115   116   116   118   118   118   119   119   121   121   121   124 #>   [9,]   118   119   119   120   119   121   122   121   122   122   123   125 #>  [10,]   121   121   121   122   122   122   123   122   125   125   125   127 #>  [11,]   123   125   126   126   126   126   126   126   127   127   127   128 #>  [12,]   126   127   127   128   128   129   129   128   129   129   129   129 #>  [13,]   127   128   128   130   130   131   131   130   130   130   130   129 #>  [14,]   130   131   131   132   132   133   133   132   133   133   133   131 #>  [15,]   132   132   133   133   133   134   134   134   135   135   135   135 #>  [16,]   134   135   135   137   135   137   137   137   138   138   138   137 #>  [17,]   138   138   139   140   139   140   140   140   140   140   141   139 #>  [18,]   139   140   140   141   142   142   144   144   144   144   144   142 #>  [19,]   141   142   144   144   146   144   144   144   145   145   145   145 #>  [20,]   142   145   145   146   148   146   146   147   147   147   147   147 #>  [21,]   143   144   145   146   147   149   150   150   150   151   151   150 #>  [22,]   146   146   147   147   149   150   150   151   152   152   152   153 #>  [23,]   147   147   149   150   151   151   151   152   153   153   153   153 #>  [24,]   150   150   151   151   151   152   153   153   153   153   154   154 #>  [25,]   151   151   151   151   152   153   153   153   154   154   154   154 #>  [26,]   151   151   152   152   153   153   154   154   154   154   154   156 #>  [27,]   152   153   153   153   153   154   154   154   156   156   156   158 #>  [28,]   152   152   153   153   153   153   156   156   156   156   156   159 #>  [29,]   153   153   153   153   154   154   156   156   156   157   157   159 #>  [30,]   153   153   153   154   154   154   156   156   157   157   157   160 #>  [31,]   154   154   154   154   154   154   156   156   157   157   158   161 #>  [32,]   156   154   154   156   156   157   158   158   159   159   160   162 #>  [33,]   156   156   156   156   157   157   158   159   160   160   161   163 #>  [34,]   157   156   156   156   157   157   158   159   160   160   160   165 #>  [35,]   157   157   156   157   157   158   159   160   160   160   163   163 #>  [36,]   158   158   158   158   159   159   160   161   161   163   163   163 #>  [37,]   159   158   158   158   158   159   161   163   164   164   164   165 #>  [38,]   159   159   159   159   159   161   162   165   166   166   166   166 #>  [39,]   159   159   161   161   162   162   163   167   167   167   167   168 #>  [40,]   159   159   161   161   163   163   165   168   168   170   170   170 #>  [41,]   161   161   162   162   164   164   165   170   170   170   170   168 #>  [42,]   162   162   163   163   164   164   165   168   168   168   168   168 #>  [43,]   164   164   165   164   165   165   165   168   168   168   168   168 #>  [44,]   166   166   165   166   166   165   166   167   168   168   168   168 #>  [45,]   169   168   168   166   166   168   166   168   168   168   168   168 #>  [46,]   170   171   169   169   169   169   166   168   168   167   167   167 #>  [47,]   172   173   171   170   170   169   168   168   168   167   167   167 #>  [48,]   175   173   171   170   170   169   168   168   168   167   167   167 #>  [49,]   175   172   171   171   170   169   168   170   168   168   167   167 #>  [50,]   171   171   171   171   170   169   168   170   168   168   167   167 #>  [51,]   170   170   168   168   168   170   170   168   168   166   168   166 #>  [52,]   164   164   165   166   166   168   168   170   171   166   168   168 #>  [53,]   163   163   164   166   166   168   168   171   172   169   169   170 #>  [54,]   164   163   165   166   167   168   170   171   172   171   171   172 #>  [55,]   165   164   166   167   168   168   171   172   173   173   173   175 #>  [56,]   166   165   166   168   168   168   171   172   174   175   176   177 #>  [57,]   167   166   167   168   170   170   171   173   177   176   178   178 #>  [58,]   167   166   167   168   171   171   175   178   178   177   179   180 #>  [59,]   168   167   168   166   170   171   173   176   178   179   180   182 #>  [60,]   170   170   171   170   172   175   176   178   179   180   180   182 #>  [61,]   171   172   173   173   175   176   177   179   180   180   180   182 #>  [62,]   172   174   175   176   176   178   179   179   179   180   180   182 #>  [63,]   175   175   177   177   177   177   178   179   179   180   180   183 #>  [64,]   177   178   179   178   178   178   179   180   180   182   184   184 #>  [65,]   179   180   180   179   180   182   182   182   182   183   185   185 #>  [66,]   182   182   184   183   182   182   183   183   183   184   185   185 #>  [67,]   183   183   183   183   182   183   183   183   183   184   185   186 #>  [68,]   183   184   183   183   182   183   184   184   184   185   186   187 #>  [69,]   184   184   183   183   182   183   184   184   184   185   186   187 #>  [70,]   185   184   184   183   182   183   184   184   184   185   186   187 #>  [71,]   185   185   184   183   182   183   184   184   185   186   186   187 #>  [72,]   185   184   184   183   182   183   184   184   185   186   186   187 #>  [73,]   185   185   184   185   184   185   186   186   187   186   186   186 #>  [74,]   184   184   184   186   185   186   187   187   187   186   186   186 #>  [75,]   185   186   185   186   185   185   186   187   187   187   188   186 #>  [76,]   186   185   185   185   185   185   185   187   187   187   188   186 #>  [77,]   184   184   184   186   186   186   187   188   188   186   187   188 #>  [78,]   182   182   182   183   183   184   184   184   186   185   186   186 #>  [79,]   184   181   180   182   182   182   182   183   183   184   185   186 #>  [80,]   182   180   180   181   181   180   181   182   181   181   182   184 #>  [81,]   181   181   179   180   180   180   180   181   182   181   181   182 #>  [82,]   181   181   180   180   179   180   180   180   181   180   181   182 #>  [83,]   181   181   180   178   177   177   177   178   178   179   180   181 #>  [84,]   181   181   179   178   178   177   178   178   179   179   181   181 #>  [85,]   181   180   179   179   179   178   178   179   179   180   181   181 #>  [86,]   179   178   178   179   179   179   179   179   180   180   180   181 #>  [87,]   177   177   177   178   179   179   179   180   180   180   179   180 #>  [88,]   177   175   175   174   175   177   178   179   179   179   178   179 #>  [89,]   175   175   174   174   174   175   178   178   178   180   180   178 #>  [90,]   175   175   174   173   173   173   174   175   177   180   179   177 #>  [91,]   176   176   175   175   175   175   176   177   179   179   177   177 #>  [92,]   176   175   174   174   173   174   175   176   177   179   179   177 #>  [93,]   176   174   174   173   173   173   174   175   176   177   177   177 #>  [94,]   175   174   174   172   172   173   173   175   176   177   177   177 #>  [95,]   175   174   173   172   170   172   172   174   175   176   176   176 #>  [96,]   174   174   173   170   170   170   172   173   175   176   176   176 #>  [97,]   174   174   172   172   170   169   170   173   174   175   176   176 #>  [98,]   174   174   173   172   170   170   170   173   174   175   176   176 #>  [99,]   174   174   173   172   172   172   172   174   174   175   176   176 #> [100,]   175   174   174   173   173   173   173   174   174   175   176   176 #>        [,50] [,51] [,52] [,53] [,54] [,55] [,56] [,57] [,58] [,59] [,60] [,61] #>   [1,]   111   112   113   113   115   115   116   117   117   116   117   118 #>   [2,]   111   112   113   115   115   115   116   117   118   116   117   118 #>   [3,]   110   111   113   113   114   114   115   116   116   117   118   118 #>   [4,]   113   113   113   114   115   115   116   116   117   118   120   120 #>   [5,]   116   116   116   116   117   117   118   116   118   119   119   120 #>   [6,]   120   120   120   120   120   120   121   120   120   122   122   123 #>   [7,]   122   122   122   122   122   122   123   122   122   125   125   126 #>   [8,]   124   124   124   124   125   125   127   125   126   127   128   128 #>   [9,]   125   125   125   125   127   127   128   126   126   128   128   130 #>  [10,]   127   127   127   127   128   129   130   128   128   131   131   131 #>  [11,]   128   126   126   127   128   128   130   130   131   131   132   132 #>  [12,]   129   127   128   128   128   131   132   132   133   133   133   133 #>  [13,]   129   129   129   130   130   131   132   132   133   133   133   133 #>  [14,]   131   132   132   132   132   133   135   135   136   136   136   136 #>  [15,]   135   135   135   136   136   136   137   137   137   137   137   137 #>  [16,]   137   137   137   137   137   138   138   138   138   139   139   139 #>  [17,]   139   139   139   139   139   139   140   140   140   140   140   140 #>  [18,]   142   143   143   143   143   143   143   143   143   143   143   143 #>  [19,]   145   142   142   144   144   144   144   144   144   144   144   144 #>  [20,]   147   145   145   147   146   146   146   146   146   146   146   146 #>  [21,]   151   149   149   151   150   150   150   150   150   150   150   150 #>  [22,]   153   151   151   153   152   152   152   152   152   152   152   152 #>  [23,]   153   151   151   153   153   153   153   152   152   152   152   152 #>  [24,]   154   152   152   154   153   153   153   153   153   153   153   153 #>  [25,]   154   154   154   154   154   154   154   154   154   154   154   154 #>  [26,]   156   156   156   156   156   154   154   154   154   154   154   154 #>  [27,]   158   156   156   156   157   156   156   156   156   156   156   156 #>  [28,]   159   157   157   157   157   156   156   156   156   156   156   156 #>  [29,]   159   157   157   157   157   157   157   157   156   156   156   156 #>  [30,]   160   158   158   158   158   158   158   158   157   157   156   157 #>  [31,]   161   159   159   159   159   159   159   159   159   158   157   157 #>  [32,]   162   161   161   161   161   160   160   159   159   159   159   158 #>  [33,]   163   161   161   161   161   161   160   160   159   159   159   159 #>  [34,]   165   163   163   163   161   161   160   160   160   159   159   159 #>  [35,]   163   163   163   163   163   161   160   160   160   159   160   160 #>  [36,]   163   163   163   163   163   161   161   160   159   159   160   160 #>  [37,]   165   165   164   164   164   163   161   160   159   159   159   160 #>  [38,]   166   166   166   166   165   164   163   161   161   160   160   161 #>  [39,]   168   168   168   168   167   166   165   164   164   163   163   163 #>  [40,]   170   170   170   170   168   167   166   165   165   164   165   165 #>  [41,]   168   168   168   168   168   167   167   166   166   165   166   166 #>  [42,]   168   168   168   168   168   168   167   167   166   167   166   167 #>  [43,]   168   168   168   168   168   168   168   167   167   167   167   168 #>  [44,]   168   168   168   168   168   167   168   168   168   170   170   172 #>  [45,]   168   167   167   167   168   167   168   168   170   171   172   174 #>  [46,]   167   167   168   168   167   168   168   170   171   173   174   175 #>  [47,]   167   167   168   168   168   168   171   171   173   175   177   178 #>  [48,]   167   167   167   168   170   171   172   173   175   177   178   180 #>  [49,]   167   167   168   170   170   172   174   175   178   179   181   182 #>  [50,]   168   168   170   170   172   174   177   178   179   182   184   185 #>  [51,]   166   168   169   170   172   175   176   177   179   183   183   184 #>  [52,]   168   170   171   173   175   176   177   179   182   184   184   184 #>  [53,]   170   172   173   175   176   177   180   183   184   185   185   186 #>  [54,]   173   175   176   177   178   180   183   184   184   185   186   187 #>  [55,]   176   176   178   178   179   182   184   185   186   187   188   188 #>  [56,]   178   178   180   180   180   183   184   185   187   190   190   191 #>  [57,]   178   179   182   182   183   183   184   187   188   191   191   192 #>  [58,]   180   182   182   183   183   184   185   187   190   191   192   193 #>  [59,]   183   184   184   184   184   185   186   187   190   191   192   193 #>  [60,]   183   184   184   185   185   186   186   188   188   191   192   193 #>  [61,]   183   184   185   187   187   187   188   188   190   191   192   193 #>  [62,]   184   185   187   188   188   190   190   190   190   192   193   193 #>  [63,]   184   187   188   188   190   191   190   191   191   193   193   193 #>  [64,]   185   187   188   191   191   191   191   191   192   192   192   192 #>  [65,]   186   190   193   194   194   193   194   194   193   194   193   193 #>  [66,]   187   192   193   193   193   193   193   193   193   193   193   193 #>  [67,]   187   192   193   193   193   193   193   192   193   193   192   192 #>  [68,]   188   192   193   193   193   193   193   192   192   192   190   192 #>  [69,]   188   192   192   192   192   192   192   190   190   190   189   190 #>  [70,]   187   190   192   192   190   190   190   189   189   188   188   188 #>  [71,]   187   190   190   190   189   189   189   188   188   187   187   187 #>  [72,]   187   190   190   189   188   188   188   187   187   187   186   186 #>  [73,]   187   187   187   187   186   186   186   185   185   185   184   184 #>  [74,]   187   187   187   187   186   186   186   185   185   184   184   184 #>  [75,]   187   187   187   187   186   187   187   186   185   184   184   184 #>  [76,]   186   187   187   187   186   187   187   186   186   185   185   183 #>  [77,]   188   187   187   187   187   186   187   187   187   186   185   183 #>  [78,]   187   186   187   187   187   187   187   187   187   186   183   182 #>  [79,]   187   186   187   187   187   188   187   187   186   184   183   182 #>  [80,]   186   184   185   186   186   187   187   185   183   183   182   182 #>  [81,]   185   183   184   184   185   188   188   185   184   182   182   181 #>  [82,]   184   182   183   183   184   186   186   184   182   182   181   180 #>  [83,]   182   184   184   184   184   186   184   183   183   183   182   182 #>  [84,]   182   184   184   184   182   183   182   182   183   182   182   182 #>  [85,]   182   182   182   182   181   182   181   182   182   181   180   180 #>  [86,]   181   181   181   180   180   182   181   181   180   179   177   179 #>  [87,]   180   179   179   179   178   180   180   179   177   177   176   177 #>  [88,]   179   178   178   177   177   177   176   176   176   176   176   177 #>  [89,]   178   175   175   174   174   176   176   176   176   176   176   177 #>  [90,]   175   174   172   173   173   176   175   176   176   176   176   179 #>  [91,]   176   175   176   175   176   176   176   176   176   177   177   179 #>  [92,]   176   176   176   175   176   176   176   176   176   177   177   179 #>  [93,]   176   176   176   176   176   177   176   176   176   177   179   179 #>  [94,]   176   176   176   177   177   177   176   177   177   177   179   180 #>  [95,]   176   176   176   177   177   177   177   177   177   179   179   180 #>  [96,]   176   176   177   177   177   177   177   177   177   179   180   180 #>  [97,]   176   176   177   177   177   177   177   177   179   179   180   181 #>  [98,]   176   176   177   177   177   177   177   177   179   179   180   181 #>  [99,]   176   176   177   177   176   177   177   177   179   179   180   181 #> [100,]   176   176   177   177   176   177   177   177   179   179   180   182 #>        [,62] [,63] [,64] [,65] [,66] [,67] [,68] [,69] [,70] [,71] [,72] [,73] #>   [1,]   118   120   121   121   122   122   123   123   123   124   124   122 #>   [2,]   120   121   121   122   122   122   123   124   124   125   125   123 #>   [3,]   120   121   121   120   120   121   122   123   123   125   125   125 #>   [4,]   120   121   122   121   122   123   123   125   125   126   126   126 #>   [5,]   121   122   122   122   125   126   127   128   128   129   129   126 #>   [6,]   123   125   126   126   127   128   129   130   130   132   132   130 #>   [7,]   127   128   128   129   130   132   133   134   134   135   135   132 #>   [8,]   129   130   130   133   133   134   134   135   136   136   136   134 #>   [9,]   131   131   131   132   132   133   134   134   134   134   135   135 #>  [10,]   132   132   133   133   133   134   134   134   135   135   135   135 #>  [11,]   133   133   133   134   134   135   135   135   135   135   137   133 #>  [12,]   134   134   134   134   135   135   135   135   135   135   137   135 #>  [13,]   133   133   135   135   135   135   135   135   135   135   136   136 #>  [14,]   136   136   137   137   137   137   137   137   137   137   137   137 #>  [15,]   138   138   138   138   138   138   138   138   138   138   139   139 #>  [16,]   139   139   140   140   140   140   140   140   140   140   140   140 #>  [17,]   142   142   142   142   142   142   142   142   142   142   142   142 #>  [18,]   144   143   144   144   144   143   143   143   143   143   143   142 #>  [19,]   144   145   145   145   145   144   144   144   144   143   143   143 #>  [20,]   146   146   146   146   146   145   145   144   144   144   143   143 #>  [21,]   150   149   149   149   147   147   145   145   145   145   144   144 #>  [22,]   152   152   152   151   150   149   147   147   146   145   145   145 #>  [23,]   153   153   153   153   153   151   149   149   146   146   146   145 #>  [24,]   153   153   153   153   153   152   152   150   149   147   147   146 #>  [25,]   153   153   153   153   153   153   153   152   151   150   149   149 #>  [26,]   154   154   154   154   154   154   153   153   153   152   151   151 #>  [27,]   156   156   156   156   156   154   154   154   154   154   153   152 #>  [28,]   156   156   156   157   156   156   156   154   154   154   153   154 #>  [29,]   157   157   157   157   157   157   157   157   157   156   156   156 #>  [30,]   157   157   157   158   158   157   157   157   157   157   157   157 #>  [31,]   157   157   158   158   158   158   158   158   158   158   158   157 #>  [32,]   158   158   158   158   158   158   158   159   159   159   159   158 #>  [33,]   159   159   158   158   158   158   158   159   159   159   160   160 #>  [34,]   159   159   159   160   160   159   159   159   159   160   160   160 #>  [35,]   160   160   160   160   160   160   160   160   160   161   161   161 #>  [36,]   160   160   160   160   160   160   161   161   161   163   164   164 #>  [37,]   161   161   161   161   161   161   161   161   163   163   164   164 #>  [38,]   163   163   163   164   164   163   163   164   164   164   165   165 #>  [39,]   164   165   165   165   165   165   165   165   165   165   166   166 #>  [40,]   166   166   166   167   167   166   166   166   166   167   167   167 #>  [41,]   167   167   167   167   167   167   168   168   167   167   168   168 #>  [42,]   168   168   168   167   167   168   168   168   168   170   170   172 #>  [43,]   168   168   170   168   168   170   171   171   171   170   170   171 #>  [44,]   170   172   172   171   171   171   172   172   172   171   171   171 #>  [45,]   173   174   174   174   173   174   174   175   175   173   173   175 #>  [46,]   177   178   178   178   177   177   178   178   178   176   176   176 #>  [47,]   179   179   179   179   179   179   179   180   180   178   178   177 #>  [48,]   181   182   181   181   180   180   181   181   181   180   180   179 #>  [49,]   184   185   184   184   182   184   185   185   184   182   180   180 #>  [50,]   186   186   186   187   187   187   187   187   186   184   183   182 #>  [51,]   184   185   185   186   186   186   186   185   184   185   184   183 #>  [52,]   185   186   186   186   186   186   186   185   185   185   185   184 #>  [53,]   186   186   187   186   186   186   186   186   186   185   185   186 #>  [54,]   187   187   187   187   186   187   187   186   186   187   187   187 #>  [55,]   188   188   188   188   188   187   187   187   187   187   187   187 #>  [56,]   191   191   190   190   190   188   187   187   188   187   187   188 #>  [57,]   193   192   192   192   191   188   188   190   188   188   188   188 #>  [58,]   193   193   193   192   192   190   190   190   190   190   188   188 #>  [59,]   194   193   193   193   193   192   192   191   191   191   190   188 #>  [60,]   193   193   192   192   192   191   191   190   190   190   188   187 #>  [61,]   193   193   192   192   192   191   191   190   190   190   188   187 #>  [62,]   193   193   193   192   191   191   191   190   190   190   188   187 #>  [63,]   192   192   192   192   192   191   190   190   188   188   187   187 #>  [64,]   192   192   191   191   191   190   190   188   188   188   187   186 #>  [65,]   193   193   193   193   192   190   188   188   187   187   187   185 #>  [66,]   193   193   192   192   192   188   188   188   187   187   186   185 #>  [67,]   192   192   190   190   190   187   187   187   186   186   186   184 #>  [68,]   192   192   189   189   189   187   187   187   186   186   185   184 #>  [69,]   189   189   188   188   188   185   185   186   186   186   184   183 #>  [70,]   187   187   186   186   187   185   185   185   185   184   183   182 #>  [71,]   186   186   185   185   186   184   184   184   184   183   182   180 #>  [72,]   186   186   185   185   185   183   183   183   183   182   180   180 #>  [73,]   183   185   184   182   182   182   182   182   182   180   180   180 #>  [74,]   183   185   184   182   180   182   180   180   180   180   180   180 #>  [75,]   183   185   184   180   180   180   180   180   180   182   182   180 #>  [76,]   183   184   182   179   180   180   179   180   180   180   180   180 #>  [77,]   182   182   182   180   179   179   179   179   180   180   180   180 #>  [78,]   180   182   181   179   179   179   179   179   179   180   180   180 #>  [79,]   180   181   181   179   178   178   178   180   181   181   182   182 #>  [80,]   179   181   180   178   178   178   179   181   182   182   184   184 #>  [81,]   180   180   180   180   180   181   181   181   182   182   182   184 #>  [82,]   180   180   180   180   180   181   181   181   182   182   182   185 #>  [83,]   182   181   182   182   182   181   182   184   184   187   187   187 #>  [84,]   181   181   182   183   183   181   184   186   186   188   188   188 #>  [85,]   179   180   182   182   183   181   184   186   186   188   188   188 #>  [86,]   177   179   182   182   183   181   184   186   186   188   188   188 #>  [87,]   177   179   182   182   183   181   184   186   186   188   188   188 #>  [88,]   177   179   182   182   183   181   184   186   186   188   187   187 #>  [89,]   179   180   181   180   180   180   182   182   182   185   186   186 #>  [90,]   180   181   181   180   180   180   182   182   182   185   186   186 #>  [91,]   180   181   182   181   181   181   184   184   184   186   186   186 #>  [92,]   180   181   182   181   181   181   184   184   185   187   187   186 #>  [93,]   181   182   183   182   182   182   182   184   186   188   188   187 #>  [94,]   181   182   183   182   182   182   184   186   187   188   188   187 #>  [95,]   182   183   184   182   182   182   185   187   187   188   188   187 #>  [96,]   182   183   184   184   184   185   187   187   187   187   187   186 #>  [97,]   182   183   186   185   185   185   187   187   186   186   186   186 #>  [98,]   182   184   186   184   186   186   186   186   186   185   186   186 #>  [99,]   183   184   186   186   188   188   188   188   187   187   187   188 #> [100,]   183   184   187   188   188   188   188   187   187   187   187   188 #>        [,74] [,75] [,76] [,77] [,78] [,79] [,80] [,81] [,82] [,83] [,84] [,85] #>   [1,]   123   125   125   126   127   127   127   128   129   129   130   130 #>   [2,]   123   125   125   126   127   127   128   128   128   129   130   132 #>   [3,]   125   126   126   126   127   127   128   127   127   127   130   131 #>   [4,]   126   126   126   127   128   128   129   127   127   128   131   132 #>   [5,]   126   126   127   127   127   128   130   130   130   131   133   133 #>   [6,]   130   130   130   130   131   131   132   132   132   133   134   134 #>   [7,]   132   132   132   132   132   133   133   133   134   135   135   135 #>   [8,]   134   134   134   134   134   134   134   135   135   135   135   137 #>   [9,]   135   135   135   135   135   135   135   135   137   137   137   137 #>  [10,]   135   135   135   135   137   137   137   137   137   137   138   138 #>  [11,]   133   135   135   135   137   137   137   137   137   138   138   138 #>  [12,]   135   137   137   137   137   137   138   138   138   138   138   138 #>  [13,]   136   138   138   138   138   138   139   139   139   139   139   139 #>  [14,]   138   140   140   140   140   140   140   140   140   140   140   140 #>  [15,]   139   141   141   141   141   141   141   141   141   141   141   141 #>  [16,]   140   142   142   142   142   142   142   142   142   142   142   142 #>  [17,]   142   144   144   144   144   144   144   144   144   144   144   144 #>  [18,]   142   144   144   144   144   144   145   145   145   145   145   145 #>  [19,]   143   143   143   145   145   145   145   145   145   145   145   145 #>  [20,]   143   143   143   145   145   145   146   146   146   146   146   146 #>  [21,]   144   144   144   146   146   146   147   147   147   147   147   147 #>  [22,]   145   145   145   147   147   147   148   148   148   148   148   148 #>  [23,]   145   145   145   147   148   148   149   149   149   149   149   149 #>  [24,]   146   146   146   148   149   149   149   151   151   151   151   151 #>  [25,]   149   149   149   151   152   152   152   152   152   152   152   152 #>  [26,]   151   151   151   153   153   153   154   153   154   154   154   154 #>  [27,]   152   152   152   154   154   154   154   154   154   154   154   154 #>  [28,]   153   153   153   155   155   155   155   155   155   156   156   156 #>  [29,]   154   154   154   154   154   156   156   156   158   158   158   158 #>  [30,]   157   157   157   157   157   159   159   159   159   159   159   159 #>  [31,]   157   157   157   157   157   159   159   159   160   160   160   160 #>  [32,]   158   158   158   158   158   160   160   160   160   160   160   160 #>  [33,]   160   159   159   159   159   161   161   161   161   162   162   162 #>  [34,]   161   161   161   161   161   163   163   163   163   162   162   162 #>  [35,]   163   163   163   163   163   163   163   161   161   161   161   161 #>  [36,]   164   164   164   164   164   164   164   163   163   163   163   163 #>  [37,]   165   165   166   166   166   166   166   165   165   164   163   163 #>  [38,]   165   166   166   166   167   167   167   167   166   166   165   164 #>  [39,]   166   167   167   167   167   167   167   167   167   167   166   165 #>  [40,]   167   167   167   167   167   167   167   167   167   167   166   165 #>  [41,]   168   168   168   170   170   170   168   168   168   167   166   165 #>  [42,]   172   172   172   171   171   171   170   170   168   168   167   166 #>  [43,]   171   171   171   171   170   172   172   171   170   170   167   166 #>  [44,]   172   171   171   171   170   172   171   171   170   170   167   166 #>  [45,]   175   172   173   172   171   173   172   171   171   170   168   166 #>  [46,]   175   175   175   172   171   173   172   171   171   170   168   166 #>  [47,]   177   177   175   172   171   173   172   171   171   170   168   167 #>  [48,]   179   179   177   173   172   173   172   171   171   170   168   167 #>  [49,]   180   179   177   175   172   173   172   171   171   170   168   167 #>  [50,]   182   180   177   175   172   173   172   172   171   171   170   167 #>  [51,]   184   182   178   175   172   173   173   172   172   171   170   168 #>  [52,]   186   184   179   176   172   173   173   172   172   171   170   168 #>  [53,]   187   186   180   177   173   173   173   172   172   171   170   168 #>  [54,]   187   187   183   179   175   174   173   172   172   171   170   168 #>  [55,]   187   186   183   179   176   175   173   172   172   171   170   168 #>  [56,]   187   186   183   179   177   175   173   172   172   171   170   168 #>  [57,]   187   186   184   179   177   177   174   172   172   174   172   172 #>  [58,]   187   185   183   179   177   177   174   173   173   174   173   172 #>  [59,]   187   185   183   179   177   178   175   173   173   172   171   172 #>  [60,]   187   184   183   179   177   178   175   174   174   173   171   173 #>  [61,]   187   184   183   180   178   176   175   175   175   173   172   173 #>  [62,]   186   184   182   180   178   176   175   175   174   174   172   173 #>  [63,]   186   184   183   180   178   176   175   175   175   174   173   173 #>  [64,]   186   183   180   179   177   176   175   175   175   174   173   174 #>  [65,]   185   183   179   178   176   175   175   175   175   175   173   175 #>  [66,]   184   182   179   177   176   175   175   175   175   174   173   175 #>  [67,]   183   180   178   176   175   175   173   175   175   175   174   176 #>  [68,]   182   179   177   176   176   175   175   175   175   175   175   177 #>  [69,]   180   179   177   176   176   175   175   175   173   175   175   175 #>  [70,]   179   179   178   177   177   176   176   175   175   177   177   177 #>  [71,]   180   179   178   178   177   177   176   176   176   175   175   175 #>  [72,]   180   179   179   178   177   177   177   176   176   176   176   176 #>  [73,]   180   179   179   178   178   177   177   177   177   177   177   177 #>  [74,]   179   179   179   179   178   178   178   177   177   177   177   178 #>  [75,]   180   180   180   179   179   179   178   178   178   178   178   179 #>  [76,]   180   179   179   179   179   179   179   179   179   179   179   179 #>  [77,]   180   180   182   182   182   182   182   180   180   180   180   180 #>  [78,]   180   182   182   182   182   182   182   182   182   182   182   182 #>  [79,]   184   182   182   182   182   182   182   182   182   182   182   183 #>  [80,]   184   182   182   182   183   183   183   183   183   183   184   184 #>  [81,]   184   185   185   185   186   186   186   186   186   186   187   187 #>  [82,]   185   185   185   185   186   186   186   187   188   187   187   188 #>  [83,]   187   187   187   188   188   188   190   190   190   190   192   192 #>  [84,]   188   188   188   189   189   189   190   191   191   190   192   193 #>  [85,]   188   188   188   189   189   189   190   191   191   190   192   193 #>  [86,]   188   188   188   189   189   189   191   191   191   192   192   193 #>  [87,]   189   188   189   189   189   189   190   190   191   189   190   192 #>  [88,]   188   188   188   188   189   189   189   189   189   188   188   188 #>  [89,]   186   186   186   186   186   188   188   186   187   187   188   186 #>  [90,]   186   186   186   186   186   188   188   186   186   186   186   185 #>  [91,]   186   186   186   186   187   189   189   186   186   185   185   185 #>  [92,]   186   186   186   186   186   188   188   186   186   186   186   186 #>  [93,]   187   187   186   186   186   188   188   186   185   185   185   186 #>  [94,]   187   187   187   187   186   188   189   186   186   185   185   186 #>  [95,]   187   187   187   187   187   188   188   186   186   186   186   187 #>  [96,]   187   187   187   187   187   189   189   186   187   187   187   187 #>  [97,]   187   187   187   187   187   187   187   189   189   190   190   192 #>  [98,]   186   187   187   187   187   187   187   190   191   192   192   195 #>  [99,]   188   188   189   189   190   190   190   190   191   194   194   196 #> [100,]   188   188   189   189   190   190   190   191   192   195   195   197 #>        [,86] [,87] [,88] [,89] [,90] [,91] [,92] [,93] [,94] [,95] [,96] [,97] #>   [1,]   130   132   133   133   133   133   133   133   133   133   133   132 #>   [2,]   132   133   133   133   134   134   134   134   134   134   133   133 #>   [3,]   131   132   132   132   132   132   132   132   132   132   132   132 #>   [4,]   132   132   133   132   133   133   133   133   133   133   133   133 #>   [5,]   133   133   133   133   133   133   133   133   133   134   134   134 #>   [6,]   134   134   134   134   134   134   134   134   134   134   135   135 #>   [7,]   135   137   137   137   137   137   137   137   137   137   137   137 #>   [8,]   137   137   137   137   137   137   137   137   137   137   137   138 #>   [9,]   137   137   137   137   137   137   138   138   138   138   138   139 #>  [10,]   138   138   138   138   138   138   138   138   138   138   139   139 #>  [11,]   138   138   138   138   138   138   139   139   139   139   140   140 #>  [12,]   138   138   139   139   139   139   139   139   139   140   140   140 #>  [13,]   139   139   140   140   140   140   140   140   140   140   141   141 #>  [14,]   140   140   141   141   141   141   141   141   141   141   142   142 #>  [15,]   141   141   142   142   142   142   142   142   142   144   144   144 #>  [16,]   142   144   144   144   144   145   145   145   145   145   145   145 #>  [17,]   144   145   145   145   145   145   146   146   146   146   147   147 #>  [18,]   145   145   146   146   146   146   146   146   146   146   147   147 #>  [19,]   145   146   146   146   146   147   147   147   147   147   148   148 #>  [20,]   146   146   147   147   147   147   147   147   148   148   148   148 #>  [21,]   147   147   148   148   148   148   148   148   149   149   149   151 #>  [22,]   148   149   149   149   149   151   151   151   151   151   151   151 #>  [23,]   149   151   151   151   151   152   152   152   152   152   152   152 #>  [24,]   151   152   152   152   152   153   153   153   153   153   153   152 #>  [25,]   152   153   153   153   153   154   154   154   154   153   153   153 #>  [26,]   154   154   154   154   154   155   155   155   154   153   153   153 #>  [27,]   154   155   155   155   155   155   155   155   155   154   154   153 #>  [28,]   156   156   156   156   156   156   155   155   155   154   154   154 #>  [29,]   158   158   158   158   158   158   156   156   156   155   155   154 #>  [30,]   159   159   159   159   159   159   159   158   156   155   155   155 #>  [31,]   160   160   160   160   160   160   159   159   158   156   155   155 #>  [32,]   160   160   160   160   160   161   160   160   158   156   155   155 #>  [33,]   161   161   161   161   161   161   161   160   159   158   156   155 #>  [34,]   162   162   161   161   161   161   161   160   159   158   156   155 #>  [35,]   161   161   160   160   160   159   159   160   159   158   156   156 #>  [36,]   161   161   161   160   160   158   159   161   159   158   156   156 #>  [37,]   163   163   161   160   160   159   158   160   159   158   156   156 #>  [38,]   164   163   161   161   160   159   158   160   159   158   156   156 #>  [39,]   164   163   163   161   160   159   158   160   159   158   158   156 #>  [40,]   165   164   163   161   161   160   159   160   159   158   158   158 #>  [41,]   165   164   163   161   161   160   159   160   159   159   159   158 #>  [42,]   165   164   163   163   161   160   159   161   159   159   159   158 #>  [43,]   166   164   164   163   161   160   159   161   160   160   159   159 #>  [44,]   166   165   163   163   163   161   160   161   160   160   159   159 #>  [45,]   166   165   164   163   163   161   160   160   159   160   160   159 #>  [46,]   166   165   164   164   163   163   161   161   160   161   160   160 #>  [47,]   166   165   164   164   163   163   163   161   161   162   162   160 #>  [48,]   166   165   165   164   164   163   163   163   161   163   163   162 #>  [49,]   166   167   167   166   166   166   165   165   165   163   163   163 #>  [50,]   166   168   167   166   166   166   165   165   165   165   163   163 #>  [51,]   167   168   167   167   166   166   166   165   165   165   165   163 #>  [52,]   167   168   167   167   166   166   166   165   165   165   165   163 #>  [53,]   167   168   167   167   166   166   166   165   165   165   165   163 #>  [54,]   167   168   167   167   166   166   166   165   165   165   165   163 #>  [55,]   167   168   167   167   166   166   166   165   165   165   163   165 #>  [56,]   167   168   167   167   167   166   166   165   165   165   165   165 #>  [57,]   169   169   168   167   167   167   167   166   166   166   166   166 #>  [58,]   170   169   169   168   168   168   168   168   168   167   167   167 #>  [59,]   172   170   169   169   169   169   169   169   169   169   169   168 #>  [60,]   172   170   170   170   170   170   170   170   170   170   170   170 #>  [61,]   172   172   172   172   172   172   173   173   173   172   172   172 #>  [62,]   173   172   173   172   173   173   174   174   174   174   174   173 #>  [63,]   173   173   173   173   174   174   174   174   174   174   175   175 #>  [64,]   173   173   173   174   174   174   175   175   175   175   176   175 #>  [65,]   174   173   173   173   174   175   175   175   175   175   176   176 #>  [66,]   175   174   174   174   175   175   175   176   176   176   176   177 #>  [67,]   176   176   176   175   176   176   176   176   176   177   177   179 #>  [68,]   177   177   177   176   176   177   177   177   177   179   179   180 #>  [69,]   175   175   175   175   175   177   177   177   177   178   178   179 #>  [70,]   177   177   177   177   178   178   178   178   178   179   180   180 #>  [71,]   175   175   175   175   176   176   176   176   177   180   181   181 #>  [72,]   176   176   176   176   177   177   177   177   178   181   181   182 #>  [73,]   177   177   177   177   178   178   178   178   179   181   181   182 #>  [74,]   178   178   178   178   178   179   179   179   180   182   182   182 #>  [75,]   179   179   179   180   180   180   180   180   180   184   184   184 #>  [76,]   179   180   180   180   180   180   180   182   182   184   185   185 #>  [77,]   180   182   182   182   183   183   183   183   183   186   185   186 #>  [78,]   182   183   183   183   184   184   184   185   185   187   187   188 #>  [79,]   183   183   184   184   185   185   186   186   186   189   189   189 #>  [80,]   184   184   185   186   186   186   186   187   187   189   189   189 #>  [81,]   187   187   189   190   189   189   190   192   192   190   190   190 #>  [82,]   188   189   189   190   192   192   192   192   192   192   192   192 #>  [83,]   192   190   192   192   192   192   192   192   192   194   194   194 #>  [84,]   192   192   192   192   193   193   193   193   193   194   194   194 #>  [85,]   192   192   192   193   193   193   193   193   193   195   195   194 #>  [86,]   192   193   193   193   193   194   194   194   194   195   195   194 #>  [87,]   190   192   192   192   192   193   193   193   193   195   194   194 #>  [88,]   188   188   189   189   190   192   192   192   192   194   194   192 #>  [89,]   186   187   189   189   190   190   190   190   190   192   192   192 #>  [90,]   185   186   187   187   188   189   189   189   189   191   192   191 #>  [91,]   184   185   186   187   187   188   188   189   189   191   192   192 #>  [92,]   185   186   187   187   188   188   188   189   189   191   192   192 #>  [93,]   185   186   187   187   187   187   187   189   189   192   194   194 #>  [94,]   186   186   187   187   187   189   189   189   189   192   194   194 #>  [95,]   187   187   188   188   188   189   189   189   190   192   192   192 #>  [96,]   188   188   188   189   189   189   190   190   190   192   194   194 #>  [97,]   192   190   190   190   192   192   192   192   192   194   195   195 #>  [98,]   195   193   193   193   194   194   194   194   194   196   196   196 #>  [99,]   196   194   194   194   195   195   195   196   196   196   196   198 #> [100,]   197   195   195   195   196   196   196   197   197   197   197   199 #>        [,98] [,99] [,100] #>   [1,]   132   132    132 #>   [2,]   133   133    133 #>   [3,]   132   133    133 #>   [4,]   133   133    133 #>   [5,]   134   134    134 #>   [6,]   135   135    135 #>   [7,]   137   137    137 #>   [8,]   138   138    138 #>   [9,]   139   139    139 #>  [10,]   139   139    140 #>  [11,]   140   140    140 #>  [12,]   140   140    141 #>  [13,]   141   142    142 #>  [14,]   142   144    144 #>  [15,]   144   145    145 #>  [16,]   145   146    146 #>  [17,]   147   147    147 #>  [18,]   147   147    149 #>  [19,]   148   148    149 #>  [20,]   149   151    149 #>  [21,]   151   152    152 #>  [22,]   151   152    152 #>  [23,]   152   152    152 #>  [24,]   152   152    152 #>  [25,]   153   153    152 #>  [26,]   153   153    152 #>  [27,]   153   153    153 #>  [28,]   153   153    153 #>  [29,]   154   153    153 #>  [30,]   154   154    154 #>  [31,]   154   154    154 #>  [32,]   154   154    154 #>  [33,]   155   154    154 #>  [34,]   155   154    154 #>  [35,]   155   154    154 #>  [36,]   155   154    154 #>  [37,]   155   154    154 #>  [38,]   155   154    154 #>  [39,]   156   155    154 #>  [40,]   156   155    154 #>  [41,]   158   156    155 #>  [42,]   158   156    155 #>  [43,]   159   158    156 #>  [44,]   159   158    158 #>  [45,]   159   159    159 #>  [46,]   160   159    159 #>  [47,]   160   160    160 #>  [48,]   161   160    160 #>  [49,]   163   162    161 #>  [50,]   163   162    161 #>  [51,]   163   163    162 #>  [52,]   163   163    162 #>  [53,]   163   163    162 #>  [54,]   163   163    163 #>  [55,]   165   165    165 #>  [56,]   165   165    165 #>  [57,]   166   166    166 #>  [58,]   167   167    167 #>  [59,]   169   169    169 #>  [60,]   170   170    170 #>  [61,]   172   172    173 #>  [62,]   174   174    174 #>  [63,]   175   175    175 #>  [64,]   176   176    176 #>  [65,]   176   177    177 #>  [66,]   177   177    177 #>  [67,]   179   180    180 #>  [68,]   180   181    182 #>  [69,]   179   180    181 #>  [70,]   180   181    182 #>  [71,]   181   182    182 #>  [72,]   182   184    184 #>  [73,]   182   184    184 #>  [74,]   182   184    184 #>  [75,]   184   185    185 #>  [76,]   185   185    187 #>  [77,]   187   187    189 #>  [78,]   189   189    189 #>  [79,]   189   189    189 #>  [80,]   189   190    190 #>  [81,]   190   192    192 #>  [82,]   192   192    192 #>  [83,]   195   195    194 #>  [84,]   195   195    194 #>  [85,]   194   194    194 #>  [86,]   194   194    192 #>  [87,]   194   192    192 #>  [88,]   192   192    191 #>  [89,]   191   191    191 #>  [90,]   191   191    191 #>  [91,]   192   192    191 #>  [92,]   192   192    191 #>  [93,]   192   192    192 #>  [94,]   194   194    194 #>  [95,]   192   194    194 #>  [96,]   194   195    195 #>  [97,]   195   196    196 #>  [98,]   196   197    197 #>  [99,]   198   198    198 #> [100,]   198   198    198 #>  #> , , 2 #>  #>        [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] #>   [1,]   78   78   78   78   78   78   78   78   78    79    79    79    79 #>   [2,]   78   78   78   78   78   78   78   78   78    79    79    79    79 #>   [3,]   79   79   79   79   79   79   80   80   80    80    80    80    79 #>   [4,]   79   79   79   79   79   80   82   82   82    82    82    82    81 #>   [5,]   82   82   82   82   82   82   83   83   83    83    83    83    82 #>   [6,]   84   84   84   84   84   84   85   85   85    85    85    85    84 #>   [7,]   84   84   84   84   85   85   86   86   86    86    86    86    85 #>   [8,]   86   86   86   86   86   86   86   87   87    87    89    89    88 #>   [9,]   86   86   87   87   87   87   89   89   90    90    90    91    90 #>  [10,]   87   87   89   89   89   91   91   91   92    92    92    93    92 #>  [11,]   89   89   90   90   90   91   91   91   92    92    92    93    93 #>  [12,]   90   90   91   92   92   92   93   93   94    94    93    96    96 #>  [13,]   91   91   92   93   93   93   94   94   94    94    96    97    97 #>  [14,]   93   93   94   94   95   95   95   97   97    97    97    99    99 #>  [15,]   95   95   97   97   98   98   98   98   97    98   101   103   102 #>  [16,]   97   97   98   98   99  100  100  100  100   101   103   105   105 #>  [17,]   97   97   98   98   99  100  100  101  103   104   105   106   105 #>  [18,]   98   99  100  100  101  103  103  103  105   105   106   107   107 #>  [19,]  100  100  101  101  103  104  104  105  106   106   106   107   108 #>  [20,]  103  103  104  104  105  106  106  106  107   108   109   110   109 #>  [21,]  104  104  105  105  106  107  107  107  110   110   110   112   111 #>  [22,]  105  105  107  107  107  110  110  110  111   112   113   113   115 #>  [23,]  107  107  109  109  110  111  111  112  113   114   114   117   116 #>  [24,]  110  110  111  111  112  113  113  113  116   116   117   118   118 #>  [25,]  111  111  112  112  113  115  115  115  116   116   116   118   119 #>  [26,]  112  112  115  115  115  117  117  117  118   118   119   120   120 #>  [27,]  115  115  116  116  117  118  118  119  120   122   123   123   124 #>  [28,]  116  116  118  118  118  120  120  122  123   123   125   125   126 #>  [29,]  119  119  120  120  121  124  124  125  126   127   127   128   128 #>  [30,]  121  123  123  123  124  126  127  127  128   128   130   130   131 #>  [31,]  123  123  125  125  125  126  127  127  130   130   130   132   132 #>  [32,]  124  125  125  125  126  129  129  130  131   131   132   133   136 #>  [33,]  124  125  126  126  127  129  130  130  132   133   134   134   136 #>  [34,]  125  125  127  127  129  131  131  132  133   134   133   134   136 #>  [35,]  127  127  129  129  130  131  132  133  134   134   134   134   137 #>  [36,]  129  129  131  131  131  133  134  134  134   136   136   138   139 #>  [37,]  130  131  132  132  133  136  136  136  136   137   137   139   141 #>  [38,]  131  132  132  132  134  136  136  137  138   139   140   141   143 #>  [39,]  131  132  133  133  134  137  137  138  139   141   141   144   145 #>  [40,]  131  132  133  133  134  137  137  139  143   143   145   146   147 #>  [41,]  132  132  133  134  136  138  138  140  141   144   146   147   150 #>  [42,]  132  132  133  134  136  138  138  140  141   145   146   148   150 #>  [43,]  133  133  136  136  136  138  139  140  143   146   148   151   151 #>  [44,]  134  136  137  138  139  140  141  143  145   148   151   152   152 #>  [45,]  136  136  138  138  139  141  144  145  148   151   152   153   153 #>  [46,]  137  137  139  140  140  141  144  147  151   152   154   154   153 #>  [47,]  138  138  139  141  141  144  145  148  151   152   153   153   152 #>  [48,]  138  139  141  141  144  146  147  150  151   152   152   152   151 #>  [49,]  139  139  141  141  144  146  147  150  151   151   151   150   148 #>  [50,]  139  140  143  143  145  146  148  150  151   151   150   148   148 #>  [51,]  140  141  144  145  146  149  149  151  152   152   151   148   147 #>  [52,]  140  141  144  145  146  149  149  151  151   151   148   146   145 #>  [53,]  140  142  145  147  149  150  150  150  149   148   147   145   142 #>  [54,]  140  142  143  146  147  149  149  148  147   145   143   142   141 #>  [55,]  139  140  141  145  145  147  146  145  142   142   141   141   141 #>  [56,]  138  139  140  141  141  142  141  141  140   140   140   140   140 #>  [57,]  137  138  138  138  139  139  139  139  138   139   139   139   140 #>  [58,]  135  137  138  138  139  137  138  139  138   138   138   139   139 #>  [59,]  135  135  137  137  138  137  137  138  137   137   138   139   139 #>  [60,]  135  135  137  137  137  137  137  138  137   137   138   138   138 #>  [61,]  134  135  135  137  137  137  137  138  137   137   138   138   138 #>  [62,]  134  135  135  137  137  137  138  138  138   137   137   138   138 #>  [63,]  132  133  134  134  136  136  136  136  136   136   136   137   138 #>  [64,]  132  133  134  134  136  136  136  136  136   137   137   137   139 #>  [65,]  132  132  134  134  134  136  136  137  137   137   138   138   138 #>  [66,]  132  132  134  134  134  136  137  137  137   138   138   138   138 #>  [67,]  132  133  134  134  136  136  137  138  138   138   139   139   139 #>  [68,]  133  133  134  136  136  137  138  138  139   139   139   140   140 #>  [69,]  134  134  136  136  137  138  138  139  139   140   140   141   141 #>  [70,]  134  136  137  137  138  138  139  140  140   141   143   143   144 #>  [71,]  137  137  138  139  139  140  140  141  143   143   144   144   145 #>  [72,]  138  138  139  139  140  141  143  143  144   144   145   145   146 #>  [73,]  138  139  140  140  141  143  144  145  144   145   146   147   147 #>  [74,]  139  140  141  143  144  144  145  145  145   146   147   147   148 #>  [75,]  139  140  141  143  144  145  146  146  146   147   148   148   147 #>  [76,]  139  141  143  144  145  146  147  147  147   148   148   150   150 #>  [77,]  140  141  144  145  146  147  148  148  150   150   150   151   151 #>  [78,]  141  143  144  146  147  147  148  150  150   150   151   152   151 #>  [79,]  141  143  144  145  147  147  150  151  151   151   152   153   153 #>  [80,]  139  140  143  145  146  147  148  151  151   152   153   154   154 #>  [81,]  139  140  141  144  145  145  147  151  151   152   153   154   154 #>  [82,]  138  139  141  141  144  145  146  150  150   151   153   154   156 #>  [83,]  138  139  140  141  143  143  144  147  147   151   153   154   156 #>  [84,]  136  137  139  141  142  142  144  146  146   150   152   154   157 #>  [85,]  136  137  138  139  139  140  143  145  145   149   152   153   156 #>  [86,]  134  136  138  139  139  140  142  144  145   149   152   153   156 #>  [87,]  134  136  138  139  139  140  143  144  146   149   152   154   157 #>  [88,]  137  138  139  140  140  142  144  145  147   151   153   156   158 #>  [89,]  137  138  140  141  142  143  145  146  149   151   154   157   159 #>  [90,]  138  139  141  143  143  144  145  147  149   151   154   159   161 #>  [91,]  138  139  141  143  143  144  145  147  150   152   156   159   161 #>  [92,]  139  140  141  144  144  145  146  149  151   152   156   159   161 #>  [93,]  140  141  143  144  145  147  147  150  151   153   156   159   161 #>  [94,]  140  141  143  145  146  148  147  151  152   154   157   160   161 #>  [95,]  141  141  144  146  146  148  149  151  152   156   158   160   163 #>  [96,]  141  143  144  146  147  148  151  152  154   158   160   163   166 #>  [97,]  141  143  144  146  147  150  151  153  156   159   161   165   168 #>  [98,]  141  143  144  146  147  150  151  154  157   161   164   166   170 #>  [99,]  140  143  144  146  148  150  153  157  160   164   168   170   172 #> [100,]  140  144  145  147  150  151  153  157  161   165   169   172   172 #>        [,14] [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23] [,24] [,25] #>   [1,]    79    79    79    79    79    81    81    81    82    82    82    83 #>   [2,]    79    79    79    79    79    81    82    82    83    82    83    84 #>   [3,]    79    79    79    81    81    81    81    81    82    82    82    82 #>   [4,]    81    81    82    82    82    82    82    82    84    84    84    84 #>   [5,]    82    83    83    84    84    83    84    84    85    84    84    86 #>   [6,]    84    84    84    85    85    85    87    87    87    87    87    88 #>   [7,]    85    84    85    87    87    88    89    89    89    90    90    91 #>   [8,]    88    88    89    89    89    90    90    90    91    92    92    93 #>   [9,]    90    90    90    91    91    91    92    92    93    93    93    95 #>  [10,]    93    92    91    92    92    93    93    93    95    95    95    96 #>  [11,]    94    93    93    96    96    97    97    96    97    97    97    97 #>  [12,]    96    96    97    97    99   100   100    98    99   100    99   101 #>  [13,]    97    98    99    99    99   100   102   102   103   101   102   102 #>  [14,]   100   100   102   102   102   103   103   104   105   103   104   104 #>  [15,]   103   103   104   104   104   105   105   105   106   105   105   106 #>  [16,]   105   105   106   106   106   107   109   107   109   109   108   110 #>  [17,]   106   105   105   107   107   109   109   110   111   110   110   111 #>  [18,]   107   108   108   110   110   110   111   112   113   112   113   113 #>  [19,]   108   109   110   110   110   111   112   113   113   113   116   116 #>  [20,]   110   111   112   112   112   113   115   116   115   116   118   118 #>  [21,]   112   112   113   113   113   116   117   118   119   120   120   121 #>  [22,]   115   115   116   116   116   118   119   120   120   121   123   123 #>  [23,]   116   116   117   118   119   120   120   121   123   124   124   125 #>  [24,]   118   118   119   120   121   123   123   124   126   126   126   127 #>  [25,]   120   122   122   124   125   126   125   126   127   127   130   130 #>  [26,]   123   124   126   127   127   127   130   131   130   131   132   132 #>  [27,]   126   128   130   131   131   131   132   132   133   134   133   133 #>  [28,]   127   131   132   133   133   133   135   134   137   135   135   135 #>  [29,]   131   132   133   134   135   137   137   138   138   138   139   139 #>  [30,]   132   134   135   137   137   138   139   139   139   140   140   140 #>  [31,]   134   136   136   138   139   140   140   140   141   141   142   142 #>  [32,]   136   137   138   139   140   142   142   144   144   144   145   145 #>  [33,]   138   139   139   141   142   145   145   146   146   146   146   146 #>  [34,]   138   139   140   141   144   146   148   148   148   148   148   148 #>  [35,]   138   139   141   141   144   147   150   150   150   150   150   150 #>  [36,]   140   141   143   143   146   150   152   152   152   152   152   152 #>  [37,]   141   143   144   146   147   151   152   154   154   154   154   154 #>  [38,]   144   145   146   146   148   151   154   155   155   157   157   157 #>  [39,]   147   147   146   148   150   152   155   157   158   158   158   158 #>  [40,]   148   148   148   150   152   153   157   158   159   159   159   160 #>  [41,]   150   150   150   151   152   154   158   159   159   160   160   160 #>  [42,]   150   151   151   151   152   155   158   158   159   159   160   160 #>  [43,]   151   151   151   152   153   157   158   158   159   159   160   160 #>  [44,]   152   152   152   152   153   155   158   158   158   159   160   160 #>  [45,]   152   152   151   151   151   153   155   155   155   157   158   159 #>  [46,]   152   151   150   150   147   150   151   151   152   153   155   157 #>  [47,]   151   148   146   146   145   146   148   148   150   151   152   154 #>  [48,]   150   147   145   144   144   145   147   148   150   150   152   153 #>  [49,]   147   146   144   143   144   145   146   147   149   150   152   153 #>  [50,]   147   144   144   143   143   144   146   146   149   150   151   153 #>  [51,]   146   143   143   143   144   144   145   147   148   150   151   154 #>  [52,]   144   143   143   143   144   144   144   145   147   148   148   153 #>  [53,]   142   141   141   142   144   145   146   145   145   146   148   151 #>  [54,]   141   140   140   141   142   144   145   144   144   144   145   148 #>  [55,]   141   140   140   140   141   141   142   143   143   143   145   146 #>  [56,]   141   140   140   140   140   140   141   141   141   143   144   145 #>  [57,]   140   140   140   140   140   140   141   140   141   143   144   143 #>  [58,]   139   139   139   140   140   140   140   140   140   141   143   143 #>  [59,]   139   139   139   140   140   139   139   139   140   140   142   142 #>  [60,]   139   139   139   139   139   139   139   140   140   140   142   142 #>  [61,]   138   138   139   139   139   138   139   140   140   140   142   142 #>  [62,]   138   138   139   139   139   138   139   140   140   140   142   143 #>  [63,]   139   139   139   139   139   139   140   139   140   140   143   142 #>  [64,]   139   139   139   139   139   139   140   139   139   141   143   142 #>  [65,]   139   140   139   139   139   140   140   139   140   141   143   143 #>  [66,]   139   140   140   139   139   140   140   139   140   140   143   143 #>  [67,]   139   139   139   140   140   140   140   141   141   142   144   145 #>  [68,]   141   141   140   141   140   140   140   141   141   142   144   145 #>  [69,]   141   143   143   142   142   141   142   142   142   142   145   145 #>  [70,]   144   144   144   145   144   144   144   144   144   144   145   145 #>  [71,]   146   146   146   146   146   146   146   145   145   145   146   146 #>  [72,]   147   147   147   148   148   147   147   146   146   146   146   146 #>  [73,]   148   148   148   149   149   149   148   147   146   145   146   147 #>  [74,]   150   150   151   152   151   149   149   147   147   146   146   148 #>  [75,]   149   150   150   151   151   151   149   148   147   146   147   147 #>  [76,]   151   151   151   152   151   151   149   148   147   146   147   148 #>  [77,]   151   152   152   152   151   152   151   149   148   147   147   148 #>  [78,]   152   153   153   153   153   153   151   149   148   147   148   148 #>  [79,]   153   154   153   154   154   153   152   151   149   148   148   150 #>  [80,]   154   156   154   155   155   155   154   153   152   151   151   152 #>  [81,]   156   157   156   155   155   154   154   153   152   152   153   152 #>  [82,]   157   157   157   158   157   155   155   154   153   153   154   153 #>  [83,]   157   158   159   161   160   158   157   155   154   153   154   154 #>  [84,]   158   158   159   162   161   159   158   157   155   153   154   154 #>  [85,]   158   159   160   162   163   162   161   159   158   157   157   157 #>  [86,]   158   159   161   165   165   163   162   160   160   157   158   159 #>  [87,]   159   160   163   167   166   166   166   163   162   159   160   159 #>  [88,]   160   163   165   169   168   169   168   166   165   161   161   161 #>  [89,]   161   163   166   169   173   173   172   168   166   162   161   161 #>  [90,]   163   165   168   170   175   176   175   173   168   164   162   162 #>  [91,]   164   168   169   170   176   177   177   175   169   166   165   163 #>  [92,]   165   169   171   174   176   177   177   175   170   167   166   165 #>  [93,]   165   168   171   176   175   177   177   176   171   167   167   166 #>  [94,]   166   169   172   174   173   175   176   175   171   167   167   165 #>  [95,]   166   169   169   169   168   170   171   171   169   166   165   165 #>  [96,]   167   171   168   167   163   166   169   169   167   165   165   165 #>  [97,]   170   171   167   165   161   163   167   167   166   165   163   163 #>  [98,]   171   171   167   166   162   164   166   166   166   165   163   165 #>  [99,]   173   171   167   165   162   163   166   163   163   163   163   163 #> [100,]   172   169   166   166   162   163   165   163   163   163   163   163 #>        [,26] [,27] [,28] [,29] [,30] [,31] [,32] [,33] [,34] [,35] [,36] [,37] #>   [1,]    83    84    84    83    83    83    83    83    83    82    83    82 #>   [2,]    84    84    85    84    84    84    84    84    84    83    84    83 #>   [3,]    83    83    83    85    87    86    86    85    85    85    85    86 #>   [4,]    83    84    84    87    88    88    88    87    87    87    88    88 #>   [5,]    86    87    88    89    89    88    88    90    90    90    91    89 #>   [6,]    89    89    89    91    92    91    91    92    93    93    93    92 #>   [7,]    92    92    92    93    95    95    95    95    96    96    96    96 #>   [8,]    93    95    95    96    96    96    97    97    98    98    98    98 #>   [9,]    96    96    97    97    98    98    99    99    99    99    99    99 #>  [10,]    97    97    98    99    99   100   100   100   102   102   102   102 #>  [11,]    98    98    99   101   101   102   102   103   104   105   105   106 #>  [12,]   101   102   103   103   104   104   105   105   106   108   108   109 #>  [13,]   103   103   104   105   105   106   108   109   109   110   111   112 #>  [14,]   104   105   106   108   108   109   110   110   111   112   113   115 #>  [15,]   106   108   109   110   110   111   112   112   113   115   116   116 #>  [16,]   109   111   112   113   113   115   115   116   117   118   119   119 #>  [17,]   111   112   113   115   115   116   117   118   118   119   122   122 #>  [18,]   115   115   116   116   117   118   119   120   120   122   123   123 #>  [19,]   117   118   119   118   120   121   121   123   124   124   124   125 #>  [20,]   119   120   121   120   123   123   123   124   125   125   126   126 #>  [21,]   123   121   123   124   124   125   125   126   127   128   130   131 #>  [22,]   124   124   125   126   126   127   127   128   128   130   132   133 #>  [23,]   125   126   127   127   127   128   130   131   132   133   133   134 #>  [24,]   127   128   130   130   130   131   132   133   133   134   135   137 #>  [25,]   131   131   131   132   132   133   133   134   135   137   137   138 #>  [26,]   132   132   133   133   134   134   135   135   137   138   138   139 #>  [27,]   134   135   135   135   135   137   137   138   138   138   139   140 #>  [28,]   137   138   138   139   139   139   139   139   139   139   139   140 #>  [29,]   139   139   139   140   140   140   140   140   140   140   140   141 #>  [30,]   141   141   141   142   142   142   142   141   141   141   141   141 #>  [31,]   142   142   142   144   144   144   144   144   142   142   142   141 #>  [32,]   144   144   144   145   145   145   146   146   145   145   144   144 #>  [33,]   146   146   146   147   147   147   147   146   146   146   145   145 #>  [34,]   147   147   147   148   148   148   148   147   147   146   146   145 #>  [35,]   150   150   150   150   150   149   149   148   148   147   147   146 #>  [36,]   152   152   152   152   152   152   152   152   151   149   148   147 #>  [37,]   154   154   154   154   154   155   155   155   154   153   151   151 #>  [38,]   157   157   157   158   158   158   158   158   155   154   153   152 #>  [39,]   158   158   158   159   159   160   160   159   156   155   153   152 #>  [40,]   160   160   160   160   160   160   160   159   158   156   153   152 #>  [41,]   160   160   160   160   160   160   159   160   158   156   154   153 #>  [42,]   160   161   161   161   160   160   159   160   158   156   154   153 #>  [43,]   161   162   162   162   161   161   160   161   158   158   155   154 #>  [44,]   161   161   162   162   162   161   160   160   158   158   155   155 #>  [45,]   159   160   160   160   160   160   159   160   160   158   158   158 #>  [46,]   157   159   159   159   160   160   160   161   160   160   160   160 #>  [47,]   155   159   160   159   160   162   162   163   162   162   162   162 #>  [48,]   155   158   159   161   161   162   161   163   162   162   163   165 #>  [49,]   155   158   159   161   162   163   165   163   163   163   166   165 #>  [50,]   154   158   160   161   162   163   165   167   167   167   167   163 #>  [51,]   155   159   160   162   163   165   165   167   167   166   163   160 #>  [52,]   153   155   156   159   160   162   162   163   163   162   158   154 #>  [53,]   151   154   155   156   158   160   160   163   162   160   158   153 #>  [54,]   149   151   152   153   154   154   154   159   158   156   155   154 #>  [55,]   146   147   148   150   150   151   152   154   153   154   154   153 #>  [56,]   145   146   146   147   148   151   151   152   152   152   153   153 #>  [57,]   144   144   145   146   147   147   149   152   152   153   153   154 #>  [58,]   143   144   144   145   146   147   149   152   152   153   154   154 #>  [59,]   142   144   144   145   146   147   150   150   151   152   153   154 #>  [60,]   143   144   145   145   147   149   151   151   152   154   154   155 #>  [61,]   143   144   145   146   149   151   152   153   154   156   157   158 #>  [62,]   143   144   145   146   149   152   154   156   157   158   159   159 #>  [63,]   143   144   145   146   150   153   156   158   159   161   160   161 #>  [64,]   142   144   145   147   151   154   157   160   163   161   161   164 #>  [65,]   144   145   146   149   152   156   160   161   163   163   165   166 #>  [66,]   145   146   149   152   154   159   161   164   164   165   167   168 #>  [67,]   147   149   151   154   158   160   164   165   166   168   171   171 #>  [68,]   147   149   152   157   159   161   165   166   168   171   172   172 #>  [69,]   147   149   152   157   159   164   167   168   169   172   173   173 #>  [70,]   147   149   152   156   159   164   167   169   171   173   174   174 #>  [71,]   148   150   152   157   159   164   167   168   171   173   174   174 #>  [72,]   148   150   152   157   159   164   167   169   171   173   174   174 #>  [73,]   150   150   153   157   159   161   165   166   168   171   173   173 #>  [74,]   150   151   153   158   159   161   163   166   168   171   172   172 #>  [75,]   151   152   154   157   159   161   163   165   168   169   172   172 #>  [76,]   151   152   154   156   158   159   161   164   167   169   172   172 #>  [77,]   150   152   153   157   158   159   161   163   166   169   172   172 #>  [78,]   151   151   153   155   157   158   161   163   166   169   171   171 #>  [79,]   151   152   152   154   157   158   160   163   165   168   169   171 #>  [80,]   153   153   154   155   157   158   159   161   165   168   171   171 #>  [81,]   152   153   154   154   156   157   159   163   165   168   169   171 #>  [82,]   153   154   154   156   157   159   160   163   165   167   168   169 #>  [83,]   154   156   157   158   159   160   161   165   166   168   169   169 #>  [84,]   156   157   158   159   160   161   163   165   166   168   169   169 #>  [85,]   158   159   159   160   161   162   164   166   166   167   169   169 #>  [86,]   159   160   161   161   162   164   164   165   166   166   168   167 #>  [87,]   160   161   161   162   164   164   164   165   166   166   166   166 #>  [88,]   161   162   162   162   162   162   162   165   166   166   165   165 #>  [89,]   162   162   162   162   162   163   163   165   165   165   165   163 #>  [90,]   161   161   162   162   162   163   163   163   163   163   163   163 #>  [91,]   163   163   163   163   163   162   162   163   163   162   162   162 #>  [92,]   163   163   163   163   163   162   162   163   163   162   162   162 #>  [93,]   165   165   163   163   163   163   163   163   163   162   162   162 #>  [94,]   165   165   163   163   163   163   163   163   163   162   162   162 #>  [95,]   165   165   163   163   163   163   163   162   162   162   162   162 #>  [96,]   165   165   163   163   163   163   163   162   162   162   162   160 #>  [97,]   165   165   163   163   163   162   162   162   162   161   161   161 #>  [98,]   165   163   163   163   163   162   162   162   162   161   161   161 #>  [99,]   163   163   162   162   162   160   160   160   160   160   160   159 #> [100,]   163   163   162   162   162   160   160   160   160   161   160   160 #>        [,38] [,39] [,40] [,41] [,42] [,43] [,44] [,45] [,46] [,47] [,48] [,49] #>   [1,]    83    83    84    84    85    85    87    88    89    90    91    91 #>   [2,]    84    85    87    87    87    87    88    89    90    91    92    91 #>   [3,]    88    88    88    89    90    90    90    90    91    91    92    92 #>   [4,]    89    89    90    91    92    92    91    92    93    93    93    95 #>   [5,]    90    91    92    93    93    93    93    96    97    97    98    98 #>   [6,]    93    95    95    96    96    96    97    98    99   100   100   102 #>   [7,]    97    97    97    98    98    98    99    99   102   102   102   104 #>   [8,]    99    99    99   101   101   101   102   102   104   104   104   106 #>   [9,]   101   102   102   103   102   104   105   104   105   105   106   108 #>  [10,]   104   104   104   105   105   105   106   105   108   108   108   110 #>  [11,]   106   108   109   109   109   109   109   109   110   110   110   111 #>  [12,]   109   110   110   111   111   112   112   111   112   112   112   112 #>  [13,]   112   113   113   115   115   116   116   115   115   115   115   117 #>  [14,]   115   116   116   117   117   118   118   117   118   118   118   119 #>  [15,]   117   117   118   118   118   119   119   119   120   120   120   123 #>  [16,]   119   120   120   122   120   122   122   122   123   123   123   125 #>  [17,]   123   123   124   125   124   125   125   125   125   125   126   127 #>  [18,]   124   125   125   126   127   127   129   129   129   129   129   130 #>  [19,]   126   127   129   129   131   132   132   132   133   133   133   133 #>  [20,]   127   130   130   131   133   134   134   135   135   135   135   135 #>  [21,]   131   132   133   134   135   137   138   138   138   139   139   138 #>  [22,]   134   134   135   135   137   138   138   139   140   140   140   141 #>  [23,]   135   135   137   138   139   139   139   140   141   141   141   141 #>  [24,]   138   138   139   139   139   140   141   141   141   141   142   142 #>  [25,]   139   139   139   139   140   141   141   141   142   142   142   142 #>  [26,]   139   139   140   140   141   141   142   142   142   142   142   144 #>  [27,]   140   141   141   141   141   142   142   142   144   144   144   143 #>  [28,]   140   140   141   141   141   141   144   144   144   144   144   144 #>  [29,]   141   141   141   141   142   142   144   144   144   145   145   144 #>  [30,]   141   141   141   142   142   142   144   144   145   145   145   145 #>  [31,]   142   142   142   142   142   142   144   144   145   145   146   146 #>  [32,]   144   142   142   144   144   145   146   146   147   147   148   147 #>  [33,]   144   144   144   144   145   145   146   147   148   148   149   148 #>  [34,]   145   144   144   144   145   145   146   147   148   148   148   150 #>  [35,]   145   145   144   145   145   146   147   148   148   148   151   151 #>  [36,]   146   146   146   146   147   147   148   149   149   151   151   151 #>  [37,]   149   148   148   148   148   149   151   151   152   152   152   153 #>  [38,]   149   149   149   149   149   151   152   153   154   154   154   154 #>  [39,]   149   149   151   151   152   152   153   155   155   155   155   156 #>  [40,]   149   149   151   151   153   153   155   156   156   158   158   158 #>  [41,]   151   151   152   152   154   154   155   158   158   158   158   156 #>  [42,]   152   152   153   153   154   154   155   156   156   156   156   156 #>  [43,]   154   154   155   154   155   155   155   156   156   156   156   156 #>  [44,]   156   156   155   156   156   155   156   155   156   156   156   156 #>  [45,]   159   158   158   156   156   158   156   156   156   156   156   156 #>  [46,]   160   161   159   159   159   159   156   156   156   155   155   155 #>  [47,]   162   163   161   160   160   159   158   156   156   155   155   155 #>  [48,]   165   163   161   160   160   159   158   156   156   155   155   155 #>  [49,]   165   162   161   161   160   159   158   158   156   156   155   154 #>  [50,]   161   161   161   161   160   159   158   158   156   156   155   154 #>  [51,]   158   157   155   155   155   157   157   155   155   155   157   155 #>  [52,]   152   151   152   153   153   155   155   157   158   155   157   157 #>  [53,]   151   150   151   153   153   155   155   158   159   158   158   159 #>  [54,]   152   150   152   153   154   155   157   158   159   160   160   161 #>  [55,]   153   151   153   154   155   155   158   159   160   162   162   164 #>  [56,]   154   152   153   155   155   155   158   159   161   164   165   166 #>  [57,]   155   153   154   155   157   157   158   160   164   165   167   167 #>  [58,]   155   153   154   155   158   158   162   165   165   166   168   169 #>  [59,]   155   154   155   155   159   160   162   165   167   168   169   171 #>  [60,]   157   157   158   159   161   164   165   167   168   169   169   171 #>  [61,]   158   159   160   162   164   165   166   168   169   169   169   171 #>  [62,]   159   161   162   165   165   167   168   168   168   169   169   171 #>  [63,]   162   162   164   166   166   166   167   168   168   169   169   172 #>  [64,]   164   165   166   167   167   167   168   169   169   171   173   173 #>  [65,]   166   167   167   168   169   171   171   171   171   172   174   174 #>  [66,]   169   169   171   172   171   171   172   172   172   173   174   174 #>  [67,]   172   172   172   172   171   172   172   172   172   174   175   176 #>  [68,]   172   173   172   172   171   172   173   173   173   175   176   177 #>  [69,]   173   173   172   172   171   172   173   173   173   175   176   177 #>  [70,]   174   173   173   172   171   172   173   173   173   175   176   177 #>  [71,]   174   174   173   172   171   172   173   173   174   176   176   177 #>  [72,]   174   173   173   172   171   172   173   173   174   176   176   177 #>  [73,]   174   174   173   172   171   172   173   173   174   176   176   176 #>  [74,]   173   173   173   173   172   173   174   174   174   176   176   176 #>  [75,]   172   173   172   173   172   172   173   174   174   175   176   176 #>  [76,]   173   172   172   172   172   172   172   174   174   175   176   176 #>  [77,]   171   171   171   170   170   170   171   172   172   174   175   176 #>  [78,]   169   169   169   167   167   168   168   168   170   173   174   174 #>  [79,]   171   168   167   166   166   166   166   167   167   172   173   174 #>  [80,]   169   167   167   165   165   164   165   166   165   169   170   172 #>  [81,]   168   168   166   164   164   164   164   165   166   169   169   170 #>  [82,]   168   168   167   164   163   164   164   164   165   168   169   170 #>  [83,]   169   169   168   166   165   165   165   166   166   167   168   169 #>  [84,]   169   169   167   166   166   165   166   166   167   167   169   169 #>  [85,]   169   168   167   167   167   166   166   167   167   168   169   169 #>  [86,]   167   166   166   167   167   167   167   167   168   168   168   169 #>  [87,]   165   165   165   166   167   167   167   168   168   168   167   168 #>  [88,]   165   163   163   162   163   165   166   167   167   167   166   167 #>  [89,]   163   163   162   162   162   163   166   166   166   165   165   167 #>  [90,]   163   163   162   161   161   161   162   163   165   165   164   166 #>  [91,]   162   162   161   161   161   161   162   163   165   164   162   163 #>  [92,]   162   161   160   160   159   160   161   162   163   164   164   163 #>  [93,]   162   160   160   158   158   158   159   160   161   162   162   163 #>  [94,]   161   160   160   157   157   158   158   160   161   162   162   163 #>  [95,]   161   159   158   157   155   157   157   159   160   161   161   162 #>  [96,]   160   159   158   155   155   155   157   158   160   161   161   162 #>  [97,]   160   159   157   157   155   154   155   158   159   160   161   162 #>  [98,]   160   159   158   157   155   155   155   158   159   160   161   162 #>  [99,]   159   159   158   156   156   156   156   158   158   160   161   161 #> [100,]   160   159   159   157   157   157   157   158   158   160   161   161 #>        [,50] [,51] [,52] [,53] [,54] [,55] [,56] [,57] [,58] [,59] [,60] [,61] #>   [1,]    91    92    93    92    94    94    95    96    96    98    99   100 #>   [2,]    91    92    93    94    94    94    95    96    97    98    99   100 #>   [3,]    92    93    95    95    96    96    97    97    97    98    99    99 #>   [4,]    95    95    95    96    97    97    98    97    98    99   101   101 #>   [5,]    98    98    98    97    98    98    99    99   101   102   102   103 #>   [6,]   102   102   102   101   101   101   102   103   103   105   105   106 #>   [7,]   104   104   104   103   103   103   104   105   105   108   108   109 #>   [8,]   106   106   106   105   106   106   108   108   109   110   111   111 #>   [9,]   108   108   108   108   110   110   111   111   111   113   113   115 #>  [10,]   110   110   110   110   111   112   113   113   113   116   116   116 #>  [11,]   111   111   111   112   113   113   115   115   116   116   117   117 #>  [12,]   112   112   113   113   113   116   117   117   118   118   118   118 #>  [13,]   117   117   117   118   118   119   120   120   121   121   121   121 #>  [14,]   119   120   120   120   120   121   123   123   124   124   124   124 #>  [15,]   123   123   123   124   124   124   125   125   125   125   125   125 #>  [16,]   125   125   125   125   125   126   126   126   126   127   127   127 #>  [17,]   127   127   127   127   127   127   128   128   128   128   128   128 #>  [18,]   130   131   131   131   131   131   131   131   131   131   131   131 #>  [19,]   133   132   132   132   132   132   132   132   132   132   132   132 #>  [20,]   135   135   135   135   134   134   134   134   134   134   134   134 #>  [21,]   139   139   139   139   138   138   138   138   138   138   138   138 #>  [22,]   141   141   141   141   140   140   140   140   140   140   140   140 #>  [23,]   141   141   141   141   141   141   141   140   140   140   140   140 #>  [24,]   142   142   142   142   141   141   141   141   141   141   141   141 #>  [25,]   142   142   142   142   142   142   142   142   142   142   142   142 #>  [26,]   144   144   144   144   144   142   142   142   142   142   142   142 #>  [27,]   143   144   144   144   145   144   144   144   144   144   144   144 #>  [28,]   144   145   145   145   145   144   144   144   144   144   144   144 #>  [29,]   144   145   145   145   145   145   145   145   144   144   144   144 #>  [30,]   145   146   146   146   146   146   146   146   145   145   144   145 #>  [31,]   146   147   147   147   147   147   147   147   147   146   145   145 #>  [32,]   147   149   149   149   149   148   148   147   147   147   147   146 #>  [33,]   148   149   149   149   149   149   148   148   147   147   147   147 #>  [34,]   150   151   151   151   149   149   148   148   148   147   147   147 #>  [35,]   151   151   151   151   151   149   148   148   148   147   148   148 #>  [36,]   151   151   151   151   151   149   149   148   147   147   148   148 #>  [37,]   153   153   152   152   152   151   149   148   147   147   147   148 #>  [38,]   154   154   154   154   153   152   151   149   149   148   148   149 #>  [39,]   156   156   156   156   155   154   153   152   152   151   151   151 #>  [40,]   158   158   158   158   156   155   154   153   153   152   153   153 #>  [41,]   156   156   156   156   156   155   155   154   154   153   154   153 #>  [42,]   156   156   156   156   156   156   155   155   154   155   154   154 #>  [43,]   156   156   156   156   156   156   156   155   155   155   155   155 #>  [44,]   156   156   156   156   156   155   156   156   156   158   158   159 #>  [45,]   156   155   155   155   156   155   156   156   158   159   160   161 #>  [46,]   155   155   156   156   155   156   156   158   159   161   162   162 #>  [47,]   155   155   156   156   156   156   159   159   161   163   165   165 #>  [48,]   155   155   155   156   158   159   160   161   163   165   166   167 #>  [49,]   154   154   155   157   157   159   161   162   165   166   168   169 #>  [50,]   155   155   157   157   159   161   164   165   166   169   171   172 #>  [51,]   155   157   158   159   161   164   165   166   168   172   172   173 #>  [52,]   157   159   160   162   164   165   166   168   171   173   173   173 #>  [53,]   159   161   162   164   165   166   169   172   173   174   174   175 #>  [54,]   162   164   165   166   167   169   172   173   173   174   175   176 #>  [55,]   165   165   167   167   168   171   173   174   175   176   177   177 #>  [56,]   167   167   169   169   169   172   173   174   176   179   179   180 #>  [57,]   167   168   171   171   172   172   173   176   177   180   180   181 #>  [58,]   169   171   171   172   172   173   174   176   179   180   181   182 #>  [59,]   172   173   173   173   173   174   175   176   179   180   181   182 #>  [60,]   172   173   173   174   174   175   175   177   177   180   181   182 #>  [61,]   172   173   174   176   176   176   177   177   179   180   181   182 #>  [62,]   173   174   176   177   177   179   179   179   179   181   182   182 #>  [63,]   173   176   177   177   179   180   179   180   180   182   182   182 #>  [64,]   174   176   177   180   180   180   180   180   181   181   181   181 #>  [65,]   175   177   180   181   181   180   181   181   180   181   180   180 #>  [66,]   176   179   180   180   180   180   180   180   180   180   180   180 #>  [67,]   177   179   180   180   180   180   180   179   180   180   179   179 #>  [68,]   178   179   180   180   180   180   180   179   179   179   177   179 #>  [69,]   178   180   180   180   180   180   180   178   178   178   177   178 #>  [70,]   177   178   180   180   178   178   178   177   177   176   176   176 #>  [71,]   177   178   178   178   177   177   177   176   176   175   175   175 #>  [72,]   177   178   178   177   176   176   176   175   175   175   174   174 #>  [73,]   177   177   177   177   176   176   176   175   175   175   174   174 #>  [74,]   177   177   177   177   176   176   176   175   175   174   174   174 #>  [75,]   177   177   177   177   176   177   177   176   175   174   174   174 #>  [76,]   176   177   177   177   176   177   177   176   176   175   175   173 #>  [77,]   176   177   177   177   177   176   177   177   177   176   175   173 #>  [78,]   175   176   177   177   177   177   177   177   177   176   173   172 #>  [79,]   175   176   177   177   177   178   177   177   176   174   173   172 #>  [80,]   174   174   175   176   176   177   177   175   173   173   172   172 #>  [81,]   173   173   174   174   175   176   176   173   172   170   170   169 #>  [82,]   172   172   173   173   174   174   174   172   170   170   169   168 #>  [83,]   170   172   172   172   172   171   169   168   168   168   167   167 #>  [84,]   170   172   172   172   170   168   167   167   168   167   167   167 #>  [85,]   170   170   170   170   169   167   166   167   167   166   165   165 #>  [86,]   169   169   169   168   168   167   166   166   165   164   162   164 #>  [87,]   168   167   167   167   166   165   165   164   162   162   161   162 #>  [88,]   167   166   166   165   165   162   161   161   161   161   161   162 #>  [89,]   167   164   164   163   163   162   162   162   162   162   162   163 #>  [90,]   164   163   161   162   162   162   161   162   162   162   162   165 #>  [91,]   162   161   162   161   162   162   162   162   162   163   163   165 #>  [92,]   162   162   162   161   162   162   162   162   162   163   163   165 #>  [93,]   162   162   162   162   162   163   162   162   162   163   165   165 #>  [94,]   162   162   162   163   163   163   162   163   163   163   165   166 #>  [95,]   162   162   162   163   163   163   163   163   163   165   165   166 #>  [96,]   162   162   163   163   163   163   163   163   163   165   166   166 #>  [97,]   162   162   163   163   163   163   163   163   165   165   166   167 #>  [98,]   162   162   163   163   163   163   163   163   165   165   166   167 #>  [99,]   161   162   163   163   162   163   163   163   165   165   166   167 #> [100,]   161   162   163   163   162   163   163   163   165   165   166   168 #>        [,62] [,63] [,64] [,65] [,66] [,67] [,68] [,69] [,70] [,71] [,72] [,73] #>   [1,]   100   102   103   103   104   104   105   105   105   106   106   106 #>   [2,]   102   103   103   104   104   104   105   106   106   107   107   107 #>   [3,]   101   102   102   103   103   104   105   106   106   108   108   108 #>   [4,]   101   102   103   104   105   106   106   108   108   109   109   109 #>   [5,]   104   105   105   105   108   109   110   111   111   112   112   111 #>   [6,]   106   108   109   109   110   111   112   113   113   115   115   115 #>   [7,]   110   111   111   112   113   115   116   117   117   118   118   117 #>   [8,]   112   113   113   116   116   117   117   118   119   119   119   119 #>   [9,]   116   116   116   117   117   118   119   119   119   119   120   120 #>  [10,]   117   117   118   118   118   119   119   119   120   120   120   120 #>  [11,]   118   118   118   119   119   120   120   120   120   120   122   121 #>  [12,]   119   119   119   119   120   120   120   120   120   120   122   123 #>  [13,]   121   121   123   123   123   123   123   123   123   123   124   124 #>  [14,]   124   124   125   125   125   125   125   125   125   125   125   125 #>  [15,]   126   126   126   126   126   126   126   126   126   126   127   127 #>  [16,]   127   127   128   128   128   128   128   128   128   128   128   128 #>  [17,]   130   130   130   130   130   130   130   130   130   130   130   130 #>  [18,]   132   131   132   132   132   131   131   131   131   131   131   130 #>  [19,]   132   133   133   133   133   132   132   132   132   131   131   131 #>  [20,]   134   134   134   134   134   133   133   132   132   132   131   131 #>  [21,]   138   137   137   137   135   135   133   133   133   133   132   132 #>  [22,]   140   140   140   139   138   137   135   135   134   133   133   133 #>  [23,]   141   141   141   141   141   139   137   137   134   134   134   133 #>  [24,]   141   141   141   141   141   140   140   138   137   135   135   134 #>  [25,]   141   141   141   141   141   141   141   140   139   138   137   137 #>  [26,]   142   142   142   142   142   142   141   141   141   140   139   139 #>  [27,]   144   144   144   144   144   142   142   142   142   142   141   140 #>  [28,]   144   144   144   145   144   144   144   142   142   142   141   142 #>  [29,]   145   145   145   145   145   145   145   145   145   144   144   144 #>  [30,]   145   145   145   146   146   145   145   145   145   145   145   145 #>  [31,]   145   145   146   146   146   146   146   146   146   146   146   145 #>  [32,]   146   146   146   146   146   146   146   147   147   147   147   146 #>  [33,]   147   147   146   146   146   146   146   147   147   146   147   147 #>  [34,]   147   147   147   148   148   147   147   147   147   147   147   147 #>  [35,]   148   148   148   148   148   148   148   148   148   148   148   148 #>  [36,]   148   148   148   148   148   148   149   149   149   150   151   151 #>  [37,]   149   149   149   149   149   149   149   149   151   150   151   151 #>  [38,]   151   151   151   152   152   151   151   152   152   151   152   152 #>  [39,]   152   153   153   153   153   153   153   153   153   152   153   153 #>  [40,]   154   154   154   155   155   154   154   154   154   154   154   154 #>  [41,]   154   154   154   155   155   155   156   156   155   154   155   155 #>  [42,]   155   155   155   155   155   156   156   156   156   157   157   159 #>  [43,]   155   155   157   155   155   157   158   158   158   159   159   160 #>  [44,]   157   159   159   158   158   158   159   159   159   160   160   160 #>  [45,]   160   161   161   161   160   161   161   162   162   162   162   164 #>  [46,]   164   165   165   165   164   164   165   165   165   165   165   165 #>  [47,]   166   166   166   166   166   166   166   167   167   167   167   166 #>  [48,]   168   169   168   168   167   167   168   168   168   169   169   168 #>  [49,]   171   172   171   171   169   171   172   172   171   171   169   169 #>  [50,]   173   173   173   174   174   174   174   174   173   173   172   171 #>  [51,]   173   174   174   175   175   175   175   174   173   174   173   172 #>  [52,]   174   175   175   175   175   175   175   174   174   174   174   173 #>  [53,]   175   175   176   175   175   175   175   175   175   174   174   175 #>  [54,]   176   176   176   176   175   176   176   175   175   176   176   176 #>  [55,]   177   177   177   177   177   176   176   176   176   176   176   176 #>  [56,]   180   180   179   179   179   177   176   176   177   176   176   177 #>  [57,]   182   181   181   181   180   177   177   179   177   177   177   177 #>  [58,]   182   182   182   181   181   179   179   179   179   179   177   177 #>  [59,]   183   182   182   182   182   181   181   180   180   180   179   177 #>  [60,]   182   182   181   181   181   180   180   179   179   179   177   176 #>  [61,]   182   182   181   181   181   180   180   179   179   179   177   177 #>  [62,]   182   182   182   181   180   180   180   179   179   179   177   177 #>  [63,]   181   181   181   181   181   180   179   179   177   177   176   177 #>  [64,]   181   181   180   180   180   179   179   177   177   177   176   176 #>  [65,]   180   180   180   180   179   179   177   177   176   176   176   175 #>  [66,]   180   180   179   179   179   177   177   177   176   176   175   175 #>  [67,]   179   179   177   178   178   176   176   176   175   176   176   174 #>  [68,]   179   179   176   177   177   176   176   176   175   176   175   174 #>  [69,]   177   177   176   176   176   175   175   176   176   176   174   173 #>  [70,]   175   175   174   174   175   175   175   175   175   174   173   172 #>  [71,]   174   174   173   173   174   174   174   174   174   173   172   170 #>  [72,]   174   174   173   173   173   173   173   173   173   172   170   170 #>  [73,]   173   173   172   172   172   172   172   172   172   170   170   170 #>  [74,]   173   173   172   172   170   172   170   170   170   170   170   170 #>  [75,]   173   173   172   170   170   170   170   170   170   172   172   170 #>  [76,]   173   172   170   169   170   170   169   170   170   170   170   170 #>  [77,]   172   170   170   170   169   169   169   169   170   170   170   170 #>  [78,]   170   170   169   169   169   169   169   169   169   170   170   170 #>  [79,]   170   169   169   169   168   168   168   168   169   169   170   170 #>  [80,]   169   169   168   168   168   168   169   169   170   170   172   172 #>  [81,]   168   168   168   168   168   168   168   168   169   169   169   171 #>  [82,]   168   168   168   168   168   168   168   168   169   169   169   172 #>  [83,]   167   166   167   167   167   168   169   168   168   171   171   171 #>  [84,]   166   166   167   168   168   168   171   170   170   172   172   172 #>  [85,]   164   165   167   167   168   168   171   170   170   172   172   172 #>  [86,]   162   164   167   167   168   168   171   170   170   172   172   172 #>  [87,]   162   164   167   167   168   168   171   170   170   172   172   172 #>  [88,]   162   164   167   167   168   168   171   170   170   172   171   171 #>  [89,]   165   166   167   168   168   168   170   170   170   173   174   174 #>  [90,]   166   167   167   168   168   168   170   170   170   173   174   174 #>  [91,]   166   167   168   169   169   169   172   172   172   174   174   174 #>  [92,]   166   167   168   169   169   169   172   172   173   175   175   174 #>  [93,]   167   168   169   170   170   170   170   172   174   176   176   175 #>  [94,]   167   168   169   170   170   170   172   174   175   176   176   175 #>  [95,]   168   169   170   170   170   170   173   175   175   176   176   175 #>  [96,]   168   169   170   172   172   173   175   175   175   175   175   174 #>  [97,]   168   169   172   173   173   173   175   175   174   174   174   174 #>  [98,]   168   170   172   172   174   174   174   174   174   173   174   174 #>  [99,]   169   170   172   171   173   173   173   173   172   172   172   173 #> [100,]   169   170   173   173   173   173   173   172   172   172   172   173 #>        [,74] [,75] [,76] [,77] [,78] [,79] [,80] [,81] [,82] [,83] [,84] [,85] #>   [1,]   107   109   109   110   111   111   111   112   113   113   114   114 #>   [2,]   107   109   109   110   111   111   112   112   112   113   114   116 #>   [3,]   108   109   109   109   110   110   111   112   112   112   115   116 #>   [4,]   109   109   109   110   111   111   112   112   112   113   116   117 #>   [5,]   111   111   112   112   112   113   115   115   115   116   118   118 #>   [6,]   115   115   115   115   116   116   117   117   117   118   119   119 #>   [7,]   117   117   117   117   117   118   118   118   119   120   120   120 #>   [8,]   119   119   119   119   119   119   119   120   120   120   120   122 #>   [9,]   120   120   120   120   120   120   120   120   122   122   122   122 #>  [10,]   120   120   120   120   122   122   122   122   122   122   123   123 #>  [11,]   121   120   120   120   122   122   122   122   122   123   123   123 #>  [12,]   123   122   122   122   122   122   123   123   123   123   123   123 #>  [13,]   124   123   123   123   123   123   124   124   124   124   124   124 #>  [14,]   126   125   125   125   125   125   125   125   125   125   125   125 #>  [15,]   127   126   126   126   126   126   126   126   126   126   126   126 #>  [16,]   128   127   127   127   127   127   127   127   127   127   127   127 #>  [17,]   130   129   129   129   129   129   129   129   129   129   129   129 #>  [18,]   130   129   129   129   129   129   130   130   130   130   130   130 #>  [19,]   131   131   131   130   130   130   130   130   130   130   130   130 #>  [20,]   131   131   131   130   130   130   131   131   131   131   131   131 #>  [21,]   132   132   132   131   131   131   132   132   132   132   132   132 #>  [22,]   133   133   133   132   132   132   133   133   133   133   133   133 #>  [23,]   133   133   133   132   133   133   134   134   134   134   134   134 #>  [24,]   134   134   134   133   134   134   134   136   136   136   136   136 #>  [25,]   137   137   137   136   137   137   137   137   137   137   137   137 #>  [26,]   139   139   139   138   138   138   139   138   139   139   139   139 #>  [27,]   140   140   140   139   139   139   139   139   139   139   139   139 #>  [28,]   141   141   141   140   140   140   140   140   140   141   141   141 #>  [29,]   142   142   142   142   142   141   141   141   143   143   143   143 #>  [30,]   145   145   145   145   145   144   144   144   144   144   144   144 #>  [31,]   145   145   145   145   145   144   144   144   145   145   145   145 #>  [32,]   146   146   146   146   146   145   145   145   145   145   145   145 #>  [33,]   147   146   146   146   146   146   146   146   146   147   147   147 #>  [34,]   148   148   148   148   148   148   148   148   148   147   147   147 #>  [35,]   150   150   150   150   150   150   150   149   149   149   149   149 #>  [36,]   151   151   151   151   151   151   151   151   151   151   151   151 #>  [37,]   152   152   153   153   153   153   153   153   153   152   151   151 #>  [38,]   152   153   153   153   154   154   154   155   154   154   153   152 #>  [39,]   153   154   154   154   154   154   154   155   155   155   154   153 #>  [40,]   154   154   154   154   154   154   154   155   155   155   154   153 #>  [41,]   155   155   155   157   157   158   156   156   156   155   154   153 #>  [42,]   159   159   159   158   158   159   158   158   156   156   155   154 #>  [43,]   160   160   160   160   159   160   160   159   158   158   155   154 #>  [44,]   161   160   160   160   159   160   159   159   158   158   155   154 #>  [45,]   164   161   162   161   160   161   160   159   159   158   156   154 #>  [46,]   164   164   164   161   160   161   160   159   159   158   156   154 #>  [47,]   166   166   164   161   160   161   160   159   159   158   156   155 #>  [48,]   168   168   166   162   161   161   160   159   159   158   156   155 #>  [49,]   169   168   166   164   161   161   160   159   159   158   156   155 #>  [50,]   171   169   166   164   161   161   160   160   159   159   158   155 #>  [51,]   173   171   167   164   161   161   161   160   160   159   158   156 #>  [52,]   175   173   168   165   161   161   161   160   160   159   158   156 #>  [53,]   176   175   169   166   162   161   161   160   160   159   158   156 #>  [54,]   176   176   172   168   164   162   161   160   160   159   158   156 #>  [55,]   176   175   172   168   165   163   161   160   160   159   158   156 #>  [56,]   176   175   172   168   166   163   161   160   160   159   158   156 #>  [57,]   176   175   173   168   166   164   161   160   160   159   157   157 #>  [58,]   176   174   172   168   166   164   161   161   161   159   158   157 #>  [59,]   176   174   172   168   166   166   163   161   161   160   159   157 #>  [60,]   176   173   172   168   166   166   163   162   162   161   159   158 #>  [61,]   177   174   173   170   168   166   165   163   163   161   160   158 #>  [62,]   176   174   172   170   168   166   165   163   162   162   160   158 #>  [63,]   176   174   173   170   168   166   165   163   163   162   161   158 #>  [64,]   176   173   170   169   167   166   165   163   163   162   161   159 #>  [65,]   175   173   169   168   166   165   165   163   163   163   161   160 #>  [66,]   174   172   169   167   166   165   165   163   163   162   161   160 #>  [67,]   173   170   168   166   165   165   163   163   163   163   162   161 #>  [68,]   172   169   167   166   166   165   165   163   163   163   163   162 #>  [69,]   170   169   167   166   166   165   165   165   163   163   163   163 #>  [70,]   169   169   168   167   167   166   166   165   165   165   165   165 #>  [71,]   170   169   168   168   167   167   166   166   166   165   165   165 #>  [72,]   170   169   169   168   167   167   167   166   166   166   166   166 #>  [73,]   170   169   169   168   168   167   167   167   167   167   167   167 #>  [74,]   169   169   169   169   168   168   168   167   167   167   167   168 #>  [75,]   170   170   170   169   169   169   168   168   168   168   168   169 #>  [76,]   170   169   169   169   169   169   169   169   169   169   169   169 #>  [77,]   170   170   172   172   172   172   172   170   170   170   170   170 #>  [78,]   170   172   172   172   172   172   172   172   172   172   172   172 #>  [79,]   172   172   172   172   172   172   172   172   172   172   172   173 #>  [80,]   172   172   172   172   173   173   173   173   173   173   174   174 #>  [81,]   171   172   172   172   173   173   173   173   173   174   175   175 #>  [82,]   172   172   172   172   173   173   173   174   175   175   175   176 #>  [83,]   171   171   171   172   172   172   174   174   174   178   180   180 #>  [84,]   172   172   172   173   173   173   174   175   175   178   180   181 #>  [85,]   172   172   172   173   173   173   174   175   175   178   180   181 #>  [86,]   172   172   172   173   173   173   175   175   175   180   180   181 #>  [87,]   173   172   173   173   173   173   174   174   175   177   178   180 #>  [88,]   172   172   172   172   173   173   173   173   173   176   176   176 #>  [89,]   174   174   174   174   174   172   172   174   175   175   176   174 #>  [90,]   174   174   174   174   174   172   172   174   174   174   174   173 #>  [91,]   174   174   174   174   175   173   173   174   174   173   173   173 #>  [92,]   174   174   174   174   174   172   172   174   174   174   174   174 #>  [93,]   175   175   174   174   174   172   172   174   173   173   173   174 #>  [94,]   175   175   175   175   174   172   173   174   174   173   173   174 #>  [95,]   175   175   175   175   175   172   172   174   174   174   174   175 #>  [96,]   175   175   175   175   175   173   173   174   175   175   175   175 #>  [97,]   175   175   175   175   175   174   174   174   174   175   175   177 #>  [98,]   174   175   175   175   175   174   174   175   176   177   177   180 #>  [99,]   173   173   174   174   175   175   175   175   176   179   179   181 #> [100,]   173   173   174   174   175   175   175   176   177   180   180   182 #>        [,86] [,87] [,88] [,89] [,90] [,91] [,92] [,93] [,94] [,95] [,96] [,97] #>   [1,]   114   116   117   117   117   117   117   117   117   117   117   115 #>   [2,]   116   117   117   117   118   118   118   118   118   118   117   116 #>   [3,]   116   117   117   117   117   117   117   117   117   117   117   117 #>   [4,]   117   117   118   117   118   118   118   118   118   118   118   118 #>   [5,]   118   118   118   118   118   118   118   118   118   119   119   119 #>   [6,]   119   119   119   119   119   119   119   119   119   119   120   120 #>   [7,]   120   122   122   122   122   122   122   122   122   122   122   122 #>   [8,]   122   122   122   122   122   122   122   122   122   122   122   123 #>   [9,]   122   122   122   122   122   122   123   123   123   123   123   124 #>  [10,]   123   123   123   123   123   123   123   123   123   123   124   124 #>  [11,]   123   123   123   123   123   123   124   124   124   124   125   125 #>  [12,]   123   123   124   124   124   124   124   124   124   125   125   125 #>  [13,]   124   124   125   125   125   125   125   125   125   125   126   126 #>  [14,]   125   125   126   126   126   126   126   126   126   126   127   127 #>  [15,]   126   126   127   127   127   127   127   127   127   129   129   129 #>  [16,]   127   129   129   129   129   130   130   130   130   130   130   130 #>  [17,]   129   130   130   130   130   130   131   131   131   131   132   132 #>  [18,]   130   130   131   131   131   131   131   131   131   131   132   132 #>  [19,]   130   131   131   131   131   132   132   132   132   132   133   133 #>  [20,]   131   131   132   132   132   132   132   132   133   133   133   133 #>  [21,]   132   132   133   133   133   133   133   133   134   134   134   136 #>  [22,]   133   134   134   134   134   136   136   136   136   136   136   136 #>  [23,]   134   136   136   136   136   137   137   137   137   137   137   137 #>  [24,]   136   137   137   137   137   138   138   138   138   138   138   137 #>  [25,]   137   138   138   138   138   139   139   139   139   138   138   138 #>  [26,]   139   139   139   139   139   140   140   140   139   138   138   138 #>  [27,]   139   140   140   140   140   140   140   140   140   139   139   138 #>  [28,]   141   141   141   141   141   141   140   140   140   139   139   139 #>  [29,]   143   143   143   143   143   143   141   141   141   140   140   139 #>  [30,]   144   144   144   144   144   144   144   143   141   140   140   140 #>  [31,]   145   145   145   145   145   145   144   144   143   141   140   140 #>  [32,]   145   145   145   145   145   146   145   145   143   141   140   140 #>  [33,]   146   146   146   146   146   146   146   145   144   143   141   140 #>  [34,]   147   147   146   146   146   146   146   145   144   143   141   140 #>  [35,]   149   149   148   148   148   147   147   145   144   143   141   142 #>  [36,]   149   149   149   148   148   146   147   146   144   143   141   142 #>  [37,]   151   151   149   148   148   147   146   145   144   143   141   142 #>  [38,]   152   151   149   149   148   147   146   145   144   143   141   142 #>  [39,]   152   151   151   149   148   147   146   145   144   143   143   142 #>  [40,]   153   152   151   149   149   148   147   145   144   143   143   144 #>  [41,]   153   152   151   149   149   148   147   145   144   144   144   144 #>  [42,]   153   152   151   151   149   148   147   146   144   144   144   144 #>  [43,]   154   152   152   151   149   148   147   146   145   145   144   145 #>  [44,]   154   153   151   151   151   149   148   146   145   145   144   145 #>  [45,]   154   153   152   151   151   149   148   148   147   145   145   145 #>  [46,]   154   153   152   152   151   151   149   149   148   146   145   146 #>  [47,]   154   153   152   152   151   151   151   149   149   147   147   146 #>  [48,]   154   153   153   152   152   151   151   151   149   148   148   148 #>  [49,]   154   152   152   151   151   151   150   150   150   148   148   149 #>  [50,]   154   153   152   151   151   151   150   150   150   150   148   149 #>  [51,]   155   153   152   152   151   151   151   150   150   150   150   149 #>  [52,]   155   153   152   152   151   151   151   150   150   150   150   149 #>  [53,]   155   153   152   152   151   151   151   150   150   150   150   149 #>  [54,]   155   153   152   152   151   151   151   150   150   150   150   149 #>  [55,]   155   153   152   152   151   151   151   150   150   150   148   151 #>  [56,]   155   153   152   152   152   151   151   150   150   150   150   151 #>  [57,]   154   154   153   152   152   152   152   151   151   151   151   151 #>  [58,]   155   154   154   153   153   153   153   153   153   152   152   152 #>  [59,]   157   155   154   154   154   154   154   154   154   154   154   153 #>  [60,]   157   155   155   155   155   155   155   155   155   155   155   155 #>  [61,]   157   157   157   157   157   157   158   158   158   157   157   157 #>  [62,]   158   157   158   157   158   158   159   159   159   159   159   158 #>  [63,]   158   158   158   158   159   159   159   159   159   159   160   160 #>  [64,]   158   158   158   159   159   159   160   160   160   160   161   160 #>  [65,]   159   158   158   158   159   160   160   160   160   159   160   160 #>  [66,]   160   159   159   159   160   160   160   161   161   160   160   161 #>  [67,]   161   161   161   160   161   161   161   161   161   161   161   163 #>  [68,]   162   162   162   161   161   162   162   162   162   163   163   164 #>  [69,]   163   163   163   163   163   165   165   165   165   165   165   166 #>  [70,]   165   165   165   165   166   166   166   166   166   166   167   167 #>  [71,]   165   165   165   165   166   166   166   166   167   167   168   168 #>  [72,]   166   166   166   166   167   167   167   167   168   168   168   169 #>  [73,]   167   167   167   167   168   168   168   168   169   168   168   169 #>  [74,]   168   168   168   168   168   169   169   169   170   169   169   169 #>  [75,]   169   169   169   170   170   170   170   170   170   171   171   172 #>  [76,]   169   170   170   170   170   170   170   172   172   171   172   173 #>  [77,]   170   172   172   172   173   173   173   173   173   174   173   174 #>  [78,]   172   173   173   173   174   174   174   175   175   175   175   176 #>  [79,]   173   173   174   174   175   175   176   176   176   177   177   177 #>  [80,]   174   174   175   176   176   176   176   177   177   177   177   177 #>  [81,]   175   175   177   178   177   177   178   180   180   178   178   178 #>  [82,]   176   177   177   178   180   180   180   180   180   180   180   180 #>  [83,]   180   178   180   180   180   180   180   180   180   179   179   179 #>  [84,]   180   180   180   180   181   181   181   181   181   179   179   179 #>  [85,]   180   180   180   181   181   181   181   181   181   180   180   179 #>  [86,]   180   181   181   181   181   182   182   182   182   180   180   179 #>  [87,]   178   180   180   180   180   181   181   181   181   180   179   179 #>  [88,]   176   176   177   177   178   180   180   180   180   179   179   177 #>  [89,]   174   175   177   177   178   178   178   178   178   177   177   177 #>  [90,]   173   174   175   175   176   177   177   177   177   176   177   176 #>  [91,]   172   173   174   175   175   176   176   177   177   176   177   177 #>  [92,]   173   174   175   175   176   176   176   177   177   176   177   177 #>  [93,]   173   174   175   175   175   175   175   177   177   177   179   179 #>  [94,]   174   174   175   175   175   177   177   177   177   177   179   179 #>  [95,]   175   175   176   176   176   177   177   177   178   177   177   177 #>  [96,]   176   176   176   177   177   177   178   178   178   177   179   179 #>  [97,]   177   178   178   178   180   180   180   180   180   179   180   180 #>  [98,]   180   181   181   181   182   182   182   182   182   181   181   181 #>  [99,]   181   182   182   182   183   183   183   184   184   184   184   183 #> [100,]   182   183   183   183   184   184   184   185   185   185   185   184 #>        [,98] [,99] [,100] #>   [1,]   115   115    115 #>   [2,]   116   116    116 #>   [3,]   117   118    118 #>   [4,]   118   118    118 #>   [5,]   119   119    119 #>   [6,]   120   120    120 #>   [7,]   122   122    122 #>   [8,]   123   123    123 #>   [9,]   124   124    124 #>  [10,]   124   124    125 #>  [11,]   125   125    125 #>  [12,]   125   125    126 #>  [13,]   126   127    127 #>  [14,]   127   129    129 #>  [15,]   129   130    130 #>  [16,]   130   131    131 #>  [17,]   132   132    132 #>  [18,]   132   132    134 #>  [19,]   133   133    134 #>  [20,]   134   136    134 #>  [21,]   136   137    137 #>  [22,]   136   137    137 #>  [23,]   137   137    137 #>  [24,]   137   137    137 #>  [25,]   138   138    137 #>  [26,]   138   138    137 #>  [27,]   138   138    138 #>  [28,]   138   138    138 #>  [29,]   139   138    138 #>  [30,]   139   139    139 #>  [31,]   139   139    139 #>  [32,]   139   139    139 #>  [33,]   140   139    139 #>  [34,]   140   139    139 #>  [35,]   141   139    139 #>  [36,]   141   139    139 #>  [37,]   141   140    140 #>  [38,]   141   140    140 #>  [39,]   142   141    140 #>  [40,]   142   141    140 #>  [41,]   144   142    141 #>  [42,]   144   142    141 #>  [43,]   145   144    142 #>  [44,]   145   144    144 #>  [45,]   145   145    145 #>  [46,]   146   145    145 #>  [47,]   146   146    146 #>  [48,]   147   146    146 #>  [49,]   149   148    147 #>  [50,]   149   148    147 #>  [51,]   149   149    148 #>  [52,]   149   149    148 #>  [53,]   149   149    148 #>  [54,]   149   149    149 #>  [55,]   151   151    151 #>  [56,]   151   151    151 #>  [57,]   151   151    151 #>  [58,]   152   152    152 #>  [59,]   154   154    154 #>  [60,]   155   155    155 #>  [61,]   157   157    158 #>  [62,]   159   159    159 #>  [63,]   160   160    160 #>  [64,]   161   161    161 #>  [65,]   160   161    161 #>  [66,]   161   161    161 #>  [67,]   163   164    164 #>  [68,]   164   165    166 #>  [69,]   166   167    168 #>  [70,]   167   168    169 #>  [71,]   168   169    169 #>  [72,]   169   171    171 #>  [73,]   169   171    171 #>  [74,]   169   171    171 #>  [75,]   172   173    173 #>  [76,]   173   173    175 #>  [77,]   175   175    177 #>  [78,]   177   177    177 #>  [79,]   177   177    177 #>  [80,]   177   178    178 #>  [81,]   178   180    180 #>  [82,]   180   180    180 #>  [83,]   180   180    179 #>  [84,]   180   180    179 #>  [85,]   179   179    179 #>  [86,]   179   179    177 #>  [87,]   179   177    177 #>  [88,]   177   177    176 #>  [89,]   176   176    176 #>  [90,]   176   176    176 #>  [91,]   177   177    176 #>  [92,]   177   177    176 #>  [93,]   177   177    177 #>  [94,]   179   179    179 #>  [95,]   177   179    179 #>  [96,]   179   180    180 #>  [97,]   180   181    181 #>  [98,]   181   182    182 #>  [99,]   183   183    183 #> [100,]   183   183    183 #>  #> , , 3 #>  #>        [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] #>   [1,]   59   59   59   59   59   59   59   59   59    60    60    60    60 #>   [2,]   59   59   59   59   59   59   59   59   59    60    60    60    60 #>   [3,]   59   59   59   59   59   59   60   60   60    60    60    60    60 #>   [4,]   59   59   59   59   59   60   62   62   62    62    62    62    62 #>   [5,]   62   62   62   62   62   62   63   63   63    63    63    63    63 #>   [6,]   64   64   64   64   64   64   65   65   65    65    65    65    65 #>   [7,]   64   64   64   64   65   65   66   66   66    66    66    66    66 #>   [8,]   66   66   66   66   66   66   66   67   67    67    69    69    69 #>   [9,]   66   66   67   67   67   67   69   69   70    70    70    71    72 #>  [10,]   67   67   69   69   69   71   71   71   72    72    72    73    74 #>  [11,]   69   69   70   70   70   71   71   71   72    72    74    75    75 #>  [12,]   70   70   71   72   72   72   73   73   74    74    75    78    78 #>  [13,]   71   71   72   73   73   73   74   74   76    76    78    79    82 #>  [14,]   73   73   74   74   75   75   75   77   79    79    79    81    84 #>  [15,]   75   75   77   77   78   78   78   78   79    80    83    85    87 #>  [16,]   77   77   78   78   79   80   80   80   82    83    85    87    90 #>  [17,]   79   79   80   80   81   82   82   83   85    86    87    88    90 #>  [18,]   80   81   82   82   83   85   85   85   87    87    88    89    92 #>  [19,]   82   82   83   83   85   86   86   87   88    88    91    92    95 #>  [20,]   85   85   86   86   87   88   88   88   89    90    94    95    96 #>  [21,]   89   89   90   90   91   92   92   92   95    95    95    97    98 #>  [22,]   90   90   92   92   92   95   95   95   96    97    98    98   102 #>  [23,]   92   92   94   94   95   96   96   97   98    99    99   102   103 #>  [24,]   95   95   96   96   97   98   98   98  101   101   102   103   105 #>  [25,]   98   98   99   99  100  102  102  102  103   103   103   105   106 #>  [26,]   99   99  102  102  102  104  104  104  105   105   106   107   107 #>  [27,]  102  102  103  103  104  105  105  106  107   109   110   110   111 #>  [28,]  103  103  105  105  105  107  107  109  110   110   112   112   113 #>  [29,]  105  105  106  106  107  110  110  111  112   113   113   114   114 #>  [30,]  107  109  109  109  110  112  113  113  114   114   116   116   117 #>  [31,]  112  112  114  114  114  115  116  116  119   119   119   121   121 #>  [32,]  113  114  114  114  115  118  118  119  120   120   121   122   125 #>  [33,]  113  114  115  115  116  118  119  119  121   122   123   123   125 #>  [34,]  114  114  116  116  118  120  120  121  122   123   122   123   125 #>  [35,]  116  116  118  118  119  120  121  122  123   123   123   123   126 #>  [36,]  118  118  120  120  120  122  123  123  123   125   125   127   128 #>  [37,]  119  120  121  121  122  125  125  125  125   126   126   128   130 #>  [38,]  120  121  121  121  123  125  125  126  127   128   129   130   132 #>  [39,]  120  121  122  122  123  126  126  127  128   130   130   133   134 #>  [40,]  120  121  122  122  123  126  126  128  132   132   134   135   136 #>  [41,]  121  121  122  123  125  127  127  129  130   133   135   136   139 #>  [42,]  121  121  122  123  125  127  127  129  130   134   135   137   139 #>  [43,]  122  122  125  125  125  127  128  129  132   135   137   140   140 #>  [44,]  123  125  126  127  128  129  130  132  134   137   140   141   141 #>  [45,]  125  125  127  127  128  130  133  134  137   140   141   142   142 #>  [46,]  126  126  128  129  129  130  133  136  140   141   143   143   142 #>  [47,]  127  127  128  130  130  133  134  137  140   141   142   142   141 #>  [48,]  127  128  130  130  133  135  136  139  140   141   141   141   140 #>  [49,]  128  128  130  130  133  135  136  139  140   140   140   139   137 #>  [50,]  128  129  132  132  134  135  137  139  140   140   139   137   137 #>  [51,]  126  127  130  131  132  135  135  137  138   138   137   134   133 #>  [52,]  126  127  130  131  132  135  135  137  137   137   134   132   131 #>  [53,]  124  126  129  131  133  134  134  134  133   132   131   129   126 #>  [54,]  124  126  127  130  131  133  133  132  131   129   127   126   125 #>  [55,]  123  124  125  129  129  131  130  129  126   126   125   125   125 #>  [56,]  122  123  124  125  125  126  125  125  124   124   124   124   124 #>  [57,]  122  123  123  123  124  124  124  124  123   124   124   124   125 #>  [58,]  120  122  123  123  124  122  123  124  123   123   123   124   124 #>  [59,]  120  120  122  122  123  122  122  123  122   122   123   124   124 #>  [60,]  120  120  122  122  122  122  122  123  122   122   123   123   123 #>  [61,]  119  120  120  122  122  122  122  123  122   122   123   123   123 #>  [62,]  119  120  120  122  122  122  123  123  123   122   122   123   123 #>  [63,]  119  120  121  121  123  123  123  123  123   123   123   124   123 #>  [64,]  119  120  121  121  123  123  123  123  123   124   124   124   124 #>  [65,]  119  119  121  121  121  123  123  124  124   124   125   125   125 #>  [66,]  119  119  121  121  121  123  124  124  124   125   125   125   125 #>  [67,]  119  120  121  121  123  123  124  125  125   125   126   126   126 #>  [68,]  120  120  121  123  123  124  125  125  126   126   126   127   127 #>  [69,]  121  121  123  123  124  125  125  126  126   127   127   128   128 #>  [70,]  121  123  124  124  125  125  126  127  127   128   130   130   131 #>  [71,]  124  124  125  126  126  127  127  128  130   130   131   131   132 #>  [72,]  125  125  126  126  127  128  130  130  131   131   132   132   133 #>  [73,]  125  126  127  127  128  130  131  132  131   132   133   134   134 #>  [74,]  126  127  128  130  131  131  132  132  132   133   134   134   135 #>  [75,]  126  127  128  130  131  132  133  133  133   134   135   135   137 #>  [76,]  126  128  130  131  132  133  134  134  134   135   135   137   140 #>  [77,]  127  128  131  132  133  134  135  135  137   137   137   138   141 #>  [78,]  128  130  131  133  134  134  135  137  137   137   138   139   141 #>  [79,]  128  130  131  132  134  134  137  138  138   138   139   140   143 #>  [80,]  126  127  130  132  133  134  135  138  138   139   140   141   144 #>  [81,]  126  127  128  131  132  132  134  138  141   142   143   144   144 #>  [82,]  125  126  128  128  131  132  133  137  140   141   143   144   146 #>  [83,]  125  126  127  128  133  133  134  137  137   141   143   144   146 #>  [84,]  123  124  126  128  132  132  134  136  136   140   142   144   147 #>  [85,]  123  124  125  126  129  130  133  135  135   139   142   143   146 #>  [86,]  121  123  125  126  129  130  132  134  135   139   142   143   146 #>  [87,]  121  123  125  126  129  130  133  134  136   139   142   144   147 #>  [88,]  124  125  126  127  130  132  134  135  137   141   143   146   148 #>  [89,]  124  125  127  128  132  133  135  136  139   141   144   147   149 #>  [90,]  125  126  128  130  133  134  135  137  139   141   144   149   151 #>  [91,]  125  126  128  130  133  134  135  137  140   142   146   149   151 #>  [92,]  126  127  128  131  134  135  136  139  141   142   146   149   151 #>  [93,]  127  128  130  131  132  134  137  140  141   143   146   149   151 #>  [94,]  127  128  130  132  133  135  137  141  142   144   147   150   151 #>  [95,]  128  128  131  133  133  135  139  141  142   146   148   150   153 #>  [96,]  128  130  131  133  134  135  141  142  144   148   150   153   156 #>  [97,]  128  130  131  133  134  137  141  143  146   149   151   155   158 #>  [98,]  128  130  131  133  134  137  141  144  147   151   154   156   160 #>  [99,]  127  130  131  133  135  137  140  144  147   151   154   156   158 #> [100,]  127  131  132  134  137  138  140  144  148   152   155   158   158 #>        [,14] [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23] [,24] [,25] #>   [1,]    60    60    60    60    60    62    62    62    63    64    64    65 #>   [2,]    60    60    60    60    60    62    63    63    64    64    65    66 #>   [3,]    60    60    60    62    62    64    64    64    65    65    65    68 #>   [4,]    62    62    63    63    63    65    65    65    67    67    67    70 #>   [5,]    63    64    64    65    65    66    67    67    68    70    70    72 #>   [6,]    65    65    65    66    66    68    70    70    70    73    73    74 #>   [7,]    66    67    68    70    70    71    72    72    72    75    75    76 #>   [8,]    69    71    72    72    72    73    73    73    74    77    77    78 #>   [9,]    72    73    73    74    74    74    75    77    78    78    78    80 #>  [10,]    75    75    74    75    75    76    76    78    80    80    80    81 #>  [11,]    76    78    78    78    78    79    79    81    82    82    82    84 #>  [12,]    78    81    82    79    81    82    82    83    84    85    84    88 #>  [13,]    82    83    84    84    84    85    87    87    88    88    89    89 #>  [14,]    85    85    87    87    87    88    88    89    90    90    91    91 #>  [15,]    88    88    89    89    89    90    90    90    91    92    92    93 #>  [16,]    90    90    91    91    91    92    94    92    94    96    95    97 #>  [17,]    91    92    92    92    92    94    94    95    96    97    97    98 #>  [18,]    92    95    95    95    95    95    96    97    98    99   100   100 #>  [19,]    95    96    97    97    97    98    99   100   100   100   103   102 #>  [20,]    97    98    99    99    99   100   102   103   102   103   105   104 #>  [21,]    99    99   100   100   100   102   103   104   105   106   106   107 #>  [22,]   102   102   103   103   103   104   105   106   106   107   109   109 #>  [23,]   103   103   104   104   105   106   106   107   109   110   110   111 #>  [24,]   105   105   106   106   107   109   109   110   112   112   112   113 #>  [25,]   107   109   109   110   111   112   111   112   113   113   116   116 #>  [26,]   110   111   113   113   113   113   116   117   116   117   118   118 #>  [27,]   113   114   116   117   117   117   118   118   119   120   119   119 #>  [28,]   114   117   118   119   119   119   121   120   123   121   121   121 #>  [29,]   117   118   119   120   121   123   123   124   124   124   125   125 #>  [30,]   118   120   121   123   123   124   125   125   125   126   126   126 #>  [31,]   123   125   125   124   125   126   126   126   127   127   128   128 #>  [32,]   125   126   127   125   126   128   128   130   130   130   131   131 #>  [33,]   127   128   128   127   128   131   131   132   132   132   132   132 #>  [34,]   127   128   129   127   130   132   134   134   134   134   134   134 #>  [35,]   127   128   130   130   133   136   139   139   139   139   139   139 #>  [36,]   129   130   132   132   135   139   141   141   141   141   141   141 #>  [37,]   130   132   133   135   136   140   141   143   143   143   143   143 #>  [38,]   133   134   135   135   137   140   143   144   144   146   146   146 #>  [39,]   136   136   135   137   139   141   144   146   147   147   147   147 #>  [40,]   137   137   137   139   141   142   146   147   148   148   148   149 #>  [41,]   139   139   139   140   141   143   147   148   148   149   149   149 #>  [42,]   139   140   140   140   141   144   147   147   148   148   149   149 #>  [43,]   140   140   140   141   142   146   147   147   148   148   149   149 #>  [44,]   141   141   141   141   142   144   147   147   147   148   149   149 #>  [45,]   141   141   140   140   140   142   144   144   144   146   147   148 #>  [46,]   141   140   139   139   136   139   140   140   141   142   144   146 #>  [47,]   140   137   135   135   134   135   137   137   139   140   141   143 #>  [48,]   139   136   134   133   133   134   136   137   139   139   141   142 #>  [49,]   136   135   133   133   134   135   136   137   139   139   141   142 #>  [50,]   136   133   133   133   133   134   136   136   139   139   140   142 #>  [51,]   132   130   130   130   131   131   132   134   135   137   138   140 #>  [52,]   130   130   130   130   131   131   131   132   134   135   135   139 #>  [53,]   126   126   126   127   129   130   131   132   132   133   135   137 #>  [54,]   125   125   125   126   127   129   130   131   131   131   132   134 #>  [55,]   125   125   125   125   126   126   127   130   130   130   132   133 #>  [56,]   125   125   125   125   125   125   126   128   128   130   131   132 #>  [57,]   125   125   125   125   125   125   126   127   128   130   131   133 #>  [58,]   124   124   124   125   125   125   125   127   127   128   130   133 #>  [59,]   124   124   124   125   125   126   126   126   127   130   132   132 #>  [60,]   124   124   124   124   124   126   126   127   127   130   132   132 #>  [61,]   123   123   124   124   124   125   126   127   127   130   132   132 #>  [62,]   123   123   124   124   124   125   126   127   127   130   132   133 #>  [63,]   124   124   124   124   124   124   125   126   127   127   130   132 #>  [64,]   124   124   124   124   124   124   125   126   126   128   130   132 #>  [65,]   126   125   124   124   124   125   125   126   127   128   130   133 #>  [66,]   126   125   125   124   124   125   125   126   127   127   130   133 #>  [67,]   126   126   126   125   125   125   125   126   126   127   129   132 #>  [68,]   128   128   127   126   125   125   125   126   126   127   129   132 #>  [69,]   128   130   130   127   127   126   127   127   127   127   130   132 #>  [70,]   131   131   131   130   129   129   129   129   129   129   130   132 #>  [71,]   133   133   133   131   131   131   131   130   130   130   131   133 #>  [72,]   134   134   134   133   133   132   132   131   131   131   131   133 #>  [73,]   135   135   135   134   134   134   133   132   131   132   133   134 #>  [74,]   137   137   138   137   136   134   134   132   132   133   133   135 #>  [75,]   139   140   140   138   138   136   134   133   132   133   134   134 #>  [76,]   141   141   141   139   138   136   134   133   132   133   134   135 #>  [77,]   141   142   142   139   138   137   136   134   133   134   134   135 #>  [78,]   142   143   143   140   140   138   136   134   133   134   135   135 #>  [79,]   143   144   143   141   141   138   137   136   134   135   135   137 #>  [80,]   144   146   144   142   142   140   139   138   137   138   138   139 #>  [81,]   146   147   146   142   142   141   141   140   139   139   140   142 #>  [82,]   147   147   147   145   144   142   142   141   140   140   141   143 #>  [83,]   147   148   149   147   146   145   144   142   141   143   144   144 #>  [84,]   148   148   149   148   147   146   145   144   142   143   144   144 #>  [85,]   148   149   150   148   149   148   147   145   144   146   146   146 #>  [86,]   148   149   151   151   151   149   148   146   146   146   147   148 #>  [87,]   149   150   153   153   152   152   152   149   148   148   149   148 #>  [88,]   150   153   155   155   154   155   154   152   151   150   150   150 #>  [89,]   151   153   156   155   159   159   158   154   152   151   150   150 #>  [90,]   153   155   158   156   161   162   161   159   154   153   151   151 #>  [91,]   154   155   156   156   162   161   161   159   153   152   151   149 #>  [92,]   155   156   158   160   162   161   161   159   154   153   152   151 #>  [93,]   155   155   158   162   161   161   161   160   155   153   153   152 #>  [94,]   156   156   159   160   159   159   160   159   155   153   153   151 #>  [95,]   156   156   156   155   154   154   155   155   153   152   151   151 #>  [96,]   157   158   155   153   149   150   153   153   151   151   151   151 #>  [97,]   160   158   154   151   147   147   151   151   150   151   149   149 #>  [98,]   161   158   154   152   148   148   150   150   150   151   149   151 #>  [99,]   159   158   154   150   147   148   151   148   148   148   148   148 #> [100,]   158   156   153   151   147   148   150   148   148   148   148   148 #>        [,26] [,27] [,28] [,29] [,30] [,31] [,32] [,33] [,34] [,35] [,36] [,37] #>   [1,]    65    66    66    66    66    66    66    64    64    65    66    65 #>   [2,]    66    66    67    67    67    67    67    65    65    66    67    66 #>   [3,]    69    69    69    70    72    68    68    68    68    68    68    68 #>   [4,]    69    70    70    72    73    70    70    70    70    70    71    70 #>   [5,]    72    73    74    74    74    74    74    72    72    72    73    74 #>   [6,]    75    75    75    76    77    77    77    74    75    75    75    77 #>   [7,]    77    77    77    78    80    80    80    80    81    81    81    81 #>   [8,]    78    80    80    81    81    81    82    82    83    83    83    83 #>   [9,]    81    81    82    82    83    83    84    84    84    86    86    86 #>  [10,]    82    82    83    84    84    85    85    85    87    89    89    89 #>  [11,]    85    85    86    88    88    89    89    90    91    92    92    93 #>  [12,]    88    89    90    90    91    91    92    92    93    95    95    96 #>  [13,]    90    90    91    92    92    93    95    96    96    97    98    99 #>  [14,]    91    92    93    95    95    96    97    97    98    99   100   102 #>  [15,]    93    95    96    97    97    98    99    99   100   102   103   103 #>  [16,]    96    98    99   100   100   102   102   103   104   105   106   106 #>  [17,]    98    99   100   102   102   103   104   105   105   106   109   109 #>  [18,]   102   102   103   103   104   105   106   107   107   109   110   110 #>  [19,]   103   104   105   104   106   107   107   109   110   111   111   112 #>  [20,]   105   106   107   106   109   109   109   110   111   112   113   113 #>  [21,]   109   107   109   110   110   111   111   112   113   114   116   117 #>  [22,]   110   110   111   112   112   113   113   114   114   116   118   119 #>  [23,]   111   112   113   113   113   114   116   117   118   119   119   120 #>  [24,]   113   114   116   116   116   117   118   119   119   120   121   123 #>  [25,]   117   117   117   118   118   119   119   120   121   123   123   124 #>  [26,]   118   118   119   119   120   120   121   121   123   124   124   125 #>  [27,]   120   121   121   121   121   123   123   124   124   124   125   126 #>  [28,]   123   124   124   125   125   125   125   125   125   125   125   126 #>  [29,]   125   125   125   126   126   126   126   126   126   126   126   127 #>  [30,]   127   127   127   128   128   128   128   127   127   127   127   127 #>  [31,]   128   128   128   130   130   130   130   130   128   128   128   127 #>  [32,]   130   130   130   131   131   131   132   132   131   131   130   130 #>  [33,]   132   132   132   133   133   133   133   132   132   132   131   131 #>  [34,]   133   133   133   134   134   134   134   133   133   132   132   131 #>  [35,]   139   139   139   139   139   135   135   134   134   133   133   132 #>  [36,]   141   141   141   141   141   138   138   138   137   135   134   133 #>  [37,]   143   143   143   143   143   141   141   141   140   139   137   137 #>  [38,]   146   146   146   147   147   144   144   144   141   140   139   138 #>  [39,]   147   147   147   148   148   146   146   145   142   141   139   138 #>  [40,]   149   149   149   149   149   146   146   145   144   142   139   138 #>  [41,]   149   149   149   149   149   149   148   146   144   142   140   139 #>  [42,]   149   150   150   150   149   149   148   146   144   142   140   139 #>  [43,]   150   151   151   151   150   150   149   147   144   144   141   140 #>  [44,]   150   150   151   151   151   150   149   146   144   144   141   141 #>  [45,]   148   149   149   149   149   149   148   146   146   144   144   144 #>  [46,]   146   148   148   148   149   149   149   147   146   146   146   146 #>  [47,]   144   148   149   148   149   151   151   149   148   148   148   148 #>  [48,]   144   147   148   150   150   151   150   149   148   148   149   151 #>  [49,]   144   147   148   150   151   149   151   149   149   149   152   151 #>  [50,]   143   147   149   150   151   149   151   153   153   153   153   149 #>  [51,]   141   145   146   148   149   151   151   153   153   152   149   146 #>  [52,]   139   141   142   145   146   148   148   149   149   148   144   140 #>  [53,]   137   140   141   142   144   146   146   149   148   146   144   139 #>  [54,]   135   137   138   139   140   140   140   145   144   142   141   140 #>  [55,]   133   134   135   137   137   137   138   140   139   140   140   139 #>  [56,]   132   133   133   134   135   137   137   138   138   138   139   139 #>  [57,]   134   134   135   136   137   137   139   138   138   139   139   140 #>  [58,]   133   134   134   135   136   137   139   138   138   139   140   140 #>  [59,]   132   134   134   135   136   137   140   140   141   142   143   143 #>  [60,]   133   134   135   135   137   139   141   141   142   144   144   144 #>  [61,]   133   134   135   136   139   141   142   143   144   146   147   147 #>  [62,]   133   134   135   136   139   142   144   146   147   148   149   148 #>  [63,]   133   134   135   136   140   143   146   148   149   151   150   150 #>  [64,]   132   134   135   137   141   144   147   150   153   151   151   153 #>  [65,]   134   135   136   139   142   146   150   151   153   153   155   155 #>  [66,]   135   136   139   142   144   149   151   154   154   155   157   157 #>  [67,]   134   139   141   144   148   150   154   154   155   157   160   160 #>  [68,]   134   139   142   147   149   151   155   155   157   160   161   161 #>  [69,]   134   139   142   147   149   153   156   157   158   161   162   162 #>  [70,]   134   139   142   146   149   153   156   158   160   162   163   163 #>  [71,]   135   140   142   147   149   153   156   157   160   162   163   163 #>  [72,]   135   140   142   147   149   153   156   158   160   162   163   163 #>  [73,]   137   140   143   147   149   151   155   155   157   160   162   162 #>  [74,]   137   141   143   148   149   151   153   155   157   160   161   161 #>  [75,]   138   139   141   147   149   151   153   154   157   158   161   161 #>  [76,]   138   139   141   146   148   149   151   153   156   158   161   161 #>  [77,]   137   139   140   144   145   149   151   153   156   158   161   161 #>  [78,]   138   138   140   142   144   148   151   153   156   158   160   160 #>  [79,]   138   139   139   141   144   148   150   153   155   157   158   160 #>  [80,]   140   140   141   142   144   148   149   151   155   157   160   160 #>  [81,]   142   143   144   144   146   147   149   153   155   157   158   160 #>  [82,]   143   144   144   146   147   149   150   153   155   156   157   158 #>  [83,]   144   146   147   148   149   150   151   151   152   154   155   155 #>  [84,]   146   147   148   149   150   151   153   151   152   154   155   155 #>  [85,]   147   148   148   149   150   151   153   152   152   153   155   155 #>  [86,]   148   149   150   150   151   153   153   151   152   152   154   153 #>  [87,]   149   150   150   151   153   153   153   151   152   152   152   152 #>  [88,]   150   151   151   151   151   151   151   151   152   152   151   151 #>  [89,]   151   151   151   151   151   149   149   151   151   151   151   149 #>  [90,]   150   150   151   151   151   149   149   149   149   149   149   149 #>  [91,]   149   149   149   149   149   148   148   147   147   147   147   147 #>  [92,]   149   149   149   149   149   148   148   147   147   147   147   147 #>  [93,]   151   151   149   149   149   147   147   147   147   147   147   147 #>  [94,]   151   151   149   149   149   147   147   147   147   147   147   147 #>  [95,]   151   151   149   149   149   147   147   147   147   147   147   147 #>  [96,]   151   151   149   149   149   147   147   147   147   147   147   145 #>  [97,]   151   151   149   149   149   148   148   147   147   146   146   146 #>  [98,]   151   149   149   149   149   148   148   147   147   146   146   146 #>  [99,]   148   148   147   147   147   147   147   147   147   147   147   146 #> [100,]   148   148   147   147   147   147   147   147   147   148   147   147 #>        [,38] [,39] [,40] [,41] [,42] [,43] [,44] [,45] [,46] [,47] [,48] [,49] #>   [1,]    66    66    67    67    68    68    70    70    71    72    73    74 #>   [2,]    67    68    70    70    70    70    71    71    72    73    74    74 #>   [3,]    70    73    73    74    75    75    75    75    76    76    77    77 #>   [4,]    71    74    75    76    77    77    76    77    78    78    78    80 #>   [5,]    75    76    77    78    78    78    78    81    82    82    83    83 #>   [6,]    78    80    80    81    81    81    82    83    84    85    85    87 #>   [7,]    82    84    84    85    85    85    86    86    89    89    89    89 #>   [8,]    84    86    86    88    88    88    89    89    91    91    91    91 #>   [9,]    88    89    89    90    89    91    92    91    92    92    93    95 #>  [10,]    91    91    91    92    92    92    93    92    95    95    95    97 #>  [11,]    93    95    96    96    96    96    96    96    97    97    97    98 #>  [12,]    96    97    97    98    98    99    99    98    99    99    99    99 #>  [13,]    99   100   100   102   102   103   103   102   102   102   102   103 #>  [14,]   102   103   103   104   104   105   105   104   105   105   105   105 #>  [15,]   104   104   105   105   105   106   106   106   107   107   107   109 #>  [16,]   106   107   107   109   107   109   109   109   110   110   110   111 #>  [17,]   110   110   111   112   111   112   112   112   112   112   113   113 #>  [18,]   111   112   112   113   114   114   116   116   116   116   116   116 #>  [19,]   113   114   116   116   118   118   118   118   119   119   119   119 #>  [20,]   114   117   117   118   120   120   120   121   121   121   121   121 #>  [21,]   117   118   119   120   121   123   124   124   124   125   125   124 #>  [22,]   120   120   121   121   123   124   124   125   126   126   126   127 #>  [23,]   121   121   123   124   125   125   125   126   127   127   127   127 #>  [24,]   124   124   125   125   125   126   127   127   127   127   128   128 #>  [25,]   125   125   125   125   126   127   127   127   128   128   128   128 #>  [26,]   125   125   126   126   127   127   128   128   128   128   128   130 #>  [27,]   126   127   127   127   127   128   128   128   130   130   130   130 #>  [28,]   126   126   127   127   127   127   130   130   130   130   130   131 #>  [29,]   127   127   127   127   128   128   130   130   130   131   131   131 #>  [30,]   127   127   127   128   128   128   130   130   131   131   131   132 #>  [31,]   128   128   128   128   128   128   130   130   131   131   132   133 #>  [32,]   130   128   128   130   130   131   132   132   133   133   134   134 #>  [33,]   130   130   130   130   131   131   132   133   134   134   135   135 #>  [34,]   131   130   130   130   131   131   132   133   134   134   134   137 #>  [35,]   131   131   130   131   131   132   133   134   134   134   137   137 #>  [36,]   132   132   132   132   133   133   134   135   135   137   137   137 #>  [37,]   135   134   134   134   134   135   137   137   138   138   138   139 #>  [38,]   135   135   135   135   135   137   138   139   140   140   140   140 #>  [39,]   135   135   137   137   138   138   139   141   141   141   141   142 #>  [40,]   135   135   137   137   139   139   141   142   142   144   144   144 #>  [41,]   137   137   138   138   140   140   141   144   144   144   144   142 #>  [42,]   138   138   139   139   140   140   141   142   142   142   142   142 #>  [43,]   140   140   141   140   141   141   141   142   142   142   142   142 #>  [44,]   142   142   141   142   142   141   142   141   142   142   142   142 #>  [45,]   145   144   144   142   142   144   142   142   142   142   142   142 #>  [46,]   146   147   145   145   145   145   142   142   142   141   141   141 #>  [47,]   148   149   147   146   146   145   144   142   142   141   141   141 #>  [48,]   151   149   147   146   146   145   144   142   142   141   141   141 #>  [49,]   151   148   147   147   146   145   144   144   142   142   141   143 #>  [50,]   147   147   147   147   146   145   144   144   142   142   141   143 #>  [51,]   144   146   144   144   144   146   146   144   144   144   146   144 #>  [52,]   138   140   141   142   142   144   144   146   147   144   146   146 #>  [53,]   137   139   140   142   142   144   144   147   148   147   147   148 #>  [54,]   138   139   141   142   143   144   146   147   148   149   149   150 #>  [55,]   139   140   142   143   144   144   147   148   149   151   151   153 #>  [56,]   140   141   142   144   144   144   147   148   150   153   154   155 #>  [57,]   141   142   143   144   146   146   147   149   153   154   156   156 #>  [58,]   141   142   143   144   147   147   151   154   154   155   157   158 #>  [59,]   144   143   144   144   148   149   151   154   156   157   158   160 #>  [60,]   146   146   147   148   150   153   154   156   157   158   158   160 #>  [61,]   147   148   149   151   153   154   155   157   158   158   158   160 #>  [62,]   148   150   151   154   154   156   157   157   157   158   158   160 #>  [63,]   151   151   153   155   155   155   156   157   157   158   158   161 #>  [64,]   153   154   155   156   156   156   157   158   158   160   162   162 #>  [65,]   155   156   156   157   158   160   160   160   160   161   163   163 #>  [66,]   158   158   160   161   160   160   161   161   161   162   163   163 #>  [67,]   161   161   161   161   160   161   161   161   161   160   161   162 #>  [68,]   161   162   161   161   160   161   162   162   162   161   162   163 #>  [69,]   162   162   161   161   160   161   162   162   162   161   162   163 #>  [70,]   163   162   162   161   160   161   162   162   162   161   162   163 #>  [71,]   163   163   162   161   160   161   162   162   163   162   162   163 #>  [72,]   163   162   162   161   160   161   162   162   163   162   162   163 #>  [73,]   163   163   162   161   160   161   162   162   163   162   162   162 #>  [74,]   162   162   162   162   161   162   163   163   163   162   162   162 #>  [75,]   161   162   161   162   161   161   162   163   163   161   162   162 #>  [76,]   162   161   161   161   161   161   161   163   163   161   162   162 #>  [77,]   160   160   160   160   160   160   161   162   162   160   161   162 #>  [78,]   158   158   158   157   157   158   158   158   160   159   160   160 #>  [79,]   160   157   156   156   156   156   156   157   157   158   159   160 #>  [80,]   158   156   156   155   155   154   155   156   155   155   156   158 #>  [81,]   157   157   155   154   154   154   154   155   156   155   155   156 #>  [82,]   157   157   156   154   153   154   154   154   155   154   155   156 #>  [83,]   155   155   154   152   151   151   151   152   152   153   154   155 #>  [84,]   155   155   153   152   152   151   152   152   153   153   155   155 #>  [85,]   155   154   153   153   153   152   152   153   153   154   155   155 #>  [86,]   153   152   152   153   153   153   153   153   154   154   154   155 #>  [87,]   151   151   151   152   153   153   153   154   154   154   153   154 #>  [88,]   151   149   149   148   149   151   152   153   153   153   152   153 #>  [89,]   149   149   148   148   148   149   152   152   152   152   152   151 #>  [90,]   149   149   148   147   147   147   148   149   151   152   151   150 #>  [91,]   147   147   146   146   146   146   147   148   150   151   149   148 #>  [92,]   147   146   145   145   144   145   146   147   148   151   151   148 #>  [93,]   147   145   145   145   145   145   146   147   148   149   149   148 #>  [94,]   146   145   145   144   144   145   145   147   148   149   149   148 #>  [95,]   146   146   145   144   142   144   144   146   147   148   148   147 #>  [96,]   145   146   145   142   142   142   144   145   147   148   148   147 #>  [97,]   145   146   144   144   142   141   142   145   146   147   148   147 #>  [98,]   145   146   145   144   142   142   142   145   146   147   148   147 #>  [99,]   146   146   145   146   146   146   146   148   148   147   148   148 #> [100,]   147   146   146   147   147   147   147   148   148   147   148   148 #>        [,50] [,51] [,52] [,53] [,54] [,55] [,56] [,57] [,58] [,59] [,60] [,61] #>   [1,]    74    75    76    78    80    80    81    82    82    83    84    85 #>   [2,]    74    75    76    80    80    80    81    82    83    83    84    85 #>   [3,]    77    78    80    80    81    81    82    84    84    85    86    86 #>   [4,]    80    80    80    81    82    82    83    84    85    86    88    88 #>   [5,]    83    83    83    84    85    85    86    86    88    89    89    90 #>   [6,]    87    87    87    88    88    88    89    90    90    92    92    93 #>   [7,]    89    89    89    90    90    90    91    92    92    95    95    96 #>   [8,]    91    91    91    92    93    93    95    95    96    97    98    98 #>   [9,]    95    95    95    95    97    97    98    98    98   100   100   102 #>  [10,]    97    97    97    97    98    99   100   100   100   103   103   103 #>  [11,]    98    98    98    99   100   100   102   102   103   103   104   104 #>  [12,]    99    99   100   100   100   103   104   104   105   105   105   105 #>  [13,]   103   103   103   104   104   105   106   106   107   107   107   107 #>  [14,]   105   106   106   106   106   107   109   109   110   110   110   110 #>  [15,]   109   109   109   110   110   110   111   111   111   111   111   111 #>  [16,]   111   111   111   111   111   112   112   112   112   113   113   113 #>  [17,]   113   113   113   113   113   113   114   114   114   114   114   114 #>  [18,]   116   117   117   117   117   117   117   117   117   117   117   117 #>  [19,]   119   118   118   118   118   118   118   118   118   118   118   118 #>  [20,]   121   121   121   121   120   120   120   120   120   120   120   120 #>  [21,]   125   125   125   125   124   124   124   124   124   124   124   124 #>  [22,]   127   127   127   127   126   126   126   126   126   126   126   126 #>  [23,]   127   127   127   127   127   127   127   126   126   126   126   126 #>  [24,]   128   128   128   128   127   127   127   127   127   127   127   127 #>  [25,]   128   128   128   128   128   128   128   128   128   128   128   128 #>  [26,]   130   130   130   130   130   128   128   128   128   128   128   128 #>  [27,]   130   130   130   130   131   130   130   130   130   130   130   130 #>  [28,]   131   131   131   131   131   130   130   130   130   130   130   130 #>  [29,]   131   131   131   131   131   131   131   131   130   130   130   130 #>  [30,]   132   132   132   132   132   132   132   132   131   131   130   131 #>  [31,]   133   133   133   133   133   133   133   133   133   132   131   131 #>  [32,]   134   135   135   135   135   134   134   133   133   133   133   132 #>  [33,]   135   135   135   135   135   135   134   134   133   133   133   133 #>  [34,]   137   137   137   137   135   135   134   134   134   133   133   133 #>  [35,]   137   137   137   137   137   135   134   134   134   133   134   134 #>  [36,]   137   137   137   137   137   135   135   134   133   133   134   134 #>  [37,]   139   139   138   138   138   137   135   134   133   133   133   134 #>  [38,]   140   140   140   140   139   138   137   135   135   134   134   135 #>  [39,]   142   142   142   142   141   140   139   138   138   137   137   137 #>  [40,]   144   144   144   144   142   141   140   139   139   138   139   139 #>  [41,]   142   142   142   142   142   141   141   140   140   139   140   142 #>  [42,]   142   142   142   142   142   142   141   141   140   141   140   143 #>  [43,]   142   142   142   142   142   142   142   141   141   141   141   144 #>  [44,]   142   142   142   142   142   141   142   142   142   144   144   148 #>  [45,]   142   141   141   141   142   141   142   142   144   145   146   150 #>  [46,]   141   141   142   142   141   142   142   144   145   147   148   151 #>  [47,]   141   141   142   142   142   142   145   145   147   149   151   154 #>  [48,]   141   141   141   142   144   145   146   147   149   151   152   156 #>  [49,]   143   143   144   146   146   148   150   151   154   155   157   158 #>  [50,]   144   144   146   146   148   150   153   154   155   158   160   161 #>  [51,]   144   146   147   148   150   153   154   155   157   161   161   162 #>  [52,]   146   148   149   151   153   154   155   157   160   162   162   162 #>  [53,]   148   150   151   153   154   155   158   161   162   163   163   164 #>  [54,]   151   153   154   155   156   158   161   162   162   163   164   165 #>  [55,]   154   154   156   156   157   160   162   163   164   165   166   166 #>  [56,]   156   156   158   158   158   161   162   163   165   168   168   169 #>  [57,]   156   157   160   160   161   161   162   165   166   169   169   170 #>  [58,]   158   160   160   161   161   162   163   165   168   169   170   171 #>  [59,]   161   162   162   162   162   163   164   165   168   169   170   171 #>  [60,]   161   162   162   163   163   164   164   166   166   169   170   171 #>  [61,]   161   162   163   165   165   165   166   166   168   169   170   171 #>  [62,]   162   163   165   166   166   168   168   168   168   170   171   171 #>  [63,]   162   165   166   166   168   169   168   169   169   171   171   171 #>  [64,]   163   165   166   169   169   169   169   169   170   170   170   170 #>  [65,]   164   166   169   170   170   169   170   170   169   170   169   169 #>  [66,]   165   168   169   169   169   169   169   169   169   169   169   169 #>  [67,]   163   168   169   169   169   169   169   168   169   169   168   168 #>  [68,]   164   168   169   169   169   169   169   168   168   168   166   168 #>  [69,]   164   166   166   166   166   166   166   164   164   164   163   164 #>  [70,]   163   164   166   166   164   164   164   163   163   162   162   162 #>  [71,]   163   164   164   164   163   163   163   162   162   161   161   161 #>  [72,]   163   164   164   163   162   162   162   161   161   161   160   160 #>  [73,]   163   163   163   163   162   162   162   161   161   161   160   160 #>  [74,]   163   163   163   163   162   162   162   161   161   160   160   160 #>  [75,]   163   163   163   163   162   163   163   162   161   160   160   160 #>  [76,]   162   163   163   163   162   163   163   162   162   161   161   159 #>  [77,]   162   163   163   163   163   162   163   163   163   162   161   159 #>  [78,]   161   162   163   163   163   163   163   163   163   162   159   158 #>  [79,]   161   162   163   163   163   164   163   163   162   160   159   158 #>  [80,]   160   160   161   162   162   163   163   161   159   159   158   158 #>  [81,]   159   159   160   160   161   162   162   159   158   156   156   155 #>  [82,]   158   158   159   159   160   160   160   158   156   156   155   154 #>  [83,]   156   158   158   158   158   158   156   155   155   155   154   154 #>  [84,]   156   158   158   158   156   155   154   154   155   154   154   154 #>  [85,]   156   156   156   156   155   154   153   154   154   153   152   152 #>  [86,]   155   155   155   154   154   154   153   153   152   151   149   151 #>  [87,]   154   153   153   153   152   152   152   151   149   149   148   149 #>  [88,]   153   152   152   151   151   149   148   148   148   148   148   149 #>  [89,]   151   148   148   147   147   147   147   147   147   147   147   148 #>  [90,]   148   147   145   146   146   147   146   147   147   147   147   150 #>  [91,]   147   146   147   146   147   147   147   147   147   148   148   150 #>  [92,]   147   147   147   146   147   147   147   147   147   148   148   150 #>  [93,]   147   147   147   147   147   148   147   147   147   148   150   150 #>  [94,]   147   147   147   148   148   148   147   148   148   148   150   151 #>  [95,]   147   147   147   148   148   148   148   148   148   150   150   151 #>  [96,]   147   147   148   148   148   148   148   148   148   150   151   151 #>  [97,]   147   147   148   148   148   148   148   148   150   150   151   152 #>  [98,]   147   147   148   148   148   148   148   148   150   150   151   152 #>  [99,]   148   147   148   148   147   148   148   148   150   150   151   152 #> [100,]   148   147   148   148   147   148   148   148   150   150   151   153 #>        [,62] [,63] [,64] [,65] [,66] [,67] [,68] [,69] [,70] [,71] [,72] [,73] #>   [1,]    85    87    88    88    89    89    90    90    90    91    91    91 #>   [2,]    87    88    88    89    89    89    90    91    91    92    92    92 #>   [3,]    88    89    89    90    90    91    92    93    93    95    95    95 #>   [4,]    88    89    90    91    92    93    93    95    95    96    96    96 #>   [5,]    91    92    92    92    95    96    97    98    98    99    99    98 #>   [6,]    93    95    96    96    97    98    99   100   100   102   102   102 #>   [7,]    97    98    98    99   100   102   103   104   104   105   105   104 #>   [8,]    99   100   100   103   103   104   104   105   106   106   106   106 #>   [9,]   103   103   103   104   104   105   106   106   106   106   107   107 #>  [10,]   104   104   105   105   105   106   106   106   107   107   107   107 #>  [11,]   105   105   105   106   106   107   107   107   107   107   109   107 #>  [12,]   106   106   106   106   107   107   107   107   107   107   109   109 #>  [13,]   107   107   109   109   109   109   109   109   109   109   110   110 #>  [14,]   110   110   111   111   111   111   111   111   111   111   111   111 #>  [15,]   112   112   112   112   112   112   112   112   112   112   113   113 #>  [16,]   113   113   114   114   114   114   114   114   114   114   114   114 #>  [17,]   116   116   116   116   116   116   116   116   116   116   116   116 #>  [18,]   118   117   118   118   118   117   117   117   117   117   117   116 #>  [19,]   118   119   119   119   119   118   118   118   118   117   117   117 #>  [20,]   120   120   120   120   120   119   119   118   118   118   117   117 #>  [21,]   124   123   123   123   121   121   119   119   119   119   118   118 #>  [22,]   126   126   126   125   124   123   121   121   120   119   119   119 #>  [23,]   127   127   127   127   127   125   123   123   120   120   120   119 #>  [24,]   127   127   127   127   127   126   126   124   123   121   121   120 #>  [25,]   127   127   127   127   127   127   127   126   125   124   123   123 #>  [26,]   128   128   128   128   128   128   127   127   127   126   125   125 #>  [27,]   130   130   130   130   130   128   128   128   128   128   127   126 #>  [28,]   130   130   130   131   130   130   130   128   128   128   127   128 #>  [29,]   131   131   131   131   131   131   131   131   131   130   130   130 #>  [30,]   131   131   131   132   132   131   131   131   131   131   131   131 #>  [31,]   131   131   132   132   132   132   132   132   132   132   132   131 #>  [32,]   132   132   132   132   132   132   132   133   133   133   133   132 #>  [33,]   133   133   132   132   132   132   132   133   133   135   136   136 #>  [34,]   133   133   133   134   134   133   133   133   133   136   136   136 #>  [35,]   134   134   134   134   134   134   134   134   134   137   137   137 #>  [36,]   134   134   134   134   134   134   135   135   135   139   140   140 #>  [37,]   135   135   135   135   135   135   135   135   137   139   140   140 #>  [38,]   137   137   137   138   138   137   137   138   138   140   141   141 #>  [39,]   138   139   139   139   139   139   139   139   139   141   142   142 #>  [40,]   140   140   140   141   141   140   140   140   140   143   143   143 #>  [41,]   143   143   143   141   141   141   142   142   141   143   144   144 #>  [42,]   144   144   144   141   141   142   142   142   142   146   146   148 #>  [43,]   144   144   146   144   144   146   147   147   147   148   148   149 #>  [44,]   146   148   148   147   147   147   148   148   148   149   149   149 #>  [45,]   149   150   150   150   149   150   150   151   151   151   151   153 #>  [46,]   153   154   154   154   153   153   154   154   154   154   154   154 #>  [47,]   155   155   155   155   155   155   155   156   156   156   156   155 #>  [48,]   157   158   157   157   156   156   157   157   157   158   158   157 #>  [49,]   160   161   160   160   158   160   161   161   160   160   158   158 #>  [50,]   162   162   162   163   163   163   163   163   162   162   161   160 #>  [51,]   162   163   163   164   164   164   164   163   162   163   162   161 #>  [52,]   163   164   164   164   164   164   164   163   163   163   163   162 #>  [53,]   164   164   165   164   164   164   164   164   164   163   163   164 #>  [54,]   165   165   165   165   164   165   165   164   164   165   165   165 #>  [55,]   166   166   166   166   166   165   165   165   165   165   165   165 #>  [56,]   169   169   168   168   168   166   165   165   166   165   165   166 #>  [57,]   171   170   170   170   169   166   166   168   166   166   166   166 #>  [58,]   171   171   171   170   170   168   168   168   168   168   166   166 #>  [59,]   172   171   171   171   171   170   170   169   169   169   168   166 #>  [60,]   171   171   170   170   170   169   169   168   168   168   166   165 #>  [61,]   171   171   170   170   170   169   169   168   168   168   166   163 #>  [62,]   171   171   171   170   169   169   169   168   168   168   166   163 #>  [63,]   170   170   170   170   170   169   168   168   166   166   165   163 #>  [64,]   170   170   169   169   169   168   168   166   166   166   165   162 #>  [65,]   169   169   169   169   168   168   166   166   165   165   165   161 #>  [66,]   169   169   168   168   168   166   166   166   165   165   164   161 #>  [67,]   168   168   166   164   164   165   165   165   164   162   162   160 #>  [68,]   168   168   165   163   163   165   165   165   164   162   161   160 #>  [69,]   163   163   162   162   162   161   161   162   162   162   160   159 #>  [70,]   161   161   160   160   161   161   161   161   161   160   159   158 #>  [71,]   160   160   159   159   160   160   160   160   160   159   158   156 #>  [72,]   160   160   159   159   159   159   159   159   159   158   156   156 #>  [73,]   159   159   158   158   158   158   158   158   158   156   156   156 #>  [74,]   159   159   158   158   156   158   156   156   156   156   156   156 #>  [75,]   159   159   158   156   156   156   156   156   156   158   158   156 #>  [76,]   159   158   156   155   156   156   155   156   156   156   156   156 #>  [77,]   158   156   156   156   155   155   155   155   156   156   156   156 #>  [78,]   156   156   155   155   155   155   155   155   155   156   156   156 #>  [79,]   156   155   155   155   154   154   154   154   155   155   156   156 #>  [80,]   155   155   154   154   154   154   155   155   156   156   158   158 #>  [81,]   154   154   154   154   154   157   157   157   158   158   158   160 #>  [82,]   154   154   154   154   154   157   157   157   158   158   158   161 #>  [83,]   154   153   154   154   154   157   158   158   158   161   161   161 #>  [84,]   153   153   154   155   155   157   160   160   160   162   162   162 #>  [85,]   151   152   154   154   155   157   160   160   160   162   162   162 #>  [86,]   149   151   154   154   155   157   160   160   160   162   162   162 #>  [87,]   149   151   154   154   155   157   160   160   160   162   162   162 #>  [88,]   149   151   154   154   155   157   160   160   160   162   161   161 #>  [89,]   150   151   152   154   154   154   156   156   156   159   160   160 #>  [90,]   151   152   152   154   154   154   156   156   156   159   160   160 #>  [91,]   151   152   153   155   155   155   158   158   158   160   160   160 #>  [92,]   151   152   153   155   155   155   158   158   159   161   161   160 #>  [93,]   152   153   154   156   156   156   156   158   160   162   162   161 #>  [94,]   152   153   154   156   156   156   158   160   161   162   162   161 #>  [95,]   153   154   155   156   156   156   159   161   161   162   162   161 #>  [96,]   153   154   155   158   158   159   161   161   161   161   161   160 #>  [97,]   153   154   157   159   159   159   161   161   160   160   160   160 #>  [98,]   153   155   157   158   160   160   160   160   160   159   160   160 #>  [99,]   154   155   157   158   160   160   160   160   159   159   159   160 #> [100,]   154   155   158   160   160   160   160   159   159   159   159   160 #>        [,74] [,75] [,76] [,77] [,78] [,79] [,80] [,81] [,82] [,83] [,84] [,85] #>   [1,]    92    94    94    95    96    96    96    97    98    98    99    99 #>   [2,]    92    94    94    95    96    96    97    97    97    98    99   101 #>   [3,]    95    96    96    96    97    97    98    99    99    99   102   103 #>   [4,]    96    96    96    97    98    98    99    99    99   100   103   104 #>   [5,]    98    98    99    99    99   100   102   102   102   103   105   105 #>   [6,]   102   102   102   102   103   103   104   104   104   105   106   106 #>   [7,]   104   104   104   104   104   105   105   105   106   107   107   107 #>   [8,]   106   106   106   106   106   106   106   107   107   107   107   109 #>   [9,]   107   107   107   107   107   107   107   107   109   109   109   109 #>  [10,]   107   107   107   107   109   109   109   109   109   109   110   110 #>  [11,]   107   107   107   107   109   109   109   109   109   110   110   110 #>  [12,]   109   109   109   109   109   109   110   110   110   110   110   110 #>  [13,]   110   110   110   110   110   110   111   111   111   111   111   111 #>  [14,]   112   112   112   112   112   112   112   112   112   112   112   112 #>  [15,]   113   113   113   113   113   113   113   113   113   113   113   113 #>  [16,]   114   114   114   114   114   114   114   114   114   114   114   114 #>  [17,]   116   116   116   116   116   116   116   116   116   116   116   116 #>  [18,]   116   116   116   116   116   116   117   117   117   117   117   117 #>  [19,]   117   117   117   117   117   117   117   117   117   117   117   117 #>  [20,]   117   117   117   117   117   117   118   118   118   118   118   118 #>  [21,]   118   118   118   118   118   118   119   119   119   119   119   119 #>  [22,]   119   119   119   119   119   119   120   120   120   120   120   120 #>  [23,]   119   119   119   119   120   120   121   121   121   121   121   121 #>  [24,]   120   120   120   120   121   121   121   123   123   123   123   123 #>  [25,]   123   123   123   123   124   124   124   124   124   124   124   124 #>  [26,]   125   125   125   125   125   125   126   125   126   126   126   126 #>  [27,]   126   126   126   126   126   126   126   126   126   126   126   126 #>  [28,]   127   127   127   127   127   127   127   127   127   128   128   128 #>  [29,]   128   128   128   128   128   128   128   128   130   130   130   130 #>  [30,]   131   131   131   131   131   131   131   131   131   131   131   131 #>  [31,]   131   131   131   131   131   131   131   131   132   132   132   132 #>  [32,]   132   132   132   132   132   132   132   132   132   132   132   132 #>  [33,]   136   135   135   135   135   133   133   133   133   134   134   134 #>  [34,]   137   137   137   137   137   135   135   135   135   134   134   134 #>  [35,]   139   139   139   139   139   139   139   135   135   135   135   135 #>  [36,]   140   140   140   140   140   140   140   137   137   137   137   137 #>  [37,]   141   141   142   142   142   142   142   139   139   138   137   137 #>  [38,]   141   142   142   142   143   143   143   141   140   140   139   138 #>  [39,]   142   143   143   143   143   143   143   141   141   141   140   139 #>  [40,]   143   143   143   143   143   143   143   141   141   141   140   139 #>  [41,]   144   144   144   146   146   144   142   142   142   141   140   139 #>  [42,]   148   148   148   147   147   145   144   144   142   142   141   140 #>  [43,]   149   149   149   149   148   146   146   145   144   144   141   140 #>  [44,]   150   149   149   149   148   146   145   145   144   144   141   140 #>  [45,]   153   150   151   150   149   147   146   145   145   144   142   140 #>  [46,]   153   153   153   150   149   147   146   145   145   144   142   140 #>  [47,]   155   155   153   150   149   147   146   145   145   144   142   141 #>  [48,]   157   157   155   151   150   147   146   145   145   144   142   141 #>  [49,]   158   157   155   153   150   147   146   145   145   144   142   141 #>  [50,]   160   158   155   153   150   147   146   146   145   145   144   141 #>  [51,]   162   160   156   153   150   147   147   146   146   145   144   142 #>  [52,]   164   162   157   154   150   147   147   146   146   145   144   142 #>  [53,]   165   164   158   155   151   147   147   146   146   145   144   142 #>  [54,]   165   165   161   157   153   148   147   146   146   145   144   142 #>  [55,]   165   164   161   157   154   149   147   146   146   145   144   142 #>  [56,]   165   164   161   157   155   149   147   146   146   145   144   142 #>  [57,]   165   164   162   157   155   153   150   146   146   146   144   144 #>  [58,]   165   163   161   157   155   153   150   147   147   146   145   144 #>  [59,]   165   163   161   157   155   152   149   147   147   146   145   144 #>  [60,]   165   162   161   157   155   152   149   148   148   147   145   145 #>  [61,]   163   160   159   156   154   152   151   149   149   147   146   145 #>  [62,]   162   160   158   156   154   152   151   149   148   148   146   145 #>  [63,]   162   160   159   156   154   152   151   149   149   148   147   145 #>  [64,]   162   159   156   155   153   152   151   149   149   148   147   146 #>  [65,]   161   159   155   154   152   151   151   149   149   149   147   147 #>  [66,]   160   158   155   153   152   151   151   149   149   148   147   147 #>  [67,]   159   156   154   152   151   151   149   149   149   149   148   148 #>  [68,]   158   155   153   152   152   151   151   149   149   149   149   149 #>  [69,]   156   155   153   152   152   151   151   151   149   149   149   149 #>  [70,]   155   155   154   153   153   152   152   151   151   151   151   151 #>  [71,]   156   155   154   154   153   153   152   152   152   151   151   151 #>  [72,]   156   155   155   154   153   153   153   152   152   152   152   152 #>  [73,]   156   155   155   154   154   153   153   153   153   153   153   153 #>  [74,]   155   155   155   155   154   154   154   153   153   153   153   154 #>  [75,]   156   156   156   155   155   155   154   154   154   154   154   155 #>  [76,]   156   155   155   155   155   155   155   155   155   155   155   155 #>  [77,]   156   156   158   158   158   158   158   156   156   156   156   156 #>  [78,]   156   158   158   158   158   158   158   158   158   158   158   158 #>  [79,]   158   158   158   158   158   158   158   158   158   158   158   159 #>  [80,]   158   158   158   158   159   159   159   159   159   159   160   160 #>  [81,]   160   161   161   161   162   162   162   162   162   160   161   161 #>  [82,]   161   161   161   161   162   162   162   163   164   161   161   162 #>  [83,]   161   161   161   162   162   162   164   164   164   164   166   166 #>  [84,]   162   162   162   163   163   163   164   165   165   164   166   167 #>  [85,]   162   162   162   163   163   163   164   165   165   164   166   167 #>  [86,]   162   162   162   163   163   163   165   165   165   166   166   167 #>  [87,]   163   162   163   163   163   163   164   164   165   163   164   166 #>  [88,]   162   162   162   162   163   163   163   163   163   162   162   162 #>  [89,]   160   160   160   160   160   162   162   160   161   161   162   160 #>  [90,]   160   160   160   160   160   162   162   160   160   160   160   159 #>  [91,]   160   160   160   160   161   163   163   160   160   159   159   159 #>  [92,]   160   160   160   160   160   162   162   160   160   160   160   160 #>  [93,]   161   161   160   160   160   162   162   160   159   159   159   160 #>  [94,]   161   161   161   161   160   162   163   160   160   159   159   160 #>  [95,]   161   161   161   161   161   162   162   160   160   160   160   161 #>  [96,]   161   161   161   161   161   163   163   160   161   161   161   161 #>  [97,]   161   161   161   161   161   163   163   161   161   162   162   164 #>  [98,]   160   161   161   161   161   163   163   162   163   164   164   167 #>  [99,]   160   160   161   161   162   162   162   162   163   166   166   168 #> [100,]   160   160   161   161   162   162   162   163   164   167   167   169 #>        [,86] [,87] [,88] [,89] [,90] [,91] [,92] [,93] [,94] [,95] [,96] [,97] #>   [1,]    99   101   102   102   102   102   102   102   102   102   102   102 #>   [2,]   101   102   102   102   103   103   103   103   103   103   102   103 #>   [3,]   103   104   104   104   104   104   104   104   104   104   104   104 #>   [4,]   104   104   105   104   105   105   105   105   105   105   105   105 #>   [5,]   105   105   105   105   105   105   105   105   105   106   106   106 #>   [6,]   106   106   106   106   106   106   106   106   106   106   107   107 #>   [7,]   107   109   109   109   109   109   109   109   109   109   109   109 #>   [8,]   109   109   109   109   109   109   109   109   109   109   109   110 #>   [9,]   109   109   109   109   109   109   110   110   110   110   110   111 #>  [10,]   110   110   110   110   110   110   110   110   110   110   111   111 #>  [11,]   110   110   110   110   110   110   111   111   111   111   112   112 #>  [12,]   110   110   111   111   111   111   111   111   111   112   112   112 #>  [13,]   111   111   112   112   112   112   112   112   112   112   113   113 #>  [14,]   112   112   113   113   113   113   113   113   113   113   114   114 #>  [15,]   113   113   114   114   114   114   114   114   114   116   116   116 #>  [16,]   114   116   116   116   116   117   117   117   117   117   117   117 #>  [17,]   116   117   117   117   117   117   118   118   118   118   119   119 #>  [18,]   117   117   118   118   118   118   118   118   118   118   119   119 #>  [19,]   117   118   118   118   118   119   119   119   119   119   120   120 #>  [20,]   118   118   119   119   119   119   119   119   120   120   120   120 #>  [21,]   119   119   120   120   120   120   120   120   121   121   121   123 #>  [22,]   120   121   121   121   121   123   123   123   123   123   123   123 #>  [23,]   121   123   123   123   123   124   124   124   124   124   124   124 #>  [24,]   123   124   124   124   124   125   125   125   125   125   125   124 #>  [25,]   124   125   125   125   125   126   126   126   126   125   125   125 #>  [26,]   126   126   126   126   126   127   127   127   126   125   125   125 #>  [27,]   126   127   127   127   127   127   127   127   127   126   126   125 #>  [28,]   128   128   128   128   128   128   127   127   127   126   126   126 #>  [29,]   130   130   130   130   130   130   128   128   128   127   127   126 #>  [30,]   131   131   131   131   131   131   131   130   128   127   127   127 #>  [31,]   132   132   132   132   132   132   131   131   130   128   127   127 #>  [32,]   132   132   132   132   132   133   132   132   130   128   127   127 #>  [33,]   133   133   133   133   133   133   133   132   131   130   128   127 #>  [34,]   134   134   133   133   133   133   133   132   131   130   128   127 #>  [35,]   135   135   134   134   134   133   133   132   131   130   128   127 #>  [36,]   135   135   135   134   134   132   133   133   131   130   128   127 #>  [37,]   137   137   135   134   134   133   132   132   131   130   128   127 #>  [38,]   138   137   135   135   134   133   132   132   131   130   128   127 #>  [39,]   138   137   137   135   134   133   132   132   131   130   130   127 #>  [40,]   139   138   137   135   135   134   133   132   131   130   130   129 #>  [41,]   139   138   137   135   135   134   133   132   131   131   131   129 #>  [42,]   139   138   137   137   135   134   133   133   131   131   131   129 #>  [43,]   140   138   138   137   135   134   133   133   132   132   131   130 #>  [44,]   140   139   137   137   137   135   134   133   132   132   131   130 #>  [45,]   140   139   138   137   137   135   134   134   133   132   132   130 #>  [46,]   140   139   138   138   137   137   135   135   134   133   132   131 #>  [47,]   140   139   138   138   137   137   137   135   135   134   134   131 #>  [48,]   140   139   139   138   138   137   137   137   135   135   135   133 #>  [49,]   140   139   139   138   138   138   137   137   137   135   135   134 #>  [50,]   140   140   139   138   138   138   137   137   137   137   135   134 #>  [51,]   141   140   139   139   138   138   138   137   137   137   137   134 #>  [52,]   141   140   139   139   138   138   138   137   137   137   137   134 #>  [53,]   141   140   139   139   138   138   138   137   137   137   137   134 #>  [54,]   141   140   139   139   138   138   138   137   137   137   137   134 #>  [55,]   141   140   139   139   138   138   138   137   137   137   135   136 #>  [56,]   141   140   139   139   139   138   138   137   137   137   137   136 #>  [57,]   141   141   140   139   139   139   139   138   138   138   138   138 #>  [58,]   142   141   141   140   140   140   140   140   140   139   139   139 #>  [59,]   144   142   141   141   141   141   141   141   141   141   141   140 #>  [60,]   144   142   142   142   142   142   142   142   142   142   142   142 #>  [61,]   144   144   144   144   144   144   145   145   145   144   144   144 #>  [62,]   145   144   145   144   145   145   146   146   146   146   146   145 #>  [63,]   145   145   145   145   146   146   146   146   146   146   147   147 #>  [64,]   145   145   145   146   146   146   147   147   147   147   148   147 #>  [65,]   146   145   145   145   146   147   147   147   147   149   150   150 #>  [66,]   147   146   146   146   147   147   147   148   148   150   150   151 #>  [67,]   148   148   148   147   148   148   148   148   148   151   151   153 #>  [68,]   149   149   149   148   148   149   149   149   149   153   153   154 #>  [69,]   149   149   149   149   149   151   151   151   151   154   154   155 #>  [70,]   151   151   151   151   152   152   152   152   152   155   156   156 #>  [71,]   151   151   151   151   152   152   152   152   153   156   157   157 #>  [72,]   152   152   152   152   153   153   153   153   154   157   157   158 #>  [73,]   153   153   153   153   154   154   154   154   155   157   157   158 #>  [74,]   154   154   154   154   154   155   155   155   156   158   158   158 #>  [75,]   155   155   155   156   156   156   156   156   156   160   160   158 #>  [76,]   155   156   156   156   156   156   156   158   158   160   161   159 #>  [77,]   156   158   158   158   159   159   159   159   159   160   159   160 #>  [78,]   158   159   159   159   160   160   160   161   161   161   161   162 #>  [79,]   159   159   160   160   161   161   162   162   162   163   163   163 #>  [80,]   160   160   161   162   162   162   162   163   163   163   163   163 #>  [81,]   161   161   163   164   163   163   164   166   166   164   164   164 #>  [82,]   162   163   163   164   166   166   166   166   166   166   166   166 #>  [83,]   166   164   166   166   166   166   166   166   166   166   166   166 #>  [84,]   166   166   166   166   167   167   167   167   167   166   166   166 #>  [85,]   166   166   166   167   167   167   167   167   167   167   167   166 #>  [86,]   166   167   167   167   167   168   168   168   168   167   167   166 #>  [87,]   164   166   166   166   166   167   167   167   167   167   166   166 #>  [88,]   162   162   163   163   164   166   166   166   166   166   166   164 #>  [89,]   160   161   163   163   164   164   164   164   164   164   164   164 #>  [90,]   159   160   161   161   162   163   163   163   163   163   164   163 #>  [91,]   158   159   160   161   161   162   162   163   163   163   164   164 #>  [92,]   159   160   161   161   162   162   162   163   163   163   164   164 #>  [93,]   159   160   161   161   161   161   161   163   163   164   166   166 #>  [94,]   160   160   161   161   161   163   163   163   163   164   166   166 #>  [95,]   161   161   162   162   162   163   163   163   164   164   164   164 #>  [96,]   162   162   162   163   163   163   164   164   164   164   166   166 #>  [97,]   164   164   164   164   166   166   166   166   166   166   167   167 #>  [98,]   167   167   167   167   168   168   168   168   168   168   168   168 #>  [99,]   168   168   168   168   169   169   169   170   170   170   170   170 #> [100,]   169   169   169   169   170   170   170   171   171   171   171   171 #>        [,98] [,99] [,100] #>   [1,]   102   102    102 #>   [2,]   103   103    103 #>   [3,]   104   105    105 #>   [4,]   105   105    105 #>   [5,]   106   106    106 #>   [6,]   107   107    107 #>   [7,]   109   109    109 #>   [8,]   110   110    110 #>   [9,]   111   111    111 #>  [10,]   111   111    112 #>  [11,]   112   112    112 #>  [12,]   112   112    113 #>  [13,]   113   114    114 #>  [14,]   114   116    116 #>  [15,]   116   117    117 #>  [16,]   117   118    118 #>  [17,]   119   119    119 #>  [18,]   119   119    121 #>  [19,]   120   120    121 #>  [20,]   121   123    121 #>  [21,]   123   124    124 #>  [22,]   123   124    124 #>  [23,]   124   124    124 #>  [24,]   124   124    124 #>  [25,]   125   125    124 #>  [26,]   125   125    124 #>  [27,]   125   125    125 #>  [28,]   125   125    125 #>  [29,]   126   125    125 #>  [30,]   126   126    126 #>  [31,]   126   126    126 #>  [32,]   126   126    126 #>  [33,]   127   126    126 #>  [34,]   127   126    126 #>  [35,]   126   126    126 #>  [36,]   126   126    126 #>  [37,]   126   125    125 #>  [38,]   126   125    125 #>  [39,]   127   126    125 #>  [40,]   127   126    125 #>  [41,]   129   127    126 #>  [42,]   129   127    126 #>  [43,]   130   129    127 #>  [44,]   130   129    129 #>  [45,]   130   130    130 #>  [46,]   131   130    130 #>  [47,]   131   131    131 #>  [48,]   132   131    131 #>  [49,]   134   133    132 #>  [50,]   134   133    132 #>  [51,]   134   134    133 #>  [52,]   134   134    133 #>  [53,]   134   134    133 #>  [54,]   134   134    134 #>  [55,]   136   136    136 #>  [56,]   136   136    136 #>  [57,]   138   138    138 #>  [58,]   139   139    139 #>  [59,]   141   141    141 #>  [60,]   142   142    142 #>  [61,]   144   144    145 #>  [62,]   146   146    146 #>  [63,]   147   147    147 #>  [64,]   148   148    148 #>  [65,]   150   151    151 #>  [66,]   151   151    151 #>  [67,]   153   154    154 #>  [68,]   154   155    156 #>  [69,]   155   156    157 #>  [70,]   156   157    158 #>  [71,]   157   158    158 #>  [72,]   158   160    160 #>  [73,]   158   160    160 #>  [74,]   158   160    160 #>  [75,]   158   159    159 #>  [76,]   159   159    161 #>  [77,]   161   161    163 #>  [78,]   163   163    163 #>  [79,]   163   163    163 #>  [80,]   163   164    164 #>  [81,]   164   166    166 #>  [82,]   166   166    166 #>  [83,]   167   167    166 #>  [84,]   167   167    166 #>  [85,]   166   166    166 #>  [86,]   166   166    164 #>  [87,]   166   164    164 #>  [88,]   164   164    163 #>  [89,]   163   163    163 #>  [90,]   163   163    163 #>  [91,]   164   164    163 #>  [92,]   164   164    163 #>  [93,]   164   164    164 #>  [94,]   166   166    166 #>  [95,]   164   166    166 #>  [96,]   166   167    167 #>  [97,]   167   168    168 #>  [98,]   168   169    169 #>  [99,]   170   170    170 #> [100,]   170   170    170 #>  balloon[1:100, 1:100] <- col2rgb(c(\"red\", \"green\", \"blue\", \"yellow\"))"},{"path":"https://swarm-lab.github.io/Rvision/reference/sub-.VideoStack.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract or Replace Videos in Video Stacks — [[.VideoStack","title":"Extract or Replace Videos in Video Stacks — [[.VideoStack","text":"Operators acting VideoStack objects extract  replace Video objects contain.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/sub-.VideoStack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract or Replace Videos in Video Stacks — [[.VideoStack","text":"","code":"# S3 method for VideoStack [[(x, i)  # S3 method for VideoStack [[(x, i) <- value  # S3 method for VideoStack [(x, i)  # S3 method for VideoStack [(x, i) <- value"},{"path":"https://swarm-lab.github.io/Rvision/reference/sub-.VideoStack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract or Replace Videos in Video Stacks — [[.VideoStack","text":"x VideoStack object. index specifying element extract replace. Indices numeric vectors values coerced integer .integer (hence truncated towards zero) logical vectors recycled necessary match dimensions stack. value Video object vector Video objects replace Video objects stack, NULL value remove Video objects stack.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/sub-.VideoStack.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract or Replace Videos in Video Stacks — [[.VideoStack","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/sub-.VideoStack.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract or Replace Videos in Video Stacks — [[.VideoStack","text":"","code":"path <- system.file(\"sample_vid/Balloon.mp4\", package = \"Rvision\") vid <- video(path) #> Error: Could not open the video. balloonStack <- videoStack(path) #> Error: Could not open the video. balloonStack[[2]] <- vid #> Error in eval(expr, envir, enclos): object 'vid' not found"},{"path":"https://swarm-lab.github.io/Rvision/reference/subImage.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Subimage — subImage","title":"Extract Subimage — subImage","text":"subImage extracts portion Image  returns Image object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/subImage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Subimage — subImage","text":"","code":"subImage(image, x, y, width, height, target = \"new\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/subImage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Subimage — subImage","text":"image Image object. x, y coordinates bottom-left corner subimage within original image. width width subimage. Ignored target Image object. height height subimage. Ignored target Image object. target location results stored. can take 2 values: \"new\":new Image object created results   stored inside (default). Image object:results stored another   existing Image object. fast replace   content target. Note target   number channels bit depth image, error   thrown.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/subImage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Subimage — subImage","text":"target=\"new\", function returns Image object. target Image object, function  returns nothing modifies Image object place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/subImage.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract Subimage — subImage","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/subImage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Subimage — subImage","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) balloon_sub <- subImage(balloon, 290, 170, 150, 150)"},{"path":"https://swarm-lab.github.io/Rvision/reference/sum.html","id":null,"dir":"Reference","previous_headings":"","what":"Sum Generic for Image objects — sum","title":"Sum Generic for Image objects — sum","text":"Overloaded sum handle Image  objects lists Image objects.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/sum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sum Generic for Image objects — sum","text":"","code":"sum(x, ..., target = \"new\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/sum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sum Generic for Image objects — sum","text":"x Image object list Image objects. ... arguments passed summary methods. Unused x image list images. target location results stored passing sum images function. can take 2 values: \"new\":new Image object created results   stored inside (default). Image object:results stored another   existing Image object. fast replace   content target. Note target   dimensions number channels images list, otherwise   error thrown.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/sum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sum Generic for Image objects — sum","text":"x Image object, function returns  numeric value (single-channel images) vector numeric values ( multi-channel images). x list Image objects target=\"new\",  function returns Image object. target  Image object, function returns nothing modifies  Image object place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/sum.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sum Generic for Image objects — sum","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/sum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sum Generic for Image objects — sum","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) sum(balloon) #>        B        G        R  #> 37967180 34473652 29520940   balloon_vid <- video(system.file(\"sample_vid/Balloon.mp4\", package = \"Rvision\")) #> Error: Could not open the video. img_list <- lapply(1:10, function(x) readNext(balloon_vid)) #> Error in FUN(X[[i]], ...): object 'balloon_vid' not found sum(img_list) #> Error in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'sum': object 'img_list' not found"},{"path":"https://swarm-lab.github.io/Rvision/reference/thinning.html","id":null,"dir":"Reference","previous_headings":"","what":"Thinning — thinning","title":"Thinning — thinning","text":"thinning applies binary blob thinning operation  achieve skeletonization binary Image object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/thinning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Thinning — thinning","text":"","code":"thinning(image, method = \"Zhang-Suen\", target = \"new\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/thinning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Thinning — thinning","text":"image 8-bit (8U) single-channel, binary Image object. method string indicating binarization method use. can following: \"Zhang-Suen (default)\" \"Guo-Hall\" target location results stored. can take 3 values: \"new\":new Image object created results   stored inside (default). \"self\":results stored back image (faster   destructive). Image object:results stored another   existing Image object. fast replace   content image replace target. Note   target dimensions, number channels,   bit depth image, error may thrown.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/thinning.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Thinning — thinning","text":"target=\"new\", function returns Image object. target=\"self\", function returns nothing modifies  image place. target Image object,  function returns nothing modifies Image object  place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/thinning.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Thinning — thinning","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/thinning.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Thinning — thinning","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) balloon_gray <- changeColorSpace(balloon, \"GRAY\") balloon_th <- niBlackThreshold(balloon_gray) skel <- thinning(balloon_th)"},{"path":"https://swarm-lab.github.io/Rvision/reference/threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Thresholding — threshold","title":"Thresholding — threshold","text":"threshold transforms image binary image.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Thresholding — threshold","text":"","code":"threshold(   image,   thresh = 127,   max_value = 255,   method = \"none\",   threshold_type = \"binary\",   mask = NULL,   target = \"new\",   in_place = NULL )"},{"path":"https://swarm-lab.github.io/Rvision/reference/threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Thresholding — threshold","text":"image 8-bit (8U) 32-bit floating (32F) Image object. thresh numeric threshold value (default: 127). max_value Non-zero value assigned pixels condition determined `threshold_type` satisfied (default: 255). used threshold_type set \"binary\" \"inverse\". method name automated thresholding algorithm use. can  following: \"none\":user-defined `threshold` value used (default). \"ImageJ\":default auto thresholding algorithm ImageJ. \"Huang\":Huang’s fuzzy thresholding method. \"Huang2\":alternative implementation Huang’s method J. Schindelin. \"Intermodes\":assuming bimodal histogram, threshold    halfway point two modes. \"IsoData\":iterative procedure based isodata algorithm    Ridler Calvar. \"Li\":Li’s Minimum Cross Entropy thresholding method based    iterative version algorithm. \"MaxEntropy\":Kapur-Sahoo-Wong (Maximum Entropy) thresholding method. \"Mean\":mean grey levels image used threshold. \"MinErrorI\":iterative implementation Kittler Illingworth’s    Minimum Error thresholding. \"Minimum\":similar Intermodes method threshold    minimum value two modes iterative smoothing. \"Moments\":Tsai’s moment-preserving thresolding method. \"Otsu\":Otsu’s threshold clustering method. \"Percentile\":assumes fraction foreground pixels 0.5. \"RenyiEntropy\":similar MaxEntropy method, using Renyi’s    entropy instead. \"Shanbhag\":Shanbhag's information-based thresolding method. \"Triangle\":triangle thresholding method Zack, Rogers, Latt. \"Yen\":Yen’s thresholding method. Details functioning method can found  https://imagej.net/plugins/auto-threshold. threshold_type name threshold type use. can following: \"binary\":pixel replaced `max_value` value   threshold, zero otherwise (default). \"inverse\":pixel replaced zero value   threshold, `max_value` otherwise. \"truncate\":pixel replaced `threshold` value   threshold, unchanged otherwise. \"to_zero\":pixel replaced zero value  threshold, unchanged otherwise. \"to_zero_inverse\":pixel replaced zero value   threshold, unchanged otherwise. mask single-channel (GRAY) 8-bit (8U) Image object dimensions image. can used mask pixels considered calculating threshold (pixels set 0 mask ignored threshold calculation). target location results stored. can take 3 values: \"new\":new Image object created results   stored inside (default). \"self\":results stored back image (faster   destructive). Image object:results stored another   existing Image object. fast replace   content image replace target. Note   target dimensions, number channels,   bit depth image, error may thrown. in_place Deprecated. Use target instead.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Thresholding — threshold","text":"target=\"new\", function returns Image object. target=\"self\", function returns nothing modifies  image place. target Image object,  function returns nothing modifies Image object  place.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/threshold.html","id":"acknowledgements","dir":"Reference","previous_headings":"","what":"Acknowledgements","title":"Thresholding — threshold","text":"Gabriel Landini coded functions   Java. java functions translated C++ Rory Nolan.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/threshold.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Thresholding — threshold","text":"Huang, L-K & Wang, M-J J (1995), \"Image   thresholding minimizing measure fuzziness\", Pattern Recognition   28(1): 41-51 Prewitt, JMS & Mendelsohn, ML (1966), \"analysis   cell images\", Annals New York Academy Sciences 128: 1035-1053 Ridler, TW & Calvard, S (1978), \"Picture thresholding using   iterative selection method\", IEEE Transactions Systems, Man   Cybernetics 8: 630-632 Li, CH & Lee, CK (1993), \"Minimum Cross   Entropy Thresholding\", Pattern Recognition 26(4): 617-625 Li, CH &   Tam, PKS (1998), \"Iterative Algorithm Minimum Cross Entropy   Thresholding\", Pattern Recognition Letters 18(8): 771-776 Sezgin, M   & Sankur, B (2004), \"Survey Image Thresholding Techniques   Quantitative Performance Evaluation\", Journal Electronic Imaging 13(1):   146-165 Kapur, JN; Sahoo, PK & Wong, ACK (1985), \"New Method   Gray-Level Picture Thresholding Using Entropy Histogram\",   Graphical Models Image Processing 29(3): 273-285 Glasbey, CA   (1993), \"analysis histogram-based thresholding algorithms\", CVGIP:   Graphical Models Image Processing 55: 532-537 Kittler, J &   Illingworth, J (1986), \"Minimum error thresholding\", Pattern Recognition   19: 41-47 Prewitt, JMS & Mendelsohn, ML (1966), \"analysis   cell images\", Annals New York Academy Sciences 128: 1035-1053 Tsai, W (1985), \"Moment-preserving thresholding: new approach\",   Computer Vision, Graphics, Image Processing 29: 377-393 Otsu, N   (1979), \"threshold selection method gray-level histograms\", IEEE   Trans. Sys., Man., Cyber. 9: 62-66, doi:10.1109/TSMC.1979.4310076 Doyle, W (1962), \"Operation useful similarity-invariant pattern   recognition\", Journal Association Computing Machinery 9:   259-267, doi:10.1145/321119.321123 Kapur, JN; Sahoo, PK & Wong, ACK   (1985), \"New Method Gray-Level Picture Thresholding Using Entropy   Histogram\", Graphical Models Image Processing 29(3): 273-285 Shanbhag, Abhijit G. (1994), \"Utilization information measure   means image thresholding\", Graph. Models Image Process. (Academic Press,   Inc.) 56 (5): 414--419, ISSN 1049-9652 Zack GW, Rogers , Latt SA   (1977), \"Automatic measurement sister chromatid exchange frequency\", J.   Histochem. Cytochem. 25 (7): 74153, PMID 70454 Yen JC, Chang FJ,   Chang S (1995), \"New Criterion Automatic Multilevel Thresholding\",   IEEE Trans. Image Processing 4 (3): 370-378, ISSN 1057-7149,   doi:10.1109/83.366472 Sezgin, M & Sankur, B (2004), \"Survey   Image Thresholding Techniques Quantitative Performance Evaluation\",   Journal Electronic Imaging 13(1): 146-165","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/threshold.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Thresholding — threshold","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/threshold.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Thresholding — threshold","text":"","code":"balloon <- image(system.file(\"sample_img/balloon1.png\", package = \"Rvision\")) balloon_gray <- changeColorSpace(balloon, \"GRAY\") balloon_th <- threshold(balloon_gray)"},{"path":"https://swarm-lab.github.io/Rvision/reference/tile.html","id":null,"dir":"Reference","previous_headings":"","what":"Repeat Image — tile","title":"Repeat Image — tile","text":"tile duplicates Image object one  times along two axes.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/tile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Repeat Image — tile","text":"","code":"tile(image, ny = 1, nx = 1, target = \"new\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/tile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Repeat Image — tile","text":"image Image object. ny non-zero, positive integer specifying many times image repeated along vertical axis. nx non-zero, positive integer specifying many times image repeated along horizontal axis. target location results stored. can take 2 values: \"new\":new Image object created results   stored inside (default). Image object:results stored another   existing Image object. fast replace   content image replace target. Note   target appropriate dimensions, number channels,   bitdepth, coerced automatically appropriate format.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/tile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Repeat Image — tile","text":"target=\"new\", function returns Image object. target Image object, function  returns nothing modifies Image object place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/tile.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Repeat Image — tile","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/tile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Repeat Image — tile","text":"","code":"rnd <- zeros(360, 1, 1) randu(rnd) rnd_tiled <- tile(rnd, 1, 640)"},{"path":"https://swarm-lab.github.io/Rvision/reference/timelapse.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Timelapse from Stream Object — timelapse","title":"Make Timelapse from Stream Object — timelapse","text":"Generates timelapse sequence Stream object  given duration interval images.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/timelapse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Timelapse from Stream Object — timelapse","text":"","code":"timelapse(x, outputFolder, interval = 1, duration = Inf, format = \"png\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/timelapse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Timelapse from Stream Object — timelapse","text":"x Stream object use. outputFolder path folder timelapse images saved. exist, created. Note: function overwrite files present folder names timelapse images. interval interval seconds two successive images (default: 1). duration duration seconds timelapse. infinite (default), timelapse run user interrupts function manually. format character string corresponding format images (default: \"png\").","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/timelapse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Timelapse from Stream Object — timelapse","text":"function return anything. saves captured images  outputFolder.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/timelapse.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Make Timelapse from Stream Object — timelapse","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/timelapse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make Timelapse from Stream Object — timelapse","text":"","code":"if (FALSE) { live <- stream(0) timelapse(live, \"./out\") release(live) }"},{"path":"https://swarm-lab.github.io/Rvision/reference/undistort.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform an Image to Compensate for Lens Distortion — undistort","title":"Transform an Image to Compensate for Lens Distortion — undistort","text":"undistort transforms image compensate radial  tangential lens distortion.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/undistort.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform an Image to Compensate for Lens Distortion — undistort","text":"","code":"undistort(   image,   camera_matrix,   dist_coefs,   new_camera_matrix = camera_matrix,   target = \"new\" )"},{"path":"https://swarm-lab.github.io/Rvision/reference/undistort.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform an Image to Compensate for Lens Distortion — undistort","text":"image Image object. camera_matrix 3x3 camera intrinsic matrix returned calibrateCamera. dist_coefs single row matrix 4, 5, 8, 12 14 elements returned calibrateCamera. new_camera_matrix 3x3 camera intrinsic matrix returned getOptimalNewCameraMatrix chose execute optional step (default: camera_matrix). target location results stored. can take 3 values: \"new\":new Image object created results   stored inside (default). Image object:results stored another   existing Image object. fast replace   content image replace target. Note   target must dimensions, bit depth, number   channels image.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/undistort.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform an Image to Compensate for Lens Distortion — undistort","text":"target=\"new\", function returns Image object. target Image object, function  returns nothing modifies Image object place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/undistort.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Transform an Image to Compensate for Lens Distortion — undistort","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/undistort.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform an Image to Compensate for Lens Distortion — undistort","text":"","code":"# See the help vignette: if (FALSE)  vignette(\"z8_calib\", package = \"Rvision\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/undistortPoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform Coordinates to Compensate for Lens Distortion — undistortPoints","title":"Transform Coordinates to Compensate for Lens Distortion — undistortPoints","text":"undistortPoints transforms set coordinates  representing points image compensate radial tangential lens  distortion.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/undistortPoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform Coordinates to Compensate for Lens Distortion — undistortPoints","text":"","code":"undistortPoints(   points,   camera_matrix,   dist_coefs,   new_camera_matrix = camera_matrix )"},{"path":"https://swarm-lab.github.io/Rvision/reference/undistortPoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform Coordinates to Compensate for Lens Distortion — undistortPoints","text":"points 2xN matrix X/Y coordinates. camera_matrix 3x3 camera intrinsic matrix returned calibrateCamera. dist_coefs single row matrix 4, 5, 8, 12 14 elements returned calibrateCamera. new_camera_matrix 3x3 camera intrinsic matrix returned getOptimalNewCameraMatrix chose execute optional step (default: camera_matrix).","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/undistortPoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform Coordinates to Compensate for Lens Distortion — undistortPoints","text":"2xN matrix transformed X/Y coordinates.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/undistortPoints.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Transform Coordinates to Compensate for Lens Distortion — undistortPoints","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/undistortPoints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform Coordinates to Compensate for Lens Distortion — undistortPoints","text":"","code":"# See the help vignette: if (FALSE)  vignette(\"z8_calib\", package = \"Rvision\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/videoStack.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an Object of Class VideoStack — videoStack","title":"Create an Object of Class VideoStack — videoStack","text":"Function creating VideoStack objects  multiple video files.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/videoStack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an Object of Class VideoStack — videoStack","text":"","code":"videoStack(..., api = \"ANY\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/videoStack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an Object of Class VideoStack — videoStack","text":"... Character strings (separately vector list), corresponding path video file, Video objects (separately vector list). videos must dimensions. left empty, empty VideoStack object created videos can added later. api character string corresponding API use reading video file (see Note; default: \"\").","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/videoStack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an Object of Class VideoStack — videoStack","text":"VideoStack object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/videoStack.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create an Object of Class VideoStack — videoStack","text":"Hereafter list supported APIs. Note APIs  available computer (actually ). \"\": automatically select API. \"VFW\": Video Windows. \"V4L\", \"V4L2\": Video Linux. \"FIREWIRE\", \"FIREWARE\", \"IEEE1394\", \"DC1394\", \"CMU1394\": IEEE 1394 drivers. \"QT\": Quicktime. \"UNICAP\": Unicap drivers. \"DSHOW\": DirectShow. \"PVAPI\": PvAPI, Prosilica GigE SDK. \"OPENNI\": OpenNI (Kinect). \"OPENNI_ASUS\": OpenNI (Asus Xtion). \"XIAPI\": XIMEA Camera API. \"AVFOUNDATION\": AVFoundation framework iOS OSX > Lion. \"GIGANETIX\": Smartek Giganetix GigEVisionSDK. \"MSMF\": Microsoft Media Foundation. \"WINRT\": Microsoft Windows Runtime using Media Foundation. \"INTELPERC\": Intel Perceptual Computing SDK. \"OPENNI2\": OpenNI2 (Kinect). \"OPENNI2_ASUS\": OpenNI2 (Asus Xtion Occipital Structure sensors). \"GPHOTO2\": gPhoto2 connection. \"GSTREAMER\": GStreamer. \"FFMPEG\": FFMPEG library. \"IMAGES\": OpenCV Image Sequence. \"ARAVIS\": Aravis SDK. \"OPENCV_MJPEG\": Built-OpenCV MotionJPEG codec. \"INTEL_MFX\": Intel MediaSDK.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/videoStack.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create an Object of Class VideoStack — videoStack","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/videoStack.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an Object of Class VideoStack — videoStack","text":"","code":"path <- system.file(\"sample_vid/Balloon.mp4\", package = \"Rvision\") balloonStack <- videoStack(path, path) #> Error: Could not open the video."},{"path":"https://swarm-lab.github.io/Rvision/reference/video_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"The Number of Rows/Columns/Frames of a Video — nrow.Rcpp_Video","title":"The Number of Rows/Columns/Frames of a Video — nrow.Rcpp_Video","text":"nrow, ncol nframes return number rows, columns  frames present Video object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/video_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Number of Rows/Columns/Frames of a Video — nrow.Rcpp_Video","text":"","code":"nrow.Rcpp_Video(x)  ncol.Rcpp_Video(x)  # S3 method for Rcpp_Video nframes(x)  nframes(x)"},{"path":"https://swarm-lab.github.io/Rvision/reference/video_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Number of Rows/Columns/Frames of a Video — nrow.Rcpp_Video","text":"x Video object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/video_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Number of Rows/Columns/Frames of a Video — nrow.Rcpp_Video","text":"numeric value.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/video_dimensions.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The Number of Rows/Columns/Frames of a Video — nrow.Rcpp_Video","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/video_dimensions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Number of Rows/Columns/Frames of a Video — nrow.Rcpp_Video","text":"","code":"balloon <- video(system.file(\"sample_vid/Balloon.mp4\", package = \"Rvision\")) #> Error: Could not open the video. nrow(balloon) #> Error in eval(expr, envir, enclos): object 'balloon' not found ncol(balloon) #> Error in eval(expr, envir, enclos): object 'balloon' not found nframes(balloon) #> Error in eval(expr, envir, enclos): object 'balloon' not found"},{"path":"https://swarm-lab.github.io/Rvision/reference/videostack_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"The Number of Rows/Columns/Frames of a VideoStack — nrow.VideoStack","title":"The Number of Rows/Columns/Frames of a VideoStack — nrow.VideoStack","text":"nrow, ncol nframes return number rows, columns  frames present VideoStack object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/videostack_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Number of Rows/Columns/Frames of a VideoStack — nrow.VideoStack","text":"","code":"nrow.VideoStack(x)  nrow.VideoStack(x)  # S3 method for VideoStack nframes(x)"},{"path":"https://swarm-lab.github.io/Rvision/reference/videostack_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Number of Rows/Columns/Frames of a VideoStack — nrow.VideoStack","text":"x VideoStack object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/videostack_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Number of Rows/Columns/Frames of a VideoStack — nrow.VideoStack","text":"numeric value.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/videostack_dimensions.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The Number of Rows/Columns/Frames of a VideoStack — nrow.VideoStack","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/videostack_dimensions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Number of Rows/Columns/Frames of a VideoStack — nrow.VideoStack","text":"","code":"path <- system.file(\"sample_vid/Balloon.mp4\", package = \"Rvision\") balloonStack <- videoStack(path, path) #> Error: Could not open the video. nrow(balloonStack) #> Error in eval(expr, envir, enclos): object 'balloonStack' not found ncol(balloonStack) #> Error in eval(expr, envir, enclos): object 'balloonStack' not found nframes(balloonStack) #> Error in eval(expr, envir, enclos): object 'balloonStack' not found"},{"path":"https://swarm-lab.github.io/Rvision/reference/videowriter_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"The Number of Rows/Columns of a Video Writer — nrow.Rcpp_VideoWriter","title":"The Number of Rows/Columns of a Video Writer — nrow.Rcpp_VideoWriter","text":"nrow, ncol return number rows columns present  VideoWriter object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/videowriter_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Number of Rows/Columns of a Video Writer — nrow.Rcpp_VideoWriter","text":"","code":"nrow.Rcpp_VideoWriter(x)  ncol.Rcpp_VideoWriter(x)"},{"path":"https://swarm-lab.github.io/Rvision/reference/videowriter_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Number of Rows/Columns of a Video Writer — nrow.Rcpp_VideoWriter","text":"x VideoWriter object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/videowriter_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Number of Rows/Columns of a Video Writer — nrow.Rcpp_VideoWriter","text":"numeric value.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/videowriter_dimensions.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The Number of Rows/Columns of a Video Writer — nrow.Rcpp_VideoWriter","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/videowriter_dimensions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Number of Rows/Columns of a Video Writer — nrow.Rcpp_VideoWriter","text":"","code":"if (FALSE) { writer <- videoWriter(\"test.mp4\", \"H264\", 25, 1080, 1920) nrow(writer) ncol(writer) release(writer) }"},{"path":"https://swarm-lab.github.io/Rvision/reference/warpAffine.html","id":null,"dir":"Reference","previous_headings":"","what":"Affine Transformation — warpAffine","title":"Affine Transformation — warpAffine","text":"warpAffine applies affine transformation image.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/warpAffine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Affine Transformation — warpAffine","text":"","code":"warpAffine(   image,   warp_matrix,   interp_mode = \"linear\",   inverse_map = TRUE,   border_type = \"constant\",   border_color = \"black\",   target = \"new\",   output_size = dim(image)[1:2] )"},{"path":"https://swarm-lab.github.io/Rvision/reference/warpAffine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Affine Transformation — warpAffine","text":"image Image object. warp_matrix 2x3 numeric matrix. interp_mode character string indicating interpolation method used. can following: \"nearest\":nearest neighbor interpolation. \"linear\" (default):bilinear interpolation. \"cubic\":bicubic interpolation. \"area\":resampling using pixel area relation. may preferred   method image decimation, gives moiré-free results,   image zoomed, similar nearest neighbor method. \"lanczos4\":Lanczos interpolation 8x8 neighborhood. \"linear_exact\":bit exact bilinear interpolation. inverse_map logical. TRUE warp_matrix represents inverse transformation. FALSE, warp_matrix inverted. border_type character string indicating extrapolation method use filling empty pixels created transformation. can following: \"constant\" (default):iiiiii|abcdefgh|iiiiii   specified border_value. \"replicate\":aaaaaa|abcdefgh|hhhhhh. \"reflect\":fedcba|abcdefgh|hgfedc. \"wrap\":cdefgh|abcdefgh|abcdef. \"reflect_101\":gfedcb|abcdefgh|gfedcb. \"transparent\":uvwxyz|abcdefgh|ijklmn. border_color value vector kind R color specification compatible col2bgr representing color border (default: \"black\"). target location results stored. can take 3 values: \"new\":new Image object created results   stored inside (default). \"self\":results stored back image (faster   destructive). Image object:results stored another   existing Image object. fast replace   content image replace target. Note   target must bit depth number channels   image can different dimensions. output_size target=\"new\", 2-elements vector indicating number rows columns output image (defaults dimensions image).","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/warpAffine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Affine Transformation — warpAffine","text":"target=\"new\", function returns Image object. target=\"self\", function returns nothing modifies  image place. target Image object,  function returns nothing modifies Image object  place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/warpAffine.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Affine Transformation — warpAffine","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/warpAffine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Affine Transformation — warpAffine","text":"","code":"file1 <- system.file(\"sample_img/balloon1.png\", package = \"Rvision\") file2 <- system.file(\"sample_img/balloon2.png\", package = \"Rvision\") balloon1 <- changeColorSpace(image(file1), \"GRAY\") balloon2 <- changeColorSpace(image(file2), \"GRAY\") ecc <- findTransformORB(balloon1, balloon2) balloon2_transformed <- warpAffine(balloon2, ecc)"},{"path":"https://swarm-lab.github.io/Rvision/reference/warpPerspective.html","id":null,"dir":"Reference","previous_headings":"","what":"Perspective Transformation — warpPerspective","title":"Perspective Transformation — warpPerspective","text":"warpPerspective applies perspective transformation  image.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/warpPerspective.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perspective Transformation — warpPerspective","text":"","code":"warpPerspective(   image,   warp_matrix,   interp_mode = \"linear\",   inverse_map = TRUE,   border_type = \"constant\",   border_color = \"black\",   target = \"new\",   output_size = dim(image)[1:2] )"},{"path":"https://swarm-lab.github.io/Rvision/reference/warpPerspective.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perspective Transformation — warpPerspective","text":"image Image object. warp_matrix 3x3 numeric matrix. interp_mode character string indicating interpolation method used. can following: \"nearest\":nearest neighbor interpolation. \"linear\" (default):bilinear interpolation. \"cubic\":bicubic interpolation. \"area\":resampling using pixel area relation. may preferred   method image decimation, gives moiré-free results,   image zoomed, similar nearest neighbor method. \"lanczos4\":Lanczos interpolation 8x8 neighborhood. \"linear_exact\":bit exact bilinear interpolation. inverse_map logical. TRUE warp_matrix represents inverse transformation. FALSE, warp_matrix inverted. border_type character string indicating extrapolation method use filling empty pixels created transformation. can following: \"constant\" (default):iiiiii|abcdefgh|iiiiii   specified border_value. \"replicate\":aaaaaa|abcdefgh|hhhhhh. \"reflect\":fedcba|abcdefgh|hgfedc. \"wrap\":cdefgh|abcdefgh|abcdef. \"reflect_101\":gfedcb|abcdefgh|gfedcb. \"transparent\":uvwxyz|abcdefgh|ijklmn. border_color value vector kind R color specification compatible col2bgr representing color border (default: \"black\"). target location results stored. can take 3 values: \"new\":new Image object created results   stored inside (default). \"self\":results stored back image (faster   destructive). Image object:results stored another   existing Image object. fast replace   content image replace target. Note   target must bit depth number channels   image can different dimensions. output_size target=\"new\", 2-elements vector indicating number rows columns output image (defaults dimensions image).","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/warpPerspective.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perspective Transformation — warpPerspective","text":"target=\"new\", function returns Image object. target=\"self\", function returns nothing modifies  image place. target Image object,  function returns nothing modifies Image object  place.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/warpPerspective.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Perspective Transformation — warpPerspective","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/warpPerspective.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perspective Transformation — warpPerspective","text":"","code":"file1 <- system.file(\"sample_img/balloon1.png\", package = \"Rvision\") file2 <- system.file(\"sample_img/balloon2.png\", package = \"Rvision\") balloon1 <- changeColorSpace(image(file1), \"GRAY\") balloon2 <- changeColorSpace(image(file2), \"GRAY\") ecc <- findTransformORB(balloon1, balloon2, warp_mode = \"homography\") balloon2_transformed <- warpPerspective(balloon2, ecc)"},{"path":"https://swarm-lab.github.io/Rvision/reference/watershed.html","id":null,"dir":"Reference","previous_headings":"","what":"Image Segmentation Using the Watershed Algorithm — watershed","title":"Image Segmentation Using the Watershed Algorithm — watershed","text":"watershed implements one variants watershed,  non-parametric marker-based segmentation algorithm, described Meyer (1992).","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/watershed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Image Segmentation Using the Watershed Algorithm — watershed","text":"","code":"watershed(image, markers)"},{"path":"https://swarm-lab.github.io/Rvision/reference/watershed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Image Segmentation Using the Watershed Algorithm — watershed","text":"image 8-bit (8U), BGR Image object. markers signed 32-bit (32S) single-channel (GRAY) Image object (see Details).","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/watershed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Image Segmentation Using the Watershed Algorithm — watershed","text":"function return anything. modifies markers  place.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/watershed.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Image Segmentation Using the Watershed Algorithm — watershed","text":"passing image function, roughly  outline desired regions markers image positive (>0)  indices. , every region represented one connected components  pixel values 1, 2, 3, . markers can retrieved  binary mask using findContours. markers \"seeds\"  future image regions. pixels markers, whose  relation outlined regions known defined  algorithm, set 0's. function output, pixel  markers set value \"seed\" components -1  boundaries regions.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/watershed.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Image Segmentation Using the Watershed Algorithm — watershed","text":"Meyer F. Color image segmentation. 1992 International Conference  Image Processing. 1992. Available:  https://ieeexplore.ieee.org/abstract/document/785528/","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/watershed.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Image Segmentation Using the Watershed Algorithm — watershed","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/watershed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Image Segmentation Using the Watershed Algorithm — watershed","text":"","code":"dots <- image(system.file(\"sample_img/dots.jpg\", package = \"Rvision\")) bw <- inRange(dots, 0, 250) medianBlur(bw, target = \"self\") sure_bg <- morph(bw, \"dilate\", k_shape = \"ellipse\", iterations = 3) dt <- distanceTransform(bw, \"L2\") sure_fg <- dt > 20 unknown <- sure_bg - sure_fg markers <- connectedComponents(sure_fg, table = FALSE)$labels + 1 markers <- markers * (invert(unknown) / 255) watershed(dots, markers)"},{"path":"https://swarm-lab.github.io/Rvision/reference/write.Image.html","id":null,"dir":"Reference","previous_headings":"","what":"Image Output — write.Image","title":"Image Output — write.Image","text":"Writes content Image object file.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/write.Image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Image Output — write.Image","text":"","code":"write.Image(x, file, overwrite = FALSE)"},{"path":"https://swarm-lab.github.io/Rvision/reference/write.Image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Image Output — write.Image","text":"x Image object. file character string naming path file. overwrite file overwritten already exists? (default: FALSE)","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/write.Image.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Image Output — write.Image","text":"message indicating whether writing successful .","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/write.Image.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Image Output — write.Image","text":"function guess format output file using file  extension provided user.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/write.Image.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Image Output — write.Image","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/write.Image.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Image Output — write.Image","text":"","code":"if (FALSE) { noise <- image(array(sample(0:255, 100 * 100 * 3, replace = TRUE), dim = c(100, 100, 3))) write.Image(noise, \"noise.png\") }"},{"path":"https://swarm-lab.github.io/Rvision/reference/writeFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Write Frame to Output Video — writeFrame","title":"Write Frame to Output Video — writeFrame","text":"Write Image object output video using  VideoWriter object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/writeFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write Frame to Output Video — writeFrame","text":"","code":"writeFrame(x, frame)"},{"path":"https://swarm-lab.github.io/Rvision/reference/writeFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write Frame to Output Video — writeFrame","text":"x VideoWriter object. frame Image object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/writeFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write Frame to Output Video — writeFrame","text":"function return anything.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/writeFrame.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Write Frame to Output Video — writeFrame","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/writeFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write Frame to Output Video — writeFrame","text":"","code":"if (FALSE) { live <- stream(0) writer <- videoWriter(\"test.mp4\", \"H264\", 25, 1080, 1920) for (i in 1:250) {   writeFrame(writer, readNext(live)) } release(writer) release(live) }"},{"path":"https://swarm-lab.github.io/Rvision/reference/writeMulti.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a Multi-Page Image — writeMulti","title":"Write a Multi-Page Image — writeMulti","text":"writeMulti writes list Image objects  multi-page image.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/writeMulti.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a Multi-Page Image — writeMulti","text":"","code":"writeMulti(x, img_list, overwrite = FALSE)"},{"path":"https://swarm-lab.github.io/Rvision/reference/writeMulti.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a Multi-Page Image — writeMulti","text":"x character string naming path multi-page image file. img_list list Image objects. overwrite file overwritten already exists? (default: FALSE)","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/writeMulti.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a Multi-Page Image — writeMulti","text":"message indicating whether writing successful .","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/writeMulti.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Write a Multi-Page Image — writeMulti","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/writeMulti.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a Multi-Page Image — writeMulti","text":"","code":"balloon <- readMulti(system.file(\"sample_img/multipage.tif\", package = \"Rvision\")) if (FALSE) { writeMulti(\"~/Desktop/balloon.tiff\", balloon) }"},{"path":"https://swarm-lab.github.io/Rvision/reference/writerOuput.html","id":null,"dir":"Reference","previous_headings":"","what":"Output File of a Video Writer — writerOuput","title":"Output File of a Video Writer — writerOuput","text":"Retrieve output file VideoWriter object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/writerOuput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Output File of a Video Writer — writerOuput","text":"","code":"writerOuput(x)"},{"path":"https://swarm-lab.github.io/Rvision/reference/writerOuput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Output File of a Video Writer — writerOuput","text":"x VideoWriter object.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/writerOuput.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Output File of a Video Writer — writerOuput","text":"character string corresponding address output file  hard drive.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/writerOuput.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Output File of a Video Writer — writerOuput","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/writerOuput.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Output File of a Video Writer — writerOuput","text":"","code":"if (FALSE) { writer <- videoWriter(\"test.mp4\", \"H264\", 25, 1080, 1920) writerOuput(writer) release(writer) }"},{"path":"https://swarm-lab.github.io/Rvision/reference/zeros.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Zero-Filled Image — zeros","title":"Create a Zero-Filled Image — zeros","text":"zeros creates Image object filled  zeros.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/zeros.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Zero-Filled Image — zeros","text":"","code":"zeros(nrow, ncol, nchan = 3, bitdepth = \"8U\", colorspace = \"BGR\")"},{"path":"https://swarm-lab.github.io/Rvision/reference/zeros.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Zero-Filled Image — zeros","text":"nrow integer indicating desired number rows image. ncol integer indicating desired number columns image. nchan integer indicating desired number channels image. bitdepth string indicating desired bit depth image. Options \"8U\" (default), \"8S\", \"16U\", \"16S\", \"32S\", \"32F\", \"64F\". colorspace string indicating desired color space image.","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/zeros.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Zero-Filled Image — zeros","text":"Image object.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/reference/zeros.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a Zero-Filled Image — zeros","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/Rvision/reference/zeros.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Zero-Filled Image — zeros","text":"","code":"zero <- zeros(100, 100)"},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/news/index.html","id":"new-features-0-7-0","dir":"Changelog","previous_headings":"","what":"New features","title":"Rvision 0.7.0","text":"Introduces video stacks. Adds frame setters Video VideoStack objects.","code":""},{"path":"https://swarm-lab.github.io/Rvision/news/index.html","id":"minor-improvements-and-fixes-0-7-0","dir":"Changelog","previous_headings":"","what":"Minor improvements and fixes","title":"Rvision 0.7.0","text":"New logo. documentation fixed/improved several places. Minor bug fixes .","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/news/index.html","id":"new-features-0-6-5","dir":"Changelog","previous_headings":"","what":"New features","title":"Rvision 0.6.5","text":"New function smoothing anisotropic diffusion. New function edge preserving smoothing. New function thresholding Niblack Niblack-derived method. New function skeletonization thinning.","code":""},{"path":"https://swarm-lab.github.io/Rvision/news/index.html","id":"minor-improvements-and-fixes-0-6-5","dir":"Changelog","previous_headings":"","what":"Minor improvements and fixes","title":"Rvision 0.6.5","text":"documentation fixed/improved several places. Minor bug fixes .","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/news/index.html","id":"new-features-0-6-4","dir":"Changelog","previous_headings":"","what":"New features","title":"Rvision 0.6.4","text":"New function mimicking Matlab “improfile”” function measuring pixel values along line segment. New function image concatenation. New function reducing 2D images object 1D image (apply-like). New function tiling/repeating images. Square root, logarithm, exponential, power functions now proper generics.","code":""},{"path":"https://swarm-lab.github.io/Rvision/news/index.html","id":"minor-improvements-and-fixes-0-6-4","dir":"Changelog","previous_headings":"","what":"Minor improvements and fixes","title":"Rvision 0.6.4","text":"documentation fixed/improved several places. Minor bug fixes .","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/news/index.html","id":"new-features-0-6-3","dir":"Changelog","previous_headings":"","what":"New features","title":"Rvision 0.6.3","text":"Hu moment invariants missing. OpenCV DLLs now copied ROpenCVLite installation Windows. New functions compute square root, logarithm, exponential, powers. New function compute Gabor kernels image filtering. New function convert vector fields polar coordinates back.","code":""},{"path":"https://swarm-lab.github.io/Rvision/news/index.html","id":"minor-improvements-and-fixes-0-6-3","dir":"Changelog","previous_headings":"","what":"Minor improvements and fixes","title":"Rvision 0.6.3","text":"documentation fixed/improved several places. Minor bug fixes .","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/news/index.html","id":"new-features-0-6-2","dir":"Changelog","previous_headings":"","what":"New features","title":"Rvision 0.6.2","text":"New arcLength function. New Hu moment invariants function. New grabCut function. New matchShapes function.","code":""},{"path":"https://swarm-lab.github.io/Rvision/news/index.html","id":"minor-improvements-and-fixes-0-6-2","dir":"Changelog","previous_headings":"","what":"Minor improvements and fixes","title":"Rvision 0.6.2","text":"documentation fixed/improved several places. Minor bug fixes . function moments convexityDefects changed follow OpenCV usage. break older code.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/news/index.html","id":"new-features-0-6-1","dir":"Changelog","previous_headings":"","what":"New features","title":"Rvision 0.6.1","text":"Compatible new RTools 4.2 toolchain Windows. Autothresholding. Hough circle detection. Can read files. Extract/insert single channels /images. Write multi-images. Connected components returns statistics.","code":""},{"path":"https://swarm-lab.github.io/Rvision/news/index.html","id":"minor-improvements-and-fixes-0-6-1","dir":"Changelog","previous_headings":"","what":"Minor improvements and fixes","title":"Rvision 0.6.1","text":"documentation fixed/improved several places. Minor bug fixes .","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/Rvision/news/index.html","id":"new-features-0-6-0","dir":"Changelog","previous_headings":"","what":"New features","title":"Rvision 0.6.0","text":"now changelog (yes, know, finally). large portion code base rewritten improving performance facilitating code maintenance (hopefully). -place operations reworked allow saving results target images flexibility maintaining performance. GPU support added wherever possible. Stupid-fast mode enabled compatible hardware :-) experimental dynamic queuing system operating separate thread introduced allow reading frames parallel image processing main R thread. New, hopefully useful vignettes added. OpenCV functions now accessible Rvision (e.g., histogram equalization).","code":""},{"path":"https://swarm-lab.github.io/Rvision/news/index.html","id":"minor-improvements-and-fixes-0-6-0","dir":"Changelog","previous_headings":"","what":"Minor improvements and fixes","title":"Rvision 0.6.0","text":"documentation fixed/improved several places. Minor bug fixes .","code":""}]
